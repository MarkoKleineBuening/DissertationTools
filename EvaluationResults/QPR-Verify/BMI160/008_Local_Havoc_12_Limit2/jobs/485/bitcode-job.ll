; ModuleID = '/home/i12/mbuening/100_Dissertation/BMI160/BMI160_driver/QPR/008_Local_Havoc_12_Limit2/bitcode.bc'
source_filename = "/home/i12/mbuening/100_Dissertation/BMI160/BMI160_driver/QPR/008_Local_Havoc_12_Limit2/bitcode.bc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%0 = type { i32, i1 }
%struct.bmi160_fifo_frame = type { i8*, i16, i8, i8, i8, i16, i16, i16, i32, i8 }
%struct.bmi160_dev = type { i8, i8, i8, i32, %struct.bmi160_cfg, %struct.bmi160_cfg, %struct.bmi160_cfg, %struct.bmi160_cfg, %struct.bmi160_aux_cfg, %struct.bmi160_aux_cfg, %struct.bmi160_fifo_frame*, i8 (i8, i8, i8*, i16)*, i8 (i8, i8, i8*, i16)*, void (i32)* }
%struct.bmi160_cfg = type { i8, i8, i8, i8 }
%struct.bmi160_aux_cfg = type { i8, i8 }
%struct.bmi160_sensor_data = type { i16, i16, i16, i32 }
%struct.bmi160_int_settg = type <{ i32, i32, %struct.bmi160_int_pin_settg, %union.bmi160_int_type_cfg, i8, i8 }>
%struct.bmi160_int_pin_settg = type { i16 }
%union.bmi160_int_type_cfg = type { %struct.bmi160_acc_orient_int_cfg }
%struct.bmi160_acc_orient_int_cfg = type { i24 }
%struct.bmi160_acc_no_motion_int_cfg = type { i16, i8 }
%struct.bmi160_acc_high_g_int_cfg = type { i8, i8, i8 }
%struct.bmi160_aux_data = type { [8 x i8] }
%struct.bmi160_foc_conf = type { i8, i8, i8, i8, i8, i8 }
%struct.bmi160_offsets = type { i8, i8, i8, i16, i16, i16 }
%union.bmi160_int_status = type { %struct.bmi160_int_status_bits }
%struct.bmi160_int_status_bits = type { i32 }

@fifoFrameStub = common global %struct.bmi160_fifo_frame zeroinitializer, align 8, !dbg !0
@configStub = common global %struct.bmi160_dev zeroinitializer, align 8, !dbg !12
@fifoDataStub = common global [8 x i8] zeroinitializer, align 1, !dbg !69
@int_mask_lookup_table = constant [13 x i8] c"\04\04\01\10 @\80\02\01\08\08\02\04", align 1, !dbg !74

; Function Attrs: inaccessiblememonly nounwind
declare extern_weak void @llbmc.assert(i1, i32) #0

; Function Attrs: inaccessiblememonly nounwind
declare extern_weak void @llbmc.assume(i1) #0

; Function Attrs: noinline nounwind uwtable
define void @stubDelay(i32) #1 !dbg !174 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !176, metadata !177), !dbg !178
  call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !176, metadata !177), !dbg !178
  ret void, !dbg !179
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: noinline nounwind uwtable
define signext i8 @stubRead(i8 zeroext, i8 zeroext, i8*, i16 zeroext) #1 !dbg !180 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !181, metadata !177), !dbg !182
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !183, metadata !177), !dbg !184
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !185, metadata !177), !dbg !186
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !187, metadata !177), !dbg !188
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !189, metadata !177), !dbg !190
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !191, metadata !177), !dbg !192
  call void @llvm.dbg.value(metadata i8 %0, i64 0, metadata !181, metadata !177), !dbg !182
  call void @llvm.dbg.value(metadata i8 %1, i64 0, metadata !183, metadata !177), !dbg !184
  call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !185, metadata !177), !dbg !186
  call void @llvm.dbg.value(metadata i16 %3, i64 0, metadata !187, metadata !177), !dbg !188
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 2, i32 0)
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !189, metadata !177), !dbg !190
  br label %5, !dbg !193

; <label>:5:                                      ; preds = %13, %4
  %6 = phi i32 [ 0, %4 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata i32 %6, i64 0, metadata !189, metadata !177), !dbg !190
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 3, i16 %3)
  %7 = zext i16 %3 to i32, !dbg !194
  %8 = icmp ult i32 %6, %7, !dbg !198
  br i1 %8, label %9, label %15, !dbg !199

; <label>:9:                                      ; preds = %5
  %10 = call zeroext i8 @__llbmc_nondef_uint8_t() #5, !dbg !201
  %11 = zext i32 %6 to i64, !dbg !203
  %12 = getelementptr inbounds i8, i8* %2, i64 %11, !dbg !203
  store i8 %10, i8* %12, align 1, !dbg !204
  br label %13, !dbg !205

; <label>:13:                                     ; preds = %9
  call void @qpr.uinc.i32(i32 4, i32 %6)
  %14 = add i32 %6, 1, !dbg !206
  call void @llvm.dbg.value(metadata i32 %14, i64 0, metadata !189, metadata !177), !dbg !206
  br label %5, !dbg !208, !llvm.loop !209

; <label>:15:                                     ; preds = %5
  %16 = call signext i8 @__llbmc_nondef_int8_t() #5, !dbg !212
  call void @llvm.dbg.value(metadata i8 %16, i64 0, metadata !191, metadata !177), !dbg !192
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 5, i8 %16)
  %17 = sext i8 %16 to i32, !dbg !213
  %18 = icmp eq i32 %17, 0, !dbg !214
  br i1 %18, label %22, label %19, !dbg !215

; <label>:19:                                     ; preds = %15
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 6, i8 %16)
  %20 = sext i8 %16 to i32, !dbg !216
  call void @qpr.arithmetic.overflow.ssub.i32(i32 7, i32 0, i32 2)
  %21 = icmp eq i32 %20, -2, !dbg !218
  br label %22, !dbg !219

; <label>:22:                                     ; preds = %19, %15
  %23 = phi i1 [ true, %15 ], [ %21, %19 ]
  %24 = zext i1 %23 to i32, !dbg !220
  call void @__llbmc_assume(i32 %24) #5, !dbg !222
  ret i8 %16, !dbg !223
}

; Function Attrs: inaccessiblememonly nounwind
define weak_odr void @qpr.implicit.conversion.overflow.s32.u32(i32, i32) #0 {
  %3 = icmp sge i32 %1, 0
  call void @llbmc.assert(i1 %3, i32 %0)
  ret void
}

; Function Attrs: inaccessiblememonly nounwind
define weak_odr void @qpr.implicit.conversion.overflow.u16.u32(i32, i16) #0 {
  call void @llbmc.assert(i1 true, i32 %0)
  ret void
}

declare zeroext i8 @__llbmc_nondef_uint8_t() #3

; Function Attrs: inaccessiblememonly nounwind
define weak_odr void @qpr.uinc.i32(i32, i32) #0 {
  %3 = icmp ne i32 %1, -1
  call void @llbmc.assert(i1 %3, i32 %0)
  ret void
}

declare signext i8 @__llbmc_nondef_int8_t() #3

declare void @__llbmc_assume(i32) #3

; Function Attrs: inaccessiblememonly nounwind
define weak_odr void @qpr.implicit.conversion.overflow.s8.s32(i32, i8) #0 {
  call void @llbmc.assert(i1 true, i32 %0)
  ret void
}

; Function Attrs: inaccessiblememonly nounwind
define weak_odr void @qpr.arithmetic.overflow.ssub.i32(i32, i32, i32) #0 {
  %4 = call %0 @llvm.ssub.with.overflow.i32(i32 %1, i32 %2)
  %5 = extractvalue %0 %4, 1
  %6 = xor i1 %5, true
  call void @llbmc.assert(i1 %6, i32 %0)
  ret void
}

; Function Attrs: nounwind readnone
declare %0 @llvm.ssub.with.overflow.i32(i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define signext i8 @stubWrite(i8 zeroext, i8 zeroext, i8*, i16 zeroext) #1 !dbg !224 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !225, metadata !177), !dbg !226
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !227, metadata !177), !dbg !228
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !229, metadata !177), !dbg !230
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !231, metadata !177), !dbg !232
  call void @llvm.dbg.value(metadata i8 %0, i64 0, metadata !225, metadata !177), !dbg !226
  call void @llvm.dbg.value(metadata i8 %1, i64 0, metadata !227, metadata !177), !dbg !228
  call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !229, metadata !177), !dbg !230
  call void @llvm.dbg.value(metadata i16 %3, i64 0, metadata !231, metadata !177), !dbg !232
  %5 = call signext i8 @__llbmc_nondef_int8_t() #5, !dbg !233
  ret i8 %5, !dbg !234
}

; Function Attrs: noinline nounwind uwtable
define void @initStubs() #1 !dbg !235 {
entry:
  store %struct.bmi160_fifo_frame* @fifoFrameStub, %struct.bmi160_fifo_frame** getelementptr inbounds (%struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10), align 8, !dbg !238
  %0 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** getelementptr inbounds (%struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10), align 8, !dbg !239
  %1 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %0, i32 0, i32 0, !dbg !240
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @fifoDataStub, i32 0, i32 0), i8** %1, align 8, !dbg !241
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 8, i32 8)
  %2 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** getelementptr inbounds (%struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10), align 8, !dbg !242
  %3 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %2, i32 0, i32 1, !dbg !243
  store i16 8, i16* %3, align 8, !dbg !244
  store i8 (i8, i8, i8*, i16)* @stubRead, i8 (i8, i8, i8*, i16)** getelementptr inbounds (%struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 11), align 8, !dbg !245
  store i8 (i8, i8, i8*, i16)* @stubWrite, i8 (i8, i8, i8*, i16)** getelementptr inbounds (%struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 12), align 8, !dbg !246
  store void (i32)* @stubDelay, void (i32)** getelementptr inbounds (%struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 13), align 8, !dbg !247
  ret void, !dbg !248
}

; Function Attrs: inaccessiblememonly nounwind
define weak_odr void @qpr.implicit.conversion.overflow.s32.u16(i32, i32) #0 {
  %3 = icmp sge i32 %1, 0
  %4 = icmp sle i32 %1, 65535
  %5 = and i1 %3, %4
  call void @llbmc.assert(i1 %5, i32 %0)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define signext i8 @bmi160_get_regs(i8 zeroext, i8*, i16 zeroext, %struct.bmi160_dev*) #1 !dbg !249 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !254, metadata !177), !dbg !255
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !256, metadata !177), !dbg !257
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !258, metadata !177), !dbg !259
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !260, metadata !177), !dbg !261
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !262, metadata !177), !dbg !263
  call void @llvm.dbg.value(metadata i8 %0, i64 0, metadata !254, metadata !177), !dbg !255
  call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !256, metadata !177), !dbg !257
  call void @llvm.dbg.value(metadata i16 %2, i64 0, metadata !258, metadata !177), !dbg !259
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %3, i64 0, metadata !260, metadata !177), !dbg !261
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !264
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !260, metadata !177), !dbg !264
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 9, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !262, metadata !177), !dbg !263
  %5 = icmp eq %struct.bmi160_dev* @configStub, null, !dbg !265
  br i1 %5, label %10, label %6, !dbg !267

; <label>:6:                                      ; preds = %4
  %7 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 11, !dbg !268
  %8 = load i8 (i8, i8, i8*, i16)*, i8 (i8, i8, i8*, i16)** %7, align 8, !dbg !268
  %9 = icmp eq i8 (i8, i8, i8*, i16)* %8, null, !dbg !270
  br i1 %9, label %10, label %11, !dbg !271

; <label>:10:                                     ; preds = %6, %4
  call void @qpr.arithmetic.overflow.ssub.i32(i32 11, i32 0, i32 1)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 10, i32 -1)
  call void @llvm.dbg.value(metadata i8 -1, i64 0, metadata !262, metadata !177), !dbg !273
  br label %34, !dbg !275

; <label>:11:                                     ; preds = %6
  %12 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 2, !dbg !276
  %13 = load i8, i8* %12, align 2, !dbg !276
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 12, i8 %13)
  %14 = zext i8 %13 to i32, !dbg !279
  %15 = icmp eq i32 %14, 1, !dbg !280
  br i1 %15, label %16, label %20, !dbg !281

; <label>:16:                                     ; preds = %11
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 14, i8 %0)
  %17 = zext i8 %0 to i32, !dbg !282
  %18 = or i32 %17, 128, !dbg !283
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 13, i32 %18)
  %19 = trunc i32 %18 to i8, !dbg !284
  call void @llvm.dbg.value(metadata i8 %19, i64 0, metadata !254, metadata !177), !dbg !285
  br label %20, !dbg !286

; <label>:20:                                     ; preds = %16, %11
  %21 = phi i8 [ %19, %16 ], [ %0, %11 ]
  call void @llvm.dbg.value(metadata i8 %21, i64 0, metadata !254, metadata !177), !dbg !255
  %22 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 11, !dbg !287
  %23 = load i8 (i8, i8, i8*, i16)*, i8 (i8, i8, i8*, i16)** %22, align 8, !dbg !287
  %24 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 1, !dbg !288
  %25 = load i8, i8* %24, align 1, !dbg !288
  %26 = call signext i8 %23(i8 zeroext %25, i8 zeroext %21, i8* %1, i16 zeroext %2) #5, !dbg !289
  call void @llvm.dbg.value(metadata i8 %26, i64 0, metadata !262, metadata !177), !dbg !290
  %27 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 13, !dbg !291
  %28 = load void (i32)*, void (i32)** %27, align 8, !dbg !291
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 15, i32 1)
  call void %28(i32 1) #5, !dbg !292
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 16, i8 %26)
  %29 = sext i8 %26 to i32, !dbg !293
  %30 = icmp ne i32 %29, 0, !dbg !295
  br i1 %30, label %31, label %32, !dbg !296

; <label>:31:                                     ; preds = %20
  call void @qpr.arithmetic.overflow.ssub.i32(i32 18, i32 0, i32 2)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 17, i32 -2)
  call void @llvm.dbg.value(metadata i8 -2, i64 0, metadata !262, metadata !177), !dbg !297
  br label %32, !dbg !298

; <label>:32:                                     ; preds = %31, %20
  %33 = phi i8 [ -2, %31 ], [ %26, %20 ]
  call void @llvm.dbg.value(metadata i8 %33, i64 0, metadata !262, metadata !177), !dbg !263
  br label %34

; <label>:34:                                     ; preds = %32, %10
  %35 = phi i8 [ -1, %10 ], [ %33, %32 ]
  call void @llvm.dbg.value(metadata i8 %35, i64 0, metadata !262, metadata !177), !dbg !263
  ret i8 %35, !dbg !299
}

; Function Attrs: inaccessiblememonly nounwind
define weak_odr void @qpr.implicit.conversion.overflow.s32.s8(i32, i32) #0 {
  %3 = icmp sge i32 %1, -128
  %4 = icmp sle i32 %1, 127
  %5 = and i1 %3, %4
  call void @llbmc.assert(i1 %5, i32 %0)
  ret void
}

; Function Attrs: inaccessiblememonly nounwind
define weak_odr void @qpr.implicit.conversion.overflow.u8.u32(i32, i8) #0 {
  call void @llbmc.assert(i1 true, i32 %0)
  ret void
}

; Function Attrs: inaccessiblememonly nounwind
define weak_odr void @qpr.implicit.conversion.overflow.u32.u8(i32, i32) #0 {
  %3 = icmp ule i32 %1, 255
  call void @llbmc.assert(i1 %3, i32 %0)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define signext i8 @bmi160_set_regs(i8 zeroext, i8*, i16 zeroext, %struct.bmi160_dev*) #1 !dbg !300 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !301, metadata !177), !dbg !302
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !303, metadata !177), !dbg !304
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !305, metadata !177), !dbg !306
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !307, metadata !177), !dbg !308
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !309, metadata !177), !dbg !310
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !311, metadata !177), !dbg !312
  call void @llvm.dbg.value(metadata i8 %0, i64 0, metadata !301, metadata !177), !dbg !302
  call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !303, metadata !177), !dbg !304
  call void @llvm.dbg.value(metadata i16 %2, i64 0, metadata !305, metadata !177), !dbg !306
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %3, i64 0, metadata !307, metadata !177), !dbg !308
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !313
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !307, metadata !177), !dbg !313
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 19, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !309, metadata !177), !dbg !310
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 20, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !311, metadata !177), !dbg !312
  br label %5, !dbg !314

; <label>:5:                                      ; preds = %21, %4
  %6 = phi i8 [ 0, %4 ], [ %22, %21 ]
  %7 = phi i8 [ 0, %4 ], [ %19, %21 ]
  %8 = phi i8 [ %0, %4 ], [ %20, %21 ]
  call void @llvm.dbg.value(metadata i8 %8, i64 0, metadata !301, metadata !177), !dbg !302
  call void @llvm.dbg.value(metadata i8 %7, i64 0, metadata !309, metadata !177), !dbg !310
  call void @llvm.dbg.value(metadata i8 %6, i64 0, metadata !311, metadata !177), !dbg !312
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 21, i8 %6)
  %9 = zext i8 %6 to i32, !dbg !315
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 22, i16 %2)
  %10 = zext i16 %2 to i32, !dbg !319
  %11 = icmp slt i32 %9, %10, !dbg !320
  br i1 %11, label %12, label %23, !dbg !321

; <label>:12:                                     ; preds = %5
  %13 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 12, !dbg !323
  %14 = load i8 (i8, i8, i8*, i16)*, i8 (i8, i8, i8*, i16)** %13, align 8, !dbg !323
  %15 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 1, !dbg !325
  %16 = load i8, i8* %15, align 1, !dbg !325
  %17 = zext i8 %6 to i64, !dbg !326
  %18 = getelementptr inbounds i8, i8* %1, i64 %17, !dbg !326
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 24, i32 1)
  %19 = call signext i8 %14(i8 zeroext %16, i8 zeroext %8, i8* %18, i16 zeroext 1) #5, !dbg !327
  call void @llvm.dbg.value(metadata i8 %19, i64 0, metadata !309, metadata !177), !dbg !328
  call void @qpr.uinc.i8(i32 25, i8 %8)
  %20 = add i8 %8, 1, !dbg !329
  call void @llvm.dbg.value(metadata i8 %20, i64 0, metadata !301, metadata !177), !dbg !329
  br label %21, !dbg !330

; <label>:21:                                     ; preds = %12
  call void @qpr.uinc.i8(i32 23, i8 %6)
  %22 = add i8 %6, 1, !dbg !331
  call void @llvm.dbg.value(metadata i8 %22, i64 0, metadata !311, metadata !177), !dbg !331
  br label %5, !dbg !333, !llvm.loop !334

; <label>:23:                                     ; preds = %5
  ret i8 %7, !dbg !337
}

; Function Attrs: inaccessiblememonly nounwind
define weak_odr void @qpr.implicit.conversion.overflow.s32.u8(i32, i32) #0 {
  %3 = icmp sge i32 %1, 0
  %4 = icmp sle i32 %1, 255
  %5 = and i1 %3, %4
  call void @llbmc.assert(i1 %5, i32 %0)
  ret void
}

; Function Attrs: inaccessiblememonly nounwind
define weak_odr void @qpr.implicit.conversion.overflow.u8.s32(i32, i8) #0 {
  call void @llbmc.assert(i1 true, i32 %0)
  ret void
}

; Function Attrs: inaccessiblememonly nounwind
define weak_odr void @qpr.implicit.conversion.overflow.u16.s32(i32, i16) #0 {
  call void @llbmc.assert(i1 true, i32 %0)
  ret void
}

; Function Attrs: inaccessiblememonly nounwind
define weak_odr void @qpr.uinc.i8(i32, i8) #0 {
entry:
  %2 = icmp ne i8 %1, -1
  call void @llbmc.assert(i1 %2, i32 %0)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define signext i8 @bmi160_init(%struct.bmi160_dev*) #1 !dbg !338 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !342, metadata !177), !dbg !343
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !344, metadata !177), !dbg !345
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !346, metadata !177), !dbg !347
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %0, i64 0, metadata !342, metadata !177), !dbg !343
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !348
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !342, metadata !177), !dbg !348
  call void @llvm.dbg.declare(metadata i8* %2, metadata !349, metadata !177), !dbg !350
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 26, i32 3)
  call void @llvm.dbg.value(metadata i8 3, i64 0, metadata !346, metadata !177), !dbg !347
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 27, i32 0)
  %3 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 0, !dbg !351
  store i8 0, i8* %3, align 8, !dbg !352
  %4 = call signext i8 @null_ptr_check(%struct.bmi160_dev* @configStub) #5, !dbg !353
  call void @llvm.dbg.value(metadata i8 %4, i64 0, metadata !344, metadata !177), !dbg !354
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 28, i8 %4)
  %5 = sext i8 %4 to i32, !dbg !355
  %6 = icmp eq i32 %5, 0, !dbg !357
  br i1 %6, label %7, label %14, !dbg !358

; <label>:7:                                      ; preds = %1
  %8 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 2, !dbg !359
  %9 = load i8, i8* %8, align 2, !dbg !359
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 29, i8 %9)
  %10 = zext i8 %9 to i32, !dbg !361
  %11 = icmp eq i32 %10, 1, !dbg !362
  br i1 %11, label %12, label %14, !dbg !363

; <label>:12:                                     ; preds = %7
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 30, i32 127)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 31, i32 1)
  %13 = call signext i8 @bmi160_get_regs(i8 zeroext 127, i8* %2, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !365
  call void @llvm.dbg.value(metadata i8 %13, i64 0, metadata !344, metadata !177), !dbg !366
  br label %14, !dbg !367

; <label>:14:                                     ; preds = %12, %7, %1
  %15 = phi i8 [ %13, %12 ], [ %4, %7 ], [ %4, %1 ]
  call void @llvm.dbg.value(metadata i8 %15, i64 0, metadata !344, metadata !177), !dbg !345
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 32, i8 %15)
  %16 = sext i8 %15 to i32, !dbg !368
  %17 = icmp eq i32 %16, 0, !dbg !370
  br i1 %17, label %18, label %49, !dbg !371

; <label>:18:                                     ; preds = %14
  br label %19, !dbg !372

; <label>:19:                                     ; preds = %32, %18
  %20 = phi i8 [ 3, %18 ], [ %22, %32 ]
  %21 = phi i8 [ %15, %18 ], [ %34, %32 ]
  call void @llvm.dbg.value(metadata i8 %21, i64 0, metadata !344, metadata !177), !dbg !345
  call void @llvm.dbg.value(metadata i8 %20, i64 0, metadata !346, metadata !177), !dbg !347
  call void @qpr.udec.i8(i32 34, i8 %20)
  %22 = add i8 %20, -1, !dbg !374
  call void @llvm.dbg.value(metadata i8 %22, i64 0, metadata !346, metadata !177), !dbg !374
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 33, i8 %20)
  %23 = zext i8 %20 to i32, !dbg !376
  %24 = icmp ne i32 %23, 0, !dbg !376
  br i1 %24, label %25, label %30, !dbg !377

; <label>:25:                                     ; preds = %19
  %26 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 0, !dbg !378
  %27 = load i8, i8* %26, align 8, !dbg !378
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 35, i8 %27)
  %28 = zext i8 %27 to i32, !dbg !380
  %29 = icmp ne i32 %28, 209, !dbg !381
  br label %30

; <label>:30:                                     ; preds = %25, %19
  %31 = phi i1 [ false, %19 ], [ %29, %25 ]
  br i1 %31, label %32, label %35, !dbg !382

; <label>:32:                                     ; preds = %30
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 36, i32 0)
  %33 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 0, !dbg !384
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 37, i32 1)
  %34 = call signext i8 @bmi160_get_regs(i8 zeroext 0, i8* %33, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !386
  call void @llvm.dbg.value(metadata i8 %34, i64 0, metadata !344, metadata !177), !dbg !387
  br label %19, !dbg !388, !llvm.loop !390

; <label>:35:                                     ; preds = %30
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 38, i8 %21)
  %36 = sext i8 %21 to i32, !dbg !392
  %37 = icmp eq i32 %36, 0, !dbg !394
  br i1 %37, label %38, label %46, !dbg !395

; <label>:38:                                     ; preds = %35
  %39 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 0, !dbg !396
  %40 = load i8, i8* %39, align 8, !dbg !396
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 39, i8 %40)
  %41 = zext i8 %40 to i32, !dbg !398
  %42 = icmp eq i32 %41, 209, !dbg !399
  br i1 %42, label %43, label %46, !dbg !400

; <label>:43:                                     ; preds = %38
  call void @qpr.implicit.conversion.overflow.s32.s32(i32 40, i32 -1)
  %44 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 3, !dbg !401
  store i32 -1, i32* %44, align 4, !dbg !403
  %45 = call signext i8 @bmi160_soft_reset(%struct.bmi160_dev* @configStub) #5, !dbg !404
  call void @llvm.dbg.value(metadata i8 %45, i64 0, metadata !344, metadata !177), !dbg !405
  br label %47, !dbg !406

; <label>:46:                                     ; preds = %38, %35
  call void @qpr.arithmetic.overflow.ssub.i32(i32 42, i32 0, i32 3)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 41, i32 -3)
  call void @llvm.dbg.value(metadata i8 -3, i64 0, metadata !344, metadata !177), !dbg !407
  br label %47

; <label>:47:                                     ; preds = %46, %43
  %48 = phi i8 [ %45, %43 ], [ -3, %46 ]
  call void @llvm.dbg.value(metadata i8 %48, i64 0, metadata !344, metadata !177), !dbg !345
  br label %49, !dbg !409

; <label>:49:                                     ; preds = %47, %14
  %50 = phi i8 [ %48, %47 ], [ %15, %14 ]
  call void @llvm.dbg.value(metadata i8 %50, i64 0, metadata !344, metadata !177), !dbg !345
  ret i8 %50, !dbg !410
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @null_ptr_check(%struct.bmi160_dev*) #1 !dbg !411 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !414, metadata !177), !dbg !415
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !416, metadata !177), !dbg !417
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %0, i64 0, metadata !414, metadata !177), !dbg !415
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !418
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !414, metadata !177), !dbg !418
  %2 = icmp eq %struct.bmi160_dev* @configStub, null, !dbg !419
  br i1 %2, label %15, label %3, !dbg !421

; <label>:3:                                      ; preds = %1
  %4 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 11, !dbg !422
  %5 = load i8 (i8, i8, i8*, i16)*, i8 (i8, i8, i8*, i16)** %4, align 8, !dbg !422
  %6 = icmp eq i8 (i8, i8, i8*, i16)* %5, null, !dbg !424
  br i1 %6, label %15, label %7, !dbg !425

; <label>:7:                                      ; preds = %3
  %8 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 12, !dbg !426
  %9 = load i8 (i8, i8, i8*, i16)*, i8 (i8, i8, i8*, i16)** %8, align 8, !dbg !426
  %10 = icmp eq i8 (i8, i8, i8*, i16)* %9, null, !dbg !428
  br i1 %10, label %15, label %11, !dbg !429

; <label>:11:                                     ; preds = %7
  %12 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 13, !dbg !430
  %13 = load void (i32)*, void (i32)** %12, align 8, !dbg !430
  %14 = icmp eq void (i32)* %13, null, !dbg !432
  br i1 %14, label %15, label %16, !dbg !433

; <label>:15:                                     ; preds = %11, %7, %3, %1
  call void @qpr.arithmetic.overflow.ssub.i32(i32 602, i32 0, i32 1)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 601, i32 -1)
  call void @llvm.dbg.value(metadata i8 -1, i64 0, metadata !416, metadata !177), !dbg !435
  br label %17, !dbg !437

; <label>:16:                                     ; preds = %11
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 603, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !416, metadata !177), !dbg !438
  br label %17

; <label>:17:                                     ; preds = %16, %15
  %18 = phi i8 [ -1, %15 ], [ 0, %16 ]
  call void @llvm.dbg.value(metadata i8 %18, i64 0, metadata !416, metadata !177), !dbg !417
  ret i8 %18, !dbg !440
}

; Function Attrs: inaccessiblememonly nounwind
define weak_odr void @qpr.udec.i8(i32, i8) #0 {
  %3 = icmp ne i8 %1, 0
  call void @llbmc.assert(i1 %3, i32 %0)
  ret void
}

; Function Attrs: inaccessiblememonly nounwind
define weak_odr void @qpr.implicit.conversion.overflow.s32.s32(i32, i32) #0 {
  call void @llbmc.assert(i1 true, i32 %0)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define signext i8 @bmi160_soft_reset(%struct.bmi160_dev*) #1 !dbg !441 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !442, metadata !177), !dbg !443
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !444, metadata !177), !dbg !445
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %0, i64 0, metadata !442, metadata !177), !dbg !443
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !446
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !442, metadata !177), !dbg !446
  call void @llvm.dbg.declare(metadata i8* %2, metadata !447, metadata !177), !dbg !448
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 43, i32 182)
  store i8 -74, i8* %2, align 1, !dbg !448
  %3 = icmp eq %struct.bmi160_dev* @configStub, null, !dbg !449
  br i1 %3, label %8, label %4, !dbg !451

; <label>:4:                                      ; preds = %1
  %5 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 13, !dbg !452
  %6 = load void (i32)*, void (i32)** %5, align 8, !dbg !452
  %7 = icmp eq void (i32)* %6, null, !dbg !454
  br i1 %7, label %8, label %9, !dbg !455

; <label>:8:                                      ; preds = %4, %1
  call void @qpr.arithmetic.overflow.ssub.i32(i32 45, i32 0, i32 1)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 44, i32 -1)
  call void @llvm.dbg.value(metadata i8 -1, i64 0, metadata !444, metadata !177), !dbg !457
  br label %28, !dbg !459

; <label>:9:                                      ; preds = %4
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 46, i32 126)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 47, i32 1)
  %10 = call signext i8 @bmi160_set_regs(i8 zeroext 126, i8* %2, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !460
  call void @llvm.dbg.value(metadata i8 %10, i64 0, metadata !444, metadata !177), !dbg !462
  %11 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 13, !dbg !463
  %12 = load void (i32)*, void (i32)** %11, align 8, !dbg !463
  call void %12(i32 15) #5, !dbg !464
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 48, i8 %10)
  %13 = sext i8 %10 to i32, !dbg !465
  %14 = icmp eq i32 %13, 0, !dbg !467
  br i1 %14, label %15, label %22, !dbg !468

; <label>:15:                                     ; preds = %9
  %16 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 2, !dbg !469
  %17 = load i8, i8* %16, align 2, !dbg !469
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 49, i8 %17)
  %18 = zext i8 %17 to i32, !dbg !471
  %19 = icmp eq i32 %18, 1, !dbg !472
  br i1 %19, label %20, label %22, !dbg !473

; <label>:20:                                     ; preds = %15
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 50, i32 127)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 51, i32 1)
  %21 = call signext i8 @bmi160_get_regs(i8 zeroext 127, i8* %2, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !475
  call void @llvm.dbg.value(metadata i8 %21, i64 0, metadata !444, metadata !177), !dbg !477
  br label %22, !dbg !478

; <label>:22:                                     ; preds = %20, %15, %9
  %23 = phi i8 [ %21, %20 ], [ %10, %15 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i8 %23, i64 0, metadata !444, metadata !177), !dbg !445
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 52, i8 %23)
  %24 = sext i8 %23 to i32, !dbg !479
  %25 = icmp eq i32 %24, 0, !dbg !481
  br i1 %25, label %26, label %27, !dbg !482

; <label>:26:                                     ; preds = %22
  call void @default_param_settg(%struct.bmi160_dev* @configStub) #5, !dbg !483
  br label %27, !dbg !485

; <label>:27:                                     ; preds = %26, %22
  br label %28

; <label>:28:                                     ; preds = %27, %8
  %29 = phi i8 [ -1, %8 ], [ %23, %27 ]
  call void @llvm.dbg.value(metadata i8 %29, i64 0, metadata !444, metadata !177), !dbg !445
  ret i8 %29, !dbg !486
}

; Function Attrs: noinline nounwind uwtable
define internal void @default_param_settg(%struct.bmi160_dev*) #1 !dbg !487 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !490, metadata !177), !dbg !491
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %0, i64 0, metadata !490, metadata !177), !dbg !491
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !492
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !490, metadata !177), !dbg !492
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 604, i32 2)
  %2 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 4, !dbg !493
  %3 = getelementptr inbounds %struct.bmi160_cfg, %struct.bmi160_cfg* %2, i32 0, i32 3, !dbg !494
  store i8 2, i8* %3, align 1, !dbg !495
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 605, i32 8)
  %4 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 4, !dbg !496
  %5 = getelementptr inbounds %struct.bmi160_cfg, %struct.bmi160_cfg* %4, i32 0, i32 1, !dbg !497
  store i8 8, i8* %5, align 1, !dbg !498
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 606, i32 16)
  %6 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 4, !dbg !499
  %7 = getelementptr inbounds %struct.bmi160_cfg, %struct.bmi160_cfg* %6, i32 0, i32 0, !dbg !500
  store i8 16, i8* %7, align 8, !dbg !501
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 607, i32 3)
  %8 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 4, !dbg !502
  %9 = getelementptr inbounds %struct.bmi160_cfg, %struct.bmi160_cfg* %8, i32 0, i32 2, !dbg !503
  store i8 3, i8* %9, align 2, !dbg !504
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 608, i32 2)
  %10 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 6, !dbg !505
  %11 = getelementptr inbounds %struct.bmi160_cfg, %struct.bmi160_cfg* %10, i32 0, i32 3, !dbg !506
  store i8 2, i8* %11, align 1, !dbg !507
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 609, i32 8)
  %12 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 6, !dbg !508
  %13 = getelementptr inbounds %struct.bmi160_cfg, %struct.bmi160_cfg* %12, i32 0, i32 1, !dbg !509
  store i8 8, i8* %13, align 1, !dbg !510
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 610, i32 20)
  %14 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 6, !dbg !511
  %15 = getelementptr inbounds %struct.bmi160_cfg, %struct.bmi160_cfg* %14, i32 0, i32 0, !dbg !512
  store i8 20, i8* %15, align 8, !dbg !513
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 611, i32 0)
  %16 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 6, !dbg !514
  %17 = getelementptr inbounds %struct.bmi160_cfg, %struct.bmi160_cfg* %16, i32 0, i32 2, !dbg !515
  store i8 0, i8* %17, align 2, !dbg !516
  %18 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 5, !dbg !517
  %19 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 4, !dbg !518
  %20 = bitcast %struct.bmi160_cfg* %18 to i8*, !dbg !518
  %21 = bitcast %struct.bmi160_cfg* %19 to i8*, !dbg !518
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 4, i32 4, i1 false), !dbg !518
  %22 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 7, !dbg !519
  %23 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 6, !dbg !520
  %24 = bitcast %struct.bmi160_cfg* %22 to i8*, !dbg !520
  %25 = bitcast %struct.bmi160_cfg* %23 to i8*, !dbg !520
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %24, i8* %25, i64 4, i32 4, i1 false), !dbg !520
  ret void, !dbg !521
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #4

; Function Attrs: noinline nounwind uwtable
define signext i8 @bmi160_set_sens_conf(%struct.bmi160_dev*) #1 !dbg !522 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !523, metadata !177), !dbg !524
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !525, metadata !177), !dbg !526
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %0, i64 0, metadata !523, metadata !177), !dbg !524
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !527
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !523, metadata !177), !dbg !527
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 53, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !525, metadata !177), !dbg !526
  %2 = icmp eq %struct.bmi160_dev* @configStub, null, !dbg !528
  br i1 %2, label %7, label %3, !dbg !530

; <label>:3:                                      ; preds = %1
  %4 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 13, !dbg !531
  %5 = load void (i32)*, void (i32)** %4, align 8, !dbg !531
  %6 = icmp eq void (i32)* %5, null, !dbg !533
  br i1 %6, label %7, label %8, !dbg !534

; <label>:7:                                      ; preds = %3, %1
  call void @qpr.arithmetic.overflow.ssub.i32(i32 55, i32 0, i32 1)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 54, i32 -1)
  call void @llvm.dbg.value(metadata i8 -1, i64 0, metadata !525, metadata !177), !dbg !536
  br label %28, !dbg !538

; <label>:8:                                      ; preds = %3
  %9 = call signext i8 @set_accel_conf(%struct.bmi160_dev* @configStub) #5, !dbg !539
  call void @llvm.dbg.value(metadata i8 %9, i64 0, metadata !525, metadata !177), !dbg !541
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 56, i8 %9)
  %10 = sext i8 %9 to i32, !dbg !542
  %11 = icmp eq i32 %10, 0, !dbg !544
  br i1 %11, label %12, label %26, !dbg !545

; <label>:12:                                     ; preds = %8
  %13 = call signext i8 @set_gyro_conf(%struct.bmi160_dev* @configStub) #5, !dbg !546
  call void @llvm.dbg.value(metadata i8 %13, i64 0, metadata !525, metadata !177), !dbg !548
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 57, i8 %13)
  %14 = sext i8 %13 to i32, !dbg !549
  %15 = icmp eq i32 %14, 0, !dbg !551
  br i1 %15, label %16, label %24, !dbg !552

; <label>:16:                                     ; preds = %12
  %17 = call signext i8 @bmi160_set_power_mode(%struct.bmi160_dev* @configStub) #5, !dbg !553
  call void @llvm.dbg.value(metadata i8 %17, i64 0, metadata !525, metadata !177), !dbg !555
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 58, i8 %17)
  %18 = sext i8 %17 to i32, !dbg !556
  %19 = icmp eq i32 %18, 0, !dbg !558
  br i1 %19, label %20, label %22, !dbg !559

; <label>:20:                                     ; preds = %16
  %21 = call signext i8 @check_invalid_settg(%struct.bmi160_dev* @configStub) #5, !dbg !560
  call void @llvm.dbg.value(metadata i8 %21, i64 0, metadata !525, metadata !177), !dbg !561
  br label %22, !dbg !562

; <label>:22:                                     ; preds = %20, %16
  %23 = phi i8 [ %21, %20 ], [ %17, %16 ]
  call void @llvm.dbg.value(metadata i8 %23, i64 0, metadata !525, metadata !177), !dbg !526
  br label %24, !dbg !563

; <label>:24:                                     ; preds = %22, %12
  %25 = phi i8 [ %23, %22 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i8 %25, i64 0, metadata !525, metadata !177), !dbg !526
  br label %26, !dbg !564

; <label>:26:                                     ; preds = %24, %8
  %27 = phi i8 [ %25, %24 ], [ %9, %8 ]
  call void @llvm.dbg.value(metadata i8 %27, i64 0, metadata !525, metadata !177), !dbg !526
  br label %28

; <label>:28:                                     ; preds = %26, %7
  %29 = phi i8 [ -1, %7 ], [ %27, %26 ]
  call void @llvm.dbg.value(metadata i8 %29, i64 0, metadata !525, metadata !177), !dbg !526
  ret i8 %29, !dbg !565
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @set_accel_conf(%struct.bmi160_dev*) #1 !dbg !566 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !567, metadata !177), !dbg !568
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !569, metadata !177), !dbg !570
  %2 = alloca [2 x i8], align 1
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %0, i64 0, metadata !567, metadata !177), !dbg !568
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !571
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !567, metadata !177), !dbg !571
  call void @llvm.dbg.declare(metadata [2 x i8]* %2, metadata !572, metadata !177), !dbg !576
  %3 = bitcast [2 x i8]* %2 to i8*, !dbg !576
  call void @llvm.memset.p0i8.i64(i8* %3, i8 0, i64 2, i32 1, i1 false), !dbg !576
  %4 = getelementptr inbounds [2 x i8], [2 x i8]* %2, i32 0, i32 0, !dbg !577
  %5 = call signext i8 @check_accel_config(i8* %4, %struct.bmi160_dev* @configStub) #5, !dbg !578
  call void @llvm.dbg.value(metadata i8 %5, i64 0, metadata !569, metadata !177), !dbg !579
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 613, i8 %5)
  %6 = sext i8 %5 to i32, !dbg !580
  %7 = icmp eq i32 %6, 0, !dbg !582
  br i1 %7, label %8, label %39, !dbg !583

; <label>:8:                                      ; preds = %1
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 614, i32 64)
  %9 = getelementptr inbounds [2 x i8], [2 x i8]* %2, i64 0, i64 0, !dbg !584
  call void @qpr.arrayindex.i32.i2(i32 615, i32 0, i2 -2)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 616, i32 1)
  %10 = call signext i8 @bmi160_set_regs(i8 zeroext 64, i8* %9, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !586
  call void @llvm.dbg.value(metadata i8 %10, i64 0, metadata !569, metadata !177), !dbg !587
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 617, i8 %10)
  %11 = sext i8 %10 to i32, !dbg !588
  %12 = icmp eq i32 %11, 0, !dbg !590
  br i1 %12, label %13, label %37, !dbg !591

; <label>:13:                                     ; preds = %8
  %14 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 4, !dbg !592
  %15 = getelementptr inbounds %struct.bmi160_cfg, %struct.bmi160_cfg* %14, i32 0, i32 1, !dbg !594
  %16 = load i8, i8* %15, align 1, !dbg !594
  %17 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 5, !dbg !595
  %18 = getelementptr inbounds %struct.bmi160_cfg, %struct.bmi160_cfg* %17, i32 0, i32 1, !dbg !596
  store i8 %16, i8* %18, align 1, !dbg !597
  %19 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 4, !dbg !598
  %20 = getelementptr inbounds %struct.bmi160_cfg, %struct.bmi160_cfg* %19, i32 0, i32 3, !dbg !599
  %21 = load i8, i8* %20, align 1, !dbg !599
  %22 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 5, !dbg !600
  %23 = getelementptr inbounds %struct.bmi160_cfg, %struct.bmi160_cfg* %22, i32 0, i32 3, !dbg !601
  store i8 %21, i8* %23, align 1, !dbg !602
  %24 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 13, !dbg !603
  %25 = load void (i32)*, void (i32)** %24, align 8, !dbg !603
  call void %25(i32 1) #5, !dbg !604
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 618, i32 65)
  %26 = getelementptr inbounds [2 x i8], [2 x i8]* %2, i64 0, i64 1, !dbg !605
  call void @qpr.arrayindex.i32.i2(i32 619, i32 1, i2 -2)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 620, i32 1)
  %27 = call signext i8 @bmi160_set_regs(i8 zeroext 65, i8* %26, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !606
  call void @llvm.dbg.value(metadata i8 %27, i64 0, metadata !569, metadata !177), !dbg !607
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 621, i8 %27)
  %28 = sext i8 %27 to i32, !dbg !608
  %29 = icmp eq i32 %28, 0, !dbg !610
  br i1 %29, label %30, label %36, !dbg !611

; <label>:30:                                     ; preds = %13
  %31 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 4, !dbg !612
  %32 = getelementptr inbounds %struct.bmi160_cfg, %struct.bmi160_cfg* %31, i32 0, i32 2, !dbg !613
  %33 = load i8, i8* %32, align 2, !dbg !613
  %34 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 5, !dbg !614
  %35 = getelementptr inbounds %struct.bmi160_cfg, %struct.bmi160_cfg* %34, i32 0, i32 2, !dbg !615
  store i8 %33, i8* %35, align 2, !dbg !616
  br label %36, !dbg !617

; <label>:36:                                     ; preds = %30, %13
  br label %37, !dbg !618

; <label>:37:                                     ; preds = %36, %8
  %38 = phi i8 [ %27, %36 ], [ %10, %8 ]
  call void @llvm.dbg.value(metadata i8 %38, i64 0, metadata !569, metadata !177), !dbg !570
  br label %39, !dbg !619

; <label>:39:                                     ; preds = %37, %1
  %40 = phi i8 [ %38, %37 ], [ %5, %1 ]
  call void @llvm.dbg.value(metadata i8 %40, i64 0, metadata !569, metadata !177), !dbg !570
  ret i8 %40, !dbg !620
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @set_gyro_conf(%struct.bmi160_dev*) #1 !dbg !621 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !622, metadata !177), !dbg !623
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !624, metadata !177), !dbg !625
  %2 = alloca [2 x i8], align 1
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %0, i64 0, metadata !622, metadata !177), !dbg !623
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !626
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !622, metadata !177), !dbg !626
  call void @llvm.dbg.declare(metadata [2 x i8]* %2, metadata !627, metadata !177), !dbg !628
  %3 = bitcast [2 x i8]* %2 to i8*, !dbg !628
  call void @llvm.memset.p0i8.i64(i8* %3, i8 0, i64 2, i32 1, i1 false), !dbg !628
  %4 = getelementptr inbounds [2 x i8], [2 x i8]* %2, i32 0, i32 0, !dbg !629
  %5 = call signext i8 @check_gyro_config(i8* %4, %struct.bmi160_dev* @configStub) #5, !dbg !630
  call void @llvm.dbg.value(metadata i8 %5, i64 0, metadata !624, metadata !177), !dbg !631
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 693, i8 %5)
  %6 = sext i8 %5 to i32, !dbg !632
  %7 = icmp eq i32 %6, 0, !dbg !634
  br i1 %7, label %8, label %39, !dbg !635

; <label>:8:                                      ; preds = %1
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 694, i32 66)
  %9 = getelementptr inbounds [2 x i8], [2 x i8]* %2, i64 0, i64 0, !dbg !636
  call void @qpr.arrayindex.i32.i2(i32 695, i32 0, i2 -2)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 696, i32 1)
  %10 = call signext i8 @bmi160_set_regs(i8 zeroext 66, i8* %9, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !638
  call void @llvm.dbg.value(metadata i8 %10, i64 0, metadata !624, metadata !177), !dbg !639
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 697, i8 %10)
  %11 = sext i8 %10 to i32, !dbg !640
  %12 = icmp eq i32 %11, 0, !dbg !642
  br i1 %12, label %13, label %37, !dbg !643

; <label>:13:                                     ; preds = %8
  %14 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 6, !dbg !644
  %15 = getelementptr inbounds %struct.bmi160_cfg, %struct.bmi160_cfg* %14, i32 0, i32 1, !dbg !646
  %16 = load i8, i8* %15, align 1, !dbg !646
  %17 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 7, !dbg !647
  %18 = getelementptr inbounds %struct.bmi160_cfg, %struct.bmi160_cfg* %17, i32 0, i32 1, !dbg !648
  store i8 %16, i8* %18, align 1, !dbg !649
  %19 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 6, !dbg !650
  %20 = getelementptr inbounds %struct.bmi160_cfg, %struct.bmi160_cfg* %19, i32 0, i32 3, !dbg !651
  %21 = load i8, i8* %20, align 1, !dbg !651
  %22 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 7, !dbg !652
  %23 = getelementptr inbounds %struct.bmi160_cfg, %struct.bmi160_cfg* %22, i32 0, i32 3, !dbg !653
  store i8 %21, i8* %23, align 1, !dbg !654
  %24 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 13, !dbg !655
  %25 = load void (i32)*, void (i32)** %24, align 8, !dbg !655
  call void %25(i32 1) #5, !dbg !656
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 698, i32 67)
  %26 = getelementptr inbounds [2 x i8], [2 x i8]* %2, i64 0, i64 1, !dbg !657
  call void @qpr.arrayindex.i32.i2(i32 699, i32 1, i2 -2)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 700, i32 1)
  %27 = call signext i8 @bmi160_set_regs(i8 zeroext 67, i8* %26, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !658
  call void @llvm.dbg.value(metadata i8 %27, i64 0, metadata !624, metadata !177), !dbg !659
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 701, i8 %27)
  %28 = sext i8 %27 to i32, !dbg !660
  %29 = icmp eq i32 %28, 0, !dbg !662
  br i1 %29, label %30, label %36, !dbg !663

; <label>:30:                                     ; preds = %13
  %31 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 6, !dbg !664
  %32 = getelementptr inbounds %struct.bmi160_cfg, %struct.bmi160_cfg* %31, i32 0, i32 2, !dbg !665
  %33 = load i8, i8* %32, align 2, !dbg !665
  %34 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 7, !dbg !666
  %35 = getelementptr inbounds %struct.bmi160_cfg, %struct.bmi160_cfg* %34, i32 0, i32 2, !dbg !667
  store i8 %33, i8* %35, align 2, !dbg !668
  br label %36, !dbg !669

; <label>:36:                                     ; preds = %30, %13
  br label %37, !dbg !670

; <label>:37:                                     ; preds = %36, %8
  %38 = phi i8 [ %27, %36 ], [ %10, %8 ]
  call void @llvm.dbg.value(metadata i8 %38, i64 0, metadata !624, metadata !177), !dbg !625
  br label %39, !dbg !671

; <label>:39:                                     ; preds = %37, %1
  %40 = phi i8 [ %38, %37 ], [ %5, %1 ]
  call void @llvm.dbg.value(metadata i8 %40, i64 0, metadata !624, metadata !177), !dbg !625
  ret i8 %40, !dbg !672
}

; Function Attrs: noinline nounwind uwtable
define signext i8 @bmi160_set_power_mode(%struct.bmi160_dev*) #1 !dbg !673 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !674, metadata !177), !dbg !675
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !676, metadata !177), !dbg !677
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %0, i64 0, metadata !674, metadata !177), !dbg !675
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !678
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !674, metadata !177), !dbg !678
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 59, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !676, metadata !177), !dbg !677
  %2 = icmp eq %struct.bmi160_dev* @configStub, null, !dbg !679
  br i1 %2, label %7, label %3, !dbg !681

; <label>:3:                                      ; preds = %1
  %4 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 13, !dbg !682
  %5 = load void (i32)*, void (i32)** %4, align 8, !dbg !682
  %6 = icmp eq void (i32)* %5, null, !dbg !684
  br i1 %6, label %7, label %8, !dbg !685

; <label>:7:                                      ; preds = %3, %1
  call void @qpr.arithmetic.overflow.ssub.i32(i32 61, i32 0, i32 1)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 60, i32 -1)
  call void @llvm.dbg.value(metadata i8 -1, i64 0, metadata !676, metadata !177), !dbg !687
  br label %16, !dbg !689

; <label>:8:                                      ; preds = %3
  %9 = call signext i8 @set_accel_pwr(%struct.bmi160_dev* @configStub) #5, !dbg !690
  call void @llvm.dbg.value(metadata i8 %9, i64 0, metadata !676, metadata !177), !dbg !692
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 62, i8 %9)
  %10 = sext i8 %9 to i32, !dbg !693
  %11 = icmp eq i32 %10, 0, !dbg !695
  br i1 %11, label %12, label %14, !dbg !696

; <label>:12:                                     ; preds = %8
  %13 = call signext i8 @set_gyro_pwr(%struct.bmi160_dev* @configStub) #5, !dbg !697
  call void @llvm.dbg.value(metadata i8 %13, i64 0, metadata !676, metadata !177), !dbg !698
  br label %14, !dbg !699

; <label>:14:                                     ; preds = %12, %8
  %15 = phi i8 [ %13, %12 ], [ %9, %8 ]
  call void @llvm.dbg.value(metadata i8 %15, i64 0, metadata !676, metadata !177), !dbg !677
  br label %16

; <label>:16:                                     ; preds = %14, %7
  %17 = phi i8 [ -1, %7 ], [ %15, %14 ]
  call void @llvm.dbg.value(metadata i8 %17, i64 0, metadata !676, metadata !177), !dbg !677
  ret i8 %17, !dbg !700
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @check_invalid_settg(%struct.bmi160_dev*) #1 !dbg !701 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !702, metadata !177), !dbg !703
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !704, metadata !177), !dbg !705
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %0, i64 0, metadata !702, metadata !177), !dbg !703
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !706
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !702, metadata !177), !dbg !706
  call void @llvm.dbg.declare(metadata i8* %2, metadata !707, metadata !177), !dbg !708
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 670, i32 0)
  store i8 0, i8* %2, align 1, !dbg !708
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 671, i32 2)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 672, i32 1)
  %3 = call signext i8 @bmi160_get_regs(i8 zeroext 2, i8* %2, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !709
  call void @llvm.dbg.value(metadata i8 %3, i64 0, metadata !704, metadata !177), !dbg !710
  %4 = load i8, i8* %2, align 1, !dbg !711
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 677, i8 %4)
  %5 = zext i8 %4 to i32, !dbg !711
  call void @qpr.shift.by.amount.i32(i32 674, i32 %5, i32 1)
  call void @qpr.shift.by.negative.i32(i32 675, i32 %5, i32 1)
  call void @qpr.shift.of.negative.i32(i32 676, i32 %5, i32 1)
  %6 = ashr i32 %5, 1, !dbg !712
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 673, i32 %6)
  %7 = trunc i32 %6 to i8, !dbg !711
  store i8 %7, i8* %2, align 1, !dbg !713
  %8 = load i8, i8* %2, align 1, !dbg !714
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 679, i8 %8)
  %9 = zext i8 %8 to i32, !dbg !714
  %10 = and i32 %9, 15, !dbg !715
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 678, i32 %10)
  %11 = trunc i32 %10 to i8, !dbg !714
  store i8 %11, i8* %2, align 1, !dbg !716
  %12 = load i8, i8* %2, align 1, !dbg !717
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 680, i8 %12)
  %13 = zext i8 %12 to i32, !dbg !717
  %14 = icmp eq i32 %13, 1, !dbg !719
  br i1 %14, label %15, label %16, !dbg !720

; <label>:15:                                     ; preds = %1
  call void @qpr.arithmetic.overflow.ssub.i32(i32 682, i32 0, i32 6)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 681, i32 -6)
  call void @llvm.dbg.value(metadata i8 -6, i64 0, metadata !704, metadata !177), !dbg !721
  br label %37, !dbg !722

; <label>:16:                                     ; preds = %1
  %17 = load i8, i8* %2, align 1, !dbg !723
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 683, i8 %17)
  %18 = zext i8 %17 to i32, !dbg !723
  %19 = icmp eq i32 %18, 2, !dbg !725
  br i1 %19, label %20, label %21, !dbg !726

; <label>:20:                                     ; preds = %16
  call void @qpr.arithmetic.overflow.ssub.i32(i32 685, i32 0, i32 7)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 684, i32 -7)
  call void @llvm.dbg.value(metadata i8 -7, i64 0, metadata !704, metadata !177), !dbg !727
  br label %35, !dbg !728

; <label>:21:                                     ; preds = %16
  %22 = load i8, i8* %2, align 1, !dbg !729
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 686, i8 %22)
  %23 = zext i8 %22 to i32, !dbg !729
  %24 = icmp eq i32 %23, 3, !dbg !731
  br i1 %24, label %25, label %26, !dbg !732

; <label>:25:                                     ; preds = %21
  call void @qpr.arithmetic.overflow.ssub.i32(i32 688, i32 0, i32 8)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 687, i32 -8)
  call void @llvm.dbg.value(metadata i8 -8, i64 0, metadata !704, metadata !177), !dbg !733
  br label %33, !dbg !734

; <label>:26:                                     ; preds = %21
  %27 = load i8, i8* %2, align 1, !dbg !735
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 689, i8 %27)
  %28 = zext i8 %27 to i32, !dbg !735
  %29 = icmp eq i32 %28, 7, !dbg !737
  br i1 %29, label %30, label %31, !dbg !738

; <label>:30:                                     ; preds = %26
  call void @qpr.arithmetic.overflow.ssub.i32(i32 691, i32 0, i32 9)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 690, i32 -9)
  call void @llvm.dbg.value(metadata i8 -9, i64 0, metadata !704, metadata !177), !dbg !739
  br label %31, !dbg !740

; <label>:31:                                     ; preds = %30, %26
  %32 = phi i8 [ -9, %30 ], [ %3, %26 ]
  call void @llvm.dbg.value(metadata i8 %32, i64 0, metadata !704, metadata !177), !dbg !705
  br label %33

; <label>:33:                                     ; preds = %31, %25
  %34 = phi i8 [ -8, %25 ], [ %32, %31 ]
  call void @llvm.dbg.value(metadata i8 %34, i64 0, metadata !704, metadata !177), !dbg !705
  br label %35

; <label>:35:                                     ; preds = %33, %20
  %36 = phi i8 [ -7, %20 ], [ %34, %33 ]
  call void @llvm.dbg.value(metadata i8 %36, i64 0, metadata !704, metadata !177), !dbg !705
  br label %37

; <label>:37:                                     ; preds = %35, %15
  %38 = phi i8 [ -6, %15 ], [ %36, %35 ]
  call void @llvm.dbg.value(metadata i8 %38, i64 0, metadata !704, metadata !177), !dbg !705
  ret i8 %38, !dbg !741
}

define extern_weak void @qpr.shift.by.amount.i32(i32, i32, i32) {
  %4 = icmp slt i32 %2, 32
  call void @llbmc.assert(i1 %4, i32 %0)
  ret void
}

; Function Attrs: inaccessiblememonly nounwind
define weak_odr void @qpr.shift.by.negative.i32(i32, i32, i32) #0 {
  %4 = icmp sge i32 %2, 0
  call void @llbmc.assert(i1 %4, i32 %0)
  ret void
}

; Function Attrs: inaccessiblememonly nounwind
define weak_odr void @qpr.shift.of.negative.i32(i32, i32, i32) #0 {
  %4 = icmp sge i32 %1, 0
  call void @llbmc.assert(i1 %4, i32 %0)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @set_accel_pwr(%struct.bmi160_dev*) #1 !dbg !742 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !743, metadata !177), !dbg !744
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !745, metadata !177), !dbg !746
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %0, i64 0, metadata !743, metadata !177), !dbg !744
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !747
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !743, metadata !177), !dbg !747
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 748, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !745, metadata !177), !dbg !746
  call void @llvm.dbg.declare(metadata i8* %2, metadata !748, metadata !177), !dbg !749
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 749, i32 0)
  store i8 0, i8* %2, align 1, !dbg !749
  %3 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 4, !dbg !750
  %4 = getelementptr inbounds %struct.bmi160_cfg, %struct.bmi160_cfg* %3, i32 0, i32 0, !dbg !752
  %5 = load i8, i8* %4, align 8, !dbg !752
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 750, i8 %5)
  %6 = zext i8 %5 to i32, !dbg !753
  %7 = icmp uge i32 %6, 16, !dbg !754
  br i1 %7, label %8, label %50, !dbg !755

; <label>:8:                                      ; preds = %1
  %9 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 4, !dbg !756
  %10 = getelementptr inbounds %struct.bmi160_cfg, %struct.bmi160_cfg* %9, i32 0, i32 0, !dbg !757
  %11 = load i8, i8* %10, align 8, !dbg !757
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 751, i8 %11)
  %12 = zext i8 %11 to i32, !dbg !758
  %13 = icmp ule i32 %12, 18, !dbg !759
  br i1 %13, label %14, label %50, !dbg !760

; <label>:14:                                     ; preds = %8
  %15 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 4, !dbg !762
  %16 = getelementptr inbounds %struct.bmi160_cfg, %struct.bmi160_cfg* %15, i32 0, i32 0, !dbg !765
  %17 = load i8, i8* %16, align 8, !dbg !765
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 752, i8 %17)
  %18 = zext i8 %17 to i32, !dbg !766
  %19 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 5, !dbg !767
  %20 = getelementptr inbounds %struct.bmi160_cfg, %struct.bmi160_cfg* %19, i32 0, i32 0, !dbg !768
  %21 = load i8, i8* %20, align 4, !dbg !768
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 753, i8 %21)
  %22 = zext i8 %21 to i32, !dbg !769
  %23 = icmp ne i32 %18, %22, !dbg !770
  br i1 %23, label %24, label %48, !dbg !771

; <label>:24:                                     ; preds = %14
  %25 = call signext i8 @process_under_sampling(i8* %2, %struct.bmi160_dev* @configStub) #5, !dbg !772
  call void @llvm.dbg.value(metadata i8 %25, i64 0, metadata !745, metadata !177), !dbg !774
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 754, i8 %25)
  %26 = sext i8 %25 to i32, !dbg !775
  %27 = icmp eq i32 %26, 0, !dbg !777
  br i1 %27, label %28, label %46, !dbg !778

; <label>:28:                                     ; preds = %24
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 755, i32 126)
  %29 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 4, !dbg !779
  %30 = getelementptr inbounds %struct.bmi160_cfg, %struct.bmi160_cfg* %29, i32 0, i32 0, !dbg !781
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 756, i32 1)
  %31 = call signext i8 @bmi160_set_regs(i8 zeroext 126, i8* %30, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !782
  call void @llvm.dbg.value(metadata i8 %31, i64 0, metadata !745, metadata !177), !dbg !783
  %32 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 5, !dbg !784
  %33 = getelementptr inbounds %struct.bmi160_cfg, %struct.bmi160_cfg* %32, i32 0, i32 0, !dbg !786
  %34 = load i8, i8* %33, align 4, !dbg !786
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 757, i8 %34)
  %35 = zext i8 %34 to i32, !dbg !787
  %36 = icmp eq i32 %35, 16, !dbg !788
  br i1 %36, label %37, label %40, !dbg !789

; <label>:37:                                     ; preds = %28
  %38 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 13, !dbg !790
  %39 = load void (i32)*, void (i32)** %38, align 8, !dbg !790
  call void %39(i32 5) #5, !dbg !791
  br label %40, !dbg !791

; <label>:40:                                     ; preds = %37, %28
  %41 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 4, !dbg !792
  %42 = getelementptr inbounds %struct.bmi160_cfg, %struct.bmi160_cfg* %41, i32 0, i32 0, !dbg !793
  %43 = load i8, i8* %42, align 8, !dbg !793
  %44 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 5, !dbg !794
  %45 = getelementptr inbounds %struct.bmi160_cfg, %struct.bmi160_cfg* %44, i32 0, i32 0, !dbg !795
  store i8 %43, i8* %45, align 4, !dbg !796
  br label %46, !dbg !797

; <label>:46:                                     ; preds = %40, %24
  %47 = phi i8 [ %31, %40 ], [ %25, %24 ]
  call void @llvm.dbg.value(metadata i8 %47, i64 0, metadata !745, metadata !177), !dbg !746
  br label %48, !dbg !798

; <label>:48:                                     ; preds = %46, %14
  %49 = phi i8 [ %47, %46 ], [ 0, %14 ]
  call void @llvm.dbg.value(metadata i8 %49, i64 0, metadata !745, metadata !177), !dbg !746
  br label %51, !dbg !799

; <label>:50:                                     ; preds = %8, %1
  call void @qpr.arithmetic.overflow.ssub.i32(i32 759, i32 0, i32 4)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 758, i32 -4)
  call void @llvm.dbg.value(metadata i8 -4, i64 0, metadata !745, metadata !177), !dbg !800
  br label %51

; <label>:51:                                     ; preds = %50, %48
  %52 = phi i8 [ %49, %48 ], [ -4, %50 ]
  call void @llvm.dbg.value(metadata i8 %52, i64 0, metadata !745, metadata !177), !dbg !746
  ret i8 %52, !dbg !802
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @set_gyro_pwr(%struct.bmi160_dev*) #1 !dbg !803 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !804, metadata !177), !dbg !805
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !806, metadata !177), !dbg !807
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %0, i64 0, metadata !804, metadata !177), !dbg !805
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !808
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !804, metadata !177), !dbg !808
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 784, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !806, metadata !177), !dbg !807
  %2 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 6, !dbg !809
  %3 = getelementptr inbounds %struct.bmi160_cfg, %struct.bmi160_cfg* %2, i32 0, i32 0, !dbg !811
  %4 = load i8, i8* %3, align 8, !dbg !811
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 785, i8 %4)
  %5 = zext i8 %4 to i32, !dbg !812
  %6 = icmp eq i32 %5, 20, !dbg !813
  br i1 %6, label %19, label %7, !dbg !814

; <label>:7:                                      ; preds = %1
  %8 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 6, !dbg !815
  %9 = getelementptr inbounds %struct.bmi160_cfg, %struct.bmi160_cfg* %8, i32 0, i32 0, !dbg !817
  %10 = load i8, i8* %9, align 8, !dbg !817
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 786, i8 %10)
  %11 = zext i8 %10 to i32, !dbg !818
  %12 = icmp eq i32 %11, 21, !dbg !819
  br i1 %12, label %19, label %13, !dbg !820

; <label>:13:                                     ; preds = %7
  %14 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 6, !dbg !821
  %15 = getelementptr inbounds %struct.bmi160_cfg, %struct.bmi160_cfg* %14, i32 0, i32 0, !dbg !822
  %16 = load i8, i8* %15, align 8, !dbg !822
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 787, i8 %16)
  %17 = zext i8 %16 to i32, !dbg !823
  %18 = icmp eq i32 %17, 23, !dbg !824
  br i1 %18, label %19, label %66, !dbg !825

; <label>:19:                                     ; preds = %13, %7, %1
  %20 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 6, !dbg !827
  %21 = getelementptr inbounds %struct.bmi160_cfg, %struct.bmi160_cfg* %20, i32 0, i32 0, !dbg !830
  %22 = load i8, i8* %21, align 8, !dbg !830
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 788, i8 %22)
  %23 = zext i8 %22 to i32, !dbg !831
  %24 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 7, !dbg !832
  %25 = getelementptr inbounds %struct.bmi160_cfg, %struct.bmi160_cfg* %24, i32 0, i32 0, !dbg !833
  %26 = load i8, i8* %25, align 4, !dbg !833
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 789, i8 %26)
  %27 = zext i8 %26 to i32, !dbg !834
  %28 = icmp ne i32 %23, %27, !dbg !835
  br i1 %28, label %29, label %64, !dbg !836

; <label>:29:                                     ; preds = %19
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 790, i32 126)
  %30 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 6, !dbg !837
  %31 = getelementptr inbounds %struct.bmi160_cfg, %struct.bmi160_cfg* %30, i32 0, i32 0, !dbg !839
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 791, i32 1)
  %32 = call signext i8 @bmi160_set_regs(i8 zeroext 126, i8* %31, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !840
  call void @llvm.dbg.value(metadata i8 %32, i64 0, metadata !806, metadata !177), !dbg !841
  %33 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 7, !dbg !842
  %34 = getelementptr inbounds %struct.bmi160_cfg, %struct.bmi160_cfg* %33, i32 0, i32 0, !dbg !844
  %35 = load i8, i8* %34, align 4, !dbg !844
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 792, i8 %35)
  %36 = zext i8 %35 to i32, !dbg !845
  %37 = icmp eq i32 %36, 20, !dbg !846
  br i1 %37, label %38, label %41, !dbg !847

; <label>:38:                                     ; preds = %29
  %39 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 13, !dbg !848
  %40 = load void (i32)*, void (i32)** %39, align 8, !dbg !848
  call void %40(i32 81) #5, !dbg !850
  br label %58, !dbg !851

; <label>:41:                                     ; preds = %29
  %42 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 7, !dbg !852
  %43 = getelementptr inbounds %struct.bmi160_cfg, %struct.bmi160_cfg* %42, i32 0, i32 0, !dbg !855
  %44 = load i8, i8* %43, align 4, !dbg !855
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 793, i8 %44)
  %45 = zext i8 %44 to i32, !dbg !856
  %46 = icmp eq i32 %45, 23, !dbg !857
  br i1 %46, label %47, label %56, !dbg !858

; <label>:47:                                     ; preds = %41
  %48 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 6, !dbg !859
  %49 = getelementptr inbounds %struct.bmi160_cfg, %struct.bmi160_cfg* %48, i32 0, i32 0, !dbg !860
  %50 = load i8, i8* %49, align 8, !dbg !860
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 794, i8 %50)
  %51 = zext i8 %50 to i32, !dbg !861
  %52 = icmp eq i32 %51, 21, !dbg !862
  br i1 %52, label %53, label %56, !dbg !863

; <label>:53:                                     ; preds = %47
  %54 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 13, !dbg !865
  %55 = load void (i32)*, void (i32)** %54, align 8, !dbg !865
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 795, i32 10)
  call void %55(i32 10) #5, !dbg !867
  br label %57, !dbg !868

; <label>:56:                                     ; preds = %47, %41
  br label %57

; <label>:57:                                     ; preds = %56, %53
  br label %58

; <label>:58:                                     ; preds = %57, %38
  %59 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 6, !dbg !869
  %60 = getelementptr inbounds %struct.bmi160_cfg, %struct.bmi160_cfg* %59, i32 0, i32 0, !dbg !870
  %61 = load i8, i8* %60, align 8, !dbg !870
  %62 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 7, !dbg !871
  %63 = getelementptr inbounds %struct.bmi160_cfg, %struct.bmi160_cfg* %62, i32 0, i32 0, !dbg !872
  store i8 %61, i8* %63, align 4, !dbg !873
  br label %64, !dbg !874

; <label>:64:                                     ; preds = %58, %19
  %65 = phi i8 [ %32, %58 ], [ 0, %19 ]
  call void @llvm.dbg.value(metadata i8 %65, i64 0, metadata !806, metadata !177), !dbg !807
  br label %67, !dbg !875

; <label>:66:                                     ; preds = %13
  call void @qpr.arithmetic.overflow.ssub.i32(i32 797, i32 0, i32 4)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 796, i32 -4)
  call void @llvm.dbg.value(metadata i8 -4, i64 0, metadata !806, metadata !177), !dbg !876
  br label %67

; <label>:67:                                     ; preds = %66, %64
  %68 = phi i8 [ %65, %64 ], [ -4, %66 ]
  call void @llvm.dbg.value(metadata i8 %68, i64 0, metadata !806, metadata !177), !dbg !807
  ret i8 %68, !dbg !878
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @process_under_sampling(i8*, %struct.bmi160_dev*) #1 !dbg !879 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !882, metadata !177), !dbg !883
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !884, metadata !177), !dbg !885
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !886, metadata !177), !dbg !887
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !888, metadata !177), !dbg !889
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !882, metadata !177), !dbg !883
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %1, i64 0, metadata !884, metadata !177), !dbg !885
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !890
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !884, metadata !177), !dbg !890
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 760, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !888, metadata !177), !dbg !889
  call void @llvm.dbg.declare(metadata i8* %3, metadata !891, metadata !177), !dbg !892
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 761, i32 0)
  store i8 0, i8* %3, align 1, !dbg !892
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 762, i32 64)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 763, i32 1)
  %4 = call signext i8 @bmi160_get_regs(i8 zeroext 64, i8* %0, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !893
  call void @llvm.dbg.value(metadata i8 %4, i64 0, metadata !886, metadata !177), !dbg !894
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 764, i8 %4)
  %5 = sext i8 %4 to i32, !dbg !895
  %6 = icmp eq i32 %5, 0, !dbg !897
  br i1 %6, label %7, label %43, !dbg !898

; <label>:7:                                      ; preds = %2
  %8 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 4, !dbg !899
  %9 = getelementptr inbounds %struct.bmi160_cfg, %struct.bmi160_cfg* %8, i32 0, i32 0, !dbg !902
  %10 = load i8, i8* %9, align 8, !dbg !902
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 765, i8 %10)
  %11 = zext i8 %10 to i32, !dbg !903
  %12 = icmp eq i32 %11, 18, !dbg !904
  br i1 %12, label %13, label %28, !dbg !905

; <label>:13:                                     ; preds = %7
  %14 = load i8, i8* %0, align 1, !dbg !906
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 767, i8 %14)
  %15 = zext i8 %14 to i32, !dbg !906
  %16 = and i32 %15, -129, !dbg !908
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 766, i32 %16)
  %17 = trunc i32 %16 to i8, !dbg !906
  call void @llvm.dbg.value(metadata i8 %17, i64 0, metadata !888, metadata !177), !dbg !909
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 769, i8 %17)
  %18 = zext i8 %17 to i32, !dbg !910
  call void @qpr.shift.by.amount.i32(i32 771, i32 1, i32 7)
  call void @qpr.shift.by.negative.i32(i32 772, i32 1, i32 7)
  call void @qpr.shift.of.negative.i32(i32 773, i32 1, i32 7)
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 770, i32 128)
  %19 = or i32 %18, 128, !dbg !911
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 768, i32 %19)
  %20 = trunc i32 %19 to i8, !dbg !910
  store i8 %20, i8* %0, align 1, !dbg !912
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 774, i32 64)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 775, i32 1)
  %21 = call signext i8 @bmi160_set_regs(i8 zeroext 64, i8* %0, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !913
  call void @llvm.dbg.value(metadata i8 %21, i64 0, metadata !886, metadata !177), !dbg !914
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 776, i8 %21)
  %22 = sext i8 %21 to i32, !dbg !915
  %23 = icmp eq i32 %22, 0, !dbg !917
  br i1 %23, label %24, label %26, !dbg !918

; <label>:24:                                     ; preds = %13
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 777, i32 88)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 778, i32 2)
  %25 = call signext i8 @bmi160_set_regs(i8 zeroext 88, i8* %3, i16 zeroext 2, %struct.bmi160_dev* @configStub) #5, !dbg !919
  call void @llvm.dbg.value(metadata i8 %25, i64 0, metadata !886, metadata !177), !dbg !920
  br label %26, !dbg !921

; <label>:26:                                     ; preds = %24, %13
  %27 = phi i8 [ %25, %24 ], [ %21, %13 ]
  call void @llvm.dbg.value(metadata i8 %27, i64 0, metadata !886, metadata !177), !dbg !887
  br label %41, !dbg !922

; <label>:28:                                     ; preds = %7
  %29 = load i8, i8* %0, align 1, !dbg !923
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 779, i8 %29)
  %30 = zext i8 %29 to i32, !dbg !923
  %31 = and i32 %30, 128, !dbg !926
  %32 = icmp ne i32 %31, 0, !dbg !926
  br i1 %32, label %33, label %39, !dbg !927

; <label>:33:                                     ; preds = %28
  %34 = load i8, i8* %0, align 1, !dbg !928
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 781, i8 %34)
  %35 = zext i8 %34 to i32, !dbg !928
  %36 = and i32 %35, -129, !dbg !930
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 780, i32 %36)
  %37 = trunc i32 %36 to i8, !dbg !928
  call void @llvm.dbg.value(metadata i8 %37, i64 0, metadata !888, metadata !177), !dbg !931
  store i8 %37, i8* %0, align 1, !dbg !932
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 782, i32 64)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 783, i32 1)
  %38 = call signext i8 @bmi160_set_regs(i8 zeroext 64, i8* %0, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !933
  call void @llvm.dbg.value(metadata i8 %38, i64 0, metadata !886, metadata !177), !dbg !934
  br label %39, !dbg !935

; <label>:39:                                     ; preds = %33, %28
  %40 = phi i8 [ %38, %33 ], [ %4, %28 ]
  call void @llvm.dbg.value(metadata i8 %40, i64 0, metadata !886, metadata !177), !dbg !887
  br label %41

; <label>:41:                                     ; preds = %39, %26
  %42 = phi i8 [ %27, %26 ], [ %40, %39 ]
  call void @llvm.dbg.value(metadata i8 %42, i64 0, metadata !886, metadata !177), !dbg !887
  br label %43, !dbg !936

; <label>:43:                                     ; preds = %41, %2
  %44 = phi i8 [ %42, %41 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i8 %44, i64 0, metadata !886, metadata !177), !dbg !887
  ret i8 %44, !dbg !937
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #4

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @check_gyro_config(i8*, %struct.bmi160_dev*) #1 !dbg !938 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !939, metadata !177), !dbg !940
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !941, metadata !177), !dbg !942
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !943, metadata !177), !dbg !944
  call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !939, metadata !177), !dbg !940
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %1, i64 0, metadata !941, metadata !177), !dbg !942
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !945
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !941, metadata !177), !dbg !945
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 702, i32 66)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 703, i32 2)
  %3 = call signext i8 @bmi160_get_regs(i8 zeroext 66, i8* %0, i16 zeroext 2, %struct.bmi160_dev* @configStub) #5, !dbg !946
  call void @llvm.dbg.value(metadata i8 %3, i64 0, metadata !943, metadata !177), !dbg !947
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 704, i8 %3)
  %4 = sext i8 %3 to i32, !dbg !948
  %5 = icmp eq i32 %4, 0, !dbg !950
  br i1 %5, label %6, label %23, !dbg !951

; <label>:6:                                      ; preds = %2
  %7 = getelementptr inbounds i8, i8* %0, i64 0, !dbg !952
  %8 = call signext i8 @process_gyro_odr(i8* %7, %struct.bmi160_dev* @configStub) #5, !dbg !954
  call void @llvm.dbg.value(metadata i8 %8, i64 0, metadata !943, metadata !177), !dbg !955
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 705, i8 %8)
  %9 = sext i8 %8 to i32, !dbg !956
  %10 = icmp eq i32 %9, 0, !dbg !958
  br i1 %10, label %11, label %21, !dbg !959

; <label>:11:                                     ; preds = %6
  %12 = getelementptr inbounds i8, i8* %0, i64 0, !dbg !960
  %13 = call signext i8 @process_gyro_bw(i8* %12, %struct.bmi160_dev* @configStub) #5, !dbg !962
  call void @llvm.dbg.value(metadata i8 %13, i64 0, metadata !943, metadata !177), !dbg !963
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 706, i8 %13)
  %14 = sext i8 %13 to i32, !dbg !964
  %15 = icmp eq i32 %14, 0, !dbg !966
  br i1 %15, label %16, label %19, !dbg !967

; <label>:16:                                     ; preds = %11
  %17 = getelementptr inbounds i8, i8* %0, i64 1, !dbg !968
  %18 = call signext i8 @process_gyro_range(i8* %17, %struct.bmi160_dev* @configStub) #5, !dbg !969
  call void @llvm.dbg.value(metadata i8 %18, i64 0, metadata !943, metadata !177), !dbg !970
  br label %19, !dbg !971

; <label>:19:                                     ; preds = %16, %11
  %20 = phi i8 [ %18, %16 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8 %20, i64 0, metadata !943, metadata !177), !dbg !944
  br label %21, !dbg !972

; <label>:21:                                     ; preds = %19, %6
  %22 = phi i8 [ %20, %19 ], [ %8, %6 ]
  call void @llvm.dbg.value(metadata i8 %22, i64 0, metadata !943, metadata !177), !dbg !944
  br label %23, !dbg !973

; <label>:23:                                     ; preds = %21, %2
  %24 = phi i8 [ %22, %21 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i8 %24, i64 0, metadata !943, metadata !177), !dbg !944
  ret i8 %24, !dbg !974
}

; Function Attrs: inaccessiblememonly nounwind
define weak_odr void @qpr.arrayindex.i32.i2(i32, i32, i2) #0 {
  %4 = zext i2 %2 to i32
  %5 = icmp ult i32 %1, %4
  call void @llbmc.assert(i1 %5, i32 %0)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @process_gyro_odr(i8*, %struct.bmi160_dev*) #1 !dbg !975 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !976, metadata !177), !dbg !977
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !978, metadata !177), !dbg !979
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !980, metadata !177), !dbg !981
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !982, metadata !177), !dbg !983
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !984, metadata !177), !dbg !985
  call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !976, metadata !177), !dbg !977
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %1, i64 0, metadata !978, metadata !177), !dbg !979
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !986
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !978, metadata !177), !dbg !986
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 707, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !980, metadata !177), !dbg !981
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 708, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !982, metadata !177), !dbg !983
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 709, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !984, metadata !177), !dbg !985
  %3 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 6, !dbg !987
  %4 = getelementptr inbounds %struct.bmi160_cfg, %struct.bmi160_cfg* %3, i32 0, i32 1, !dbg !989
  %5 = load i8, i8* %4, align 1, !dbg !989
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 710, i8 %5)
  %6 = zext i8 %5 to i32, !dbg !990
  %7 = icmp ule i32 %6, 13, !dbg !991
  br i1 %7, label %8, label %32, !dbg !992

; <label>:8:                                      ; preds = %2
  %9 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 6, !dbg !993
  %10 = getelementptr inbounds %struct.bmi160_cfg, %struct.bmi160_cfg* %9, i32 0, i32 1, !dbg !996
  %11 = load i8, i8* %10, align 1, !dbg !996
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 711, i8 %11)
  %12 = zext i8 %11 to i32, !dbg !997
  %13 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 7, !dbg !998
  %14 = getelementptr inbounds %struct.bmi160_cfg, %struct.bmi160_cfg* %13, i32 0, i32 1, !dbg !999
  %15 = load i8, i8* %14, align 1, !dbg !999
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 712, i8 %15)
  %16 = zext i8 %15 to i32, !dbg !1000
  %17 = icmp ne i32 %12, %16, !dbg !1001
  br i1 %17, label %18, label %31, !dbg !1002

; <label>:18:                                     ; preds = %8
  %19 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 6, !dbg !1003
  %20 = getelementptr inbounds %struct.bmi160_cfg, %struct.bmi160_cfg* %19, i32 0, i32 1, !dbg !1005
  %21 = load i8, i8* %20, align 1, !dbg !1005
  call void @llvm.dbg.value(metadata i8 %21, i64 0, metadata !984, metadata !177), !dbg !1006
  %22 = load i8, i8* %0, align 1, !dbg !1007
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 714, i8 %22)
  %23 = zext i8 %22 to i32, !dbg !1007
  %24 = and i32 %23, -16, !dbg !1008
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 713, i32 %24)
  %25 = trunc i32 %24 to i8, !dbg !1009
  call void @llvm.dbg.value(metadata i8 %25, i64 0, metadata !982, metadata !177), !dbg !1010
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 716, i8 %25)
  %26 = zext i8 %25 to i32, !dbg !1011
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 717, i8 %21)
  %27 = zext i8 %21 to i32, !dbg !1012
  %28 = and i32 %27, 15, !dbg !1013
  %29 = or i32 %26, %28, !dbg !1014
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 715, i32 %29)
  %30 = trunc i32 %29 to i8, !dbg !1011
  store i8 %30, i8* %0, align 1, !dbg !1015
  br label %31, !dbg !1016

; <label>:31:                                     ; preds = %18, %8
  br label %33, !dbg !1017

; <label>:32:                                     ; preds = %2
  call void @qpr.arithmetic.overflow.ssub.i32(i32 719, i32 0, i32 4)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 718, i32 -4)
  call void @llvm.dbg.value(metadata i8 -4, i64 0, metadata !980, metadata !177), !dbg !1018
  br label %33

; <label>:33:                                     ; preds = %32, %31
  %34 = phi i8 [ 0, %31 ], [ -4, %32 ]
  call void @llvm.dbg.value(metadata i8 %34, i64 0, metadata !980, metadata !177), !dbg !981
  ret i8 %34, !dbg !1020
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @process_gyro_bw(i8*, %struct.bmi160_dev*) #1 !dbg !1021 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1022, metadata !177), !dbg !1023
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1024, metadata !177), !dbg !1025
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1026, metadata !177), !dbg !1027
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1028, metadata !177), !dbg !1029
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1030, metadata !177), !dbg !1031
  call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !1022, metadata !177), !dbg !1023
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %1, i64 0, metadata !1024, metadata !177), !dbg !1025
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !1032
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !1024, metadata !177), !dbg !1032
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 720, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !1026, metadata !177), !dbg !1027
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 721, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !1028, metadata !177), !dbg !1029
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 722, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !1030, metadata !177), !dbg !1031
  %3 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 6, !dbg !1033
  %4 = getelementptr inbounds %struct.bmi160_cfg, %struct.bmi160_cfg* %3, i32 0, i32 3, !dbg !1035
  %5 = load i8, i8* %4, align 1, !dbg !1035
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 723, i8 %5)
  %6 = zext i8 %5 to i32, !dbg !1036
  %7 = icmp ule i32 %6, 2, !dbg !1037
  br i1 %7, label %8, label %22, !dbg !1038

; <label>:8:                                      ; preds = %2
  %9 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 6, !dbg !1039
  %10 = getelementptr inbounds %struct.bmi160_cfg, %struct.bmi160_cfg* %9, i32 0, i32 3, !dbg !1041
  %11 = load i8, i8* %10, align 1, !dbg !1041
  call void @llvm.dbg.value(metadata i8 %11, i64 0, metadata !1030, metadata !177), !dbg !1042
  %12 = load i8, i8* %0, align 1, !dbg !1043
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 725, i8 %12)
  %13 = zext i8 %12 to i32, !dbg !1043
  %14 = and i32 %13, -49, !dbg !1044
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 724, i32 %14)
  %15 = trunc i32 %14 to i8, !dbg !1043
  call void @llvm.dbg.value(metadata i8 %15, i64 0, metadata !1028, metadata !177), !dbg !1045
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 727, i8 %15)
  %16 = zext i8 %15 to i32, !dbg !1046
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 732, i8 %11)
  %17 = zext i8 %11 to i32, !dbg !1047
  call void @qpr.shift.by.amount.i32(i32 729, i32 %17, i32 4)
  call void @qpr.shift.by.negative.i32(i32 730, i32 %17, i32 4)
  call void @qpr.shift.of.negative.i32(i32 731, i32 %17, i32 4)
  %18 = shl i32 %17, 4, !dbg !1048
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 728, i32 %18)
  %19 = and i32 %18, 48, !dbg !1049
  %20 = or i32 %16, %19, !dbg !1050
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 726, i32 %20)
  %21 = trunc i32 %20 to i8, !dbg !1046
  store i8 %21, i8* %0, align 1, !dbg !1051
  br label %23, !dbg !1052

; <label>:22:                                     ; preds = %2
  call void @qpr.arithmetic.overflow.ssub.i32(i32 734, i32 0, i32 4)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 733, i32 -4)
  call void @llvm.dbg.value(metadata i8 -4, i64 0, metadata !1026, metadata !177), !dbg !1053
  br label %23

; <label>:23:                                     ; preds = %22, %8
  %24 = phi i8 [ 0, %8 ], [ -4, %22 ]
  call void @llvm.dbg.value(metadata i8 %24, i64 0, metadata !1026, metadata !177), !dbg !1027
  ret i8 %24, !dbg !1055
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @process_gyro_range(i8*, %struct.bmi160_dev*) #1 !dbg !1056 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1057, metadata !177), !dbg !1058
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1059, metadata !177), !dbg !1060
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1061, metadata !177), !dbg !1062
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1063, metadata !177), !dbg !1064
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1065, metadata !177), !dbg !1066
  call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !1057, metadata !177), !dbg !1058
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %1, i64 0, metadata !1059, metadata !177), !dbg !1060
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !1067
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !1059, metadata !177), !dbg !1067
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 735, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !1061, metadata !177), !dbg !1062
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 736, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !1063, metadata !177), !dbg !1064
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 737, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !1065, metadata !177), !dbg !1066
  %3 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 6, !dbg !1068
  %4 = getelementptr inbounds %struct.bmi160_cfg, %struct.bmi160_cfg* %3, i32 0, i32 2, !dbg !1070
  %5 = load i8, i8* %4, align 2, !dbg !1070
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 738, i8 %5)
  %6 = zext i8 %5 to i32, !dbg !1071
  %7 = icmp ule i32 %6, 4, !dbg !1072
  br i1 %7, label %8, label %32, !dbg !1073

; <label>:8:                                      ; preds = %2
  %9 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 6, !dbg !1074
  %10 = getelementptr inbounds %struct.bmi160_cfg, %struct.bmi160_cfg* %9, i32 0, i32 2, !dbg !1077
  %11 = load i8, i8* %10, align 2, !dbg !1077
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 739, i8 %11)
  %12 = zext i8 %11 to i32, !dbg !1078
  %13 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 7, !dbg !1079
  %14 = getelementptr inbounds %struct.bmi160_cfg, %struct.bmi160_cfg* %13, i32 0, i32 2, !dbg !1080
  %15 = load i8, i8* %14, align 2, !dbg !1080
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 740, i8 %15)
  %16 = zext i8 %15 to i32, !dbg !1081
  %17 = icmp ne i32 %12, %16, !dbg !1082
  br i1 %17, label %18, label %31, !dbg !1083

; <label>:18:                                     ; preds = %8
  %19 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 6, !dbg !1084
  %20 = getelementptr inbounds %struct.bmi160_cfg, %struct.bmi160_cfg* %19, i32 0, i32 2, !dbg !1086
  %21 = load i8, i8* %20, align 2, !dbg !1086
  call void @llvm.dbg.value(metadata i8 %21, i64 0, metadata !1065, metadata !177), !dbg !1087
  %22 = load i8, i8* %0, align 1, !dbg !1088
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 742, i8 %22)
  %23 = zext i8 %22 to i32, !dbg !1088
  %24 = and i32 %23, -8, !dbg !1089
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 741, i32 %24)
  %25 = trunc i32 %24 to i8, !dbg !1088
  call void @llvm.dbg.value(metadata i8 %25, i64 0, metadata !1063, metadata !177), !dbg !1090
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 744, i8 %25)
  %26 = zext i8 %25 to i32, !dbg !1091
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 745, i8 %21)
  %27 = zext i8 %21 to i32, !dbg !1092
  %28 = and i32 %27, 7, !dbg !1093
  %29 = or i32 %26, %28, !dbg !1094
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 743, i32 %29)
  %30 = trunc i32 %29 to i8, !dbg !1091
  store i8 %30, i8* %0, align 1, !dbg !1095
  br label %31, !dbg !1096

; <label>:31:                                     ; preds = %18, %8
  br label %33, !dbg !1097

; <label>:32:                                     ; preds = %2
  call void @qpr.arithmetic.overflow.ssub.i32(i32 747, i32 0, i32 4)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 746, i32 -4)
  call void @llvm.dbg.value(metadata i8 -4, i64 0, metadata !1061, metadata !177), !dbg !1098
  br label %33

; <label>:33:                                     ; preds = %32, %31
  %34 = phi i8 [ 0, %31 ], [ -4, %32 ]
  call void @llvm.dbg.value(metadata i8 %34, i64 0, metadata !1061, metadata !177), !dbg !1062
  ret i8 %34, !dbg !1100
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @check_accel_config(i8*, %struct.bmi160_dev*) #1 !dbg !1101 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1102, metadata !177), !dbg !1103
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1104, metadata !177), !dbg !1105
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1106, metadata !177), !dbg !1107
  call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !1102, metadata !177), !dbg !1103
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %1, i64 0, metadata !1104, metadata !177), !dbg !1105
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !1108
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !1104, metadata !177), !dbg !1108
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 622, i32 64)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 623, i32 2)
  %3 = call signext i8 @bmi160_get_regs(i8 zeroext 64, i8* %0, i16 zeroext 2, %struct.bmi160_dev* @configStub) #5, !dbg !1109
  call void @llvm.dbg.value(metadata i8 %3, i64 0, metadata !1106, metadata !177), !dbg !1110
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 624, i8 %3)
  %4 = sext i8 %3 to i32, !dbg !1111
  %5 = icmp eq i32 %4, 0, !dbg !1113
  br i1 %5, label %6, label %23, !dbg !1114

; <label>:6:                                      ; preds = %2
  %7 = getelementptr inbounds i8, i8* %0, i64 0, !dbg !1115
  %8 = call signext i8 @process_accel_odr(i8* %7, %struct.bmi160_dev* @configStub) #5, !dbg !1117
  call void @llvm.dbg.value(metadata i8 %8, i64 0, metadata !1106, metadata !177), !dbg !1118
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 625, i8 %8)
  %9 = sext i8 %8 to i32, !dbg !1119
  %10 = icmp eq i32 %9, 0, !dbg !1121
  br i1 %10, label %11, label %21, !dbg !1122

; <label>:11:                                     ; preds = %6
  %12 = getelementptr inbounds i8, i8* %0, i64 0, !dbg !1123
  %13 = call signext i8 @process_accel_bw(i8* %12, %struct.bmi160_dev* @configStub) #5, !dbg !1125
  call void @llvm.dbg.value(metadata i8 %13, i64 0, metadata !1106, metadata !177), !dbg !1126
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 626, i8 %13)
  %14 = sext i8 %13 to i32, !dbg !1127
  %15 = icmp eq i32 %14, 0, !dbg !1129
  br i1 %15, label %16, label %19, !dbg !1130

; <label>:16:                                     ; preds = %11
  %17 = getelementptr inbounds i8, i8* %0, i64 1, !dbg !1131
  %18 = call signext i8 @process_accel_range(i8* %17, %struct.bmi160_dev* @configStub) #5, !dbg !1132
  call void @llvm.dbg.value(metadata i8 %18, i64 0, metadata !1106, metadata !177), !dbg !1133
  br label %19, !dbg !1134

; <label>:19:                                     ; preds = %16, %11
  %20 = phi i8 [ %18, %16 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8 %20, i64 0, metadata !1106, metadata !177), !dbg !1107
  br label %21, !dbg !1135

; <label>:21:                                     ; preds = %19, %6
  %22 = phi i8 [ %20, %19 ], [ %8, %6 ]
  call void @llvm.dbg.value(metadata i8 %22, i64 0, metadata !1106, metadata !177), !dbg !1107
  br label %23, !dbg !1136

; <label>:23:                                     ; preds = %21, %2
  %24 = phi i8 [ %22, %21 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i8 %24, i64 0, metadata !1106, metadata !177), !dbg !1107
  ret i8 %24, !dbg !1137
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @process_accel_odr(i8*, %struct.bmi160_dev*) #1 !dbg !1138 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1139, metadata !177), !dbg !1140
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1141, metadata !177), !dbg !1142
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1143, metadata !177), !dbg !1144
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1145, metadata !177), !dbg !1146
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1147, metadata !177), !dbg !1148
  call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !1139, metadata !177), !dbg !1140
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %1, i64 0, metadata !1141, metadata !177), !dbg !1142
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !1149
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !1141, metadata !177), !dbg !1149
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 627, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !1143, metadata !177), !dbg !1144
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 628, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !1145, metadata !177), !dbg !1146
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 629, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !1147, metadata !177), !dbg !1148
  %3 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 4, !dbg !1150
  %4 = getelementptr inbounds %struct.bmi160_cfg, %struct.bmi160_cfg* %3, i32 0, i32 1, !dbg !1152
  %5 = load i8, i8* %4, align 1, !dbg !1152
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 630, i8 %5)
  %6 = zext i8 %5 to i32, !dbg !1153
  %7 = icmp ule i32 %6, 15, !dbg !1154
  br i1 %7, label %8, label %32, !dbg !1155

; <label>:8:                                      ; preds = %2
  %9 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 4, !dbg !1156
  %10 = getelementptr inbounds %struct.bmi160_cfg, %struct.bmi160_cfg* %9, i32 0, i32 1, !dbg !1159
  %11 = load i8, i8* %10, align 1, !dbg !1159
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 631, i8 %11)
  %12 = zext i8 %11 to i32, !dbg !1160
  %13 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 5, !dbg !1161
  %14 = getelementptr inbounds %struct.bmi160_cfg, %struct.bmi160_cfg* %13, i32 0, i32 1, !dbg !1162
  %15 = load i8, i8* %14, align 1, !dbg !1162
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 632, i8 %15)
  %16 = zext i8 %15 to i32, !dbg !1163
  %17 = icmp ne i32 %12, %16, !dbg !1164
  br i1 %17, label %18, label %31, !dbg !1165

; <label>:18:                                     ; preds = %8
  %19 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 4, !dbg !1166
  %20 = getelementptr inbounds %struct.bmi160_cfg, %struct.bmi160_cfg* %19, i32 0, i32 1, !dbg !1168
  %21 = load i8, i8* %20, align 1, !dbg !1168
  call void @llvm.dbg.value(metadata i8 %21, i64 0, metadata !1147, metadata !177), !dbg !1169
  %22 = load i8, i8* %0, align 1, !dbg !1170
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 634, i8 %22)
  %23 = zext i8 %22 to i32, !dbg !1170
  %24 = and i32 %23, -16, !dbg !1171
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 633, i32 %24)
  %25 = trunc i32 %24 to i8, !dbg !1170
  call void @llvm.dbg.value(metadata i8 %25, i64 0, metadata !1145, metadata !177), !dbg !1172
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 636, i8 %25)
  %26 = zext i8 %25 to i32, !dbg !1173
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 637, i8 %21)
  %27 = zext i8 %21 to i32, !dbg !1174
  %28 = and i32 %27, 15, !dbg !1175
  %29 = or i32 %26, %28, !dbg !1176
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 635, i32 %29)
  %30 = trunc i32 %29 to i8, !dbg !1173
  store i8 %30, i8* %0, align 1, !dbg !1177
  br label %31, !dbg !1178

; <label>:31:                                     ; preds = %18, %8
  br label %33, !dbg !1179

; <label>:32:                                     ; preds = %2
  call void @qpr.arithmetic.overflow.ssub.i32(i32 639, i32 0, i32 4)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 638, i32 -4)
  call void @llvm.dbg.value(metadata i8 -4, i64 0, metadata !1143, metadata !177), !dbg !1180
  br label %33

; <label>:33:                                     ; preds = %32, %31
  %34 = phi i8 [ 0, %31 ], [ -4, %32 ]
  call void @llvm.dbg.value(metadata i8 %34, i64 0, metadata !1143, metadata !177), !dbg !1144
  ret i8 %34, !dbg !1182
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @process_accel_bw(i8*, %struct.bmi160_dev*) #1 !dbg !1183 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1184, metadata !177), !dbg !1185
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1186, metadata !177), !dbg !1187
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1188, metadata !177), !dbg !1189
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1190, metadata !177), !dbg !1191
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1192, metadata !177), !dbg !1193
  call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !1184, metadata !177), !dbg !1185
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %1, i64 0, metadata !1186, metadata !177), !dbg !1187
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !1194
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !1186, metadata !177), !dbg !1194
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 640, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !1188, metadata !177), !dbg !1189
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 641, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !1190, metadata !177), !dbg !1191
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 642, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !1192, metadata !177), !dbg !1193
  %3 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 4, !dbg !1195
  %4 = getelementptr inbounds %struct.bmi160_cfg, %struct.bmi160_cfg* %3, i32 0, i32 3, !dbg !1197
  %5 = load i8, i8* %4, align 1, !dbg !1197
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 643, i8 %5)
  %6 = zext i8 %5 to i32, !dbg !1198
  %7 = icmp ule i32 %6, 2, !dbg !1199
  br i1 %7, label %8, label %33, !dbg !1200

; <label>:8:                                      ; preds = %2
  %9 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 4, !dbg !1201
  %10 = getelementptr inbounds %struct.bmi160_cfg, %struct.bmi160_cfg* %9, i32 0, i32 3, !dbg !1204
  %11 = load i8, i8* %10, align 1, !dbg !1204
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 644, i8 %11)
  %12 = zext i8 %11 to i32, !dbg !1205
  %13 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 5, !dbg !1206
  %14 = getelementptr inbounds %struct.bmi160_cfg, %struct.bmi160_cfg* %13, i32 0, i32 3, !dbg !1207
  %15 = load i8, i8* %14, align 1, !dbg !1207
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 645, i8 %15)
  %16 = zext i8 %15 to i32, !dbg !1208
  %17 = icmp ne i32 %12, %16, !dbg !1209
  br i1 %17, label %18, label %32, !dbg !1210

; <label>:18:                                     ; preds = %8
  %19 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 4, !dbg !1211
  %20 = getelementptr inbounds %struct.bmi160_cfg, %struct.bmi160_cfg* %19, i32 0, i32 3, !dbg !1213
  %21 = load i8, i8* %20, align 1, !dbg !1213
  call void @llvm.dbg.value(metadata i8 %21, i64 0, metadata !1192, metadata !177), !dbg !1214
  %22 = load i8, i8* %0, align 1, !dbg !1215
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 647, i8 %22)
  %23 = zext i8 %22 to i32, !dbg !1215
  %24 = and i32 %23, -113, !dbg !1216
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 646, i32 %24)
  %25 = trunc i32 %24 to i8, !dbg !1215
  call void @llvm.dbg.value(metadata i8 %25, i64 0, metadata !1190, metadata !177), !dbg !1217
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 649, i8 %25)
  %26 = zext i8 %25 to i32, !dbg !1218
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 654, i8 %21)
  %27 = zext i8 %21 to i32, !dbg !1219
  call void @qpr.shift.by.amount.i32(i32 651, i32 %27, i32 4)
  call void @qpr.shift.by.negative.i32(i32 652, i32 %27, i32 4)
  call void @qpr.shift.of.negative.i32(i32 653, i32 %27, i32 4)
  %28 = shl i32 %27, 4, !dbg !1220
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 650, i32 %28)
  %29 = and i32 %28, 15, !dbg !1221
  %30 = or i32 %26, %29, !dbg !1222
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 648, i32 %30)
  %31 = trunc i32 %30 to i8, !dbg !1218
  store i8 %31, i8* %0, align 1, !dbg !1223
  br label %32, !dbg !1224

; <label>:32:                                     ; preds = %18, %8
  br label %34, !dbg !1225

; <label>:33:                                     ; preds = %2
  call void @qpr.arithmetic.overflow.ssub.i32(i32 656, i32 0, i32 4)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 655, i32 -4)
  call void @llvm.dbg.value(metadata i8 -4, i64 0, metadata !1188, metadata !177), !dbg !1226
  br label %34

; <label>:34:                                     ; preds = %33, %32
  %35 = phi i8 [ 0, %32 ], [ -4, %33 ]
  call void @llvm.dbg.value(metadata i8 %35, i64 0, metadata !1188, metadata !177), !dbg !1189
  ret i8 %35, !dbg !1228
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @process_accel_range(i8*, %struct.bmi160_dev*) #1 !dbg !1229 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1230, metadata !177), !dbg !1231
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1232, metadata !177), !dbg !1233
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1234, metadata !177), !dbg !1235
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1236, metadata !177), !dbg !1237
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1238, metadata !177), !dbg !1239
  call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !1230, metadata !177), !dbg !1231
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %1, i64 0, metadata !1232, metadata !177), !dbg !1233
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !1240
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !1232, metadata !177), !dbg !1240
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 657, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !1234, metadata !177), !dbg !1235
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 658, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !1236, metadata !177), !dbg !1237
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 659, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !1238, metadata !177), !dbg !1239
  %3 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 4, !dbg !1241
  %4 = getelementptr inbounds %struct.bmi160_cfg, %struct.bmi160_cfg* %3, i32 0, i32 2, !dbg !1243
  %5 = load i8, i8* %4, align 2, !dbg !1243
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 660, i8 %5)
  %6 = zext i8 %5 to i32, !dbg !1244
  %7 = icmp ule i32 %6, 12, !dbg !1245
  br i1 %7, label %8, label %32, !dbg !1246

; <label>:8:                                      ; preds = %2
  %9 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 4, !dbg !1247
  %10 = getelementptr inbounds %struct.bmi160_cfg, %struct.bmi160_cfg* %9, i32 0, i32 2, !dbg !1250
  %11 = load i8, i8* %10, align 2, !dbg !1250
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 661, i8 %11)
  %12 = zext i8 %11 to i32, !dbg !1251
  %13 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 5, !dbg !1252
  %14 = getelementptr inbounds %struct.bmi160_cfg, %struct.bmi160_cfg* %13, i32 0, i32 2, !dbg !1253
  %15 = load i8, i8* %14, align 2, !dbg !1253
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 662, i8 %15)
  %16 = zext i8 %15 to i32, !dbg !1254
  %17 = icmp ne i32 %12, %16, !dbg !1255
  br i1 %17, label %18, label %31, !dbg !1256

; <label>:18:                                     ; preds = %8
  %19 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 4, !dbg !1257
  %20 = getelementptr inbounds %struct.bmi160_cfg, %struct.bmi160_cfg* %19, i32 0, i32 2, !dbg !1259
  %21 = load i8, i8* %20, align 2, !dbg !1259
  call void @llvm.dbg.value(metadata i8 %21, i64 0, metadata !1238, metadata !177), !dbg !1260
  %22 = load i8, i8* %0, align 1, !dbg !1261
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 664, i8 %22)
  %23 = zext i8 %22 to i32, !dbg !1261
  %24 = and i32 %23, -16, !dbg !1262
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 663, i32 %24)
  %25 = trunc i32 %24 to i8, !dbg !1261
  call void @llvm.dbg.value(metadata i8 %25, i64 0, metadata !1236, metadata !177), !dbg !1263
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 666, i8 %25)
  %26 = zext i8 %25 to i32, !dbg !1264
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 667, i8 %21)
  %27 = zext i8 %21 to i32, !dbg !1265
  %28 = and i32 %27, 15, !dbg !1266
  %29 = or i32 %26, %28, !dbg !1267
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 665, i32 %29)
  %30 = trunc i32 %29 to i8, !dbg !1264
  store i8 %30, i8* %0, align 1, !dbg !1268
  br label %31, !dbg !1269

; <label>:31:                                     ; preds = %18, %8
  br label %33, !dbg !1270

; <label>:32:                                     ; preds = %2
  call void @qpr.arithmetic.overflow.ssub.i32(i32 669, i32 0, i32 4)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 668, i32 -4)
  call void @llvm.dbg.value(metadata i8 -4, i64 0, metadata !1234, metadata !177), !dbg !1271
  br label %33

; <label>:33:                                     ; preds = %32, %31
  %34 = phi i8 [ 0, %31 ], [ -4, %32 ]
  call void @llvm.dbg.value(metadata i8 %34, i64 0, metadata !1234, metadata !177), !dbg !1235
  ret i8 %34, !dbg !1273
}

; Function Attrs: noinline nounwind uwtable
define signext i8 @bmi160_get_sensor_data(i8 zeroext, %struct.bmi160_sensor_data*, %struct.bmi160_sensor_data*, %struct.bmi160_dev*) #1 !dbg !1274 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1284, metadata !177), !dbg !1285
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1286, metadata !177), !dbg !1287
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1288, metadata !177), !dbg !1289
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1290, metadata !177), !dbg !1291
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1292, metadata !177), !dbg !1293
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1294, metadata !177), !dbg !1295
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1296, metadata !177), !dbg !1297
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1298, metadata !177), !dbg !1299
  call void @llvm.dbg.value(metadata i8 %0, i64 0, metadata !1284, metadata !177), !dbg !1285
  call void @llvm.dbg.value(metadata %struct.bmi160_sensor_data* %1, i64 0, metadata !1286, metadata !177), !dbg !1287
  call void @llvm.dbg.value(metadata %struct.bmi160_sensor_data* %2, i64 0, metadata !1288, metadata !177), !dbg !1289
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %3, i64 0, metadata !1290, metadata !177), !dbg !1291
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !1300
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !1290, metadata !177), !dbg !1300
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 63, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !1292, metadata !177), !dbg !1293
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 64, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !1298, metadata !177), !dbg !1299
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 66, i8 %0)
  %5 = zext i8 %0 to i32, !dbg !1301
  %6 = and i32 %5, 7, !dbg !1302
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 65, i32 %6)
  %7 = trunc i32 %6 to i8, !dbg !1301
  call void @llvm.dbg.value(metadata i8 %7, i64 0, metadata !1296, metadata !177), !dbg !1303
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 69, i8 %7)
  %8 = zext i8 %7 to i32, !dbg !1304
  %9 = and i32 %8, 4, !dbg !1305
  call void @qpr.shift.by.amount.i32(i32 68, i32 %9, i32 2)
  %10 = lshr i32 %9, 2, !dbg !1306
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 67, i32 %10)
  %11 = trunc i32 %10 to i8, !dbg !1307
  call void @llvm.dbg.value(metadata i8 %11, i64 0, metadata !1294, metadata !177), !dbg !1308
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 71, i8 %7)
  %12 = zext i8 %7 to i32, !dbg !1309
  %13 = and i32 %12, 3, !dbg !1310
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 70, i32 %13)
  %14 = trunc i32 %13 to i8, !dbg !1309
  call void @llvm.dbg.value(metadata i8 %14, i64 0, metadata !1296, metadata !177), !dbg !1311
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 72, i8 %11)
  %15 = zext i8 %11 to i32, !dbg !1312
  %16 = icmp eq i32 %15, 1, !dbg !1314
  br i1 %16, label %17, label %18, !dbg !1315

; <label>:17:                                     ; preds = %4
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 73, i32 3)
  call void @llvm.dbg.value(metadata i8 3, i64 0, metadata !1298, metadata !177), !dbg !1316
  br label %18, !dbg !1317

; <label>:18:                                     ; preds = %17, %4
  %19 = phi i8 [ 3, %17 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i8 %19, i64 0, metadata !1298, metadata !177), !dbg !1299
  %20 = icmp ne %struct.bmi160_dev* @configStub, null, !dbg !1318
  br i1 %20, label %21, label %49, !dbg !1320

; <label>:21:                                     ; preds = %18
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 74, i8 %14)
  %22 = zext i8 %14 to i32, !dbg !1321
  switch i32 %22, label %46 [
    i32 1, label %23
    i32 2, label %30
    i32 3, label %37
  ], !dbg !1323

; <label>:23:                                     ; preds = %21
  %24 = icmp eq %struct.bmi160_sensor_data* %1, null, !dbg !1324
  br i1 %24, label %25, label %26, !dbg !1327

; <label>:25:                                     ; preds = %23
  call void @qpr.arithmetic.overflow.ssub.i32(i32 76, i32 0, i32 1)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 75, i32 -1)
  call void @llvm.dbg.value(metadata i8 -1, i64 0, metadata !1292, metadata !177), !dbg !1328
  br label %28, !dbg !1329

; <label>:26:                                     ; preds = %23
  %27 = call signext i8 @get_accel_data(i8 zeroext %19, %struct.bmi160_sensor_data* %1, %struct.bmi160_dev* @configStub) #5, !dbg !1330
  call void @llvm.dbg.value(metadata i8 %27, i64 0, metadata !1292, metadata !177), !dbg !1331
  br label %28

; <label>:28:                                     ; preds = %26, %25
  %29 = phi i8 [ -1, %25 ], [ %27, %26 ]
  call void @llvm.dbg.value(metadata i8 %29, i64 0, metadata !1292, metadata !177), !dbg !1293
  br label %47, !dbg !1332

; <label>:30:                                     ; preds = %21
  %31 = icmp eq %struct.bmi160_sensor_data* %2, null, !dbg !1333
  br i1 %31, label %32, label %33, !dbg !1335

; <label>:32:                                     ; preds = %30
  call void @qpr.arithmetic.overflow.ssub.i32(i32 78, i32 0, i32 1)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 77, i32 -1)
  call void @llvm.dbg.value(metadata i8 -1, i64 0, metadata !1292, metadata !177), !dbg !1336
  br label %35, !dbg !1337

; <label>:33:                                     ; preds = %30
  %34 = call signext i8 @get_gyro_data(i8 zeroext %19, %struct.bmi160_sensor_data* %2, %struct.bmi160_dev* @configStub) #5, !dbg !1338
  call void @llvm.dbg.value(metadata i8 %34, i64 0, metadata !1292, metadata !177), !dbg !1339
  br label %35

; <label>:35:                                     ; preds = %33, %32
  %36 = phi i8 [ -1, %32 ], [ %34, %33 ]
  call void @llvm.dbg.value(metadata i8 %36, i64 0, metadata !1292, metadata !177), !dbg !1293
  br label %47, !dbg !1340

; <label>:37:                                     ; preds = %21
  %38 = icmp eq %struct.bmi160_sensor_data* %2, null, !dbg !1341
  br i1 %38, label %41, label %39, !dbg !1343

; <label>:39:                                     ; preds = %37
  %40 = icmp eq %struct.bmi160_sensor_data* %1, null, !dbg !1344
  br i1 %40, label %41, label %42, !dbg !1346

; <label>:41:                                     ; preds = %39, %37
  call void @qpr.arithmetic.overflow.ssub.i32(i32 80, i32 0, i32 1)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 79, i32 -1)
  call void @llvm.dbg.value(metadata i8 -1, i64 0, metadata !1292, metadata !177), !dbg !1348
  br label %44, !dbg !1349

; <label>:42:                                     ; preds = %39
  %43 = call signext i8 @get_accel_gyro_data(i8 zeroext %19, %struct.bmi160_sensor_data* %1, %struct.bmi160_sensor_data* %2, %struct.bmi160_dev* @configStub) #5, !dbg !1350
  call void @llvm.dbg.value(metadata i8 %43, i64 0, metadata !1292, metadata !177), !dbg !1351
  br label %44

; <label>:44:                                     ; preds = %42, %41
  %45 = phi i8 [ -1, %41 ], [ %43, %42 ]
  call void @llvm.dbg.value(metadata i8 %45, i64 0, metadata !1292, metadata !177), !dbg !1293
  br label %47, !dbg !1352

; <label>:46:                                     ; preds = %21
  call void @qpr.arithmetic.overflow.ssub.i32(i32 82, i32 0, i32 5)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 81, i32 -5)
  call void @llvm.dbg.value(metadata i8 -5, i64 0, metadata !1292, metadata !177), !dbg !1353
  br label %47, !dbg !1354

; <label>:47:                                     ; preds = %46, %44, %35, %28
  %48 = phi i8 [ -5, %46 ], [ %45, %44 ], [ %36, %35 ], [ %29, %28 ]
  call void @llvm.dbg.value(metadata i8 %48, i64 0, metadata !1292, metadata !177), !dbg !1293
  br label %50, !dbg !1355

; <label>:49:                                     ; preds = %18
  call void @qpr.arithmetic.overflow.ssub.i32(i32 84, i32 0, i32 1)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 83, i32 -1)
  call void @llvm.dbg.value(metadata i8 -1, i64 0, metadata !1292, metadata !177), !dbg !1356
  br label %50

; <label>:50:                                     ; preds = %49, %47
  %51 = phi i8 [ %48, %47 ], [ -1, %49 ]
  call void @llvm.dbg.value(metadata i8 %51, i64 0, metadata !1292, metadata !177), !dbg !1293
  ret i8 %51, !dbg !1358
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @get_accel_data(i8 zeroext, %struct.bmi160_sensor_data*, %struct.bmi160_dev*) #1 !dbg !1359 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1362, metadata !177), !dbg !1363
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1364, metadata !177), !dbg !1365
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1366, metadata !177), !dbg !1367
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1368, metadata !177), !dbg !1369
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1370, metadata !177), !dbg !1371
  %4 = alloca [9 x i8], align 1
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1372, metadata !177), !dbg !1373
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1374, metadata !177), !dbg !1375
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1376, metadata !177), !dbg !1377
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1378, metadata !177), !dbg !1379
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1380, metadata !177), !dbg !1381
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1382, metadata !177), !dbg !1383
  call void @llvm.dbg.value(metadata i8 %0, i64 0, metadata !1362, metadata !177), !dbg !1363
  call void @llvm.dbg.value(metadata %struct.bmi160_sensor_data* %1, i64 0, metadata !1364, metadata !177), !dbg !1365
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %2, i64 0, metadata !1366, metadata !177), !dbg !1367
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !1384
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !1366, metadata !177), !dbg !1384
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 798, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !1370, metadata !177), !dbg !1371
  call void @llvm.dbg.declare(metadata [9 x i8]* %4, metadata !1385, metadata !177), !dbg !1389
  %5 = bitcast [9 x i8]* %4 to i8*, !dbg !1389
  call void @llvm.memset.p0i8.i64(i8* %5, i8 0, i64 9, i32 1, i1 false), !dbg !1389
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 800, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !1372, metadata !177), !dbg !1373
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 801, i32 0)
  call void @llvm.dbg.value(metadata i16 0, i64 0, metadata !1374, metadata !177), !dbg !1375
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 802, i32 0)
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !1376, metadata !177), !dbg !1377
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 803, i32 18)
  %6 = getelementptr inbounds [9 x i8], [9 x i8]* %4, i32 0, i32 0, !dbg !1390
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 806, i8 %0)
  %7 = zext i8 %0 to i32, !dbg !1391
  call void @qpr.arithmetic.overflow.sadd.i32(i32 805, i32 6, i32 %7)
  %8 = add nsw i32 6, %7, !dbg !1392
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 804, i32 %8)
  %9 = trunc i32 %8 to i16, !dbg !1393
  %10 = call signext i8 @bmi160_get_regs(i8 zeroext 18, i8* %6, i16 zeroext %9, %struct.bmi160_dev* @configStub) #5, !dbg !1394
  call void @llvm.dbg.value(metadata i8 %10, i64 0, metadata !1368, metadata !177), !dbg !1395
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 807, i8 %10)
  %11 = sext i8 %10 to i32, !dbg !1396
  %12 = icmp eq i32 %11, 0, !dbg !1398
  br i1 %12, label %13, label %84, !dbg !1399

; <label>:13:                                     ; preds = %3
  call void @qpr.uinc.i8(i32 809, i8 0)
  %14 = add i8 0, 1, !dbg !1400
  call void @llvm.dbg.value(metadata i8 %14, i64 0, metadata !1370, metadata !177), !dbg !1400
  %15 = zext i8 0 to i64, !dbg !1402
  %16 = getelementptr inbounds [9 x i8], [9 x i8]* %4, i64 0, i64 %15, !dbg !1402
  %17 = load i8, i8* %16, align 1, !dbg !1402
  call void @qpr.arrayindex.i8.i4(i32 808, i8 0, i4 -7)
  call void @llvm.dbg.value(metadata i8 %17, i64 0, metadata !1378, metadata !177), !dbg !1403
  call void @qpr.uinc.i8(i32 811, i8 %14)
  %18 = add i8 %14, 1, !dbg !1404
  call void @llvm.dbg.value(metadata i8 %18, i64 0, metadata !1370, metadata !177), !dbg !1404
  %19 = zext i8 %14 to i64, !dbg !1405
  %20 = getelementptr inbounds [9 x i8], [9 x i8]* %4, i64 0, i64 %19, !dbg !1405
  %21 = load i8, i8* %20, align 1, !dbg !1405
  call void @qpr.arrayindex.i8.i4(i32 810, i8 %14, i4 -7)
  call void @llvm.dbg.value(metadata i8 %21, i64 0, metadata !1380, metadata !177), !dbg !1406
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 816, i8 %21)
  %22 = zext i8 %21 to i32, !dbg !1407
  call void @qpr.shift.by.amount.i32(i32 813, i32 %22, i32 8)
  call void @qpr.shift.by.negative.i32(i32 814, i32 %22, i32 8)
  call void @qpr.shift.of.negative.i32(i32 815, i32 %22, i32 8)
  %23 = shl i32 %22, 8, !dbg !1408
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 817, i8 %17)
  %24 = zext i8 %17 to i32, !dbg !1409
  %25 = or i32 %23, %24, !dbg !1410
  call void @qpr.explicit.conversion.overflow.s32.s16(i32 812, i32 %25)
  %26 = trunc i32 %25 to i16, !dbg !1411
  call void @llvm.dbg.value(metadata i16 %26, i64 0, metadata !1382, metadata !177), !dbg !1412
  %27 = getelementptr inbounds %struct.bmi160_sensor_data, %struct.bmi160_sensor_data* %1, i32 0, i32 0, !dbg !1413
  store i16 %26, i16* %27, align 4, !dbg !1414
  call void @qpr.uinc.i8(i32 819, i8 %18)
  %28 = add i8 %18, 1, !dbg !1415
  call void @llvm.dbg.value(metadata i8 %28, i64 0, metadata !1370, metadata !177), !dbg !1415
  %29 = zext i8 %18 to i64, !dbg !1416
  %30 = getelementptr inbounds [9 x i8], [9 x i8]* %4, i64 0, i64 %29, !dbg !1416
  %31 = load i8, i8* %30, align 1, !dbg !1416
  call void @qpr.arrayindex.i8.i4(i32 818, i8 %18, i4 -7)
  call void @llvm.dbg.value(metadata i8 %31, i64 0, metadata !1378, metadata !177), !dbg !1417
  call void @qpr.uinc.i8(i32 821, i8 %28)
  %32 = add i8 %28, 1, !dbg !1418
  call void @llvm.dbg.value(metadata i8 %32, i64 0, metadata !1370, metadata !177), !dbg !1418
  %33 = zext i8 %28 to i64, !dbg !1419
  %34 = getelementptr inbounds [9 x i8], [9 x i8]* %4, i64 0, i64 %33, !dbg !1419
  %35 = load i8, i8* %34, align 1, !dbg !1419
  call void @qpr.arrayindex.i8.i4(i32 820, i8 %28, i4 -7)
  call void @llvm.dbg.value(metadata i8 %35, i64 0, metadata !1380, metadata !177), !dbg !1420
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 826, i8 %35)
  %36 = zext i8 %35 to i32, !dbg !1421
  call void @qpr.shift.by.amount.i32(i32 823, i32 %36, i32 8)
  call void @qpr.shift.by.negative.i32(i32 824, i32 %36, i32 8)
  call void @qpr.shift.of.negative.i32(i32 825, i32 %36, i32 8)
  %37 = shl i32 %36, 8, !dbg !1422
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 827, i8 %31)
  %38 = zext i8 %31 to i32, !dbg !1423
  %39 = or i32 %37, %38, !dbg !1424
  call void @qpr.explicit.conversion.overflow.s32.s16(i32 822, i32 %39)
  %40 = trunc i32 %39 to i16, !dbg !1425
  call void @llvm.dbg.value(metadata i16 %40, i64 0, metadata !1382, metadata !177), !dbg !1426
  %41 = getelementptr inbounds %struct.bmi160_sensor_data, %struct.bmi160_sensor_data* %1, i32 0, i32 1, !dbg !1427
  store i16 %40, i16* %41, align 2, !dbg !1428
  call void @qpr.uinc.i8(i32 829, i8 %32)
  %42 = add i8 %32, 1, !dbg !1429
  call void @llvm.dbg.value(metadata i8 %42, i64 0, metadata !1370, metadata !177), !dbg !1429
  %43 = zext i8 %32 to i64, !dbg !1430
  %44 = getelementptr inbounds [9 x i8], [9 x i8]* %4, i64 0, i64 %43, !dbg !1430
  %45 = load i8, i8* %44, align 1, !dbg !1430
  call void @qpr.arrayindex.i8.i4(i32 828, i8 %32, i4 -7)
  call void @llvm.dbg.value(metadata i8 %45, i64 0, metadata !1378, metadata !177), !dbg !1431
  call void @qpr.uinc.i8(i32 831, i8 %42)
  %46 = add i8 %42, 1, !dbg !1432
  call void @llvm.dbg.value(metadata i8 %46, i64 0, metadata !1370, metadata !177), !dbg !1432
  %47 = zext i8 %42 to i64, !dbg !1433
  %48 = getelementptr inbounds [9 x i8], [9 x i8]* %4, i64 0, i64 %47, !dbg !1433
  %49 = load i8, i8* %48, align 1, !dbg !1433
  call void @qpr.arrayindex.i8.i4(i32 830, i8 %42, i4 -7)
  call void @llvm.dbg.value(metadata i8 %49, i64 0, metadata !1380, metadata !177), !dbg !1434
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 836, i8 %49)
  %50 = zext i8 %49 to i32, !dbg !1435
  call void @qpr.shift.by.amount.i32(i32 833, i32 %50, i32 8)
  call void @qpr.shift.by.negative.i32(i32 834, i32 %50, i32 8)
  call void @qpr.shift.of.negative.i32(i32 835, i32 %50, i32 8)
  %51 = shl i32 %50, 8, !dbg !1436
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 837, i8 %45)
  %52 = zext i8 %45 to i32, !dbg !1437
  %53 = or i32 %51, %52, !dbg !1438
  call void @qpr.explicit.conversion.overflow.s32.s16(i32 832, i32 %53)
  %54 = trunc i32 %53 to i16, !dbg !1439
  call void @llvm.dbg.value(metadata i16 %54, i64 0, metadata !1382, metadata !177), !dbg !1440
  %55 = getelementptr inbounds %struct.bmi160_sensor_data, %struct.bmi160_sensor_data* %1, i32 0, i32 2, !dbg !1441
  store i16 %54, i16* %55, align 4, !dbg !1442
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 838, i8 %0)
  %56 = zext i8 %0 to i32, !dbg !1443
  %57 = icmp eq i32 %56, 3, !dbg !1445
  br i1 %57, label %58, label %81, !dbg !1446

; <label>:58:                                     ; preds = %13
  call void @qpr.uinc.i8(i32 840, i8 %46)
  %59 = add i8 %46, 1, !dbg !1447
  call void @llvm.dbg.value(metadata i8 %59, i64 0, metadata !1370, metadata !177), !dbg !1447
  %60 = zext i8 %46 to i64, !dbg !1449
  %61 = getelementptr inbounds [9 x i8], [9 x i8]* %4, i64 0, i64 %60, !dbg !1449
  %62 = load i8, i8* %61, align 1, !dbg !1449
  call void @qpr.arrayindex.i8.i4(i32 839, i8 %46, i4 -7)
  call void @llvm.dbg.value(metadata i8 %62, i64 0, metadata !1372, metadata !177), !dbg !1450
  call void @qpr.uinc.i8(i32 847, i8 %59)
  %63 = add i8 %59, 1, !dbg !1451
  call void @llvm.dbg.value(metadata i8 %63, i64 0, metadata !1370, metadata !177), !dbg !1451
  %64 = zext i8 %59 to i64, !dbg !1452
  %65 = getelementptr inbounds [9 x i8], [9 x i8]* %4, i64 0, i64 %64, !dbg !1452
  %66 = load i8, i8* %65, align 1, !dbg !1452
  call void @qpr.arrayindex.i8.i4(i32 846, i8 %59, i4 -7)
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 845, i8 %66)
  %67 = zext i8 %66 to i32, !dbg !1452
  call void @qpr.shift.by.amount.i32(i32 842, i32 %67, i32 8)
  call void @qpr.shift.by.negative.i32(i32 843, i32 %67, i32 8)
  call void @qpr.shift.of.negative.i32(i32 844, i32 %67, i32 8)
  %68 = shl i32 %67, 8, !dbg !1453
  call void @qpr.explicit.conversion.overflow.s32.u16(i32 841, i32 %68)
  %69 = trunc i32 %68 to i16, !dbg !1454
  call void @llvm.dbg.value(metadata i16 %69, i64 0, metadata !1374, metadata !177), !dbg !1455
  call void @qpr.uinc.i8(i32 854, i8 %63)
  %70 = add i8 %63, 1, !dbg !1456
  call void @llvm.dbg.value(metadata i8 %70, i64 0, metadata !1370, metadata !177), !dbg !1456
  %71 = zext i8 %63 to i64, !dbg !1457
  %72 = getelementptr inbounds [9 x i8], [9 x i8]* %4, i64 0, i64 %71, !dbg !1457
  %73 = load i8, i8* %72, align 1, !dbg !1457
  call void @qpr.arrayindex.i8.i4(i32 853, i8 %63, i4 -7)
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 852, i8 %73)
  %74 = zext i8 %73 to i32, !dbg !1457
  call void @qpr.shift.by.amount.i32(i32 849, i32 %74, i32 16)
  call void @qpr.shift.by.negative.i32(i32 850, i32 %74, i32 16)
  call void @qpr.shift.of.negative.i32(i32 851, i32 %74, i32 16)
  %75 = shl i32 %74, 16, !dbg !1458
  call void @qpr.explicit.conversion.overflow.s32.u32(i32 848, i32 %75)
  call void @llvm.dbg.value(metadata i32 %75, i64 0, metadata !1376, metadata !177), !dbg !1459
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 855, i16 %69)
  %76 = zext i16 %69 to i32, !dbg !1460
  %77 = or i32 %75, %76, !dbg !1461
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 856, i8 %62)
  %78 = zext i8 %62 to i32, !dbg !1462
  %79 = or i32 %77, %78, !dbg !1463
  %80 = getelementptr inbounds %struct.bmi160_sensor_data, %struct.bmi160_sensor_data* %1, i32 0, i32 3, !dbg !1464
  store i32 %79, i32* %80, align 4, !dbg !1465
  br label %83, !dbg !1466

; <label>:81:                                     ; preds = %13
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 857, i32 0)
  %82 = getelementptr inbounds %struct.bmi160_sensor_data, %struct.bmi160_sensor_data* %1, i32 0, i32 3, !dbg !1467
  store i32 0, i32* %82, align 4, !dbg !1469
  br label %83

; <label>:83:                                     ; preds = %81, %58
  br label %85, !dbg !1470

; <label>:84:                                     ; preds = %3
  call void @qpr.arithmetic.overflow.ssub.i32(i32 859, i32 0, i32 2)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 858, i32 -2)
  call void @llvm.dbg.value(metadata i8 -2, i64 0, metadata !1368, metadata !177), !dbg !1471
  br label %85

; <label>:85:                                     ; preds = %84, %83
  %86 = phi i8 [ %10, %83 ], [ -2, %84 ]
  call void @llvm.dbg.value(metadata i8 %86, i64 0, metadata !1368, metadata !177), !dbg !1369
  ret i8 %86, !dbg !1473
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @get_gyro_data(i8 zeroext, %struct.bmi160_sensor_data*, %struct.bmi160_dev*) #1 !dbg !1474 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1475, metadata !177), !dbg !1476
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1477, metadata !177), !dbg !1478
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1479, metadata !177), !dbg !1480
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1481, metadata !177), !dbg !1482
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1483, metadata !177), !dbg !1484
  %4 = alloca [15 x i8], align 1
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1485, metadata !177), !dbg !1486
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1487, metadata !177), !dbg !1488
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1489, metadata !177), !dbg !1490
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1491, metadata !177), !dbg !1492
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1493, metadata !177), !dbg !1494
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1495, metadata !177), !dbg !1496
  call void @llvm.dbg.value(metadata i8 %0, i64 0, metadata !1475, metadata !177), !dbg !1476
  call void @llvm.dbg.value(metadata %struct.bmi160_sensor_data* %1, i64 0, metadata !1477, metadata !177), !dbg !1478
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %2, i64 0, metadata !1479, metadata !177), !dbg !1480
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !1497
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !1479, metadata !177), !dbg !1497
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 860, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !1483, metadata !177), !dbg !1484
  call void @llvm.dbg.declare(metadata [15 x i8]* %4, metadata !1498, metadata !177), !dbg !1502
  %5 = bitcast [15 x i8]* %4 to i8*, !dbg !1502
  call void @llvm.memset.p0i8.i64(i8* %5, i8 0, i64 15, i32 1, i1 false), !dbg !1502
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 862, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !1485, metadata !177), !dbg !1486
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 863, i32 0)
  call void @llvm.dbg.value(metadata i16 0, i64 0, metadata !1487, metadata !177), !dbg !1488
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 864, i32 0)
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !1489, metadata !177), !dbg !1490
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 865, i8 %0)
  %6 = zext i8 %0 to i32, !dbg !1503
  %7 = icmp eq i32 %6, 0, !dbg !1505
  br i1 %7, label %8, label %60, !dbg !1506

; <label>:8:                                      ; preds = %3
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 866, i32 12)
  %9 = getelementptr inbounds [15 x i8], [15 x i8]* %4, i32 0, i32 0, !dbg !1507
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 867, i32 6)
  %10 = call signext i8 @bmi160_get_regs(i8 zeroext 12, i8* %9, i16 zeroext 6, %struct.bmi160_dev* @configStub) #5, !dbg !1509
  call void @llvm.dbg.value(metadata i8 %10, i64 0, metadata !1481, metadata !177), !dbg !1510
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 868, i8 %10)
  %11 = sext i8 %10 to i32, !dbg !1511
  %12 = icmp eq i32 %11, 0, !dbg !1513
  br i1 %12, label %13, label %57, !dbg !1514

; <label>:13:                                     ; preds = %8
  call void @qpr.uinc.i8(i32 870, i8 0)
  %14 = add i8 0, 1, !dbg !1515
  call void @llvm.dbg.value(metadata i8 %14, i64 0, metadata !1483, metadata !177), !dbg !1515
  %15 = zext i8 0 to i64, !dbg !1517
  %16 = getelementptr inbounds [15 x i8], [15 x i8]* %4, i64 0, i64 %15, !dbg !1517
  %17 = load i8, i8* %16, align 1, !dbg !1517
  call void @qpr.arrayindex.i8.i4(i32 869, i8 0, i4 -1)
  call void @llvm.dbg.value(metadata i8 %17, i64 0, metadata !1491, metadata !177), !dbg !1518
  call void @qpr.uinc.i8(i32 872, i8 %14)
  %18 = add i8 %14, 1, !dbg !1519
  call void @llvm.dbg.value(metadata i8 %18, i64 0, metadata !1483, metadata !177), !dbg !1519
  %19 = zext i8 %14 to i64, !dbg !1520
  %20 = getelementptr inbounds [15 x i8], [15 x i8]* %4, i64 0, i64 %19, !dbg !1520
  %21 = load i8, i8* %20, align 1, !dbg !1520
  call void @qpr.arrayindex.i8.i4(i32 871, i8 %14, i4 -1)
  call void @llvm.dbg.value(metadata i8 %21, i64 0, metadata !1493, metadata !177), !dbg !1521
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 877, i8 %21)
  %22 = zext i8 %21 to i32, !dbg !1522
  call void @qpr.shift.by.amount.i32(i32 874, i32 %22, i32 8)
  call void @qpr.shift.by.negative.i32(i32 875, i32 %22, i32 8)
  call void @qpr.shift.of.negative.i32(i32 876, i32 %22, i32 8)
  %23 = shl i32 %22, 8, !dbg !1523
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 878, i8 %17)
  %24 = zext i8 %17 to i32, !dbg !1524
  %25 = or i32 %23, %24, !dbg !1525
  call void @qpr.explicit.conversion.overflow.s32.s16(i32 873, i32 %25)
  %26 = trunc i32 %25 to i16, !dbg !1526
  call void @llvm.dbg.value(metadata i16 %26, i64 0, metadata !1495, metadata !177), !dbg !1527
  %27 = getelementptr inbounds %struct.bmi160_sensor_data, %struct.bmi160_sensor_data* %1, i32 0, i32 0, !dbg !1528
  store i16 %26, i16* %27, align 4, !dbg !1529
  call void @qpr.uinc.i8(i32 880, i8 %18)
  %28 = add i8 %18, 1, !dbg !1530
  call void @llvm.dbg.value(metadata i8 %28, i64 0, metadata !1483, metadata !177), !dbg !1530
  %29 = zext i8 %18 to i64, !dbg !1531
  %30 = getelementptr inbounds [15 x i8], [15 x i8]* %4, i64 0, i64 %29, !dbg !1531
  %31 = load i8, i8* %30, align 1, !dbg !1531
  call void @qpr.arrayindex.i8.i4(i32 879, i8 %18, i4 -1)
  call void @llvm.dbg.value(metadata i8 %31, i64 0, metadata !1491, metadata !177), !dbg !1532
  call void @qpr.uinc.i8(i32 882, i8 %28)
  %32 = add i8 %28, 1, !dbg !1533
  call void @llvm.dbg.value(metadata i8 %32, i64 0, metadata !1483, metadata !177), !dbg !1533
  %33 = zext i8 %28 to i64, !dbg !1534
  %34 = getelementptr inbounds [15 x i8], [15 x i8]* %4, i64 0, i64 %33, !dbg !1534
  %35 = load i8, i8* %34, align 1, !dbg !1534
  call void @qpr.arrayindex.i8.i4(i32 881, i8 %28, i4 -1)
  call void @llvm.dbg.value(metadata i8 %35, i64 0, metadata !1493, metadata !177), !dbg !1535
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 887, i8 %35)
  %36 = zext i8 %35 to i32, !dbg !1536
  call void @qpr.shift.by.amount.i32(i32 884, i32 %36, i32 8)
  call void @qpr.shift.by.negative.i32(i32 885, i32 %36, i32 8)
  call void @qpr.shift.of.negative.i32(i32 886, i32 %36, i32 8)
  %37 = shl i32 %36, 8, !dbg !1537
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 888, i8 %31)
  %38 = zext i8 %31 to i32, !dbg !1538
  %39 = or i32 %37, %38, !dbg !1539
  call void @qpr.explicit.conversion.overflow.s32.s16(i32 883, i32 %39)
  %40 = trunc i32 %39 to i16, !dbg !1540
  call void @llvm.dbg.value(metadata i16 %40, i64 0, metadata !1495, metadata !177), !dbg !1541
  %41 = getelementptr inbounds %struct.bmi160_sensor_data, %struct.bmi160_sensor_data* %1, i32 0, i32 1, !dbg !1542
  store i16 %40, i16* %41, align 2, !dbg !1543
  call void @qpr.uinc.i8(i32 890, i8 %32)
  %42 = add i8 %32, 1, !dbg !1544
  call void @llvm.dbg.value(metadata i8 %42, i64 0, metadata !1483, metadata !177), !dbg !1544
  %43 = zext i8 %32 to i64, !dbg !1545
  %44 = getelementptr inbounds [15 x i8], [15 x i8]* %4, i64 0, i64 %43, !dbg !1545
  %45 = load i8, i8* %44, align 1, !dbg !1545
  call void @qpr.arrayindex.i8.i4(i32 889, i8 %32, i4 -1)
  call void @llvm.dbg.value(metadata i8 %45, i64 0, metadata !1491, metadata !177), !dbg !1546
  call void @qpr.uinc.i8(i32 892, i8 %42)
  %46 = add i8 %42, 1, !dbg !1547
  call void @llvm.dbg.value(metadata i8 %46, i64 0, metadata !1483, metadata !177), !dbg !1547
  %47 = zext i8 %42 to i64, !dbg !1548
  %48 = getelementptr inbounds [15 x i8], [15 x i8]* %4, i64 0, i64 %47, !dbg !1548
  %49 = load i8, i8* %48, align 1, !dbg !1548
  call void @qpr.arrayindex.i8.i4(i32 891, i8 %42, i4 -1)
  call void @llvm.dbg.value(metadata i8 %49, i64 0, metadata !1493, metadata !177), !dbg !1549
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 897, i8 %49)
  %50 = zext i8 %49 to i32, !dbg !1550
  call void @qpr.shift.by.amount.i32(i32 894, i32 %50, i32 8)
  call void @qpr.shift.by.negative.i32(i32 895, i32 %50, i32 8)
  call void @qpr.shift.of.negative.i32(i32 896, i32 %50, i32 8)
  %51 = shl i32 %50, 8, !dbg !1551
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 898, i8 %45)
  %52 = zext i8 %45 to i32, !dbg !1552
  %53 = or i32 %51, %52, !dbg !1553
  call void @qpr.explicit.conversion.overflow.s32.s16(i32 893, i32 %53)
  %54 = trunc i32 %53 to i16, !dbg !1554
  call void @llvm.dbg.value(metadata i16 %54, i64 0, metadata !1495, metadata !177), !dbg !1555
  %55 = getelementptr inbounds %struct.bmi160_sensor_data, %struct.bmi160_sensor_data* %1, i32 0, i32 2, !dbg !1556
  store i16 %54, i16* %55, align 4, !dbg !1557
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 899, i32 0)
  %56 = getelementptr inbounds %struct.bmi160_sensor_data, %struct.bmi160_sensor_data* %1, i32 0, i32 3, !dbg !1558
  store i32 0, i32* %56, align 4, !dbg !1559
  br label %58, !dbg !1560

; <label>:57:                                     ; preds = %8
  call void @qpr.arithmetic.overflow.ssub.i32(i32 901, i32 0, i32 2)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 900, i32 -2)
  call void @llvm.dbg.value(metadata i8 -2, i64 0, metadata !1481, metadata !177), !dbg !1561
  br label %58

; <label>:58:                                     ; preds = %57, %13
  %59 = phi i8 [ %10, %13 ], [ -2, %57 ]
  call void @llvm.dbg.value(metadata i8 %59, i64 0, metadata !1481, metadata !177), !dbg !1482
  br label %139, !dbg !1563

; <label>:60:                                     ; preds = %3
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 902, i32 12)
  %61 = getelementptr inbounds [15 x i8], [15 x i8]* %4, i32 0, i32 0, !dbg !1564
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 905, i8 %0)
  %62 = zext i8 %0 to i32, !dbg !1566
  call void @qpr.arithmetic.overflow.sadd.i32(i32 904, i32 12, i32 %62)
  %63 = add nsw i32 12, %62, !dbg !1567
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 903, i32 %63)
  %64 = trunc i32 %63 to i16, !dbg !1568
  %65 = call signext i8 @bmi160_get_regs(i8 zeroext 12, i8* %61, i16 zeroext %64, %struct.bmi160_dev* @configStub) #5, !dbg !1569
  call void @llvm.dbg.value(metadata i8 %65, i64 0, metadata !1481, metadata !177), !dbg !1570
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 906, i8 %65)
  %66 = sext i8 %65 to i32, !dbg !1571
  %67 = icmp eq i32 %66, 0, !dbg !1573
  br i1 %67, label %68, label %136, !dbg !1574

; <label>:68:                                     ; preds = %60
  call void @qpr.uinc.i8(i32 908, i8 0)
  %69 = add i8 0, 1, !dbg !1575
  call void @llvm.dbg.value(metadata i8 %69, i64 0, metadata !1483, metadata !177), !dbg !1575
  %70 = zext i8 0 to i64, !dbg !1577
  %71 = getelementptr inbounds [15 x i8], [15 x i8]* %4, i64 0, i64 %70, !dbg !1577
  %72 = load i8, i8* %71, align 1, !dbg !1577
  call void @qpr.arrayindex.i8.i4(i32 907, i8 0, i4 -1)
  call void @llvm.dbg.value(metadata i8 %72, i64 0, metadata !1491, metadata !177), !dbg !1578
  call void @qpr.uinc.i8(i32 910, i8 %69)
  %73 = add i8 %69, 1, !dbg !1579
  call void @llvm.dbg.value(metadata i8 %73, i64 0, metadata !1483, metadata !177), !dbg !1579
  %74 = zext i8 %69 to i64, !dbg !1580
  %75 = getelementptr inbounds [15 x i8], [15 x i8]* %4, i64 0, i64 %74, !dbg !1580
  %76 = load i8, i8* %75, align 1, !dbg !1580
  call void @qpr.arrayindex.i8.i4(i32 909, i8 %69, i4 -1)
  call void @llvm.dbg.value(metadata i8 %76, i64 0, metadata !1493, metadata !177), !dbg !1581
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 915, i8 %76)
  %77 = zext i8 %76 to i32, !dbg !1582
  call void @qpr.shift.by.amount.i32(i32 912, i32 %77, i32 8)
  call void @qpr.shift.by.negative.i32(i32 913, i32 %77, i32 8)
  call void @qpr.shift.of.negative.i32(i32 914, i32 %77, i32 8)
  %78 = shl i32 %77, 8, !dbg !1583
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 916, i8 %72)
  %79 = zext i8 %72 to i32, !dbg !1584
  %80 = or i32 %78, %79, !dbg !1585
  call void @qpr.explicit.conversion.overflow.s32.s16(i32 911, i32 %80)
  %81 = trunc i32 %80 to i16, !dbg !1586
  call void @llvm.dbg.value(metadata i16 %81, i64 0, metadata !1495, metadata !177), !dbg !1587
  %82 = getelementptr inbounds %struct.bmi160_sensor_data, %struct.bmi160_sensor_data* %1, i32 0, i32 0, !dbg !1588
  store i16 %81, i16* %82, align 4, !dbg !1589
  call void @qpr.uinc.i8(i32 918, i8 %73)
  %83 = add i8 %73, 1, !dbg !1590
  call void @llvm.dbg.value(metadata i8 %83, i64 0, metadata !1483, metadata !177), !dbg !1590
  %84 = zext i8 %73 to i64, !dbg !1591
  %85 = getelementptr inbounds [15 x i8], [15 x i8]* %4, i64 0, i64 %84, !dbg !1591
  %86 = load i8, i8* %85, align 1, !dbg !1591
  call void @qpr.arrayindex.i8.i4(i32 917, i8 %73, i4 -1)
  call void @llvm.dbg.value(metadata i8 %86, i64 0, metadata !1491, metadata !177), !dbg !1592
  call void @qpr.uinc.i8(i32 920, i8 %83)
  %87 = add i8 %83, 1, !dbg !1593
  call void @llvm.dbg.value(metadata i8 %87, i64 0, metadata !1483, metadata !177), !dbg !1593
  %88 = zext i8 %83 to i64, !dbg !1594
  %89 = getelementptr inbounds [15 x i8], [15 x i8]* %4, i64 0, i64 %88, !dbg !1594
  %90 = load i8, i8* %89, align 1, !dbg !1594
  call void @qpr.arrayindex.i8.i4(i32 919, i8 %83, i4 -1)
  call void @llvm.dbg.value(metadata i8 %90, i64 0, metadata !1493, metadata !177), !dbg !1595
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 925, i8 %90)
  %91 = zext i8 %90 to i32, !dbg !1596
  call void @qpr.shift.by.amount.i32(i32 922, i32 %91, i32 8)
  call void @qpr.shift.by.negative.i32(i32 923, i32 %91, i32 8)
  call void @qpr.shift.of.negative.i32(i32 924, i32 %91, i32 8)
  %92 = shl i32 %91, 8, !dbg !1597
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 926, i8 %86)
  %93 = zext i8 %86 to i32, !dbg !1598
  %94 = or i32 %92, %93, !dbg !1599
  call void @qpr.explicit.conversion.overflow.s32.s16(i32 921, i32 %94)
  %95 = trunc i32 %94 to i16, !dbg !1600
  call void @llvm.dbg.value(metadata i16 %95, i64 0, metadata !1495, metadata !177), !dbg !1601
  %96 = getelementptr inbounds %struct.bmi160_sensor_data, %struct.bmi160_sensor_data* %1, i32 0, i32 1, !dbg !1602
  store i16 %95, i16* %96, align 2, !dbg !1603
  call void @qpr.uinc.i8(i32 928, i8 %87)
  %97 = add i8 %87, 1, !dbg !1604
  call void @llvm.dbg.value(metadata i8 %97, i64 0, metadata !1483, metadata !177), !dbg !1604
  %98 = zext i8 %87 to i64, !dbg !1605
  %99 = getelementptr inbounds [15 x i8], [15 x i8]* %4, i64 0, i64 %98, !dbg !1605
  %100 = load i8, i8* %99, align 1, !dbg !1605
  call void @qpr.arrayindex.i8.i4(i32 927, i8 %87, i4 -1)
  call void @llvm.dbg.value(metadata i8 %100, i64 0, metadata !1491, metadata !177), !dbg !1606
  call void @qpr.uinc.i8(i32 930, i8 %97)
  %101 = add i8 %97, 1, !dbg !1607
  call void @llvm.dbg.value(metadata i8 %101, i64 0, metadata !1483, metadata !177), !dbg !1607
  %102 = zext i8 %97 to i64, !dbg !1608
  %103 = getelementptr inbounds [15 x i8], [15 x i8]* %4, i64 0, i64 %102, !dbg !1608
  %104 = load i8, i8* %103, align 1, !dbg !1608
  call void @qpr.arrayindex.i8.i4(i32 929, i8 %97, i4 -1)
  call void @llvm.dbg.value(metadata i8 %104, i64 0, metadata !1493, metadata !177), !dbg !1609
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 935, i8 %104)
  %105 = zext i8 %104 to i32, !dbg !1610
  call void @qpr.shift.by.amount.i32(i32 932, i32 %105, i32 8)
  call void @qpr.shift.by.negative.i32(i32 933, i32 %105, i32 8)
  call void @qpr.shift.of.negative.i32(i32 934, i32 %105, i32 8)
  %106 = shl i32 %105, 8, !dbg !1611
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 936, i8 %100)
  %107 = zext i8 %100 to i32, !dbg !1612
  %108 = or i32 %106, %107, !dbg !1613
  call void @qpr.explicit.conversion.overflow.s32.s16(i32 931, i32 %108)
  %109 = trunc i32 %108 to i16, !dbg !1614
  call void @llvm.dbg.value(metadata i16 %109, i64 0, metadata !1495, metadata !177), !dbg !1615
  %110 = getelementptr inbounds %struct.bmi160_sensor_data, %struct.bmi160_sensor_data* %1, i32 0, i32 2, !dbg !1616
  store i16 %109, i16* %110, align 4, !dbg !1617
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 939, i8 %101)
  %111 = zext i8 %101 to i32, !dbg !1618
  call void @qpr.arithmetic.overflow.sadd.i32(i32 938, i32 %111, i32 6)
  %112 = add nsw i32 %111, 6, !dbg !1619
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 937, i32 %112)
  %113 = trunc i32 %112 to i8, !dbg !1618
  call void @llvm.dbg.value(metadata i8 %113, i64 0, metadata !1483, metadata !177), !dbg !1620
  call void @qpr.uinc.i8(i32 941, i8 %113)
  %114 = add i8 %113, 1, !dbg !1621
  call void @llvm.dbg.value(metadata i8 %114, i64 0, metadata !1483, metadata !177), !dbg !1621
  %115 = zext i8 %113 to i64, !dbg !1622
  %116 = getelementptr inbounds [15 x i8], [15 x i8]* %4, i64 0, i64 %115, !dbg !1622
  %117 = load i8, i8* %116, align 1, !dbg !1622
  call void @qpr.arrayindex.i8.i4(i32 940, i8 %113, i4 -1)
  call void @llvm.dbg.value(metadata i8 %117, i64 0, metadata !1485, metadata !177), !dbg !1623
  call void @qpr.uinc.i8(i32 948, i8 %114)
  %118 = add i8 %114, 1, !dbg !1624
  call void @llvm.dbg.value(metadata i8 %118, i64 0, metadata !1483, metadata !177), !dbg !1624
  %119 = zext i8 %114 to i64, !dbg !1625
  %120 = getelementptr inbounds [15 x i8], [15 x i8]* %4, i64 0, i64 %119, !dbg !1625
  %121 = load i8, i8* %120, align 1, !dbg !1625
  call void @qpr.arrayindex.i8.i4(i32 947, i8 %114, i4 -1)
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 946, i8 %121)
  %122 = zext i8 %121 to i32, !dbg !1625
  call void @qpr.shift.by.amount.i32(i32 943, i32 %122, i32 8)
  call void @qpr.shift.by.negative.i32(i32 944, i32 %122, i32 8)
  call void @qpr.shift.of.negative.i32(i32 945, i32 %122, i32 8)
  %123 = shl i32 %122, 8, !dbg !1626
  call void @qpr.explicit.conversion.overflow.s32.u16(i32 942, i32 %123)
  %124 = trunc i32 %123 to i16, !dbg !1627
  call void @llvm.dbg.value(metadata i16 %124, i64 0, metadata !1487, metadata !177), !dbg !1628
  call void @qpr.uinc.i8(i32 955, i8 %118)
  %125 = add i8 %118, 1, !dbg !1629
  call void @llvm.dbg.value(metadata i8 %125, i64 0, metadata !1483, metadata !177), !dbg !1629
  %126 = zext i8 %118 to i64, !dbg !1630
  %127 = getelementptr inbounds [15 x i8], [15 x i8]* %4, i64 0, i64 %126, !dbg !1630
  %128 = load i8, i8* %127, align 1, !dbg !1630
  call void @qpr.arrayindex.i8.i4(i32 954, i8 %118, i4 -1)
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 953, i8 %128)
  %129 = zext i8 %128 to i32, !dbg !1630
  call void @qpr.shift.by.amount.i32(i32 950, i32 %129, i32 16)
  call void @qpr.shift.by.negative.i32(i32 951, i32 %129, i32 16)
  call void @qpr.shift.of.negative.i32(i32 952, i32 %129, i32 16)
  %130 = shl i32 %129, 16, !dbg !1631
  call void @qpr.explicit.conversion.overflow.s32.u32(i32 949, i32 %130)
  call void @llvm.dbg.value(metadata i32 %130, i64 0, metadata !1489, metadata !177), !dbg !1632
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 956, i16 %124)
  %131 = zext i16 %124 to i32, !dbg !1633
  %132 = or i32 %130, %131, !dbg !1634
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 957, i8 %117)
  %133 = zext i8 %117 to i32, !dbg !1635
  %134 = or i32 %132, %133, !dbg !1636
  %135 = getelementptr inbounds %struct.bmi160_sensor_data, %struct.bmi160_sensor_data* %1, i32 0, i32 3, !dbg !1637
  store i32 %134, i32* %135, align 4, !dbg !1638
  br label %137, !dbg !1639

; <label>:136:                                    ; preds = %60
  call void @qpr.arithmetic.overflow.ssub.i32(i32 959, i32 0, i32 2)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 958, i32 -2)
  call void @llvm.dbg.value(metadata i8 -2, i64 0, metadata !1481, metadata !177), !dbg !1640
  br label %137

; <label>:137:                                    ; preds = %136, %68
  %138 = phi i8 [ %65, %68 ], [ -2, %136 ]
  call void @llvm.dbg.value(metadata i8 %138, i64 0, metadata !1481, metadata !177), !dbg !1482
  br label %139

; <label>:139:                                    ; preds = %137, %58
  %140 = phi i8 [ %59, %58 ], [ %138, %137 ]
  call void @llvm.dbg.value(metadata i8 %140, i64 0, metadata !1481, metadata !177), !dbg !1482
  ret i8 %140, !dbg !1642
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @get_accel_gyro_data(i8 zeroext, %struct.bmi160_sensor_data*, %struct.bmi160_sensor_data*, %struct.bmi160_dev*) #1 !dbg !1643 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1644, metadata !177), !dbg !1645
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1646, metadata !177), !dbg !1647
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1648, metadata !177), !dbg !1649
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1650, metadata !177), !dbg !1651
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1652, metadata !177), !dbg !1653
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1654, metadata !177), !dbg !1655
  %5 = alloca [15 x i8], align 1
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1656, metadata !177), !dbg !1657
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1658, metadata !177), !dbg !1659
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1660, metadata !177), !dbg !1661
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1662, metadata !177), !dbg !1663
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1664, metadata !177), !dbg !1665
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1666, metadata !177), !dbg !1667
  call void @llvm.dbg.value(metadata i8 %0, i64 0, metadata !1644, metadata !177), !dbg !1645
  call void @llvm.dbg.value(metadata %struct.bmi160_sensor_data* %1, i64 0, metadata !1646, metadata !177), !dbg !1647
  call void @llvm.dbg.value(metadata %struct.bmi160_sensor_data* %2, i64 0, metadata !1648, metadata !177), !dbg !1649
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %3, i64 0, metadata !1650, metadata !177), !dbg !1651
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !1668
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !1650, metadata !177), !dbg !1668
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 960, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !1654, metadata !177), !dbg !1655
  call void @llvm.dbg.declare(metadata [15 x i8]* %5, metadata !1669, metadata !177), !dbg !1670
  %6 = bitcast [15 x i8]* %5 to i8*, !dbg !1670
  call void @llvm.memset.p0i8.i64(i8* %6, i8 0, i64 15, i32 1, i1 false), !dbg !1670
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 962, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !1656, metadata !177), !dbg !1657
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 963, i32 0)
  call void @llvm.dbg.value(metadata i16 0, i64 0, metadata !1658, metadata !177), !dbg !1659
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 964, i32 0)
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !1660, metadata !177), !dbg !1661
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 965, i32 12)
  %7 = getelementptr inbounds [15 x i8], [15 x i8]* %5, i32 0, i32 0, !dbg !1671
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 968, i8 %0)
  %8 = zext i8 %0 to i32, !dbg !1672
  call void @qpr.arithmetic.overflow.sadd.i32(i32 967, i32 12, i32 %8)
  %9 = add nsw i32 12, %8, !dbg !1673
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 966, i32 %9)
  %10 = trunc i32 %9 to i16, !dbg !1674
  %11 = call signext i8 @bmi160_get_regs(i8 zeroext 12, i8* %7, i16 zeroext %10, %struct.bmi160_dev* @configStub) #5, !dbg !1675
  call void @llvm.dbg.value(metadata i8 %11, i64 0, metadata !1652, metadata !177), !dbg !1676
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 969, i8 %11)
  %12 = sext i8 %11 to i32, !dbg !1677
  %13 = icmp eq i32 %12, 0, !dbg !1679
  br i1 %13, label %14, label %133, !dbg !1680

; <label>:14:                                     ; preds = %4
  call void @qpr.uinc.i8(i32 971, i8 0)
  %15 = add i8 0, 1, !dbg !1681
  call void @llvm.dbg.value(metadata i8 %15, i64 0, metadata !1654, metadata !177), !dbg !1681
  %16 = zext i8 0 to i64, !dbg !1683
  %17 = getelementptr inbounds [15 x i8], [15 x i8]* %5, i64 0, i64 %16, !dbg !1683
  %18 = load i8, i8* %17, align 1, !dbg !1683
  call void @qpr.arrayindex.i8.i4(i32 970, i8 0, i4 -1)
  call void @llvm.dbg.value(metadata i8 %18, i64 0, metadata !1662, metadata !177), !dbg !1684
  call void @qpr.uinc.i8(i32 973, i8 %15)
  %19 = add i8 %15, 1, !dbg !1685
  call void @llvm.dbg.value(metadata i8 %19, i64 0, metadata !1654, metadata !177), !dbg !1685
  %20 = zext i8 %15 to i64, !dbg !1686
  %21 = getelementptr inbounds [15 x i8], [15 x i8]* %5, i64 0, i64 %20, !dbg !1686
  %22 = load i8, i8* %21, align 1, !dbg !1686
  call void @qpr.arrayindex.i8.i4(i32 972, i8 %15, i4 -1)
  call void @llvm.dbg.value(metadata i8 %22, i64 0, metadata !1664, metadata !177), !dbg !1687
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 978, i8 %22)
  %23 = zext i8 %22 to i32, !dbg !1688
  call void @qpr.shift.by.amount.i32(i32 975, i32 %23, i32 8)
  call void @qpr.shift.by.negative.i32(i32 976, i32 %23, i32 8)
  call void @qpr.shift.of.negative.i32(i32 977, i32 %23, i32 8)
  %24 = shl i32 %23, 8, !dbg !1689
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 979, i8 %18)
  %25 = zext i8 %18 to i32, !dbg !1690
  %26 = or i32 %24, %25, !dbg !1691
  call void @qpr.explicit.conversion.overflow.s32.s16(i32 974, i32 %26)
  %27 = trunc i32 %26 to i16, !dbg !1692
  call void @llvm.dbg.value(metadata i16 %27, i64 0, metadata !1666, metadata !177), !dbg !1693
  %28 = getelementptr inbounds %struct.bmi160_sensor_data, %struct.bmi160_sensor_data* %2, i32 0, i32 0, !dbg !1694
  store i16 %27, i16* %28, align 4, !dbg !1695
  call void @qpr.uinc.i8(i32 981, i8 %19)
  %29 = add i8 %19, 1, !dbg !1696
  call void @llvm.dbg.value(metadata i8 %29, i64 0, metadata !1654, metadata !177), !dbg !1696
  %30 = zext i8 %19 to i64, !dbg !1697
  %31 = getelementptr inbounds [15 x i8], [15 x i8]* %5, i64 0, i64 %30, !dbg !1697
  %32 = load i8, i8* %31, align 1, !dbg !1697
  call void @qpr.arrayindex.i8.i4(i32 980, i8 %19, i4 -1)
  call void @llvm.dbg.value(metadata i8 %32, i64 0, metadata !1662, metadata !177), !dbg !1698
  call void @qpr.uinc.i8(i32 983, i8 %29)
  %33 = add i8 %29, 1, !dbg !1699
  call void @llvm.dbg.value(metadata i8 %33, i64 0, metadata !1654, metadata !177), !dbg !1699
  %34 = zext i8 %29 to i64, !dbg !1700
  %35 = getelementptr inbounds [15 x i8], [15 x i8]* %5, i64 0, i64 %34, !dbg !1700
  %36 = load i8, i8* %35, align 1, !dbg !1700
  call void @qpr.arrayindex.i8.i4(i32 982, i8 %29, i4 -1)
  call void @llvm.dbg.value(metadata i8 %36, i64 0, metadata !1664, metadata !177), !dbg !1701
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 988, i8 %36)
  %37 = zext i8 %36 to i32, !dbg !1702
  call void @qpr.shift.by.amount.i32(i32 985, i32 %37, i32 8)
  call void @qpr.shift.by.negative.i32(i32 986, i32 %37, i32 8)
  call void @qpr.shift.of.negative.i32(i32 987, i32 %37, i32 8)
  %38 = shl i32 %37, 8, !dbg !1703
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 989, i8 %32)
  %39 = zext i8 %32 to i32, !dbg !1704
  %40 = or i32 %38, %39, !dbg !1705
  call void @qpr.explicit.conversion.overflow.s32.s16(i32 984, i32 %40)
  %41 = trunc i32 %40 to i16, !dbg !1706
  call void @llvm.dbg.value(metadata i16 %41, i64 0, metadata !1666, metadata !177), !dbg !1707
  %42 = getelementptr inbounds %struct.bmi160_sensor_data, %struct.bmi160_sensor_data* %2, i32 0, i32 1, !dbg !1708
  store i16 %41, i16* %42, align 2, !dbg !1709
  call void @qpr.uinc.i8(i32 991, i8 %33)
  %43 = add i8 %33, 1, !dbg !1710
  call void @llvm.dbg.value(metadata i8 %43, i64 0, metadata !1654, metadata !177), !dbg !1710
  %44 = zext i8 %33 to i64, !dbg !1711
  %45 = getelementptr inbounds [15 x i8], [15 x i8]* %5, i64 0, i64 %44, !dbg !1711
  %46 = load i8, i8* %45, align 1, !dbg !1711
  call void @qpr.arrayindex.i8.i4(i32 990, i8 %33, i4 -1)
  call void @llvm.dbg.value(metadata i8 %46, i64 0, metadata !1662, metadata !177), !dbg !1712
  call void @qpr.uinc.i8(i32 993, i8 %43)
  %47 = add i8 %43, 1, !dbg !1713
  call void @llvm.dbg.value(metadata i8 %47, i64 0, metadata !1654, metadata !177), !dbg !1713
  %48 = zext i8 %43 to i64, !dbg !1714
  %49 = getelementptr inbounds [15 x i8], [15 x i8]* %5, i64 0, i64 %48, !dbg !1714
  %50 = load i8, i8* %49, align 1, !dbg !1714
  call void @qpr.arrayindex.i8.i4(i32 992, i8 %43, i4 -1)
  call void @llvm.dbg.value(metadata i8 %50, i64 0, metadata !1664, metadata !177), !dbg !1715
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 998, i8 %50)
  %51 = zext i8 %50 to i32, !dbg !1716
  call void @qpr.shift.by.amount.i32(i32 995, i32 %51, i32 8)
  call void @qpr.shift.by.negative.i32(i32 996, i32 %51, i32 8)
  call void @qpr.shift.of.negative.i32(i32 997, i32 %51, i32 8)
  %52 = shl i32 %51, 8, !dbg !1717
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 999, i8 %46)
  %53 = zext i8 %46 to i32, !dbg !1718
  %54 = or i32 %52, %53, !dbg !1719
  call void @qpr.explicit.conversion.overflow.s32.s16(i32 994, i32 %54)
  %55 = trunc i32 %54 to i16, !dbg !1720
  call void @llvm.dbg.value(metadata i16 %55, i64 0, metadata !1666, metadata !177), !dbg !1721
  %56 = getelementptr inbounds %struct.bmi160_sensor_data, %struct.bmi160_sensor_data* %2, i32 0, i32 2, !dbg !1722
  store i16 %55, i16* %56, align 4, !dbg !1723
  call void @qpr.uinc.i8(i32 1001, i8 %47)
  %57 = add i8 %47, 1, !dbg !1724
  call void @llvm.dbg.value(metadata i8 %57, i64 0, metadata !1654, metadata !177), !dbg !1724
  %58 = zext i8 %47 to i64, !dbg !1725
  %59 = getelementptr inbounds [15 x i8], [15 x i8]* %5, i64 0, i64 %58, !dbg !1725
  %60 = load i8, i8* %59, align 1, !dbg !1725
  call void @qpr.arrayindex.i8.i4(i32 1000, i8 %47, i4 -1)
  call void @llvm.dbg.value(metadata i8 %60, i64 0, metadata !1662, metadata !177), !dbg !1726
  call void @qpr.uinc.i8(i32 1003, i8 %57)
  %61 = add i8 %57, 1, !dbg !1727
  call void @llvm.dbg.value(metadata i8 %61, i64 0, metadata !1654, metadata !177), !dbg !1727
  %62 = zext i8 %57 to i64, !dbg !1728
  %63 = getelementptr inbounds [15 x i8], [15 x i8]* %5, i64 0, i64 %62, !dbg !1728
  %64 = load i8, i8* %63, align 1, !dbg !1728
  call void @qpr.arrayindex.i8.i4(i32 1002, i8 %57, i4 -1)
  call void @llvm.dbg.value(metadata i8 %64, i64 0, metadata !1664, metadata !177), !dbg !1729
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 1008, i8 %64)
  %65 = zext i8 %64 to i32, !dbg !1730
  call void @qpr.shift.by.amount.i32(i32 1005, i32 %65, i32 8)
  call void @qpr.shift.by.negative.i32(i32 1006, i32 %65, i32 8)
  call void @qpr.shift.of.negative.i32(i32 1007, i32 %65, i32 8)
  %66 = shl i32 %65, 8, !dbg !1731
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 1009, i8 %60)
  %67 = zext i8 %60 to i32, !dbg !1732
  %68 = or i32 %66, %67, !dbg !1733
  call void @qpr.explicit.conversion.overflow.s32.s16(i32 1004, i32 %68)
  %69 = trunc i32 %68 to i16, !dbg !1734
  call void @llvm.dbg.value(metadata i16 %69, i64 0, metadata !1666, metadata !177), !dbg !1735
  %70 = getelementptr inbounds %struct.bmi160_sensor_data, %struct.bmi160_sensor_data* %1, i32 0, i32 0, !dbg !1736
  store i16 %69, i16* %70, align 4, !dbg !1737
  call void @qpr.uinc.i8(i32 1011, i8 %61)
  %71 = add i8 %61, 1, !dbg !1738
  call void @llvm.dbg.value(metadata i8 %71, i64 0, metadata !1654, metadata !177), !dbg !1738
  %72 = zext i8 %61 to i64, !dbg !1739
  %73 = getelementptr inbounds [15 x i8], [15 x i8]* %5, i64 0, i64 %72, !dbg !1739
  %74 = load i8, i8* %73, align 1, !dbg !1739
  call void @qpr.arrayindex.i8.i4(i32 1010, i8 %61, i4 -1)
  call void @llvm.dbg.value(metadata i8 %74, i64 0, metadata !1662, metadata !177), !dbg !1740
  call void @qpr.uinc.i8(i32 1013, i8 %71)
  %75 = add i8 %71, 1, !dbg !1741
  call void @llvm.dbg.value(metadata i8 %75, i64 0, metadata !1654, metadata !177), !dbg !1741
  %76 = zext i8 %71 to i64, !dbg !1742
  %77 = getelementptr inbounds [15 x i8], [15 x i8]* %5, i64 0, i64 %76, !dbg !1742
  %78 = load i8, i8* %77, align 1, !dbg !1742
  call void @qpr.arrayindex.i8.i4(i32 1012, i8 %71, i4 -1)
  call void @llvm.dbg.value(metadata i8 %78, i64 0, metadata !1664, metadata !177), !dbg !1743
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 1018, i8 %78)
  %79 = zext i8 %78 to i32, !dbg !1744
  call void @qpr.shift.by.amount.i32(i32 1015, i32 %79, i32 8)
  call void @qpr.shift.by.negative.i32(i32 1016, i32 %79, i32 8)
  call void @qpr.shift.of.negative.i32(i32 1017, i32 %79, i32 8)
  %80 = shl i32 %79, 8, !dbg !1745
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 1019, i8 %74)
  %81 = zext i8 %74 to i32, !dbg !1746
  %82 = or i32 %80, %81, !dbg !1747
  call void @qpr.explicit.conversion.overflow.s32.s16(i32 1014, i32 %82)
  %83 = trunc i32 %82 to i16, !dbg !1748
  call void @llvm.dbg.value(metadata i16 %83, i64 0, metadata !1666, metadata !177), !dbg !1749
  %84 = getelementptr inbounds %struct.bmi160_sensor_data, %struct.bmi160_sensor_data* %1, i32 0, i32 1, !dbg !1750
  store i16 %83, i16* %84, align 2, !dbg !1751
  call void @qpr.uinc.i8(i32 1021, i8 %75)
  %85 = add i8 %75, 1, !dbg !1752
  call void @llvm.dbg.value(metadata i8 %85, i64 0, metadata !1654, metadata !177), !dbg !1752
  %86 = zext i8 %75 to i64, !dbg !1753
  %87 = getelementptr inbounds [15 x i8], [15 x i8]* %5, i64 0, i64 %86, !dbg !1753
  %88 = load i8, i8* %87, align 1, !dbg !1753
  call void @qpr.arrayindex.i8.i4(i32 1020, i8 %75, i4 -1)
  call void @llvm.dbg.value(metadata i8 %88, i64 0, metadata !1662, metadata !177), !dbg !1754
  call void @qpr.uinc.i8(i32 1023, i8 %85)
  %89 = add i8 %85, 1, !dbg !1755
  call void @llvm.dbg.value(metadata i8 %89, i64 0, metadata !1654, metadata !177), !dbg !1755
  %90 = zext i8 %85 to i64, !dbg !1756
  %91 = getelementptr inbounds [15 x i8], [15 x i8]* %5, i64 0, i64 %90, !dbg !1756
  %92 = load i8, i8* %91, align 1, !dbg !1756
  call void @qpr.arrayindex.i8.i4(i32 1022, i8 %85, i4 -1)
  call void @llvm.dbg.value(metadata i8 %92, i64 0, metadata !1664, metadata !177), !dbg !1757
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 1028, i8 %92)
  %93 = zext i8 %92 to i32, !dbg !1758
  call void @qpr.shift.by.amount.i32(i32 1025, i32 %93, i32 8)
  call void @qpr.shift.by.negative.i32(i32 1026, i32 %93, i32 8)
  call void @qpr.shift.of.negative.i32(i32 1027, i32 %93, i32 8)
  %94 = shl i32 %93, 8, !dbg !1759
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 1029, i8 %88)
  %95 = zext i8 %88 to i32, !dbg !1760
  %96 = or i32 %94, %95, !dbg !1761
  call void @qpr.explicit.conversion.overflow.s32.s16(i32 1024, i32 %96)
  %97 = trunc i32 %96 to i16, !dbg !1762
  call void @llvm.dbg.value(metadata i16 %97, i64 0, metadata !1666, metadata !177), !dbg !1763
  %98 = getelementptr inbounds %struct.bmi160_sensor_data, %struct.bmi160_sensor_data* %1, i32 0, i32 2, !dbg !1764
  store i16 %97, i16* %98, align 4, !dbg !1765
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 1030, i8 %0)
  %99 = zext i8 %0 to i32, !dbg !1766
  %100 = icmp eq i32 %99, 3, !dbg !1768
  br i1 %100, label %101, label %129, !dbg !1769

; <label>:101:                                    ; preds = %14
  call void @qpr.uinc.i8(i32 1032, i8 %89)
  %102 = add i8 %89, 1, !dbg !1770
  call void @llvm.dbg.value(metadata i8 %102, i64 0, metadata !1654, metadata !177), !dbg !1770
  %103 = zext i8 %89 to i64, !dbg !1772
  %104 = getelementptr inbounds [15 x i8], [15 x i8]* %5, i64 0, i64 %103, !dbg !1772
  %105 = load i8, i8* %104, align 1, !dbg !1772
  call void @qpr.arrayindex.i8.i4(i32 1031, i8 %89, i4 -1)
  call void @llvm.dbg.value(metadata i8 %105, i64 0, metadata !1656, metadata !177), !dbg !1773
  call void @qpr.uinc.i8(i32 1039, i8 %102)
  %106 = add i8 %102, 1, !dbg !1774
  call void @llvm.dbg.value(metadata i8 %106, i64 0, metadata !1654, metadata !177), !dbg !1774
  %107 = zext i8 %102 to i64, !dbg !1775
  %108 = getelementptr inbounds [15 x i8], [15 x i8]* %5, i64 0, i64 %107, !dbg !1775
  %109 = load i8, i8* %108, align 1, !dbg !1775
  call void @qpr.arrayindex.i8.i4(i32 1038, i8 %102, i4 -1)
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 1037, i8 %109)
  %110 = zext i8 %109 to i32, !dbg !1775
  call void @qpr.shift.by.amount.i32(i32 1034, i32 %110, i32 8)
  call void @qpr.shift.by.negative.i32(i32 1035, i32 %110, i32 8)
  call void @qpr.shift.of.negative.i32(i32 1036, i32 %110, i32 8)
  %111 = shl i32 %110, 8, !dbg !1776
  call void @qpr.explicit.conversion.overflow.s32.u16(i32 1033, i32 %111)
  %112 = trunc i32 %111 to i16, !dbg !1777
  call void @llvm.dbg.value(metadata i16 %112, i64 0, metadata !1658, metadata !177), !dbg !1778
  call void @qpr.uinc.i8(i32 1046, i8 %106)
  %113 = add i8 %106, 1, !dbg !1779
  call void @llvm.dbg.value(metadata i8 %113, i64 0, metadata !1654, metadata !177), !dbg !1779
  %114 = zext i8 %106 to i64, !dbg !1780
  %115 = getelementptr inbounds [15 x i8], [15 x i8]* %5, i64 0, i64 %114, !dbg !1780
  %116 = load i8, i8* %115, align 1, !dbg !1780
  call void @qpr.arrayindex.i8.i4(i32 1045, i8 %106, i4 -1)
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 1044, i8 %116)
  %117 = zext i8 %116 to i32, !dbg !1780
  call void @qpr.shift.by.amount.i32(i32 1041, i32 %117, i32 16)
  call void @qpr.shift.by.negative.i32(i32 1042, i32 %117, i32 16)
  call void @qpr.shift.of.negative.i32(i32 1043, i32 %117, i32 16)
  %118 = shl i32 %117, 16, !dbg !1781
  call void @qpr.explicit.conversion.overflow.s32.u32(i32 1040, i32 %118)
  call void @llvm.dbg.value(metadata i32 %118, i64 0, metadata !1660, metadata !177), !dbg !1782
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 1047, i16 %112)
  %119 = zext i16 %112 to i32, !dbg !1783
  %120 = or i32 %118, %119, !dbg !1784
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1048, i8 %105)
  %121 = zext i8 %105 to i32, !dbg !1785
  %122 = or i32 %120, %121, !dbg !1786
  %123 = getelementptr inbounds %struct.bmi160_sensor_data, %struct.bmi160_sensor_data* %1, i32 0, i32 3, !dbg !1787
  store i32 %122, i32* %123, align 4, !dbg !1788
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 1049, i16 %112)
  %124 = zext i16 %112 to i32, !dbg !1789
  %125 = or i32 %118, %124, !dbg !1790
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1050, i8 %105)
  %126 = zext i8 %105 to i32, !dbg !1791
  %127 = or i32 %125, %126, !dbg !1792
  %128 = getelementptr inbounds %struct.bmi160_sensor_data, %struct.bmi160_sensor_data* %2, i32 0, i32 3, !dbg !1793
  store i32 %127, i32* %128, align 4, !dbg !1794
  br label %132, !dbg !1795

; <label>:129:                                    ; preds = %14
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 1051, i32 0)
  %130 = getelementptr inbounds %struct.bmi160_sensor_data, %struct.bmi160_sensor_data* %1, i32 0, i32 3, !dbg !1796
  store i32 0, i32* %130, align 4, !dbg !1798
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 1052, i32 0)
  %131 = getelementptr inbounds %struct.bmi160_sensor_data, %struct.bmi160_sensor_data* %2, i32 0, i32 3, !dbg !1799
  store i32 0, i32* %131, align 4, !dbg !1800
  br label %132

; <label>:132:                                    ; preds = %129, %101
  br label %134, !dbg !1801

; <label>:133:                                    ; preds = %4
  call void @qpr.arithmetic.overflow.ssub.i32(i32 1054, i32 0, i32 2)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 1053, i32 -2)
  call void @llvm.dbg.value(metadata i8 -2, i64 0, metadata !1652, metadata !177), !dbg !1802
  br label %134

; <label>:134:                                    ; preds = %133, %132
  %135 = phi i8 [ %11, %132 ], [ -2, %133 ]
  call void @llvm.dbg.value(metadata i8 %135, i64 0, metadata !1652, metadata !177), !dbg !1653
  ret i8 %135, !dbg !1804
}

; Function Attrs: inaccessiblememonly nounwind
define weak_odr void @qpr.arithmetic.overflow.sadd.i32(i32, i32, i32) #0 {
  %4 = call %0 @llvm.sadd.with.overflow.i32(i32 %1, i32 %2)
  %5 = extractvalue %0 %4, 1
  %6 = xor i1 %5, true
  call void @llbmc.assert(i1 %6, i32 %0)
  ret void
}

; Function Attrs: inaccessiblememonly nounwind
define weak_odr void @qpr.arrayindex.i8.i4(i32, i8, i4) #0 {
  %4 = zext i4 %2 to i8
  %5 = icmp ult i8 %1, %4
  call void @llbmc.assert(i1 %5, i32 %0)
  ret void
}

; Function Attrs: inaccessiblememonly nounwind
define weak_odr void @qpr.explicit.conversion.overflow.s32.s16(i32, i32) #0 {
  %3 = icmp sge i32 %1, -32768
  %4 = icmp sle i32 %1, 32767
  %5 = and i1 %3, %4
  call void @llbmc.assert(i1 %5, i32 %0)
  ret void
}

; Function Attrs: inaccessiblememonly nounwind
define weak_odr void @qpr.explicit.conversion.overflow.s32.u16(i32, i32) #0 {
  %3 = icmp sge i32 %1, 0
  %4 = icmp sle i32 %1, 65535
  %5 = and i1 %3, %4
  call void @llbmc.assert(i1 %5, i32 %0)
  ret void
}

; Function Attrs: inaccessiblememonly nounwind
define weak_odr void @qpr.explicit.conversion.overflow.s32.u32(i32, i32) #0 {
  %3 = icmp sge i32 %1, 0
  call void @llbmc.assert(i1 %3, i32 %0)
  ret void
}

; Function Attrs: nounwind readnone
declare %0 @llvm.sadd.with.overflow.i32(i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define signext i8 @bmi160_set_int_config(%struct.bmi160_int_settg*, %struct.bmi160_dev*) #1 !dbg !1805 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1908, metadata !177), !dbg !1909
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1910, metadata !177), !dbg !1911
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1912, metadata !177), !dbg !1913
  call void @llvm.dbg.value(metadata %struct.bmi160_int_settg* %0, i64 0, metadata !1908, metadata !177), !dbg !1909
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %1, i64 0, metadata !1910, metadata !177), !dbg !1911
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !1914
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !1910, metadata !177), !dbg !1914
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 85, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !1912, metadata !177), !dbg !1913
  %3 = getelementptr inbounds %struct.bmi160_int_settg, %struct.bmi160_int_settg* %0, i32 0, i32 1, !dbg !1915
  %4 = load i32, i32* %3, align 4, !dbg !1915
  call void @qpr.implicit.conversion.overflow.u32.u32(i32 86, i32 %4)
  switch i32 %4, label %31 [
    i32 0, label %5
    i32 1, label %7
    i32 9, label %9
    i32 3, label %11
    i32 4, label %11
    i32 2, label %13
    i32 5, label %15
    i32 6, label %17
    i32 8, label %19
    i32 7, label %21
    i32 10, label %23
    i32 11, label %25
    i32 12, label %27
    i32 13, label %29
  ], !dbg !1916

; <label>:5:                                      ; preds = %2
  %6 = call signext i8 @set_accel_any_motion_int(%struct.bmi160_int_settg* %0, %struct.bmi160_dev* @configStub) #5, !dbg !1917
  call void @llvm.dbg.value(metadata i8 %6, i64 0, metadata !1912, metadata !177), !dbg !1919
  br label %32, !dbg !1920

; <label>:7:                                      ; preds = %2
  %8 = call signext i8 @set_accel_sig_motion_int(%struct.bmi160_int_settg* %0, %struct.bmi160_dev* @configStub) #5, !dbg !1921
  call void @llvm.dbg.value(metadata i8 %8, i64 0, metadata !1912, metadata !177), !dbg !1922
  br label %32, !dbg !1923

; <label>:9:                                      ; preds = %2
  %10 = call signext i8 @set_accel_no_motion_int(%struct.bmi160_int_settg* %0, %struct.bmi160_dev* @configStub) #5, !dbg !1924
  call void @llvm.dbg.value(metadata i8 %10, i64 0, metadata !1912, metadata !177), !dbg !1925
  br label %32, !dbg !1926

; <label>:11:                                     ; preds = %2, %2
  %12 = call signext i8 @set_accel_tap_int(%struct.bmi160_int_settg* %0, %struct.bmi160_dev* @configStub) #5, !dbg !1927
  call void @llvm.dbg.value(metadata i8 %12, i64 0, metadata !1912, metadata !177), !dbg !1928
  br label %32, !dbg !1929

; <label>:13:                                     ; preds = %2
  %14 = call signext i8 @set_accel_step_detect_int(%struct.bmi160_int_settg* %0, %struct.bmi160_dev* @configStub) #5, !dbg !1930
  call void @llvm.dbg.value(metadata i8 %14, i64 0, metadata !1912, metadata !177), !dbg !1931
  br label %32, !dbg !1932

; <label>:15:                                     ; preds = %2
  %16 = call signext i8 @set_accel_orientation_int(%struct.bmi160_int_settg* %0, %struct.bmi160_dev* @configStub) #5, !dbg !1933
  call void @llvm.dbg.value(metadata i8 %16, i64 0, metadata !1912, metadata !177), !dbg !1934
  br label %32, !dbg !1935

; <label>:17:                                     ; preds = %2
  %18 = call signext i8 @set_accel_flat_detect_int(%struct.bmi160_int_settg* %0, %struct.bmi160_dev* @configStub) #5, !dbg !1936
  call void @llvm.dbg.value(metadata i8 %18, i64 0, metadata !1912, metadata !177), !dbg !1937
  br label %32, !dbg !1938

; <label>:19:                                     ; preds = %2
  %20 = call signext i8 @set_accel_low_g_int(%struct.bmi160_int_settg* %0, %struct.bmi160_dev* @configStub) #5, !dbg !1939
  call void @llvm.dbg.value(metadata i8 %20, i64 0, metadata !1912, metadata !177), !dbg !1940
  br label %32, !dbg !1941

; <label>:21:                                     ; preds = %2
  %22 = call signext i8 @set_accel_high_g_int(%struct.bmi160_int_settg* %0, %struct.bmi160_dev* @configStub) #5, !dbg !1942
  call void @llvm.dbg.value(metadata i8 %22, i64 0, metadata !1912, metadata !177), !dbg !1943
  br label %32, !dbg !1944

; <label>:23:                                     ; preds = %2
  %24 = call signext i8 @set_accel_gyro_data_ready_int(%struct.bmi160_int_settg* %0, %struct.bmi160_dev* @configStub) #5, !dbg !1945
  call void @llvm.dbg.value(metadata i8 %24, i64 0, metadata !1912, metadata !177), !dbg !1946
  br label %32, !dbg !1947

; <label>:25:                                     ; preds = %2
  %26 = call signext i8 @set_fifo_full_int(%struct.bmi160_int_settg* %0, %struct.bmi160_dev* @configStub) #5, !dbg !1948
  call void @llvm.dbg.value(metadata i8 %26, i64 0, metadata !1912, metadata !177), !dbg !1949
  br label %32, !dbg !1950

; <label>:27:                                     ; preds = %2
  %28 = call signext i8 @set_fifo_watermark_int(%struct.bmi160_int_settg* %0, %struct.bmi160_dev* @configStub) #5, !dbg !1951
  call void @llvm.dbg.value(metadata i8 %28, i64 0, metadata !1912, metadata !177), !dbg !1952
  br label %32, !dbg !1953

; <label>:29:                                     ; preds = %2
  %30 = call signext i8 @set_intr_pin_config(%struct.bmi160_int_settg* %0, %struct.bmi160_dev* @configStub) #5, !dbg !1954
  call void @llvm.dbg.value(metadata i8 %30, i64 0, metadata !1912, metadata !177), !dbg !1955
  br label %32, !dbg !1956

; <label>:31:                                     ; preds = %2
  br label %32, !dbg !1957

; <label>:32:                                     ; preds = %31, %29, %27, %25, %23, %21, %19, %17, %15, %13, %11, %9, %7, %5
  %33 = phi i8 [ 0, %31 ], [ %30, %29 ], [ %28, %27 ], [ %26, %25 ], [ %24, %23 ], [ %22, %21 ], [ %20, %19 ], [ %18, %17 ], [ %16, %15 ], [ %14, %13 ], [ %12, %11 ], [ %10, %9 ], [ %8, %7 ], [ %6, %5 ]
  call void @llvm.dbg.value(metadata i8 %33, i64 0, metadata !1912, metadata !177), !dbg !1913
  ret i8 %33, !dbg !1958
}

; Function Attrs: inaccessiblememonly nounwind
define weak_odr void @qpr.implicit.conversion.overflow.u32.u32(i32, i32) #0 {
  call void @llbmc.assert(i1 true, i32 %0)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @set_accel_any_motion_int(%struct.bmi160_int_settg*, %struct.bmi160_dev*) #1 !dbg !1959 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1960, metadata !177), !dbg !1961
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1962, metadata !177), !dbg !1963
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1964, metadata !177), !dbg !1965
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1966, metadata !177), !dbg !1970
  call void @llvm.dbg.value(metadata %struct.bmi160_int_settg* %0, i64 0, metadata !1960, metadata !177), !dbg !1961
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %1, i64 0, metadata !1962, metadata !177), !dbg !1963
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !1971
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !1962, metadata !177), !dbg !1971
  %3 = call signext i8 @null_ptr_check(%struct.bmi160_dev* @configStub) #5, !dbg !1972
  call void @llvm.dbg.value(metadata i8 %3, i64 0, metadata !1964, metadata !177), !dbg !1973
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 546, i8 %3)
  %4 = sext i8 %3 to i32, !dbg !1974
  %5 = icmp ne i32 %4, 0, !dbg !1975
  br i1 %5, label %8, label %6, !dbg !1976

; <label>:6:                                      ; preds = %2
  %7 = icmp eq %struct.bmi160_int_settg* %0, null, !dbg !1977
  br i1 %7, label %8, label %9, !dbg !1979

; <label>:8:                                      ; preds = %6, %2
  call void @qpr.arithmetic.overflow.ssub.i32(i32 548, i32 0, i32 1)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 547, i32 -1)
  call void @llvm.dbg.value(metadata i8 -1, i64 0, metadata !1964, metadata !177), !dbg !1981
  br label %19, !dbg !1983

; <label>:9:                                      ; preds = %6
  %10 = getelementptr inbounds %struct.bmi160_int_settg, %struct.bmi160_int_settg* %0, i32 0, i32 3, !dbg !1984
  %11 = bitcast %union.bmi160_int_type_cfg* %10 to %struct.bmi160_aux_cfg*, !dbg !1985
  call void @llvm.dbg.value(metadata %struct.bmi160_aux_cfg* %11, i64 0, metadata !1966, metadata !177), !dbg !1970
  %12 = call signext i8 @enable_accel_any_motion_int(%struct.bmi160_aux_cfg* %11, %struct.bmi160_dev* @configStub) #5, !dbg !1986
  call void @llvm.dbg.value(metadata i8 %12, i64 0, metadata !1964, metadata !177), !dbg !1987
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 549, i8 %12)
  %13 = sext i8 %12 to i32, !dbg !1988
  %14 = icmp eq i32 %13, 0, !dbg !1990
  br i1 %14, label %15, label %17, !dbg !1991

; <label>:15:                                     ; preds = %9
  %16 = call signext i8 @config_any_motion_int_settg(%struct.bmi160_int_settg* %0, %struct.bmi160_aux_cfg* %11, %struct.bmi160_dev* @configStub) #5, !dbg !1992
  call void @llvm.dbg.value(metadata i8 %16, i64 0, metadata !1964, metadata !177), !dbg !1993
  br label %17, !dbg !1994

; <label>:17:                                     ; preds = %15, %9
  %18 = phi i8 [ %16, %15 ], [ %12, %9 ]
  call void @llvm.dbg.value(metadata i8 %18, i64 0, metadata !1964, metadata !177), !dbg !1965
  br label %19

; <label>:19:                                     ; preds = %17, %8
  %20 = phi i8 [ -1, %8 ], [ %18, %17 ]
  call void @llvm.dbg.value(metadata i8 %20, i64 0, metadata !1964, metadata !177), !dbg !1965
  ret i8 %20, !dbg !1995
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @set_accel_sig_motion_int(%struct.bmi160_int_settg*, %struct.bmi160_dev*) #1 !dbg !1996 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1997, metadata !177), !dbg !1998
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !1999, metadata !177), !dbg !2000
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2001, metadata !177), !dbg !2002
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2003, metadata !177), !dbg !2007
  call void @llvm.dbg.value(metadata %struct.bmi160_int_settg* %0, i64 0, metadata !1997, metadata !177), !dbg !1998
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %1, i64 0, metadata !1999, metadata !177), !dbg !2000
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !2008
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !1999, metadata !177), !dbg !2008
  %3 = call signext i8 @null_ptr_check(%struct.bmi160_dev* @configStub) #5, !dbg !2009
  call void @llvm.dbg.value(metadata i8 %3, i64 0, metadata !2001, metadata !177), !dbg !2010
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 560, i8 %3)
  %4 = sext i8 %3 to i32, !dbg !2011
  %5 = icmp ne i32 %4, 0, !dbg !2012
  br i1 %5, label %8, label %6, !dbg !2013

; <label>:6:                                      ; preds = %2
  %7 = icmp eq %struct.bmi160_int_settg* %0, null, !dbg !2014
  br i1 %7, label %8, label %9, !dbg !2016

; <label>:8:                                      ; preds = %6, %2
  call void @qpr.arithmetic.overflow.ssub.i32(i32 562, i32 0, i32 1)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 561, i32 -1)
  call void @llvm.dbg.value(metadata i8 -1, i64 0, metadata !2001, metadata !177), !dbg !2018
  br label %19, !dbg !2020

; <label>:9:                                      ; preds = %6
  %10 = getelementptr inbounds %struct.bmi160_int_settg, %struct.bmi160_int_settg* %0, i32 0, i32 3, !dbg !2021
  %11 = bitcast %union.bmi160_int_type_cfg* %10 to %struct.bmi160_aux_cfg*, !dbg !2022
  call void @llvm.dbg.value(metadata %struct.bmi160_aux_cfg* %11, i64 0, metadata !2003, metadata !177), !dbg !2007
  %12 = call signext i8 @enable_sig_motion_int(%struct.bmi160_aux_cfg* %11, %struct.bmi160_dev* @configStub) #5, !dbg !2023
  call void @llvm.dbg.value(metadata i8 %12, i64 0, metadata !2001, metadata !177), !dbg !2024
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 563, i8 %12)
  %13 = sext i8 %12 to i32, !dbg !2025
  %14 = icmp eq i32 %13, 0, !dbg !2027
  br i1 %14, label %15, label %17, !dbg !2028

; <label>:15:                                     ; preds = %9
  %16 = call signext i8 @config_sig_motion_int_settg(%struct.bmi160_int_settg* %0, %struct.bmi160_aux_cfg* %11, %struct.bmi160_dev* @configStub) #5, !dbg !2029
  call void @llvm.dbg.value(metadata i8 %16, i64 0, metadata !2001, metadata !177), !dbg !2030
  br label %17, !dbg !2031

; <label>:17:                                     ; preds = %15, %9
  %18 = phi i8 [ %16, %15 ], [ %12, %9 ]
  call void @llvm.dbg.value(metadata i8 %18, i64 0, metadata !2001, metadata !177), !dbg !2002
  br label %19

; <label>:19:                                     ; preds = %17, %8
  %20 = phi i8 [ -1, %8 ], [ %18, %17 ]
  call void @llvm.dbg.value(metadata i8 %20, i64 0, metadata !2001, metadata !177), !dbg !2002
  ret i8 %20, !dbg !2032
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @set_accel_no_motion_int(%struct.bmi160_int_settg*, %struct.bmi160_dev*) #1 !dbg !2033 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2036, metadata !177), !dbg !2037
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2038, metadata !177), !dbg !2039
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2040, metadata !177), !dbg !2041
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2042, metadata !177), !dbg !2046
  call void @llvm.dbg.value(metadata %struct.bmi160_int_settg* %0, i64 0, metadata !2036, metadata !177), !dbg !2037
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %1, i64 0, metadata !2038, metadata !177), !dbg !2039
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !2047
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !2038, metadata !177), !dbg !2047
  %3 = call signext i8 @null_ptr_check(%struct.bmi160_dev* @configStub) #5, !dbg !2048
  call void @llvm.dbg.value(metadata i8 %3, i64 0, metadata !2040, metadata !177), !dbg !2049
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 564, i8 %3)
  %4 = sext i8 %3 to i32, !dbg !2050
  %5 = icmp ne i32 %4, 0, !dbg !2051
  br i1 %5, label %8, label %6, !dbg !2052

; <label>:6:                                      ; preds = %2
  %7 = icmp eq %struct.bmi160_int_settg* %0, null, !dbg !2053
  br i1 %7, label %8, label %9, !dbg !2055

; <label>:8:                                      ; preds = %6, %2
  call void @qpr.arithmetic.overflow.ssub.i32(i32 566, i32 0, i32 1)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 565, i32 -1)
  call void @llvm.dbg.value(metadata i8 -1, i64 0, metadata !2040, metadata !177), !dbg !2057
  br label %19, !dbg !2059

; <label>:9:                                      ; preds = %6
  %10 = getelementptr inbounds %struct.bmi160_int_settg, %struct.bmi160_int_settg* %0, i32 0, i32 3, !dbg !2060
  %11 = bitcast %union.bmi160_int_type_cfg* %10 to %struct.bmi160_acc_no_motion_int_cfg*, !dbg !2061
  call void @llvm.dbg.value(metadata %struct.bmi160_acc_no_motion_int_cfg* %11, i64 0, metadata !2042, metadata !177), !dbg !2046
  %12 = call signext i8 @enable_no_motion_int(%struct.bmi160_acc_no_motion_int_cfg* %11, %struct.bmi160_dev* @configStub) #5, !dbg !2062
  call void @llvm.dbg.value(metadata i8 %12, i64 0, metadata !2040, metadata !177), !dbg !2063
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 567, i8 %12)
  %13 = sext i8 %12 to i32, !dbg !2064
  %14 = icmp eq i32 %13, 0, !dbg !2066
  br i1 %14, label %15, label %17, !dbg !2067

; <label>:15:                                     ; preds = %9
  %16 = call signext i8 @config_no_motion_int_settg(%struct.bmi160_int_settg* %0, %struct.bmi160_acc_no_motion_int_cfg* %11, %struct.bmi160_dev* @configStub) #5, !dbg !2068
  call void @llvm.dbg.value(metadata i8 %16, i64 0, metadata !2040, metadata !177), !dbg !2069
  br label %17, !dbg !2070

; <label>:17:                                     ; preds = %15, %9
  %18 = phi i8 [ %16, %15 ], [ %12, %9 ]
  call void @llvm.dbg.value(metadata i8 %18, i64 0, metadata !2040, metadata !177), !dbg !2041
  br label %19

; <label>:19:                                     ; preds = %17, %8
  %20 = phi i8 [ -1, %8 ], [ %18, %17 ]
  call void @llvm.dbg.value(metadata i8 %20, i64 0, metadata !2040, metadata !177), !dbg !2041
  ret i8 %20, !dbg !2071
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @set_accel_tap_int(%struct.bmi160_int_settg*, %struct.bmi160_dev*) #1 !dbg !2072 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2073, metadata !177), !dbg !2074
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2075, metadata !177), !dbg !2076
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2077, metadata !177), !dbg !2078
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2079, metadata !177), !dbg !2083
  call void @llvm.dbg.value(metadata %struct.bmi160_int_settg* %0, i64 0, metadata !2073, metadata !177), !dbg !2074
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %1, i64 0, metadata !2075, metadata !177), !dbg !2076
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !2084
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !2075, metadata !177), !dbg !2084
  %3 = call signext i8 @null_ptr_check(%struct.bmi160_dev* @configStub) #5, !dbg !2085
  call void @llvm.dbg.value(metadata i8 %3, i64 0, metadata !2077, metadata !177), !dbg !2086
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 550, i8 %3)
  %4 = sext i8 %3 to i32, !dbg !2087
  %5 = icmp ne i32 %4, 0, !dbg !2088
  br i1 %5, label %8, label %6, !dbg !2089

; <label>:6:                                      ; preds = %2
  %7 = icmp eq %struct.bmi160_int_settg* %0, null, !dbg !2090
  br i1 %7, label %8, label %9, !dbg !2092

; <label>:8:                                      ; preds = %6, %2
  call void @qpr.arithmetic.overflow.ssub.i32(i32 552, i32 0, i32 1)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 551, i32 -1)
  call void @llvm.dbg.value(metadata i8 -1, i64 0, metadata !2077, metadata !177), !dbg !2094
  br label %25, !dbg !2096

; <label>:9:                                      ; preds = %6
  %10 = getelementptr inbounds %struct.bmi160_int_settg, %struct.bmi160_int_settg* %0, i32 0, i32 3, !dbg !2097
  %11 = bitcast %union.bmi160_int_type_cfg* %10 to %struct.bmi160_int_pin_settg*, !dbg !2098
  call void @llvm.dbg.value(metadata %struct.bmi160_int_pin_settg* %11, i64 0, metadata !2079, metadata !177), !dbg !2083
  %12 = call signext i8 @enable_tap_int(%struct.bmi160_int_settg* %0, %struct.bmi160_int_pin_settg* %11, %struct.bmi160_dev* @configStub) #5, !dbg !2099
  call void @llvm.dbg.value(metadata i8 %12, i64 0, metadata !2077, metadata !177), !dbg !2100
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 553, i8 %12)
  %13 = sext i8 %12 to i32, !dbg !2101
  %14 = icmp eq i32 %13, 0, !dbg !2103
  br i1 %14, label %15, label %23, !dbg !2104

; <label>:15:                                     ; preds = %9
  %16 = call signext i8 @set_intr_pin_config(%struct.bmi160_int_settg* %0, %struct.bmi160_dev* @configStub) #5, !dbg !2105
  call void @llvm.dbg.value(metadata i8 %16, i64 0, metadata !2077, metadata !177), !dbg !2107
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 554, i8 %16)
  %17 = sext i8 %16 to i32, !dbg !2108
  %18 = icmp eq i32 %17, 0, !dbg !2110
  br i1 %18, label %19, label %21, !dbg !2111

; <label>:19:                                     ; preds = %15
  %20 = call signext i8 @config_tap_int_settg(%struct.bmi160_int_settg* %0, %struct.bmi160_int_pin_settg* %11, %struct.bmi160_dev* @configStub) #5, !dbg !2112
  call void @llvm.dbg.value(metadata i8 %20, i64 0, metadata !2077, metadata !177), !dbg !2113
  br label %21, !dbg !2114

; <label>:21:                                     ; preds = %19, %15
  %22 = phi i8 [ %20, %19 ], [ %16, %15 ]
  call void @llvm.dbg.value(metadata i8 %22, i64 0, metadata !2077, metadata !177), !dbg !2078
  br label %23, !dbg !2115

; <label>:23:                                     ; preds = %21, %9
  %24 = phi i8 [ %22, %21 ], [ %12, %9 ]
  call void @llvm.dbg.value(metadata i8 %24, i64 0, metadata !2077, metadata !177), !dbg !2078
  br label %25

; <label>:25:                                     ; preds = %23, %8
  %26 = phi i8 [ -1, %8 ], [ %24, %23 ]
  call void @llvm.dbg.value(metadata i8 %26, i64 0, metadata !2077, metadata !177), !dbg !2078
  ret i8 %26, !dbg !2116
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @set_accel_step_detect_int(%struct.bmi160_int_settg*, %struct.bmi160_dev*) #1 !dbg !2117 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2118, metadata !177), !dbg !2119
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2120, metadata !177), !dbg !2121
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2122, metadata !177), !dbg !2123
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2124, metadata !177), !dbg !2128
  call void @llvm.dbg.value(metadata %struct.bmi160_int_settg* %0, i64 0, metadata !2118, metadata !177), !dbg !2119
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %1, i64 0, metadata !2120, metadata !177), !dbg !2121
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !2129
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !2120, metadata !177), !dbg !2129
  %3 = call signext i8 @null_ptr_check(%struct.bmi160_dev* @configStub) #5, !dbg !2130
  call void @llvm.dbg.value(metadata i8 %3, i64 0, metadata !2122, metadata !177), !dbg !2131
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 568, i8 %3)
  %4 = sext i8 %3 to i32, !dbg !2132
  %5 = icmp ne i32 %4, 0, !dbg !2133
  br i1 %5, label %8, label %6, !dbg !2134

; <label>:6:                                      ; preds = %2
  %7 = icmp eq %struct.bmi160_int_settg* %0, null, !dbg !2135
  br i1 %7, label %8, label %9, !dbg !2137

; <label>:8:                                      ; preds = %6, %2
  call void @qpr.arithmetic.overflow.ssub.i32(i32 570, i32 0, i32 1)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 569, i32 -1)
  call void @llvm.dbg.value(metadata i8 -1, i64 0, metadata !2122, metadata !177), !dbg !2139
  br label %31, !dbg !2141

; <label>:9:                                      ; preds = %6
  %10 = getelementptr inbounds %struct.bmi160_int_settg, %struct.bmi160_int_settg* %0, i32 0, i32 3, !dbg !2142
  %11 = bitcast %union.bmi160_int_type_cfg* %10 to %struct.bmi160_int_pin_settg*, !dbg !2143
  call void @llvm.dbg.value(metadata %struct.bmi160_int_pin_settg* %11, i64 0, metadata !2124, metadata !177), !dbg !2128
  %12 = call signext i8 @enable_step_detect_int(%struct.bmi160_int_pin_settg* %11, %struct.bmi160_dev* @configStub) #5, !dbg !2144
  call void @llvm.dbg.value(metadata i8 %12, i64 0, metadata !2122, metadata !177), !dbg !2145
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 571, i8 %12)
  %13 = sext i8 %12 to i32, !dbg !2146
  %14 = icmp eq i32 %13, 0, !dbg !2148
  br i1 %14, label %15, label %29, !dbg !2149

; <label>:15:                                     ; preds = %9
  %16 = call signext i8 @set_intr_pin_config(%struct.bmi160_int_settg* %0, %struct.bmi160_dev* @configStub) #5, !dbg !2150
  call void @llvm.dbg.value(metadata i8 %16, i64 0, metadata !2122, metadata !177), !dbg !2152
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 572, i8 %16)
  %17 = sext i8 %16 to i32, !dbg !2153
  %18 = icmp eq i32 %17, 0, !dbg !2155
  br i1 %18, label %19, label %27, !dbg !2156

; <label>:19:                                     ; preds = %15
  %20 = call signext i8 @map_feature_interrupt(%struct.bmi160_int_settg* %0, %struct.bmi160_dev* @configStub) #5, !dbg !2157
  call void @llvm.dbg.value(metadata i8 %20, i64 0, metadata !2122, metadata !177), !dbg !2159
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 573, i8 %20)
  %21 = sext i8 %20 to i32, !dbg !2160
  %22 = icmp eq i32 %21, 0, !dbg !2162
  br i1 %22, label %23, label %25, !dbg !2163

; <label>:23:                                     ; preds = %19
  %24 = call signext i8 @config_step_detect(%struct.bmi160_int_pin_settg* %11, %struct.bmi160_dev* @configStub) #5, !dbg !2164
  call void @llvm.dbg.value(metadata i8 %24, i64 0, metadata !2122, metadata !177), !dbg !2165
  br label %25, !dbg !2166

; <label>:25:                                     ; preds = %23, %19
  %26 = phi i8 [ %24, %23 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata i8 %26, i64 0, metadata !2122, metadata !177), !dbg !2123
  br label %27, !dbg !2167

; <label>:27:                                     ; preds = %25, %15
  %28 = phi i8 [ %26, %25 ], [ %16, %15 ]
  call void @llvm.dbg.value(metadata i8 %28, i64 0, metadata !2122, metadata !177), !dbg !2123
  br label %29, !dbg !2168

; <label>:29:                                     ; preds = %27, %9
  %30 = phi i8 [ %28, %27 ], [ %12, %9 ]
  call void @llvm.dbg.value(metadata i8 %30, i64 0, metadata !2122, metadata !177), !dbg !2123
  br label %31

; <label>:31:                                     ; preds = %29, %8
  %32 = phi i8 [ -1, %8 ], [ %30, %29 ]
  call void @llvm.dbg.value(metadata i8 %32, i64 0, metadata !2122, metadata !177), !dbg !2123
  ret i8 %32, !dbg !2169
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @set_accel_orientation_int(%struct.bmi160_int_settg*, %struct.bmi160_dev*) #1 !dbg !2170 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2171, metadata !177), !dbg !2172
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2173, metadata !177), !dbg !2174
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2175, metadata !177), !dbg !2176
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2177, metadata !177), !dbg !2181
  call void @llvm.dbg.value(metadata %struct.bmi160_int_settg* %0, i64 0, metadata !2171, metadata !177), !dbg !2172
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %1, i64 0, metadata !2173, metadata !177), !dbg !2174
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !2182
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !2173, metadata !177), !dbg !2182
  %3 = call signext i8 @null_ptr_check(%struct.bmi160_dev* @configStub) #5, !dbg !2183
  call void @llvm.dbg.value(metadata i8 %3, i64 0, metadata !2175, metadata !177), !dbg !2184
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 574, i8 %3)
  %4 = sext i8 %3 to i32, !dbg !2185
  %5 = icmp ne i32 %4, 0, !dbg !2186
  br i1 %5, label %8, label %6, !dbg !2187

; <label>:6:                                      ; preds = %2
  %7 = icmp eq %struct.bmi160_int_settg* %0, null, !dbg !2188
  br i1 %7, label %8, label %9, !dbg !2190

; <label>:8:                                      ; preds = %6, %2
  call void @qpr.arithmetic.overflow.ssub.i32(i32 576, i32 0, i32 1)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 575, i32 -1)
  call void @llvm.dbg.value(metadata i8 -1, i64 0, metadata !2175, metadata !177), !dbg !2192
  br label %31, !dbg !2194

; <label>:9:                                      ; preds = %6
  %10 = getelementptr inbounds %struct.bmi160_int_settg, %struct.bmi160_int_settg* %0, i32 0, i32 3, !dbg !2195
  %11 = bitcast %union.bmi160_int_type_cfg* %10 to %struct.bmi160_acc_orient_int_cfg*, !dbg !2196
  call void @llvm.dbg.value(metadata %struct.bmi160_acc_orient_int_cfg* %11, i64 0, metadata !2177, metadata !177), !dbg !2181
  %12 = call signext i8 @enable_orient_int(%struct.bmi160_acc_orient_int_cfg* %11, %struct.bmi160_dev* @configStub) #5, !dbg !2197
  call void @llvm.dbg.value(metadata i8 %12, i64 0, metadata !2175, metadata !177), !dbg !2198
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 577, i8 %12)
  %13 = sext i8 %12 to i32, !dbg !2199
  %14 = icmp eq i32 %13, 0, !dbg !2201
  br i1 %14, label %15, label %29, !dbg !2202

; <label>:15:                                     ; preds = %9
  %16 = call signext i8 @set_intr_pin_config(%struct.bmi160_int_settg* %0, %struct.bmi160_dev* @configStub) #5, !dbg !2203
  call void @llvm.dbg.value(metadata i8 %16, i64 0, metadata !2175, metadata !177), !dbg !2205
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 578, i8 %16)
  %17 = sext i8 %16 to i32, !dbg !2206
  %18 = icmp eq i32 %17, 0, !dbg !2208
  br i1 %18, label %19, label %27, !dbg !2209

; <label>:19:                                     ; preds = %15
  %20 = call signext i8 @map_feature_interrupt(%struct.bmi160_int_settg* %0, %struct.bmi160_dev* @configStub) #5, !dbg !2210
  call void @llvm.dbg.value(metadata i8 %20, i64 0, metadata !2175, metadata !177), !dbg !2212
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 579, i8 %20)
  %21 = sext i8 %20 to i32, !dbg !2213
  %22 = icmp eq i32 %21, 0, !dbg !2215
  br i1 %22, label %23, label %25, !dbg !2216

; <label>:23:                                     ; preds = %19
  %24 = call signext i8 @config_orient_int_settg(%struct.bmi160_acc_orient_int_cfg* %11, %struct.bmi160_dev* @configStub) #5, !dbg !2217
  call void @llvm.dbg.value(metadata i8 %24, i64 0, metadata !2175, metadata !177), !dbg !2218
  br label %25, !dbg !2219

; <label>:25:                                     ; preds = %23, %19
  %26 = phi i8 [ %24, %23 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata i8 %26, i64 0, metadata !2175, metadata !177), !dbg !2176
  br label %27, !dbg !2220

; <label>:27:                                     ; preds = %25, %15
  %28 = phi i8 [ %26, %25 ], [ %16, %15 ]
  call void @llvm.dbg.value(metadata i8 %28, i64 0, metadata !2175, metadata !177), !dbg !2176
  br label %29, !dbg !2221

; <label>:29:                                     ; preds = %27, %9
  %30 = phi i8 [ %28, %27 ], [ %12, %9 ]
  call void @llvm.dbg.value(metadata i8 %30, i64 0, metadata !2175, metadata !177), !dbg !2176
  br label %31

; <label>:31:                                     ; preds = %29, %8
  %32 = phi i8 [ -1, %8 ], [ %30, %29 ]
  call void @llvm.dbg.value(metadata i8 %32, i64 0, metadata !2175, metadata !177), !dbg !2176
  ret i8 %32, !dbg !2222
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @set_accel_flat_detect_int(%struct.bmi160_int_settg*, %struct.bmi160_dev*) #1 !dbg !2223 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2224, metadata !177), !dbg !2225
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2226, metadata !177), !dbg !2227
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2228, metadata !177), !dbg !2229
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2230, metadata !177), !dbg !2234
  call void @llvm.dbg.value(metadata %struct.bmi160_int_settg* %0, i64 0, metadata !2224, metadata !177), !dbg !2225
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %1, i64 0, metadata !2226, metadata !177), !dbg !2227
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !2235
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !2226, metadata !177), !dbg !2235
  %3 = call signext i8 @null_ptr_check(%struct.bmi160_dev* @configStub) #5, !dbg !2236
  call void @llvm.dbg.value(metadata i8 %3, i64 0, metadata !2228, metadata !177), !dbg !2237
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 580, i8 %3)
  %4 = sext i8 %3 to i32, !dbg !2238
  %5 = icmp ne i32 %4, 0, !dbg !2239
  br i1 %5, label %8, label %6, !dbg !2240

; <label>:6:                                      ; preds = %2
  %7 = icmp eq %struct.bmi160_int_settg* %0, null, !dbg !2241
  br i1 %7, label %8, label %9, !dbg !2243

; <label>:8:                                      ; preds = %6, %2
  call void @qpr.arithmetic.overflow.ssub.i32(i32 582, i32 0, i32 1)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 581, i32 -1)
  call void @llvm.dbg.value(metadata i8 -1, i64 0, metadata !2228, metadata !177), !dbg !2245
  br label %31, !dbg !2247

; <label>:9:                                      ; preds = %6
  %10 = getelementptr inbounds %struct.bmi160_int_settg, %struct.bmi160_int_settg* %0, i32 0, i32 3, !dbg !2248
  %11 = bitcast %union.bmi160_int_type_cfg* %10 to %struct.bmi160_int_pin_settg*, !dbg !2249
  call void @llvm.dbg.value(metadata %struct.bmi160_int_pin_settg* %11, i64 0, metadata !2230, metadata !177), !dbg !2234
  %12 = call signext i8 @enable_flat_int(%struct.bmi160_int_pin_settg* %11, %struct.bmi160_dev* @configStub) #5, !dbg !2250
  call void @llvm.dbg.value(metadata i8 %12, i64 0, metadata !2228, metadata !177), !dbg !2251
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 583, i8 %12)
  %13 = sext i8 %12 to i32, !dbg !2252
  %14 = icmp eq i32 %13, 0, !dbg !2254
  br i1 %14, label %15, label %29, !dbg !2255

; <label>:15:                                     ; preds = %9
  %16 = call signext i8 @set_intr_pin_config(%struct.bmi160_int_settg* %0, %struct.bmi160_dev* @configStub) #5, !dbg !2256
  call void @llvm.dbg.value(metadata i8 %16, i64 0, metadata !2228, metadata !177), !dbg !2258
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 584, i8 %16)
  %17 = sext i8 %16 to i32, !dbg !2259
  %18 = icmp eq i32 %17, 0, !dbg !2261
  br i1 %18, label %19, label %27, !dbg !2262

; <label>:19:                                     ; preds = %15
  %20 = call signext i8 @map_feature_interrupt(%struct.bmi160_int_settg* %0, %struct.bmi160_dev* @configStub) #5, !dbg !2263
  call void @llvm.dbg.value(metadata i8 %20, i64 0, metadata !2228, metadata !177), !dbg !2265
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 585, i8 %20)
  %21 = sext i8 %20 to i32, !dbg !2266
  %22 = icmp eq i32 %21, 0, !dbg !2268
  br i1 %22, label %23, label %25, !dbg !2269

; <label>:23:                                     ; preds = %19
  %24 = call signext i8 @config_flat_int_settg(%struct.bmi160_int_pin_settg* %11, %struct.bmi160_dev* @configStub) #5, !dbg !2270
  call void @llvm.dbg.value(metadata i8 %24, i64 0, metadata !2228, metadata !177), !dbg !2271
  br label %25, !dbg !2272

; <label>:25:                                     ; preds = %23, %19
  %26 = phi i8 [ %24, %23 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata i8 %26, i64 0, metadata !2228, metadata !177), !dbg !2229
  br label %27, !dbg !2273

; <label>:27:                                     ; preds = %25, %15
  %28 = phi i8 [ %26, %25 ], [ %16, %15 ]
  call void @llvm.dbg.value(metadata i8 %28, i64 0, metadata !2228, metadata !177), !dbg !2229
  br label %29, !dbg !2274

; <label>:29:                                     ; preds = %27, %9
  %30 = phi i8 [ %28, %27 ], [ %12, %9 ]
  call void @llvm.dbg.value(metadata i8 %30, i64 0, metadata !2228, metadata !177), !dbg !2229
  br label %31

; <label>:31:                                     ; preds = %29, %8
  %32 = phi i8 [ -1, %8 ], [ %30, %29 ]
  call void @llvm.dbg.value(metadata i8 %32, i64 0, metadata !2228, metadata !177), !dbg !2229
  ret i8 %32, !dbg !2275
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @set_accel_low_g_int(%struct.bmi160_int_settg*, %struct.bmi160_dev*) #1 !dbg !2276 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2277, metadata !177), !dbg !2278
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2279, metadata !177), !dbg !2280
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2281, metadata !177), !dbg !2282
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2283, metadata !177), !dbg !2287
  call void @llvm.dbg.value(metadata %struct.bmi160_int_settg* %0, i64 0, metadata !2277, metadata !177), !dbg !2278
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %1, i64 0, metadata !2279, metadata !177), !dbg !2280
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !2288
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !2279, metadata !177), !dbg !2288
  %3 = call signext i8 @null_ptr_check(%struct.bmi160_dev* @configStub) #5, !dbg !2289
  call void @llvm.dbg.value(metadata i8 %3, i64 0, metadata !2281, metadata !177), !dbg !2290
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 586, i8 %3)
  %4 = sext i8 %3 to i32, !dbg !2291
  %5 = icmp ne i32 %4, 0, !dbg !2292
  br i1 %5, label %8, label %6, !dbg !2293

; <label>:6:                                      ; preds = %2
  %7 = icmp eq %struct.bmi160_int_settg* %0, null, !dbg !2294
  br i1 %7, label %8, label %9, !dbg !2296

; <label>:8:                                      ; preds = %6, %2
  call void @qpr.arithmetic.overflow.ssub.i32(i32 588, i32 0, i32 1)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 587, i32 -1)
  call void @llvm.dbg.value(metadata i8 -1, i64 0, metadata !2281, metadata !177), !dbg !2298
  br label %37, !dbg !2300

; <label>:9:                                      ; preds = %6
  %10 = getelementptr inbounds %struct.bmi160_int_settg, %struct.bmi160_int_settg* %0, i32 0, i32 3, !dbg !2301
  %11 = bitcast %union.bmi160_int_type_cfg* %10 to %struct.bmi160_acc_high_g_int_cfg*, !dbg !2302
  call void @llvm.dbg.value(metadata %struct.bmi160_acc_high_g_int_cfg* %11, i64 0, metadata !2283, metadata !177), !dbg !2287
  %12 = call signext i8 @enable_low_g_int(%struct.bmi160_acc_high_g_int_cfg* %11, %struct.bmi160_dev* @configStub) #5, !dbg !2303
  call void @llvm.dbg.value(metadata i8 %12, i64 0, metadata !2281, metadata !177), !dbg !2304
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 589, i8 %12)
  %13 = sext i8 %12 to i32, !dbg !2305
  %14 = icmp eq i32 %13, 0, !dbg !2307
  br i1 %14, label %15, label %35, !dbg !2308

; <label>:15:                                     ; preds = %9
  %16 = call signext i8 @set_intr_pin_config(%struct.bmi160_int_settg* %0, %struct.bmi160_dev* @configStub) #5, !dbg !2309
  call void @llvm.dbg.value(metadata i8 %16, i64 0, metadata !2281, metadata !177), !dbg !2311
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 590, i8 %16)
  %17 = sext i8 %16 to i32, !dbg !2312
  %18 = icmp eq i32 %17, 0, !dbg !2314
  br i1 %18, label %19, label %33, !dbg !2315

; <label>:19:                                     ; preds = %15
  %20 = call signext i8 @map_feature_interrupt(%struct.bmi160_int_settg* %0, %struct.bmi160_dev* @configStub) #5, !dbg !2316
  call void @llvm.dbg.value(metadata i8 %20, i64 0, metadata !2281, metadata !177), !dbg !2318
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 591, i8 %20)
  %21 = sext i8 %20 to i32, !dbg !2319
  %22 = icmp eq i32 %21, 0, !dbg !2321
  br i1 %22, label %23, label %31, !dbg !2322

; <label>:23:                                     ; preds = %19
  %24 = call signext i8 @config_low_g_data_src(%struct.bmi160_acc_high_g_int_cfg* %11, %struct.bmi160_dev* @configStub) #5, !dbg !2323
  call void @llvm.dbg.value(metadata i8 %24, i64 0, metadata !2281, metadata !177), !dbg !2325
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 592, i8 %24)
  %25 = sext i8 %24 to i32, !dbg !2326
  %26 = icmp eq i32 %25, 0, !dbg !2328
  br i1 %26, label %27, label %29, !dbg !2329

; <label>:27:                                     ; preds = %23
  %28 = call signext i8 @config_low_g_int_settg(%struct.bmi160_acc_high_g_int_cfg* %11, %struct.bmi160_dev* @configStub) #5, !dbg !2330
  call void @llvm.dbg.value(metadata i8 %28, i64 0, metadata !2281, metadata !177), !dbg !2331
  br label %29, !dbg !2332

; <label>:29:                                     ; preds = %27, %23
  %30 = phi i8 [ %28, %27 ], [ %24, %23 ]
  call void @llvm.dbg.value(metadata i8 %30, i64 0, metadata !2281, metadata !177), !dbg !2282
  br label %31, !dbg !2333

; <label>:31:                                     ; preds = %29, %19
  %32 = phi i8 [ %30, %29 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata i8 %32, i64 0, metadata !2281, metadata !177), !dbg !2282
  br label %33, !dbg !2334

; <label>:33:                                     ; preds = %31, %15
  %34 = phi i8 [ %32, %31 ], [ %16, %15 ]
  call void @llvm.dbg.value(metadata i8 %34, i64 0, metadata !2281, metadata !177), !dbg !2282
  br label %35, !dbg !2335

; <label>:35:                                     ; preds = %33, %9
  %36 = phi i8 [ %34, %33 ], [ %12, %9 ]
  call void @llvm.dbg.value(metadata i8 %36, i64 0, metadata !2281, metadata !177), !dbg !2282
  br label %37

; <label>:37:                                     ; preds = %35, %8
  %38 = phi i8 [ -1, %8 ], [ %36, %35 ]
  call void @llvm.dbg.value(metadata i8 %38, i64 0, metadata !2281, metadata !177), !dbg !2282
  ret i8 %38, !dbg !2336
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @set_accel_high_g_int(%struct.bmi160_int_settg*, %struct.bmi160_dev*) #1 !dbg !2337 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2338, metadata !177), !dbg !2339
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2340, metadata !177), !dbg !2341
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2342, metadata !177), !dbg !2343
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2344, metadata !177), !dbg !2348
  call void @llvm.dbg.value(metadata %struct.bmi160_int_settg* %0, i64 0, metadata !2338, metadata !177), !dbg !2339
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %1, i64 0, metadata !2340, metadata !177), !dbg !2341
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !2349
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !2340, metadata !177), !dbg !2349
  %3 = call signext i8 @null_ptr_check(%struct.bmi160_dev* @configStub) #5, !dbg !2350
  call void @llvm.dbg.value(metadata i8 %3, i64 0, metadata !2342, metadata !177), !dbg !2351
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 593, i8 %3)
  %4 = sext i8 %3 to i32, !dbg !2352
  %5 = icmp ne i32 %4, 0, !dbg !2353
  br i1 %5, label %8, label %6, !dbg !2354

; <label>:6:                                      ; preds = %2
  %7 = icmp eq %struct.bmi160_int_settg* %0, null, !dbg !2355
  br i1 %7, label %8, label %9, !dbg !2357

; <label>:8:                                      ; preds = %6, %2
  call void @qpr.arithmetic.overflow.ssub.i32(i32 595, i32 0, i32 1)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 594, i32 -1)
  call void @llvm.dbg.value(metadata i8 -1, i64 0, metadata !2342, metadata !177), !dbg !2359
  br label %37, !dbg !2361

; <label>:9:                                      ; preds = %6
  %10 = getelementptr inbounds %struct.bmi160_int_settg, %struct.bmi160_int_settg* %0, i32 0, i32 3, !dbg !2362
  %11 = bitcast %union.bmi160_int_type_cfg* %10 to %struct.bmi160_acc_high_g_int_cfg*, !dbg !2363
  call void @llvm.dbg.value(metadata %struct.bmi160_acc_high_g_int_cfg* %11, i64 0, metadata !2344, metadata !177), !dbg !2348
  %12 = call signext i8 @enable_high_g_int(%struct.bmi160_acc_high_g_int_cfg* %11, %struct.bmi160_dev* @configStub) #5, !dbg !2364
  call void @llvm.dbg.value(metadata i8 %12, i64 0, metadata !2342, metadata !177), !dbg !2365
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 596, i8 %12)
  %13 = sext i8 %12 to i32, !dbg !2366
  %14 = icmp eq i32 %13, 0, !dbg !2368
  br i1 %14, label %15, label %35, !dbg !2369

; <label>:15:                                     ; preds = %9
  %16 = call signext i8 @set_intr_pin_config(%struct.bmi160_int_settg* %0, %struct.bmi160_dev* @configStub) #5, !dbg !2370
  call void @llvm.dbg.value(metadata i8 %16, i64 0, metadata !2342, metadata !177), !dbg !2372
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 597, i8 %16)
  %17 = sext i8 %16 to i32, !dbg !2373
  %18 = icmp eq i32 %17, 0, !dbg !2375
  br i1 %18, label %19, label %33, !dbg !2376

; <label>:19:                                     ; preds = %15
  %20 = call signext i8 @map_feature_interrupt(%struct.bmi160_int_settg* %0, %struct.bmi160_dev* @configStub) #5, !dbg !2377
  call void @llvm.dbg.value(metadata i8 %20, i64 0, metadata !2342, metadata !177), !dbg !2379
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 598, i8 %20)
  %21 = sext i8 %20 to i32, !dbg !2380
  %22 = icmp eq i32 %21, 0, !dbg !2382
  br i1 %22, label %23, label %31, !dbg !2383

; <label>:23:                                     ; preds = %19
  %24 = call signext i8 @config_high_g_data_src(%struct.bmi160_acc_high_g_int_cfg* %11, %struct.bmi160_dev* @configStub) #5, !dbg !2384
  call void @llvm.dbg.value(metadata i8 %24, i64 0, metadata !2342, metadata !177), !dbg !2386
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 599, i8 %24)
  %25 = sext i8 %24 to i32, !dbg !2387
  %26 = icmp eq i32 %25, 0, !dbg !2389
  br i1 %26, label %27, label %29, !dbg !2390

; <label>:27:                                     ; preds = %23
  %28 = call signext i8 @config_high_g_int_settg(%struct.bmi160_acc_high_g_int_cfg* %11, %struct.bmi160_dev* @configStub) #5, !dbg !2391
  call void @llvm.dbg.value(metadata i8 %28, i64 0, metadata !2342, metadata !177), !dbg !2392
  br label %29, !dbg !2393

; <label>:29:                                     ; preds = %27, %23
  %30 = phi i8 [ %28, %27 ], [ %24, %23 ]
  call void @llvm.dbg.value(metadata i8 %30, i64 0, metadata !2342, metadata !177), !dbg !2343
  br label %31, !dbg !2394

; <label>:31:                                     ; preds = %29, %19
  %32 = phi i8 [ %30, %29 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata i8 %32, i64 0, metadata !2342, metadata !177), !dbg !2343
  br label %33, !dbg !2395

; <label>:33:                                     ; preds = %31, %15
  %34 = phi i8 [ %32, %31 ], [ %16, %15 ]
  call void @llvm.dbg.value(metadata i8 %34, i64 0, metadata !2342, metadata !177), !dbg !2343
  br label %35, !dbg !2396

; <label>:35:                                     ; preds = %33, %9
  %36 = phi i8 [ %34, %33 ], [ %12, %9 ]
  call void @llvm.dbg.value(metadata i8 %36, i64 0, metadata !2342, metadata !177), !dbg !2343
  br label %37

; <label>:37:                                     ; preds = %35, %8
  %38 = phi i8 [ -1, %8 ], [ %36, %35 ]
  call void @llvm.dbg.value(metadata i8 %38, i64 0, metadata !2342, metadata !177), !dbg !2343
  ret i8 %38, !dbg !2397
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @set_accel_gyro_data_ready_int(%struct.bmi160_int_settg*, %struct.bmi160_dev*) #1 !dbg !2398 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2403, metadata !177), !dbg !2404
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2405, metadata !177), !dbg !2406
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2407, metadata !177), !dbg !2408
  call void @llvm.dbg.value(metadata %struct.bmi160_int_settg* %0, i64 0, metadata !2403, metadata !177), !dbg !2404
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %1, i64 0, metadata !2405, metadata !177), !dbg !2406
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !2409
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !2405, metadata !177), !dbg !2409
  %3 = call signext i8 @null_ptr_check(%struct.bmi160_dev* @configStub) #5, !dbg !2410
  call void @llvm.dbg.value(metadata i8 %3, i64 0, metadata !2407, metadata !177), !dbg !2411
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 555, i8 %3)
  %4 = sext i8 %3 to i32, !dbg !2412
  %5 = icmp ne i32 %4, 0, !dbg !2414
  br i1 %5, label %8, label %6, !dbg !2415

; <label>:6:                                      ; preds = %2
  %7 = icmp eq %struct.bmi160_int_settg* %0, null, !dbg !2416
  br i1 %7, label %8, label %9, !dbg !2418

; <label>:8:                                      ; preds = %6, %2
  call void @qpr.arithmetic.overflow.ssub.i32(i32 557, i32 0, i32 1)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 556, i32 -1)
  call void @llvm.dbg.value(metadata i8 -1, i64 0, metadata !2407, metadata !177), !dbg !2420
  br label %23, !dbg !2422

; <label>:9:                                      ; preds = %6
  %10 = call signext i8 @enable_data_ready_int(%struct.bmi160_dev* @configStub) #5, !dbg !2423
  call void @llvm.dbg.value(metadata i8 %10, i64 0, metadata !2407, metadata !177), !dbg !2425
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 558, i8 %10)
  %11 = sext i8 %10 to i32, !dbg !2426
  %12 = icmp eq i32 %11, 0, !dbg !2428
  br i1 %12, label %13, label %21, !dbg !2429

; <label>:13:                                     ; preds = %9
  %14 = call signext i8 @set_intr_pin_config(%struct.bmi160_int_settg* %0, %struct.bmi160_dev* @configStub) #5, !dbg !2430
  call void @llvm.dbg.value(metadata i8 %14, i64 0, metadata !2407, metadata !177), !dbg !2432
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 559, i8 %14)
  %15 = sext i8 %14 to i32, !dbg !2433
  %16 = icmp eq i32 %15, 0, !dbg !2435
  br i1 %16, label %17, label %19, !dbg !2436

; <label>:17:                                     ; preds = %13
  %18 = call signext i8 @map_hardware_interrupt(%struct.bmi160_int_settg* %0, %struct.bmi160_dev* @configStub) #5, !dbg !2437
  call void @llvm.dbg.value(metadata i8 %18, i64 0, metadata !2407, metadata !177), !dbg !2438
  br label %19, !dbg !2439

; <label>:19:                                     ; preds = %17, %13
  %20 = phi i8 [ %18, %17 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata i8 %20, i64 0, metadata !2407, metadata !177), !dbg !2408
  br label %21, !dbg !2440

; <label>:21:                                     ; preds = %19, %9
  %22 = phi i8 [ %20, %19 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i8 %22, i64 0, metadata !2407, metadata !177), !dbg !2408
  br label %23

; <label>:23:                                     ; preds = %21, %8
  %24 = phi i8 [ -1, %8 ], [ %22, %21 ]
  call void @llvm.dbg.value(metadata i8 %24, i64 0, metadata !2407, metadata !177), !dbg !2408
  ret i8 %24, !dbg !2441
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @set_fifo_full_int(%struct.bmi160_int_settg*, %struct.bmi160_dev*) #1 !dbg !2442 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2443, metadata !177), !dbg !2444
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2445, metadata !177), !dbg !2446
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2447, metadata !177), !dbg !2448
  call void @llvm.dbg.value(metadata %struct.bmi160_int_settg* %0, i64 0, metadata !2443, metadata !177), !dbg !2444
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %1, i64 0, metadata !2445, metadata !177), !dbg !2446
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !2449
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !2445, metadata !177), !dbg !2449
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 2068, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !2447, metadata !177), !dbg !2448
  %3 = icmp eq %struct.bmi160_dev* @configStub, null, !dbg !2450
  br i1 %3, label %8, label %4, !dbg !2452

; <label>:4:                                      ; preds = %2
  %5 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 13, !dbg !2453
  %6 = load void (i32)*, void (i32)** %5, align 8, !dbg !2453
  %7 = icmp eq void (i32)* %6, null, !dbg !2455
  br i1 %7, label %8, label %9, !dbg !2456

; <label>:8:                                      ; preds = %4, %2
  call void @qpr.arithmetic.overflow.ssub.i32(i32 2070, i32 0, i32 1)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 2069, i32 -1)
  call void @llvm.dbg.value(metadata i8 -1, i64 0, metadata !2447, metadata !177), !dbg !2458
  br label %23, !dbg !2460

; <label>:9:                                      ; preds = %4
  %10 = call signext i8 @enable_fifo_full_int(%struct.bmi160_int_settg* %0, %struct.bmi160_dev* @configStub) #5, !dbg !2461
  call void @llvm.dbg.value(metadata i8 %10, i64 0, metadata !2447, metadata !177), !dbg !2463
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 2071, i8 %10)
  %11 = sext i8 %10 to i32, !dbg !2464
  %12 = icmp eq i32 %11, 0, !dbg !2466
  br i1 %12, label %13, label %21, !dbg !2467

; <label>:13:                                     ; preds = %9
  %14 = call signext i8 @set_intr_pin_config(%struct.bmi160_int_settg* %0, %struct.bmi160_dev* @configStub) #5, !dbg !2468
  call void @llvm.dbg.value(metadata i8 %14, i64 0, metadata !2447, metadata !177), !dbg !2470
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 2072, i8 %14)
  %15 = sext i8 %14 to i32, !dbg !2471
  %16 = icmp eq i32 %15, 0, !dbg !2473
  br i1 %16, label %17, label %19, !dbg !2474

; <label>:17:                                     ; preds = %13
  %18 = call signext i8 @map_hardware_interrupt(%struct.bmi160_int_settg* %0, %struct.bmi160_dev* @configStub) #5, !dbg !2475
  call void @llvm.dbg.value(metadata i8 %18, i64 0, metadata !2447, metadata !177), !dbg !2476
  br label %19, !dbg !2477

; <label>:19:                                     ; preds = %17, %13
  %20 = phi i8 [ %18, %17 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata i8 %20, i64 0, metadata !2447, metadata !177), !dbg !2448
  br label %21, !dbg !2478

; <label>:21:                                     ; preds = %19, %9
  %22 = phi i8 [ %20, %19 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i8 %22, i64 0, metadata !2447, metadata !177), !dbg !2448
  br label %23

; <label>:23:                                     ; preds = %21, %8
  %24 = phi i8 [ -1, %8 ], [ %22, %21 ]
  call void @llvm.dbg.value(metadata i8 %24, i64 0, metadata !2447, metadata !177), !dbg !2448
  ret i8 %24, !dbg !2479
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @set_fifo_watermark_int(%struct.bmi160_int_settg*, %struct.bmi160_dev*) #1 !dbg !2480 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2481, metadata !177), !dbg !2482
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2483, metadata !177), !dbg !2484
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2485, metadata !177), !dbg !2486
  call void @llvm.dbg.value(metadata %struct.bmi160_int_settg* %0, i64 0, metadata !2481, metadata !177), !dbg !2482
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %1, i64 0, metadata !2483, metadata !177), !dbg !2484
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !2487
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !2483, metadata !177), !dbg !2487
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 2086, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !2485, metadata !177), !dbg !2486
  %3 = icmp eq %struct.bmi160_dev* @configStub, null, !dbg !2488
  br i1 %3, label %8, label %4, !dbg !2490

; <label>:4:                                      ; preds = %2
  %5 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 13, !dbg !2491
  %6 = load void (i32)*, void (i32)** %5, align 8, !dbg !2491
  %7 = icmp eq void (i32)* %6, null, !dbg !2493
  br i1 %7, label %8, label %9, !dbg !2494

; <label>:8:                                      ; preds = %4, %2
  call void @qpr.arithmetic.overflow.ssub.i32(i32 2088, i32 0, i32 1)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 2087, i32 -1)
  call void @llvm.dbg.value(metadata i8 -1, i64 0, metadata !2485, metadata !177), !dbg !2496
  br label %23, !dbg !2498

; <label>:9:                                      ; preds = %4
  %10 = call signext i8 @enable_fifo_wtm_int(%struct.bmi160_int_settg* %0, %struct.bmi160_dev* @configStub) #5, !dbg !2499
  call void @llvm.dbg.value(metadata i8 %10, i64 0, metadata !2485, metadata !177), !dbg !2501
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 2089, i8 %10)
  %11 = sext i8 %10 to i32, !dbg !2502
  %12 = icmp eq i32 %11, 0, !dbg !2504
  br i1 %12, label %13, label %21, !dbg !2505

; <label>:13:                                     ; preds = %9
  %14 = call signext i8 @set_intr_pin_config(%struct.bmi160_int_settg* %0, %struct.bmi160_dev* @configStub) #5, !dbg !2506
  call void @llvm.dbg.value(metadata i8 %14, i64 0, metadata !2485, metadata !177), !dbg !2508
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 2090, i8 %14)
  %15 = sext i8 %14 to i32, !dbg !2509
  %16 = icmp eq i32 %15, 0, !dbg !2511
  br i1 %16, label %17, label %19, !dbg !2512

; <label>:17:                                     ; preds = %13
  %18 = call signext i8 @map_hardware_interrupt(%struct.bmi160_int_settg* %0, %struct.bmi160_dev* @configStub) #5, !dbg !2513
  call void @llvm.dbg.value(metadata i8 %18, i64 0, metadata !2485, metadata !177), !dbg !2514
  br label %19, !dbg !2515

; <label>:19:                                     ; preds = %17, %13
  %20 = phi i8 [ %18, %17 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata i8 %20, i64 0, metadata !2485, metadata !177), !dbg !2486
  br label %21, !dbg !2516

; <label>:21:                                     ; preds = %19, %9
  %22 = phi i8 [ %20, %19 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i8 %22, i64 0, metadata !2485, metadata !177), !dbg !2486
  br label %23

; <label>:23:                                     ; preds = %21, %8
  %24 = phi i8 [ -1, %8 ], [ %22, %21 ]
  call void @llvm.dbg.value(metadata i8 %24, i64 0, metadata !2485, metadata !177), !dbg !2486
  ret i8 %24, !dbg !2517
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @set_intr_pin_config(%struct.bmi160_int_settg*, %struct.bmi160_dev*) #1 !dbg !2518 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2519, metadata !177), !dbg !2520
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2521, metadata !177), !dbg !2522
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2523, metadata !177), !dbg !2524
  call void @llvm.dbg.value(metadata %struct.bmi160_int_settg* %0, i64 0, metadata !2519, metadata !177), !dbg !2520
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %1, i64 0, metadata !2521, metadata !177), !dbg !2522
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !2525
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !2521, metadata !177), !dbg !2525
  %3 = call signext i8 @config_int_out_ctrl(%struct.bmi160_int_settg* %0, %struct.bmi160_dev* @configStub) #5, !dbg !2526
  call void @llvm.dbg.value(metadata i8 %3, i64 0, metadata !2523, metadata !177), !dbg !2527
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 600, i8 %3)
  %4 = sext i8 %3 to i32, !dbg !2528
  %5 = icmp eq i32 %4, 0, !dbg !2530
  br i1 %5, label %6, label %8, !dbg !2531

; <label>:6:                                      ; preds = %2
  %7 = call signext i8 @config_int_latch(%struct.bmi160_int_settg* %0, %struct.bmi160_dev* @configStub) #5, !dbg !2532
  call void @llvm.dbg.value(metadata i8 %7, i64 0, metadata !2523, metadata !177), !dbg !2533
  br label %8, !dbg !2534

; <label>:8:                                      ; preds = %6, %2
  %9 = phi i8 [ %7, %6 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i8 %9, i64 0, metadata !2523, metadata !177), !dbg !2524
  ret i8 %9, !dbg !2535
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @config_int_out_ctrl(%struct.bmi160_int_settg*, %struct.bmi160_dev*) #1 !dbg !2536 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2537, metadata !177), !dbg !2538
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2539, metadata !177), !dbg !2540
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2541, metadata !177), !dbg !2542
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2543, metadata !177), !dbg !2544
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2545, metadata !177), !dbg !2550
  call void @llvm.dbg.value(metadata %struct.bmi160_int_settg* %0, i64 0, metadata !2537, metadata !177), !dbg !2538
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %1, i64 0, metadata !2539, metadata !177), !dbg !2540
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !2551
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !2539, metadata !177), !dbg !2551
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1904, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !2543, metadata !177), !dbg !2544
  call void @llvm.dbg.declare(metadata i8* %3, metadata !2552, metadata !177), !dbg !2553
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1905, i32 0)
  store i8 0, i8* %3, align 1, !dbg !2553
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1906, i32 83)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1907, i32 1)
  %4 = call signext i8 @bmi160_get_regs(i8 zeroext 83, i8* %3, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !2554
  call void @llvm.dbg.value(metadata i8 %4, i64 0, metadata !2541, metadata !177), !dbg !2555
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 1908, i8 %4)
  %5 = sext i8 %4 to i32, !dbg !2556
  %6 = icmp eq i32 %5, 0, !dbg !2557
  br i1 %6, label %7, label %125, !dbg !2558

; <label>:7:                                      ; preds = %2
  %8 = getelementptr inbounds %struct.bmi160_int_settg, %struct.bmi160_int_settg* %0, i32 0, i32 2, !dbg !2559
  call void @llvm.dbg.value(metadata %struct.bmi160_int_pin_settg* %8, i64 0, metadata !2545, metadata !177), !dbg !2550
  %9 = getelementptr inbounds %struct.bmi160_int_settg, %struct.bmi160_int_settg* %0, i32 0, i32 0, !dbg !2560
  %10 = load i32, i32* %9, align 4, !dbg !2560
  call void @qpr.implicit.conversion.overflow.u32.u32(i32 1909, i32 %10)
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 1910, i32 1)
  %11 = icmp eq i32 %10, 1, !dbg !2562
  br i1 %11, label %12, label %67, !dbg !2563

; <label>:12:                                     ; preds = %7
  %13 = load i8, i8* %3, align 1, !dbg !2564
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1912, i8 %13)
  %14 = zext i8 %13 to i32, !dbg !2564
  %15 = and i32 %14, -9, !dbg !2566
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1911, i32 %15)
  %16 = trunc i32 %15 to i8, !dbg !2564
  call void @llvm.dbg.value(metadata i8 %16, i64 0, metadata !2543, metadata !177), !dbg !2567
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1914, i8 %16)
  %17 = zext i8 %16 to i32, !dbg !2568
  %18 = bitcast %struct.bmi160_int_pin_settg* %8 to i16*, !dbg !2569
  %19 = load i16, i16* %18, align 2, !dbg !2569
  %20 = and i16 %19, 1, !dbg !2569
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 1919, i16 %20)
  %21 = zext i16 %20 to i32, !dbg !2570
  call void @qpr.shift.by.amount.i32(i32 1916, i32 %21, i32 3)
  call void @qpr.shift.by.negative.i32(i32 1917, i32 %21, i32 3)
  call void @qpr.shift.of.negative.i32(i32 1918, i32 %21, i32 3)
  %22 = shl i32 %21, 3, !dbg !2571
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 1915, i32 %22)
  %23 = and i32 %22, 8, !dbg !2572
  %24 = or i32 %17, %23, !dbg !2573
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1913, i32 %24)
  %25 = trunc i32 %24 to i8, !dbg !2568
  store i8 %25, i8* %3, align 1, !dbg !2574
  %26 = load i8, i8* %3, align 1, !dbg !2575
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1921, i8 %26)
  %27 = zext i8 %26 to i32, !dbg !2575
  %28 = and i32 %27, -5, !dbg !2576
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1920, i32 %28)
  %29 = trunc i32 %28 to i8, !dbg !2575
  call void @llvm.dbg.value(metadata i8 %29, i64 0, metadata !2543, metadata !177), !dbg !2577
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1923, i8 %29)
  %30 = zext i8 %29 to i32, !dbg !2578
  %31 = bitcast %struct.bmi160_int_pin_settg* %8 to i16*, !dbg !2579
  %32 = load i16, i16* %31, align 2, !dbg !2579
  %33 = lshr i16 %32, 1, !dbg !2579
  %34 = and i16 %33, 1, !dbg !2579
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 1928, i16 %34)
  %35 = zext i16 %34 to i32, !dbg !2580
  call void @qpr.shift.by.amount.i32(i32 1925, i32 %35, i32 2)
  call void @qpr.shift.by.negative.i32(i32 1926, i32 %35, i32 2)
  call void @qpr.shift.of.negative.i32(i32 1927, i32 %35, i32 2)
  %36 = shl i32 %35, 2, !dbg !2581
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 1924, i32 %36)
  %37 = and i32 %36, 4, !dbg !2582
  %38 = or i32 %30, %37, !dbg !2583
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1922, i32 %38)
  %39 = trunc i32 %38 to i8, !dbg !2578
  store i8 %39, i8* %3, align 1, !dbg !2584
  %40 = load i8, i8* %3, align 1, !dbg !2585
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1930, i8 %40)
  %41 = zext i8 %40 to i32, !dbg !2585
  %42 = and i32 %41, -3, !dbg !2586
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1929, i32 %42)
  %43 = trunc i32 %42 to i8, !dbg !2585
  call void @llvm.dbg.value(metadata i8 %43, i64 0, metadata !2543, metadata !177), !dbg !2587
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1932, i8 %43)
  %44 = zext i8 %43 to i32, !dbg !2588
  %45 = bitcast %struct.bmi160_int_pin_settg* %8 to i16*, !dbg !2589
  %46 = load i16, i16* %45, align 2, !dbg !2589
  %47 = lshr i16 %46, 2, !dbg !2589
  %48 = and i16 %47, 1, !dbg !2589
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 1937, i16 %48)
  %49 = zext i16 %48 to i32, !dbg !2590
  call void @qpr.shift.by.amount.i32(i32 1934, i32 %49, i32 1)
  call void @qpr.shift.by.negative.i32(i32 1935, i32 %49, i32 1)
  call void @qpr.shift.of.negative.i32(i32 1936, i32 %49, i32 1)
  %50 = shl i32 %49, 1, !dbg !2591
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 1933, i32 %50)
  %51 = and i32 %50, 2, !dbg !2592
  %52 = or i32 %44, %51, !dbg !2593
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1931, i32 %52)
  %53 = trunc i32 %52 to i8, !dbg !2588
  store i8 %53, i8* %3, align 1, !dbg !2594
  %54 = load i8, i8* %3, align 1, !dbg !2595
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1939, i8 %54)
  %55 = zext i8 %54 to i32, !dbg !2595
  %56 = and i32 %55, -2, !dbg !2596
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1938, i32 %56)
  %57 = trunc i32 %56 to i8, !dbg !2595
  call void @llvm.dbg.value(metadata i8 %57, i64 0, metadata !2543, metadata !177), !dbg !2597
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1941, i8 %57)
  %58 = zext i8 %57 to i32, !dbg !2598
  %59 = bitcast %struct.bmi160_int_pin_settg* %8 to i16*, !dbg !2599
  %60 = load i16, i16* %59, align 2, !dbg !2599
  %61 = lshr i16 %60, 3, !dbg !2599
  %62 = and i16 %61, 1, !dbg !2599
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 1942, i16 %62)
  %63 = zext i16 %62 to i32, !dbg !2600
  %64 = and i32 %63, 1, !dbg !2601
  %65 = or i32 %58, %64, !dbg !2602
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1940, i32 %65)
  %66 = trunc i32 %65 to i8, !dbg !2598
  store i8 %66, i8* %3, align 1, !dbg !2603
  br label %123, !dbg !2604

; <label>:67:                                     ; preds = %7
  %68 = load i8, i8* %3, align 1, !dbg !2605
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1944, i8 %68)
  %69 = zext i8 %68 to i32, !dbg !2605
  %70 = and i32 %69, -129, !dbg !2607
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1943, i32 %70)
  %71 = trunc i32 %70 to i8, !dbg !2605
  call void @llvm.dbg.value(metadata i8 %71, i64 0, metadata !2543, metadata !177), !dbg !2608
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1946, i8 %71)
  %72 = zext i8 %71 to i32, !dbg !2609
  %73 = bitcast %struct.bmi160_int_pin_settg* %8 to i16*, !dbg !2610
  %74 = load i16, i16* %73, align 2, !dbg !2610
  %75 = and i16 %74, 1, !dbg !2610
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 1951, i16 %75)
  %76 = zext i16 %75 to i32, !dbg !2611
  call void @qpr.shift.by.amount.i32(i32 1948, i32 %76, i32 7)
  call void @qpr.shift.by.negative.i32(i32 1949, i32 %76, i32 7)
  call void @qpr.shift.of.negative.i32(i32 1950, i32 %76, i32 7)
  %77 = shl i32 %76, 7, !dbg !2612
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 1947, i32 %77)
  %78 = and i32 %77, 128, !dbg !2613
  %79 = or i32 %72, %78, !dbg !2614
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1945, i32 %79)
  %80 = trunc i32 %79 to i8, !dbg !2609
  store i8 %80, i8* %3, align 1, !dbg !2615
  %81 = load i8, i8* %3, align 1, !dbg !2616
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1953, i8 %81)
  %82 = zext i8 %81 to i32, !dbg !2616
  %83 = and i32 %82, -65, !dbg !2617
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1952, i32 %83)
  %84 = trunc i32 %83 to i8, !dbg !2616
  call void @llvm.dbg.value(metadata i8 %84, i64 0, metadata !2543, metadata !177), !dbg !2618
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1955, i8 %84)
  %85 = zext i8 %84 to i32, !dbg !2619
  %86 = bitcast %struct.bmi160_int_pin_settg* %8 to i16*, !dbg !2620
  %87 = load i16, i16* %86, align 2, !dbg !2620
  %88 = lshr i16 %87, 1, !dbg !2620
  %89 = and i16 %88, 1, !dbg !2620
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 1960, i16 %89)
  %90 = zext i16 %89 to i32, !dbg !2621
  call void @qpr.shift.by.amount.i32(i32 1957, i32 %90, i32 6)
  call void @qpr.shift.by.negative.i32(i32 1958, i32 %90, i32 6)
  call void @qpr.shift.of.negative.i32(i32 1959, i32 %90, i32 6)
  %91 = shl i32 %90, 6, !dbg !2622
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 1956, i32 %91)
  %92 = and i32 %91, 64, !dbg !2623
  %93 = or i32 %85, %92, !dbg !2624
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1954, i32 %93)
  %94 = trunc i32 %93 to i8, !dbg !2619
  store i8 %94, i8* %3, align 1, !dbg !2625
  %95 = load i8, i8* %3, align 1, !dbg !2626
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1962, i8 %95)
  %96 = zext i8 %95 to i32, !dbg !2626
  %97 = and i32 %96, -33, !dbg !2627
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1961, i32 %97)
  %98 = trunc i32 %97 to i8, !dbg !2626
  call void @llvm.dbg.value(metadata i8 %98, i64 0, metadata !2543, metadata !177), !dbg !2628
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1964, i8 %98)
  %99 = zext i8 %98 to i32, !dbg !2629
  %100 = bitcast %struct.bmi160_int_pin_settg* %8 to i16*, !dbg !2630
  %101 = load i16, i16* %100, align 2, !dbg !2630
  %102 = lshr i16 %101, 2, !dbg !2630
  %103 = and i16 %102, 1, !dbg !2630
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 1969, i16 %103)
  %104 = zext i16 %103 to i32, !dbg !2631
  call void @qpr.shift.by.amount.i32(i32 1966, i32 %104, i32 5)
  call void @qpr.shift.by.negative.i32(i32 1967, i32 %104, i32 5)
  call void @qpr.shift.of.negative.i32(i32 1968, i32 %104, i32 5)
  %105 = shl i32 %104, 5, !dbg !2632
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 1965, i32 %105)
  %106 = and i32 %105, 32, !dbg !2633
  %107 = or i32 %99, %106, !dbg !2634
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1963, i32 %107)
  %108 = trunc i32 %107 to i8, !dbg !2629
  store i8 %108, i8* %3, align 1, !dbg !2635
  %109 = load i8, i8* %3, align 1, !dbg !2636
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1971, i8 %109)
  %110 = zext i8 %109 to i32, !dbg !2636
  %111 = and i32 %110, -17, !dbg !2637
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1970, i32 %111)
  %112 = trunc i32 %111 to i8, !dbg !2636
  call void @llvm.dbg.value(metadata i8 %112, i64 0, metadata !2543, metadata !177), !dbg !2638
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1973, i8 %112)
  %113 = zext i8 %112 to i32, !dbg !2639
  %114 = bitcast %struct.bmi160_int_pin_settg* %8 to i16*, !dbg !2640
  %115 = load i16, i16* %114, align 2, !dbg !2640
  %116 = lshr i16 %115, 3, !dbg !2640
  %117 = and i16 %116, 1, !dbg !2640
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 1978, i16 %117)
  %118 = zext i16 %117 to i32, !dbg !2641
  call void @qpr.shift.by.amount.i32(i32 1975, i32 %118, i32 4)
  call void @qpr.shift.by.negative.i32(i32 1976, i32 %118, i32 4)
  call void @qpr.shift.of.negative.i32(i32 1977, i32 %118, i32 4)
  %119 = shl i32 %118, 4, !dbg !2642
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 1974, i32 %119)
  %120 = and i32 %119, 16, !dbg !2643
  %121 = or i32 %113, %120, !dbg !2644
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1972, i32 %121)
  %122 = trunc i32 %121 to i8, !dbg !2639
  store i8 %122, i8* %3, align 1, !dbg !2645
  br label %123

; <label>:123:                                    ; preds = %67, %12
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1979, i32 83)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1980, i32 1)
  %124 = call signext i8 @bmi160_set_regs(i8 zeroext 83, i8* %3, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !2646
  call void @llvm.dbg.value(metadata i8 %124, i64 0, metadata !2541, metadata !177), !dbg !2647
  br label %125, !dbg !2648

; <label>:125:                                    ; preds = %123, %2
  %126 = phi i8 [ %124, %123 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i8 %126, i64 0, metadata !2541, metadata !177), !dbg !2542
  ret i8 %126, !dbg !2649
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @config_int_latch(%struct.bmi160_int_settg*, %struct.bmi160_dev*) #1 !dbg !2650 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2651, metadata !177), !dbg !2652
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2653, metadata !177), !dbg !2654
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2655, metadata !177), !dbg !2656
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2657, metadata !177), !dbg !2658
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2659, metadata !177), !dbg !2662
  call void @llvm.dbg.value(metadata %struct.bmi160_int_settg* %0, i64 0, metadata !2651, metadata !177), !dbg !2652
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %1, i64 0, metadata !2653, metadata !177), !dbg !2654
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !2663
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !2653, metadata !177), !dbg !2663
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1981, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !2657, metadata !177), !dbg !2658
  call void @llvm.dbg.declare(metadata i8* %3, metadata !2664, metadata !177), !dbg !2665
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1982, i32 0)
  store i8 0, i8* %3, align 1, !dbg !2665
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1983, i32 84)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1984, i32 1)
  %4 = call signext i8 @bmi160_get_regs(i8 zeroext 84, i8* %3, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !2666
  call void @llvm.dbg.value(metadata i8 %4, i64 0, metadata !2655, metadata !177), !dbg !2667
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 1985, i8 %4)
  %5 = sext i8 %4 to i32, !dbg !2668
  %6 = icmp eq i32 %5, 0, !dbg !2669
  br i1 %6, label %7, label %57, !dbg !2670

; <label>:7:                                      ; preds = %2
  %8 = getelementptr inbounds %struct.bmi160_int_settg, %struct.bmi160_int_settg* %0, i32 0, i32 2, !dbg !2671
  call void @llvm.dbg.value(metadata %struct.bmi160_int_pin_settg* %8, i64 0, metadata !2659, metadata !177), !dbg !2662
  %9 = getelementptr inbounds %struct.bmi160_int_settg, %struct.bmi160_int_settg* %0, i32 0, i32 0, !dbg !2672
  %10 = load i32, i32* %9, align 4, !dbg !2672
  call void @qpr.implicit.conversion.overflow.u32.u32(i32 1986, i32 %10)
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 1987, i32 1)
  %11 = icmp eq i32 %10, 1, !dbg !2674
  br i1 %11, label %12, label %27, !dbg !2675

; <label>:12:                                     ; preds = %7
  %13 = load i8, i8* %3, align 1, !dbg !2676
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1989, i8 %13)
  %14 = zext i8 %13 to i32, !dbg !2676
  %15 = and i32 %14, -17, !dbg !2678
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1988, i32 %15)
  %16 = trunc i32 %15 to i8, !dbg !2676
  call void @llvm.dbg.value(metadata i8 %16, i64 0, metadata !2657, metadata !177), !dbg !2679
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1991, i8 %16)
  %17 = zext i8 %16 to i32, !dbg !2680
  %18 = bitcast %struct.bmi160_int_pin_settg* %8 to i16*, !dbg !2681
  %19 = load i16, i16* %18, align 2, !dbg !2681
  %20 = lshr i16 %19, 4, !dbg !2681
  %21 = and i16 %20, 1, !dbg !2681
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 1996, i16 %21)
  %22 = zext i16 %21 to i32, !dbg !2682
  call void @qpr.shift.by.amount.i32(i32 1993, i32 %22, i32 4)
  call void @qpr.shift.by.negative.i32(i32 1994, i32 %22, i32 4)
  call void @qpr.shift.of.negative.i32(i32 1995, i32 %22, i32 4)
  %23 = shl i32 %22, 4, !dbg !2683
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 1992, i32 %23)
  %24 = and i32 %23, 16, !dbg !2684
  %25 = or i32 %17, %24, !dbg !2685
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1990, i32 %25)
  %26 = trunc i32 %25 to i8, !dbg !2680
  store i8 %26, i8* %3, align 1, !dbg !2686
  br label %42, !dbg !2687

; <label>:27:                                     ; preds = %7
  %28 = load i8, i8* %3, align 1, !dbg !2688
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1998, i8 %28)
  %29 = zext i8 %28 to i32, !dbg !2688
  %30 = and i32 %29, -33, !dbg !2690
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1997, i32 %30)
  %31 = trunc i32 %30 to i8, !dbg !2688
  call void @llvm.dbg.value(metadata i8 %31, i64 0, metadata !2657, metadata !177), !dbg !2691
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 2000, i8 %31)
  %32 = zext i8 %31 to i32, !dbg !2692
  %33 = bitcast %struct.bmi160_int_pin_settg* %8 to i16*, !dbg !2693
  %34 = load i16, i16* %33, align 2, !dbg !2693
  %35 = lshr i16 %34, 4, !dbg !2693
  %36 = and i16 %35, 1, !dbg !2693
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 2005, i16 %36)
  %37 = zext i16 %36 to i32, !dbg !2694
  call void @qpr.shift.by.amount.i32(i32 2002, i32 %37, i32 5)
  call void @qpr.shift.by.negative.i32(i32 2003, i32 %37, i32 5)
  call void @qpr.shift.of.negative.i32(i32 2004, i32 %37, i32 5)
  %38 = shl i32 %37, 5, !dbg !2695
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 2001, i32 %38)
  %39 = and i32 %38, 32, !dbg !2696
  %40 = or i32 %32, %39, !dbg !2697
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1999, i32 %40)
  %41 = trunc i32 %40 to i8, !dbg !2692
  store i8 %41, i8* %3, align 1, !dbg !2698
  br label %42

; <label>:42:                                     ; preds = %27, %12
  %43 = load i8, i8* %3, align 1, !dbg !2699
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 2007, i8 %43)
  %44 = zext i8 %43 to i32, !dbg !2699
  %45 = and i32 %44, -16, !dbg !2700
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 2006, i32 %45)
  %46 = trunc i32 %45 to i8, !dbg !2699
  call void @llvm.dbg.value(metadata i8 %46, i64 0, metadata !2657, metadata !177), !dbg !2701
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 2009, i8 %46)
  %47 = zext i8 %46 to i32, !dbg !2702
  %48 = bitcast %struct.bmi160_int_pin_settg* %8 to i16*, !dbg !2703
  %49 = load i16, i16* %48, align 2, !dbg !2703
  %50 = lshr i16 %49, 5, !dbg !2703
  %51 = and i16 %50, 15, !dbg !2703
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 2010, i16 %51)
  %52 = zext i16 %51 to i32, !dbg !2704
  %53 = and i32 %52, 15, !dbg !2705
  %54 = or i32 %47, %53, !dbg !2706
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 2008, i32 %54)
  %55 = trunc i32 %54 to i8, !dbg !2702
  store i8 %55, i8* %3, align 1, !dbg !2707
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 2011, i32 84)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 2012, i32 1)
  %56 = call signext i8 @bmi160_set_regs(i8 zeroext 84, i8* %3, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !2708
  call void @llvm.dbg.value(metadata i8 %56, i64 0, metadata !2655, metadata !177), !dbg !2709
  br label %57, !dbg !2710

; <label>:57:                                     ; preds = %42, %2
  %58 = phi i8 [ %56, %42 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i8 %58, i64 0, metadata !2655, metadata !177), !dbg !2656
  ret i8 %58, !dbg !2711
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @enable_fifo_wtm_int(%struct.bmi160_int_settg*, %struct.bmi160_dev*) #1 !dbg !2712 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2713, metadata !177), !dbg !2714
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2715, metadata !177), !dbg !2716
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2717, metadata !177), !dbg !2718
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.bmi160_int_settg* %0, i64 0, metadata !2713, metadata !177), !dbg !2714
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %1, i64 0, metadata !2715, metadata !177), !dbg !2716
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !2719
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !2715, metadata !177), !dbg !2719
  call void @llvm.dbg.declare(metadata i8* %3, metadata !2720, metadata !177), !dbg !2721
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 2091, i32 0)
  store i8 0, i8* %3, align 1, !dbg !2721
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 2092, i32 81)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 2093, i32 1)
  %4 = call signext i8 @bmi160_get_regs(i8 zeroext 81, i8* %3, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !2722
  call void @llvm.dbg.value(metadata i8 %4, i64 0, metadata !2717, metadata !177), !dbg !2723
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 2094, i8 %4)
  %5 = sext i8 %4 to i32, !dbg !2724
  %6 = icmp eq i32 %5, 0, !dbg !2726
  br i1 %6, label %7, label %21, !dbg !2727

; <label>:7:                                      ; preds = %2
  %8 = load i8, i8* %3, align 1, !dbg !2728
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 2096, i8 %8)
  %9 = zext i8 %8 to i32, !dbg !2728
  %10 = and i32 %9, -65, !dbg !2728
  %11 = getelementptr inbounds %struct.bmi160_int_settg, %struct.bmi160_int_settg* %0, i32 0, i32 4, !dbg !2728
  %12 = load i8, i8* %11, align 2, !dbg !2728
  %13 = lshr i8 %12, 1, !dbg !2728
  %14 = and i8 %13, 1, !dbg !2728
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 2101, i8 %14)
  %15 = zext i8 %14 to i32, !dbg !2728
  call void @qpr.shift.by.amount.i32(i32 2098, i32 %15, i32 6)
  call void @qpr.shift.by.negative.i32(i32 2099, i32 %15, i32 6)
  call void @qpr.shift.of.negative.i32(i32 2100, i32 %15, i32 6)
  %16 = shl i32 %15, 6, !dbg !2728
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 2097, i32 %16)
  %17 = and i32 %16, 64, !dbg !2728
  %18 = or i32 %10, %17, !dbg !2728
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 2095, i32 %18)
  %19 = trunc i32 %18 to i8, !dbg !2728
  store i8 %19, i8* %3, align 1, !dbg !2730
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 2102, i32 81)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 2103, i32 1)
  %20 = call signext i8 @bmi160_set_regs(i8 zeroext 81, i8* %3, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !2731
  call void @llvm.dbg.value(metadata i8 %20, i64 0, metadata !2717, metadata !177), !dbg !2732
  br label %21, !dbg !2733

; <label>:21:                                     ; preds = %7, %2
  %22 = phi i8 [ %20, %7 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i8 %22, i64 0, metadata !2717, metadata !177), !dbg !2718
  ret i8 %22, !dbg !2734
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @map_hardware_interrupt(%struct.bmi160_int_settg*, %struct.bmi160_dev*) #1 !dbg !2735 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2736, metadata !177), !dbg !2737
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2738, metadata !177), !dbg !2739
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2740, metadata !177), !dbg !2741
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2742, metadata !177), !dbg !2743
  call void @llvm.dbg.value(metadata %struct.bmi160_int_settg* %0, i64 0, metadata !2736, metadata !177), !dbg !2737
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %1, i64 0, metadata !2738, metadata !177), !dbg !2739
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !2744
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !2738, metadata !177), !dbg !2744
  call void @llvm.dbg.declare(metadata i8* %3, metadata !2745, metadata !177), !dbg !2746
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1164, i32 0)
  store i8 0, i8* %3, align 1, !dbg !2746
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1165, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !2742, metadata !177), !dbg !2743
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1166, i32 86)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1167, i32 1)
  %4 = call signext i8 @bmi160_get_regs(i8 zeroext 86, i8* %3, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !2747
  call void @llvm.dbg.value(metadata i8 %4, i64 0, metadata !2740, metadata !177), !dbg !2748
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 1168, i8 %4)
  %5 = sext i8 %4 to i32, !dbg !2749
  %6 = icmp eq i32 %5, 0, !dbg !2751
  br i1 %6, label %7, label %90, !dbg !2752

; <label>:7:                                      ; preds = %2
  %8 = load i8, i8* %3, align 1, !dbg !2753
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 1170, i8 %8)
  %9 = zext i8 %8 to i32, !dbg !2753
  %10 = getelementptr inbounds %struct.bmi160_int_settg, %struct.bmi160_int_settg* %0, i32 0, i32 1, !dbg !2755
  %11 = load i32, i32* %10, align 4, !dbg !2755
  %12 = zext i32 %11 to i64, !dbg !2756
  %13 = getelementptr inbounds [13 x i8], [13 x i8]* @int_mask_lookup_table, i64 0, i64 %12, !dbg !2756
  %14 = load i8, i8* %13, align 1, !dbg !2756
  call void @qpr.arrayindex.i32.i4(i32 1172, i32 %11, i4 -3)
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 1171, i8 %14)
  %15 = zext i8 %14 to i32, !dbg !2756
  %16 = xor i32 %15, -1, !dbg !2757
  %17 = and i32 %9, %16, !dbg !2758
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1169, i32 %17)
  %18 = trunc i32 %17 to i8, !dbg !2753
  call void @llvm.dbg.value(metadata i8 %18, i64 0, metadata !2742, metadata !177), !dbg !2759
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 1174, i8 %18)
  %19 = zext i8 %18 to i32, !dbg !2760
  %20 = getelementptr inbounds %struct.bmi160_int_settg, %struct.bmi160_int_settg* %0, i32 0, i32 1, !dbg !2761
  %21 = load i32, i32* %20, align 4, !dbg !2761
  %22 = zext i32 %21 to i64, !dbg !2762
  %23 = getelementptr inbounds [13 x i8], [13 x i8]* @int_mask_lookup_table, i64 0, i64 %22, !dbg !2762
  %24 = load i8, i8* %23, align 1, !dbg !2762
  call void @qpr.arrayindex.i32.i4(i32 1181, i32 %21, i4 -3)
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 1180, i8 %24)
  %25 = zext i8 %24 to i32, !dbg !2762
  call void @qpr.shift.by.amount.i32(i32 1177, i32 %25, i32 4)
  call void @qpr.shift.by.negative.i32(i32 1178, i32 %25, i32 4)
  call void @qpr.shift.of.negative.i32(i32 1179, i32 %25, i32 4)
  %26 = shl i32 %25, 4, !dbg !2763
  call void @qpr.explicit.conversion.overflow.s32.u8(i32 1176, i32 %26)
  %27 = trunc i32 %26 to i8, !dbg !2764
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 1175, i8 %27)
  %28 = zext i8 %27 to i32, !dbg !2765
  %29 = xor i32 %28, -1, !dbg !2766
  %30 = and i32 %19, %29, !dbg !2767
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1173, i32 %30)
  %31 = trunc i32 %30 to i8, !dbg !2760
  call void @llvm.dbg.value(metadata i8 %31, i64 0, metadata !2742, metadata !177), !dbg !2768
  %32 = getelementptr inbounds %struct.bmi160_int_settg, %struct.bmi160_int_settg* %0, i32 0, i32 0, !dbg !2769
  %33 = load i32, i32* %32, align 4, !dbg !2769
  call void @qpr.implicit.conversion.overflow.u32.u32(i32 1182, i32 %33)
  switch i32 %33, label %81 [
    i32 0, label %34
    i32 1, label %35
    i32 2, label %48
    i32 3, label %58
  ], !dbg !2770

; <label>:34:                                     ; preds = %7
  store i8 %31, i8* %3, align 1, !dbg !2771
  br label %82, !dbg !2773

; <label>:35:                                     ; preds = %7
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 1186, i8 %31)
  %36 = zext i8 %31 to i32, !dbg !2774
  %37 = getelementptr inbounds %struct.bmi160_int_settg, %struct.bmi160_int_settg* %0, i32 0, i32 1, !dbg !2775
  %38 = load i32, i32* %37, align 4, !dbg !2775
  %39 = zext i32 %38 to i64, !dbg !2776
  %40 = getelementptr inbounds [13 x i8], [13 x i8]* @int_mask_lookup_table, i64 0, i64 %39, !dbg !2776
  %41 = load i8, i8* %40, align 1, !dbg !2776
  call void @qpr.arrayindex.i32.i4(i32 1193, i32 %38, i4 -3)
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 1192, i8 %41)
  %42 = zext i8 %41 to i32, !dbg !2777
  call void @qpr.shift.by.amount.i32(i32 1189, i32 %42, i32 4)
  call void @qpr.shift.by.negative.i32(i32 1190, i32 %42, i32 4)
  call void @qpr.shift.of.negative.i32(i32 1191, i32 %42, i32 4)
  %43 = shl i32 %42, 4, !dbg !2778
  call void @qpr.explicit.conversion.overflow.s32.u8(i32 1188, i32 %43)
  %44 = trunc i32 %43 to i8, !dbg !2779
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 1187, i8 %44)
  %45 = zext i8 %44 to i32, !dbg !2779
  %46 = or i32 %36, %45, !dbg !2780
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1185, i32 %46)
  %47 = trunc i32 %46 to i8, !dbg !2774
  store i8 %47, i8* %3, align 1, !dbg !2781
  br label %82, !dbg !2782

; <label>:48:                                     ; preds = %7
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 1196, i8 %31)
  %49 = zext i8 %31 to i32, !dbg !2783
  %50 = getelementptr inbounds %struct.bmi160_int_settg, %struct.bmi160_int_settg* %0, i32 0, i32 1, !dbg !2784
  %51 = load i32, i32* %50, align 4, !dbg !2784
  %52 = zext i32 %51 to i64, !dbg !2785
  %53 = getelementptr inbounds [13 x i8], [13 x i8]* @int_mask_lookup_table, i64 0, i64 %52, !dbg !2785
  %54 = load i8, i8* %53, align 1, !dbg !2785
  call void @qpr.arrayindex.i32.i4(i32 1198, i32 %51, i4 -3)
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 1197, i8 %54)
  %55 = zext i8 %54 to i32, !dbg !2785
  %56 = or i32 %49, %55, !dbg !2786
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1195, i32 %56)
  %57 = trunc i32 %56 to i8, !dbg !2783
  store i8 %57, i8* %3, align 1, !dbg !2787
  br label %82, !dbg !2788

; <label>:58:                                     ; preds = %7
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 1201, i8 %31)
  %59 = zext i8 %31 to i32, !dbg !2789
  %60 = getelementptr inbounds %struct.bmi160_int_settg, %struct.bmi160_int_settg* %0, i32 0, i32 1, !dbg !2790
  %61 = load i32, i32* %60, align 4, !dbg !2790
  %62 = zext i32 %61 to i64, !dbg !2791
  %63 = getelementptr inbounds [13 x i8], [13 x i8]* @int_mask_lookup_table, i64 0, i64 %62, !dbg !2791
  %64 = load i8, i8* %63, align 1, !dbg !2791
  call void @qpr.arrayindex.i32.i4(i32 1203, i32 %61, i4 -3)
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 1202, i8 %64)
  %65 = zext i8 %64 to i32, !dbg !2791
  %66 = or i32 %59, %65, !dbg !2792
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1200, i32 %66)
  %67 = trunc i32 %66 to i8, !dbg !2789
  store i8 %67, i8* %3, align 1, !dbg !2793
  %68 = load i8, i8* %3, align 1, !dbg !2794
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 1205, i8 %68)
  %69 = zext i8 %68 to i32, !dbg !2794
  %70 = getelementptr inbounds %struct.bmi160_int_settg, %struct.bmi160_int_settg* %0, i32 0, i32 1, !dbg !2795
  %71 = load i32, i32* %70, align 4, !dbg !2795
  %72 = zext i32 %71 to i64, !dbg !2796
  %73 = getelementptr inbounds [13 x i8], [13 x i8]* @int_mask_lookup_table, i64 0, i64 %72, !dbg !2796
  %74 = load i8, i8* %73, align 1, !dbg !2796
  call void @qpr.arrayindex.i32.i4(i32 1212, i32 %71, i4 -3)
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 1211, i8 %74)
  %75 = zext i8 %74 to i32, !dbg !2797
  call void @qpr.shift.by.amount.i32(i32 1208, i32 %75, i32 4)
  call void @qpr.shift.by.negative.i32(i32 1209, i32 %75, i32 4)
  call void @qpr.shift.of.negative.i32(i32 1210, i32 %75, i32 4)
  %76 = shl i32 %75, 4, !dbg !2798
  call void @qpr.explicit.conversion.overflow.s32.u8(i32 1207, i32 %76)
  %77 = trunc i32 %76 to i8, !dbg !2799
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 1206, i8 %77)
  %78 = zext i8 %77 to i32, !dbg !2799
  %79 = or i32 %69, %78, !dbg !2800
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1204, i32 %79)
  %80 = trunc i32 %79 to i8, !dbg !2794
  store i8 %80, i8* %3, align 1, !dbg !2801
  br label %82, !dbg !2802

; <label>:81:                                     ; preds = %7
  call void @qpr.arithmetic.overflow.ssub.i32(i32 1214, i32 0, i32 4)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 1213, i32 -4)
  call void @llvm.dbg.value(metadata i8 -4, i64 0, metadata !2740, metadata !177), !dbg !2803
  br label %82, !dbg !2804

; <label>:82:                                     ; preds = %81, %58, %48, %35, %34
  %83 = phi i8 [ -4, %81 ], [ %4, %58 ], [ %4, %48 ], [ %4, %35 ], [ %4, %34 ]
  call void @llvm.dbg.value(metadata i8 %83, i64 0, metadata !2740, metadata !177), !dbg !2741
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 1215, i8 %83)
  %84 = sext i8 %83 to i32, !dbg !2805
  %85 = icmp eq i32 %84, 0, !dbg !2807
  br i1 %85, label %86, label %88, !dbg !2808

; <label>:86:                                     ; preds = %82
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1216, i32 86)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1217, i32 1)
  %87 = call signext i8 @bmi160_set_regs(i8 zeroext 86, i8* %3, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !2809
  call void @llvm.dbg.value(metadata i8 %87, i64 0, metadata !2740, metadata !177), !dbg !2810
  br label %88, !dbg !2811

; <label>:88:                                     ; preds = %86, %82
  %89 = phi i8 [ %87, %86 ], [ %83, %82 ]
  call void @llvm.dbg.value(metadata i8 %89, i64 0, metadata !2740, metadata !177), !dbg !2741
  br label %90, !dbg !2812

; <label>:90:                                     ; preds = %88, %2
  %91 = phi i8 [ %89, %88 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i8 %91, i64 0, metadata !2740, metadata !177), !dbg !2741
  ret i8 %91, !dbg !2813
}

; Function Attrs: inaccessiblememonly nounwind
define weak_odr void @qpr.arrayindex.i32.i4(i32, i32, i4) #0 {
  %4 = zext i4 %2 to i32
  %5 = icmp ult i32 %1, %4
  call void @llbmc.assert(i1 %5, i32 %0)
  ret void
}

; Function Attrs: inaccessiblememonly nounwind
define weak_odr void @qpr.explicit.conversion.overflow.s32.u8(i32, i32) #0 {
  %3 = icmp sge i32 %1, 0
  %4 = icmp sle i32 %1, 255
  %5 = and i1 %3, %4
  call void @llbmc.assert(i1 %5, i32 %0)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @enable_fifo_full_int(%struct.bmi160_int_settg*, %struct.bmi160_dev*) #1 !dbg !2814 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2815, metadata !177), !dbg !2816
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2817, metadata !177), !dbg !2818
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2819, metadata !177), !dbg !2820
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.bmi160_int_settg* %0, i64 0, metadata !2815, metadata !177), !dbg !2816
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %1, i64 0, metadata !2817, metadata !177), !dbg !2818
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !2821
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !2817, metadata !177), !dbg !2821
  call void @llvm.dbg.declare(metadata i8* %3, metadata !2822, metadata !177), !dbg !2823
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 2073, i32 0)
  store i8 0, i8* %3, align 1, !dbg !2823
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 2074, i32 81)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 2075, i32 1)
  %4 = call signext i8 @bmi160_get_regs(i8 zeroext 81, i8* %3, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !2824
  call void @llvm.dbg.value(metadata i8 %4, i64 0, metadata !2819, metadata !177), !dbg !2825
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 2076, i8 %4)
  %5 = sext i8 %4 to i32, !dbg !2826
  %6 = icmp eq i32 %5, 0, !dbg !2828
  br i1 %6, label %7, label %20, !dbg !2829

; <label>:7:                                      ; preds = %2
  %8 = load i8, i8* %3, align 1, !dbg !2830
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 2078, i8 %8)
  %9 = zext i8 %8 to i32, !dbg !2830
  %10 = and i32 %9, -33, !dbg !2830
  %11 = getelementptr inbounds %struct.bmi160_int_settg, %struct.bmi160_int_settg* %0, i32 0, i32 4, !dbg !2830
  %12 = load i8, i8* %11, align 2, !dbg !2830
  %13 = and i8 %12, 1, !dbg !2830
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 2083, i8 %13)
  %14 = zext i8 %13 to i32, !dbg !2830
  call void @qpr.shift.by.amount.i32(i32 2080, i32 %14, i32 5)
  call void @qpr.shift.by.negative.i32(i32 2081, i32 %14, i32 5)
  call void @qpr.shift.of.negative.i32(i32 2082, i32 %14, i32 5)
  %15 = shl i32 %14, 5, !dbg !2830
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 2079, i32 %15)
  %16 = and i32 %15, 32, !dbg !2830
  %17 = or i32 %10, %16, !dbg !2830
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 2077, i32 %17)
  %18 = trunc i32 %17 to i8, !dbg !2830
  store i8 %18, i8* %3, align 1, !dbg !2832
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 2084, i32 81)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 2085, i32 1)
  %19 = call signext i8 @bmi160_set_regs(i8 zeroext 81, i8* %3, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !2833
  call void @llvm.dbg.value(metadata i8 %19, i64 0, metadata !2819, metadata !177), !dbg !2834
  br label %20, !dbg !2835

; <label>:20:                                     ; preds = %7, %2
  %21 = phi i8 [ %19, %7 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i8 %21, i64 0, metadata !2819, metadata !177), !dbg !2820
  ret i8 %21, !dbg !2836
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @enable_data_ready_int(%struct.bmi160_dev*) #1 !dbg !2837 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2838, metadata !177), !dbg !2839
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2840, metadata !177), !dbg !2841
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2842, metadata !177), !dbg !2843
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %0, i64 0, metadata !2838, metadata !177), !dbg !2839
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !2844
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !2838, metadata !177), !dbg !2844
  call void @llvm.dbg.declare(metadata i8* %2, metadata !2845, metadata !177), !dbg !2846
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1253, i32 0)
  store i8 0, i8* %2, align 1, !dbg !2846
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1254, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !2842, metadata !177), !dbg !2843
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1255, i32 81)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1256, i32 1)
  %3 = call signext i8 @bmi160_get_regs(i8 zeroext 81, i8* %2, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !2847
  call void @llvm.dbg.value(metadata i8 %3, i64 0, metadata !2840, metadata !177), !dbg !2848
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 1257, i8 %3)
  %4 = sext i8 %3 to i32, !dbg !2849
  %5 = icmp eq i32 %4, 0, !dbg !2851
  br i1 %5, label %6, label %15, !dbg !2852

; <label>:6:                                      ; preds = %1
  %7 = load i8, i8* %2, align 1, !dbg !2853
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1259, i8 %7)
  %8 = zext i8 %7 to i32, !dbg !2853
  %9 = and i32 %8, -17, !dbg !2855
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1258, i32 %9)
  %10 = trunc i32 %9 to i8, !dbg !2853
  call void @llvm.dbg.value(metadata i8 %10, i64 0, metadata !2842, metadata !177), !dbg !2856
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1261, i8 %10)
  %11 = zext i8 %10 to i32, !dbg !2857
  call void @qpr.shift.by.amount.i32(i32 1263, i32 1, i32 4)
  call void @qpr.shift.by.negative.i32(i32 1264, i32 1, i32 4)
  call void @qpr.shift.of.negative.i32(i32 1265, i32 1, i32 4)
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 1262, i32 16)
  %12 = or i32 %11, 16, !dbg !2858
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1260, i32 %12)
  %13 = trunc i32 %12 to i8, !dbg !2857
  store i8 %13, i8* %2, align 1, !dbg !2859
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1266, i32 81)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1267, i32 1)
  %14 = call signext i8 @bmi160_set_regs(i8 zeroext 81, i8* %2, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !2860
  call void @llvm.dbg.value(metadata i8 %14, i64 0, metadata !2840, metadata !177), !dbg !2861
  br label %15, !dbg !2862

; <label>:15:                                     ; preds = %6, %1
  %16 = phi i8 [ %14, %6 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i8 %16, i64 0, metadata !2840, metadata !177), !dbg !2841
  ret i8 %16, !dbg !2863
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @enable_high_g_int(%struct.bmi160_acc_high_g_int_cfg*, %struct.bmi160_dev*) #1 !dbg !2864 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2869, metadata !177), !dbg !2870
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2871, metadata !177), !dbg !2872
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2873, metadata !177), !dbg !2874
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2875, metadata !177), !dbg !2876
  call void @llvm.dbg.value(metadata %struct.bmi160_acc_high_g_int_cfg* %0, i64 0, metadata !2869, metadata !177), !dbg !2870
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %1, i64 0, metadata !2871, metadata !177), !dbg !2872
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !2877
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !2871, metadata !177), !dbg !2877
  call void @llvm.dbg.declare(metadata i8* %3, metadata !2878, metadata !177), !dbg !2879
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1835, i32 0)
  store i8 0, i8* %3, align 1, !dbg !2879
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1836, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !2875, metadata !177), !dbg !2876
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1837, i32 81)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1838, i32 1)
  %4 = call signext i8 @bmi160_get_regs(i8 zeroext 81, i8* %3, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !2880
  call void @llvm.dbg.value(metadata i8 %4, i64 0, metadata !2873, metadata !177), !dbg !2881
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 1839, i8 %4)
  %5 = sext i8 %4 to i32, !dbg !2882
  %6 = icmp eq i32 %5, 0, !dbg !2884
  br i1 %6, label %7, label %49, !dbg !2885

; <label>:7:                                      ; preds = %2
  %8 = load i8, i8* %3, align 1, !dbg !2886
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1841, i8 %8)
  %9 = zext i8 %8 to i32, !dbg !2886
  %10 = and i32 %9, -2, !dbg !2888
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1840, i32 %10)
  %11 = trunc i32 %10 to i8, !dbg !2886
  call void @llvm.dbg.value(metadata i8 %11, i64 0, metadata !2875, metadata !177), !dbg !2889
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1843, i8 %11)
  %12 = zext i8 %11 to i32, !dbg !2890
  %13 = bitcast %struct.bmi160_acc_high_g_int_cfg* %0 to i8*, !dbg !2891
  %14 = load i8, i8* %13, align 1, !dbg !2891
  %15 = and i8 %14, 1, !dbg !2891
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1844, i8 %15)
  %16 = zext i8 %15 to i32, !dbg !2892
  %17 = and i32 %16, 1, !dbg !2893
  %18 = or i32 %12, %17, !dbg !2894
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1842, i32 %18)
  %19 = trunc i32 %18 to i8, !dbg !2890
  store i8 %19, i8* %3, align 1, !dbg !2895
  %20 = load i8, i8* %3, align 1, !dbg !2896
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1846, i8 %20)
  %21 = zext i8 %20 to i32, !dbg !2896
  %22 = and i32 %21, -3, !dbg !2897
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1845, i32 %22)
  %23 = trunc i32 %22 to i8, !dbg !2896
  call void @llvm.dbg.value(metadata i8 %23, i64 0, metadata !2875, metadata !177), !dbg !2898
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1848, i8 %23)
  %24 = zext i8 %23 to i32, !dbg !2899
  %25 = bitcast %struct.bmi160_acc_high_g_int_cfg* %0 to i8*, !dbg !2900
  %26 = load i8, i8* %25, align 1, !dbg !2900
  %27 = lshr i8 %26, 1, !dbg !2900
  %28 = and i8 %27, 1, !dbg !2900
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 1853, i8 %28)
  %29 = zext i8 %28 to i32, !dbg !2901
  call void @qpr.shift.by.amount.i32(i32 1850, i32 %29, i32 1)
  call void @qpr.shift.by.negative.i32(i32 1851, i32 %29, i32 1)
  call void @qpr.shift.of.negative.i32(i32 1852, i32 %29, i32 1)
  %30 = shl i32 %29, 1, !dbg !2902
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 1849, i32 %30)
  %31 = and i32 %30, 2, !dbg !2903
  %32 = or i32 %24, %31, !dbg !2904
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1847, i32 %32)
  %33 = trunc i32 %32 to i8, !dbg !2899
  store i8 %33, i8* %3, align 1, !dbg !2905
  %34 = load i8, i8* %3, align 1, !dbg !2906
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1855, i8 %34)
  %35 = zext i8 %34 to i32, !dbg !2906
  %36 = and i32 %35, -5, !dbg !2907
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1854, i32 %36)
  %37 = trunc i32 %36 to i8, !dbg !2906
  call void @llvm.dbg.value(metadata i8 %37, i64 0, metadata !2875, metadata !177), !dbg !2908
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1857, i8 %37)
  %38 = zext i8 %37 to i32, !dbg !2909
  %39 = bitcast %struct.bmi160_acc_high_g_int_cfg* %0 to i8*, !dbg !2910
  %40 = load i8, i8* %39, align 1, !dbg !2910
  %41 = lshr i8 %40, 2, !dbg !2910
  %42 = and i8 %41, 1, !dbg !2910
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 1862, i8 %42)
  %43 = zext i8 %42 to i32, !dbg !2911
  call void @qpr.shift.by.amount.i32(i32 1859, i32 %43, i32 2)
  call void @qpr.shift.by.negative.i32(i32 1860, i32 %43, i32 2)
  call void @qpr.shift.of.negative.i32(i32 1861, i32 %43, i32 2)
  %44 = shl i32 %43, 2, !dbg !2912
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 1858, i32 %44)
  %45 = and i32 %44, 4, !dbg !2913
  %46 = or i32 %38, %45, !dbg !2914
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1856, i32 %46)
  %47 = trunc i32 %46 to i8, !dbg !2909
  store i8 %47, i8* %3, align 1, !dbg !2915
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1863, i32 81)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1864, i32 1)
  %48 = call signext i8 @bmi160_set_regs(i8 zeroext 81, i8* %3, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !2916
  call void @llvm.dbg.value(metadata i8 %48, i64 0, metadata !2873, metadata !177), !dbg !2917
  br label %49, !dbg !2918

; <label>:49:                                     ; preds = %7, %2
  %50 = phi i8 [ %48, %7 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i8 %50, i64 0, metadata !2873, metadata !177), !dbg !2874
  ret i8 %50, !dbg !2919
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @map_feature_interrupt(%struct.bmi160_int_settg*, %struct.bmi160_dev*) #1 !dbg !2920 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2921, metadata !177), !dbg !2922
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2923, metadata !177), !dbg !2924
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !2925, metadata !177), !dbg !2926
  %3 = alloca [3 x i8], align 1
  %4 = alloca [3 x i8], align 1
  call void @llvm.dbg.value(metadata %struct.bmi160_int_settg* %0, i64 0, metadata !2921, metadata !177), !dbg !2922
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %1, i64 0, metadata !2923, metadata !177), !dbg !2924
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !2927
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !2923, metadata !177), !dbg !2927
  call void @llvm.dbg.declare(metadata [3 x i8]* %3, metadata !2928, metadata !177), !dbg !2932
  %5 = bitcast [3 x i8]* %3 to i8*, !dbg !2932
  call void @llvm.memset.p0i8.i64(i8* %5, i8 0, i64 3, i32 1, i1 false), !dbg !2932
  call void @llvm.dbg.declare(metadata [3 x i8]* %4, metadata !2933, metadata !177), !dbg !2934
  %6 = bitcast [3 x i8]* %4 to i8*, !dbg !2934
  call void @llvm.memset.p0i8.i64(i8* %6, i8 0, i64 3, i32 1, i1 false), !dbg !2934
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1107, i32 85)
  %7 = getelementptr inbounds [3 x i8], [3 x i8]* %3, i32 0, i32 0, !dbg !2935
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1108, i32 3)
  %8 = call signext i8 @bmi160_get_regs(i8 zeroext 85, i8* %7, i16 zeroext 3, %struct.bmi160_dev* @configStub) #5, !dbg !2936
  call void @llvm.dbg.value(metadata i8 %8, i64 0, metadata !2925, metadata !177), !dbg !2937
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 1109, i8 %8)
  %9 = sext i8 %8 to i32, !dbg !2938
  %10 = icmp eq i32 %9, 0, !dbg !2940
  br i1 %10, label %11, label %114, !dbg !2941

; <label>:11:                                     ; preds = %2
  %12 = getelementptr inbounds [3 x i8], [3 x i8]* %3, i64 0, i64 0, !dbg !2942
  %13 = load i8, i8* %12, align 1, !dbg !2942
  call void @qpr.arrayindex.i32.i2(i32 1113, i32 0, i2 -1)
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 1112, i8 %13)
  %14 = zext i8 %13 to i32, !dbg !2942
  %15 = getelementptr inbounds %struct.bmi160_int_settg, %struct.bmi160_int_settg* %0, i32 0, i32 1, !dbg !2944
  %16 = load i32, i32* %15, align 4, !dbg !2944
  %17 = zext i32 %16 to i64, !dbg !2945
  %18 = getelementptr inbounds [13 x i8], [13 x i8]* @int_mask_lookup_table, i64 0, i64 %17, !dbg !2945
  %19 = load i8, i8* %18, align 1, !dbg !2945
  call void @qpr.arrayindex.i32.i4(i32 1115, i32 %16, i4 -3)
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 1114, i8 %19)
  %20 = zext i8 %19 to i32, !dbg !2945
  %21 = xor i32 %20, -1, !dbg !2946
  %22 = and i32 %14, %21, !dbg !2947
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1111, i32 %22)
  %23 = trunc i32 %22 to i8, !dbg !2942
  %24 = getelementptr inbounds [3 x i8], [3 x i8]* %4, i64 0, i64 0, !dbg !2948
  call void @qpr.arrayindex.i32.i2(i32 1110, i32 0, i2 -1)
  store i8 %23, i8* %24, align 1, !dbg !2949
  %25 = getelementptr inbounds [3 x i8], [3 x i8]* %3, i64 0, i64 2, !dbg !2950
  %26 = load i8, i8* %25, align 1, !dbg !2950
  call void @qpr.arrayindex.i32.i2(i32 1119, i32 2, i2 -1)
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 1118, i8 %26)
  %27 = zext i8 %26 to i32, !dbg !2950
  %28 = getelementptr inbounds %struct.bmi160_int_settg, %struct.bmi160_int_settg* %0, i32 0, i32 1, !dbg !2951
  %29 = load i32, i32* %28, align 4, !dbg !2951
  %30 = zext i32 %29 to i64, !dbg !2952
  %31 = getelementptr inbounds [13 x i8], [13 x i8]* @int_mask_lookup_table, i64 0, i64 %30, !dbg !2952
  %32 = load i8, i8* %31, align 1, !dbg !2952
  call void @qpr.arrayindex.i32.i4(i32 1121, i32 %29, i4 -3)
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 1120, i8 %32)
  %33 = zext i8 %32 to i32, !dbg !2952
  %34 = xor i32 %33, -1, !dbg !2953
  %35 = and i32 %27, %34, !dbg !2954
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1117, i32 %35)
  %36 = trunc i32 %35 to i8, !dbg !2950
  %37 = getelementptr inbounds [3 x i8], [3 x i8]* %4, i64 0, i64 2, !dbg !2955
  call void @qpr.arrayindex.i32.i2(i32 1116, i32 2, i2 -1)
  store i8 %36, i8* %37, align 1, !dbg !2956
  %38 = getelementptr inbounds %struct.bmi160_int_settg, %struct.bmi160_int_settg* %0, i32 0, i32 0, !dbg !2957
  %39 = load i32, i32* %38, align 4, !dbg !2957
  call void @qpr.implicit.conversion.overflow.u32.u32(i32 1122, i32 %39)
  switch i32 %39, label %104 [
    i32 0, label %40
    i32 1, label %47
    i32 2, label %63
    i32 3, label %79
  ], !dbg !2958

; <label>:40:                                     ; preds = %11
  %41 = getelementptr inbounds [3 x i8], [3 x i8]* %4, i64 0, i64 0, !dbg !2959
  %42 = load i8, i8* %41, align 1, !dbg !2959
  call void @qpr.arrayindex.i32.i2(i32 1125, i32 0, i2 -1)
  %43 = getelementptr inbounds [3 x i8], [3 x i8]* %3, i64 0, i64 0, !dbg !2961
  call void @qpr.arrayindex.i32.i2(i32 1124, i32 0, i2 -1)
  store i8 %42, i8* %43, align 1, !dbg !2962
  %44 = getelementptr inbounds [3 x i8], [3 x i8]* %4, i64 0, i64 2, !dbg !2963
  %45 = load i8, i8* %44, align 1, !dbg !2963
  call void @qpr.arrayindex.i32.i2(i32 1127, i32 2, i2 -1)
  %46 = getelementptr inbounds [3 x i8], [3 x i8]* %3, i64 0, i64 2, !dbg !2964
  call void @qpr.arrayindex.i32.i2(i32 1126, i32 2, i2 -1)
  store i8 %45, i8* %46, align 1, !dbg !2965
  br label %105, !dbg !2966

; <label>:47:                                     ; preds = %11
  %48 = getelementptr inbounds [3 x i8], [3 x i8]* %4, i64 0, i64 0, !dbg !2967
  %49 = load i8, i8* %48, align 1, !dbg !2967
  call void @qpr.arrayindex.i32.i2(i32 1132, i32 0, i2 -1)
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 1131, i8 %49)
  %50 = zext i8 %49 to i32, !dbg !2967
  %51 = getelementptr inbounds %struct.bmi160_int_settg, %struct.bmi160_int_settg* %0, i32 0, i32 1, !dbg !2968
  %52 = load i32, i32* %51, align 4, !dbg !2968
  %53 = zext i32 %52 to i64, !dbg !2969
  %54 = getelementptr inbounds [13 x i8], [13 x i8]* @int_mask_lookup_table, i64 0, i64 %53, !dbg !2969
  %55 = load i8, i8* %54, align 1, !dbg !2969
  call void @qpr.arrayindex.i32.i4(i32 1134, i32 %52, i4 -3)
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 1133, i8 %55)
  %56 = zext i8 %55 to i32, !dbg !2969
  %57 = or i32 %50, %56, !dbg !2970
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1130, i32 %57)
  %58 = trunc i32 %57 to i8, !dbg !2967
  %59 = getelementptr inbounds [3 x i8], [3 x i8]* %3, i64 0, i64 0, !dbg !2971
  call void @qpr.arrayindex.i32.i2(i32 1129, i32 0, i2 -1)
  store i8 %58, i8* %59, align 1, !dbg !2972
  %60 = getelementptr inbounds [3 x i8], [3 x i8]* %4, i64 0, i64 2, !dbg !2973
  %61 = load i8, i8* %60, align 1, !dbg !2973
  call void @qpr.arrayindex.i32.i2(i32 1136, i32 2, i2 -1)
  %62 = getelementptr inbounds [3 x i8], [3 x i8]* %3, i64 0, i64 2, !dbg !2974
  call void @qpr.arrayindex.i32.i2(i32 1135, i32 2, i2 -1)
  store i8 %61, i8* %62, align 1, !dbg !2975
  br label %105, !dbg !2976

; <label>:63:                                     ; preds = %11
  %64 = getelementptr inbounds [3 x i8], [3 x i8]* %4, i64 0, i64 2, !dbg !2977
  %65 = load i8, i8* %64, align 1, !dbg !2977
  call void @qpr.arrayindex.i32.i2(i32 1141, i32 2, i2 -1)
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 1140, i8 %65)
  %66 = zext i8 %65 to i32, !dbg !2977
  %67 = getelementptr inbounds %struct.bmi160_int_settg, %struct.bmi160_int_settg* %0, i32 0, i32 1, !dbg !2978
  %68 = load i32, i32* %67, align 4, !dbg !2978
  %69 = zext i32 %68 to i64, !dbg !2979
  %70 = getelementptr inbounds [13 x i8], [13 x i8]* @int_mask_lookup_table, i64 0, i64 %69, !dbg !2979
  %71 = load i8, i8* %70, align 1, !dbg !2979
  call void @qpr.arrayindex.i32.i4(i32 1143, i32 %68, i4 -3)
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 1142, i8 %71)
  %72 = zext i8 %71 to i32, !dbg !2979
  %73 = or i32 %66, %72, !dbg !2980
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1139, i32 %73)
  %74 = trunc i32 %73 to i8, !dbg !2977
  %75 = getelementptr inbounds [3 x i8], [3 x i8]* %3, i64 0, i64 2, !dbg !2981
  call void @qpr.arrayindex.i32.i2(i32 1138, i32 2, i2 -1)
  store i8 %74, i8* %75, align 1, !dbg !2982
  %76 = getelementptr inbounds [3 x i8], [3 x i8]* %4, i64 0, i64 0, !dbg !2983
  %77 = load i8, i8* %76, align 1, !dbg !2983
  call void @qpr.arrayindex.i32.i2(i32 1145, i32 0, i2 -1)
  %78 = getelementptr inbounds [3 x i8], [3 x i8]* %3, i64 0, i64 0, !dbg !2984
  call void @qpr.arrayindex.i32.i2(i32 1144, i32 0, i2 -1)
  store i8 %77, i8* %78, align 1, !dbg !2985
  br label %105, !dbg !2986

; <label>:79:                                     ; preds = %11
  %80 = getelementptr inbounds [3 x i8], [3 x i8]* %4, i64 0, i64 0, !dbg !2987
  %81 = load i8, i8* %80, align 1, !dbg !2987
  call void @qpr.arrayindex.i32.i2(i32 1150, i32 0, i2 -1)
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 1149, i8 %81)
  %82 = zext i8 %81 to i32, !dbg !2987
  %83 = getelementptr inbounds %struct.bmi160_int_settg, %struct.bmi160_int_settg* %0, i32 0, i32 1, !dbg !2988
  %84 = load i32, i32* %83, align 4, !dbg !2988
  %85 = zext i32 %84 to i64, !dbg !2989
  %86 = getelementptr inbounds [13 x i8], [13 x i8]* @int_mask_lookup_table, i64 0, i64 %85, !dbg !2989
  %87 = load i8, i8* %86, align 1, !dbg !2989
  call void @qpr.arrayindex.i32.i4(i32 1152, i32 %84, i4 -3)
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 1151, i8 %87)
  %88 = zext i8 %87 to i32, !dbg !2989
  %89 = or i32 %82, %88, !dbg !2990
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1148, i32 %89)
  %90 = trunc i32 %89 to i8, !dbg !2987
  %91 = getelementptr inbounds [3 x i8], [3 x i8]* %3, i64 0, i64 0, !dbg !2991
  call void @qpr.arrayindex.i32.i2(i32 1147, i32 0, i2 -1)
  store i8 %90, i8* %91, align 1, !dbg !2992
  %92 = getelementptr inbounds [3 x i8], [3 x i8]* %4, i64 0, i64 2, !dbg !2993
  %93 = load i8, i8* %92, align 1, !dbg !2993
  call void @qpr.arrayindex.i32.i2(i32 1156, i32 2, i2 -1)
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 1155, i8 %93)
  %94 = zext i8 %93 to i32, !dbg !2993
  %95 = getelementptr inbounds %struct.bmi160_int_settg, %struct.bmi160_int_settg* %0, i32 0, i32 1, !dbg !2994
  %96 = load i32, i32* %95, align 4, !dbg !2994
  %97 = zext i32 %96 to i64, !dbg !2995
  %98 = getelementptr inbounds [13 x i8], [13 x i8]* @int_mask_lookup_table, i64 0, i64 %97, !dbg !2995
  %99 = load i8, i8* %98, align 1, !dbg !2995
  call void @qpr.arrayindex.i32.i4(i32 1158, i32 %96, i4 -3)
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 1157, i8 %99)
  %100 = zext i8 %99 to i32, !dbg !2995
  %101 = or i32 %94, %100, !dbg !2996
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1154, i32 %101)
  %102 = trunc i32 %101 to i8, !dbg !2993
  %103 = getelementptr inbounds [3 x i8], [3 x i8]* %3, i64 0, i64 2, !dbg !2997
  call void @qpr.arrayindex.i32.i2(i32 1153, i32 2, i2 -1)
  store i8 %102, i8* %103, align 1, !dbg !2998
  br label %105, !dbg !2999

; <label>:104:                                    ; preds = %11
  call void @qpr.arithmetic.overflow.ssub.i32(i32 1160, i32 0, i32 4)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 1159, i32 -4)
  call void @llvm.dbg.value(metadata i8 -4, i64 0, metadata !2925, metadata !177), !dbg !3000
  br label %105, !dbg !3001

; <label>:105:                                    ; preds = %104, %79, %63, %47, %40
  %106 = phi i8 [ -4, %104 ], [ %8, %79 ], [ %8, %63 ], [ %8, %47 ], [ %8, %40 ]
  call void @llvm.dbg.value(metadata i8 %106, i64 0, metadata !2925, metadata !177), !dbg !2926
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 1161, i8 %106)
  %107 = sext i8 %106 to i32, !dbg !3002
  %108 = icmp eq i32 %107, 0, !dbg !3004
  br i1 %108, label %109, label %112, !dbg !3005

; <label>:109:                                    ; preds = %105
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1162, i32 85)
  %110 = getelementptr inbounds [3 x i8], [3 x i8]* %3, i32 0, i32 0, !dbg !3006
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1163, i32 3)
  %111 = call signext i8 @bmi160_set_regs(i8 zeroext 85, i8* %110, i16 zeroext 3, %struct.bmi160_dev* @configStub) #5, !dbg !3007
  call void @llvm.dbg.value(metadata i8 %111, i64 0, metadata !2925, metadata !177), !dbg !3008
  br label %112, !dbg !3009

; <label>:112:                                    ; preds = %109, %105
  %113 = phi i8 [ %111, %109 ], [ %106, %105 ]
  call void @llvm.dbg.value(metadata i8 %113, i64 0, metadata !2925, metadata !177), !dbg !2926
  br label %114, !dbg !3010

; <label>:114:                                    ; preds = %112, %2
  %115 = phi i8 [ %113, %112 ], [ %8, %2 ]
  call void @llvm.dbg.value(metadata i8 %115, i64 0, metadata !2925, metadata !177), !dbg !2926
  ret i8 %115, !dbg !3011
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @config_high_g_data_src(%struct.bmi160_acc_high_g_int_cfg*, %struct.bmi160_dev*) #1 !dbg !3012 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3013, metadata !177), !dbg !3014
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3015, metadata !177), !dbg !3016
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3017, metadata !177), !dbg !3018
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3019, metadata !177), !dbg !3020
  call void @llvm.dbg.value(metadata %struct.bmi160_acc_high_g_int_cfg* %0, i64 0, metadata !3013, metadata !177), !dbg !3014
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %1, i64 0, metadata !3015, metadata !177), !dbg !3016
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !3021
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !3015, metadata !177), !dbg !3021
  call void @llvm.dbg.declare(metadata i8* %3, metadata !3022, metadata !177), !dbg !3023
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1865, i32 0)
  store i8 0, i8* %3, align 1, !dbg !3023
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1866, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !3019, metadata !177), !dbg !3020
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1867, i32 88)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1868, i32 1)
  %4 = call signext i8 @bmi160_get_regs(i8 zeroext 88, i8* %3, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !3024
  call void @llvm.dbg.value(metadata i8 %4, i64 0, metadata !3017, metadata !177), !dbg !3025
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 1869, i8 %4)
  %5 = sext i8 %4 to i32, !dbg !3026
  %6 = icmp eq i32 %5, 0, !dbg !3028
  br i1 %6, label %7, label %23, !dbg !3029

; <label>:7:                                      ; preds = %2
  %8 = load i8, i8* %3, align 1, !dbg !3030
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1871, i8 %8)
  %9 = zext i8 %8 to i32, !dbg !3030
  %10 = and i32 %9, -129, !dbg !3032
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1870, i32 %10)
  %11 = trunc i32 %10 to i8, !dbg !3030
  call void @llvm.dbg.value(metadata i8 %11, i64 0, metadata !3019, metadata !177), !dbg !3033
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1873, i8 %11)
  %12 = zext i8 %11 to i32, !dbg !3034
  %13 = bitcast %struct.bmi160_acc_high_g_int_cfg* %0 to i8*, !dbg !3035
  %14 = load i8, i8* %13, align 1, !dbg !3035
  %15 = lshr i8 %14, 5, !dbg !3035
  %16 = and i8 %15, 1, !dbg !3035
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 1878, i8 %16)
  %17 = zext i8 %16 to i32, !dbg !3036
  call void @qpr.shift.by.amount.i32(i32 1875, i32 %17, i32 7)
  call void @qpr.shift.by.negative.i32(i32 1876, i32 %17, i32 7)
  call void @qpr.shift.of.negative.i32(i32 1877, i32 %17, i32 7)
  %18 = shl i32 %17, 7, !dbg !3037
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 1874, i32 %18)
  %19 = and i32 %18, 128, !dbg !3038
  %20 = or i32 %12, %19, !dbg !3039
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1872, i32 %20)
  %21 = trunc i32 %20 to i8, !dbg !3034
  store i8 %21, i8* %3, align 1, !dbg !3040
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1879, i32 88)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1880, i32 1)
  %22 = call signext i8 @bmi160_set_regs(i8 zeroext 88, i8* %3, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !3041
  call void @llvm.dbg.value(metadata i8 %22, i64 0, metadata !3017, metadata !177), !dbg !3042
  br label %23, !dbg !3043

; <label>:23:                                     ; preds = %7, %2
  %24 = phi i8 [ %22, %7 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i8 %24, i64 0, metadata !3017, metadata !177), !dbg !3018
  ret i8 %24, !dbg !3044
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @config_high_g_int_settg(%struct.bmi160_acc_high_g_int_cfg*, %struct.bmi160_dev*) #1 !dbg !3045 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3046, metadata !177), !dbg !3047
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3048, metadata !177), !dbg !3049
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3050, metadata !177), !dbg !3051
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3052, metadata !177), !dbg !3053
  %3 = alloca [3 x i8], align 1
  call void @llvm.dbg.value(metadata %struct.bmi160_acc_high_g_int_cfg* %0, i64 0, metadata !3046, metadata !177), !dbg !3047
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %1, i64 0, metadata !3048, metadata !177), !dbg !3049
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !3054
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !3048, metadata !177), !dbg !3054
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1881, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !3052, metadata !177), !dbg !3053
  call void @llvm.dbg.declare(metadata [3 x i8]* %3, metadata !3055, metadata !177), !dbg !3056
  %4 = bitcast [3 x i8]* %3 to i8*, !dbg !3056
  call void @llvm.memset.p0i8.i64(i8* %4, i8 0, i64 3, i32 1, i1 false), !dbg !3056
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1885, i32 92)
  %5 = getelementptr inbounds [3 x i8], [3 x i8]* %3, i64 0, i64 0, !dbg !3057
  call void @qpr.arrayindex.i32.i2(i32 1886, i32 0, i2 -1)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1887, i32 1)
  %6 = call signext i8 @bmi160_get_regs(i8 zeroext 92, i8* %5, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !3058
  call void @llvm.dbg.value(metadata i8 %6, i64 0, metadata !3050, metadata !177), !dbg !3059
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 1888, i8 %6)
  %7 = sext i8 %6 to i32, !dbg !3060
  %8 = icmp eq i32 %7, 0, !dbg !3062
  br i1 %8, label %9, label %34, !dbg !3063

; <label>:9:                                      ; preds = %2
  %10 = getelementptr inbounds [3 x i8], [3 x i8]* %3, i64 0, i64 0, !dbg !3064
  %11 = load i8, i8* %10, align 1, !dbg !3064
  call void @qpr.arrayindex.i32.i2(i32 1891, i32 0, i2 -1)
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1890, i8 %11)
  %12 = zext i8 %11 to i32, !dbg !3064
  %13 = and i32 %12, -193, !dbg !3066
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1889, i32 %13)
  %14 = trunc i32 %13 to i8, !dbg !3064
  call void @llvm.dbg.value(metadata i8 %14, i64 0, metadata !3052, metadata !177), !dbg !3067
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1894, i8 %14)
  %15 = zext i8 %14 to i32, !dbg !3068
  %16 = bitcast %struct.bmi160_acc_high_g_int_cfg* %0 to i8*, !dbg !3069
  %17 = load i8, i8* %16, align 1, !dbg !3069
  %18 = lshr i8 %17, 3, !dbg !3069
  %19 = and i8 %18, 3, !dbg !3069
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 1899, i8 %19)
  %20 = zext i8 %19 to i32, !dbg !3070
  call void @qpr.shift.by.amount.i32(i32 1896, i32 %20, i32 6)
  call void @qpr.shift.by.negative.i32(i32 1897, i32 %20, i32 6)
  call void @qpr.shift.of.negative.i32(i32 1898, i32 %20, i32 6)
  %21 = shl i32 %20, 6, !dbg !3071
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 1895, i32 %21)
  %22 = and i32 %21, 192, !dbg !3072
  %23 = or i32 %15, %22, !dbg !3073
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1893, i32 %23)
  %24 = trunc i32 %23 to i8, !dbg !3068
  %25 = getelementptr inbounds [3 x i8], [3 x i8]* %3, i64 0, i64 0, !dbg !3074
  call void @qpr.arrayindex.i32.i2(i32 1892, i32 0, i2 -1)
  store i8 %24, i8* %25, align 1, !dbg !3075
  %26 = getelementptr inbounds %struct.bmi160_acc_high_g_int_cfg, %struct.bmi160_acc_high_g_int_cfg* %0, i32 0, i32 2, !dbg !3076
  %27 = load i8, i8* %26, align 1, !dbg !3076
  %28 = getelementptr inbounds [3 x i8], [3 x i8]* %3, i64 0, i64 1, !dbg !3077
  call void @qpr.arrayindex.i32.i2(i32 1900, i32 1, i2 -1)
  store i8 %27, i8* %28, align 1, !dbg !3078
  %29 = getelementptr inbounds %struct.bmi160_acc_high_g_int_cfg, %struct.bmi160_acc_high_g_int_cfg* %0, i32 0, i32 1, !dbg !3079
  %30 = load i8, i8* %29, align 1, !dbg !3079
  %31 = getelementptr inbounds [3 x i8], [3 x i8]* %3, i64 0, i64 2, !dbg !3080
  call void @qpr.arrayindex.i32.i2(i32 1901, i32 2, i2 -1)
  store i8 %30, i8* %31, align 1, !dbg !3081
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1902, i32 92)
  %32 = getelementptr inbounds [3 x i8], [3 x i8]* %3, i32 0, i32 0, !dbg !3082
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1903, i32 3)
  %33 = call signext i8 @bmi160_set_regs(i8 zeroext 92, i8* %32, i16 zeroext 3, %struct.bmi160_dev* @configStub) #5, !dbg !3083
  call void @llvm.dbg.value(metadata i8 %33, i64 0, metadata !3050, metadata !177), !dbg !3084
  br label %34, !dbg !3085

; <label>:34:                                     ; preds = %9, %2
  %35 = phi i8 [ %33, %9 ], [ %6, %2 ]
  call void @llvm.dbg.value(metadata i8 %35, i64 0, metadata !3050, metadata !177), !dbg !3051
  ret i8 %35, !dbg !3086
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @enable_low_g_int(%struct.bmi160_acc_high_g_int_cfg*, %struct.bmi160_dev*) #1 !dbg !3087 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3092, metadata !177), !dbg !3093
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3094, metadata !177), !dbg !3095
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3096, metadata !177), !dbg !3097
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3098, metadata !177), !dbg !3099
  call void @llvm.dbg.value(metadata %struct.bmi160_acc_high_g_int_cfg* %0, i64 0, metadata !3092, metadata !177), !dbg !3093
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %1, i64 0, metadata !3094, metadata !177), !dbg !3095
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !3100
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !3094, metadata !177), !dbg !3100
  call void @llvm.dbg.declare(metadata i8* %3, metadata !3101, metadata !177), !dbg !3102
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1773, i32 0)
  store i8 0, i8* %3, align 1, !dbg !3102
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1774, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !3098, metadata !177), !dbg !3099
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1775, i32 81)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1776, i32 1)
  %4 = call signext i8 @bmi160_get_regs(i8 zeroext 81, i8* %3, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !3103
  call void @llvm.dbg.value(metadata i8 %4, i64 0, metadata !3096, metadata !177), !dbg !3104
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 1777, i8 %4)
  %5 = sext i8 %4 to i32, !dbg !3105
  %6 = icmp eq i32 %5, 0, !dbg !3107
  br i1 %6, label %7, label %23, !dbg !3108

; <label>:7:                                      ; preds = %2
  %8 = load i8, i8* %3, align 1, !dbg !3109
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1779, i8 %8)
  %9 = zext i8 %8 to i32, !dbg !3109
  %10 = and i32 %9, -9, !dbg !3111
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1778, i32 %10)
  %11 = trunc i32 %10 to i8, !dbg !3109
  call void @llvm.dbg.value(metadata i8 %11, i64 0, metadata !3098, metadata !177), !dbg !3112
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1781, i8 %11)
  %12 = zext i8 %11 to i32, !dbg !3113
  %13 = getelementptr inbounds %struct.bmi160_acc_high_g_int_cfg, %struct.bmi160_acc_high_g_int_cfg* %0, i32 0, i32 2, !dbg !3114
  %14 = load i8, i8* %13, align 1, !dbg !3114
  %15 = lshr i8 %14, 4, !dbg !3114
  %16 = and i8 %15, 1, !dbg !3114
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 1786, i8 %16)
  %17 = zext i8 %16 to i32, !dbg !3115
  call void @qpr.shift.by.amount.i32(i32 1783, i32 %17, i32 3)
  call void @qpr.shift.by.negative.i32(i32 1784, i32 %17, i32 3)
  call void @qpr.shift.of.negative.i32(i32 1785, i32 %17, i32 3)
  %18 = shl i32 %17, 3, !dbg !3116
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 1782, i32 %18)
  %19 = and i32 %18, 8, !dbg !3117
  %20 = or i32 %12, %19, !dbg !3118
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1780, i32 %20)
  %21 = trunc i32 %20 to i8, !dbg !3113
  store i8 %21, i8* %3, align 1, !dbg !3119
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1787, i32 81)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1788, i32 1)
  %22 = call signext i8 @bmi160_set_regs(i8 zeroext 81, i8* %3, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !3120
  call void @llvm.dbg.value(metadata i8 %22, i64 0, metadata !3096, metadata !177), !dbg !3121
  br label %23, !dbg !3122

; <label>:23:                                     ; preds = %7, %2
  %24 = phi i8 [ %22, %7 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i8 %24, i64 0, metadata !3096, metadata !177), !dbg !3097
  ret i8 %24, !dbg !3123
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @config_low_g_data_src(%struct.bmi160_acc_high_g_int_cfg*, %struct.bmi160_dev*) #1 !dbg !3124 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3125, metadata !177), !dbg !3126
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3127, metadata !177), !dbg !3128
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3129, metadata !177), !dbg !3130
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3131, metadata !177), !dbg !3132
  call void @llvm.dbg.value(metadata %struct.bmi160_acc_high_g_int_cfg* %0, i64 0, metadata !3125, metadata !177), !dbg !3126
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %1, i64 0, metadata !3127, metadata !177), !dbg !3128
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !3133
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !3127, metadata !177), !dbg !3133
  call void @llvm.dbg.declare(metadata i8* %3, metadata !3134, metadata !177), !dbg !3135
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1789, i32 0)
  store i8 0, i8* %3, align 1, !dbg !3135
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1790, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !3131, metadata !177), !dbg !3132
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1791, i32 88)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1792, i32 1)
  %4 = call signext i8 @bmi160_get_regs(i8 zeroext 88, i8* %3, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !3136
  call void @llvm.dbg.value(metadata i8 %4, i64 0, metadata !3129, metadata !177), !dbg !3137
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 1793, i8 %4)
  %5 = sext i8 %4 to i32, !dbg !3138
  %6 = icmp eq i32 %5, 0, !dbg !3140
  br i1 %6, label %7, label %23, !dbg !3141

; <label>:7:                                      ; preds = %2
  %8 = load i8, i8* %3, align 1, !dbg !3142
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1795, i8 %8)
  %9 = zext i8 %8 to i32, !dbg !3142
  %10 = and i32 %9, -129, !dbg !3144
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1794, i32 %10)
  %11 = trunc i32 %10 to i8, !dbg !3142
  call void @llvm.dbg.value(metadata i8 %11, i64 0, metadata !3131, metadata !177), !dbg !3145
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1797, i8 %11)
  %12 = zext i8 %11 to i32, !dbg !3146
  %13 = getelementptr inbounds %struct.bmi160_acc_high_g_int_cfg, %struct.bmi160_acc_high_g_int_cfg* %0, i32 0, i32 2, !dbg !3147
  %14 = load i8, i8* %13, align 1, !dbg !3147
  %15 = lshr i8 %14, 3, !dbg !3147
  %16 = and i8 %15, 1, !dbg !3147
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 1802, i8 %16)
  %17 = zext i8 %16 to i32, !dbg !3148
  call void @qpr.shift.by.amount.i32(i32 1799, i32 %17, i32 7)
  call void @qpr.shift.by.negative.i32(i32 1800, i32 %17, i32 7)
  call void @qpr.shift.of.negative.i32(i32 1801, i32 %17, i32 7)
  %18 = shl i32 %17, 7, !dbg !3149
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 1798, i32 %18)
  %19 = and i32 %18, 128, !dbg !3150
  %20 = or i32 %12, %19, !dbg !3151
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1796, i32 %20)
  %21 = trunc i32 %20 to i8, !dbg !3146
  store i8 %21, i8* %3, align 1, !dbg !3152
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1803, i32 88)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1804, i32 1)
  %22 = call signext i8 @bmi160_set_regs(i8 zeroext 88, i8* %3, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !3153
  call void @llvm.dbg.value(metadata i8 %22, i64 0, metadata !3129, metadata !177), !dbg !3154
  br label %23, !dbg !3155

; <label>:23:                                     ; preds = %7, %2
  %24 = phi i8 [ %22, %7 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i8 %24, i64 0, metadata !3129, metadata !177), !dbg !3130
  ret i8 %24, !dbg !3156
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @config_low_g_int_settg(%struct.bmi160_acc_high_g_int_cfg*, %struct.bmi160_dev*) #1 !dbg !3157 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3158, metadata !177), !dbg !3159
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3160, metadata !177), !dbg !3161
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3162, metadata !177), !dbg !3163
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3164, metadata !177), !dbg !3165
  %3 = alloca [3 x i8], align 1
  call void @llvm.dbg.value(metadata %struct.bmi160_acc_high_g_int_cfg* %0, i64 0, metadata !3158, metadata !177), !dbg !3159
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %1, i64 0, metadata !3160, metadata !177), !dbg !3161
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !3166
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !3160, metadata !177), !dbg !3166
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1805, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !3164, metadata !177), !dbg !3165
  call void @llvm.dbg.declare(metadata [3 x i8]* %3, metadata !3167, metadata !177), !dbg !3168
  %4 = bitcast [3 x i8]* %3 to i8*, !dbg !3168
  call void @llvm.memset.p0i8.i64(i8* %4, i8 0, i64 3, i32 1, i1 false), !dbg !3168
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1809, i32 92)
  %5 = getelementptr inbounds [3 x i8], [3 x i8]* %3, i64 0, i64 2, !dbg !3169
  call void @qpr.arrayindex.i32.i2(i32 1810, i32 2, i2 -1)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1811, i32 1)
  %6 = call signext i8 @bmi160_get_regs(i8 zeroext 92, i8* %5, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !3170
  call void @llvm.dbg.value(metadata i8 %6, i64 0, metadata !3162, metadata !177), !dbg !3171
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 1812, i8 %6)
  %7 = sext i8 %6 to i32, !dbg !3172
  %8 = icmp eq i32 %7, 0, !dbg !3174
  br i1 %8, label %9, label %48, !dbg !3175

; <label>:9:                                      ; preds = %2
  %10 = getelementptr inbounds [3 x i8], [3 x i8]* %3, i64 0, i64 2, !dbg !3176
  %11 = load i8, i8* %10, align 1, !dbg !3176
  call void @qpr.arrayindex.i32.i2(i32 1815, i32 2, i2 -1)
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1814, i8 %11)
  %12 = zext i8 %11 to i32, !dbg !3176
  %13 = and i32 %12, -4, !dbg !3178
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1813, i32 %13)
  %14 = trunc i32 %13 to i8, !dbg !3176
  call void @llvm.dbg.value(metadata i8 %14, i64 0, metadata !3164, metadata !177), !dbg !3179
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1818, i8 %14)
  %15 = zext i8 %14 to i32, !dbg !3180
  %16 = getelementptr inbounds %struct.bmi160_acc_high_g_int_cfg, %struct.bmi160_acc_high_g_int_cfg* %0, i32 0, i32 2, !dbg !3181
  %17 = load i8, i8* %16, align 1, !dbg !3181
  %18 = and i8 %17, 3, !dbg !3181
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1819, i8 %18)
  %19 = zext i8 %18 to i32, !dbg !3182
  %20 = and i32 %19, 3, !dbg !3183
  %21 = or i32 %15, %20, !dbg !3184
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1817, i32 %21)
  %22 = trunc i32 %21 to i8, !dbg !3180
  %23 = getelementptr inbounds [3 x i8], [3 x i8]* %3, i64 0, i64 2, !dbg !3185
  call void @qpr.arrayindex.i32.i2(i32 1816, i32 2, i2 -1)
  store i8 %22, i8* %23, align 1, !dbg !3186
  %24 = getelementptr inbounds [3 x i8], [3 x i8]* %3, i64 0, i64 2, !dbg !3187
  %25 = load i8, i8* %24, align 1, !dbg !3187
  call void @qpr.arrayindex.i32.i2(i32 1822, i32 2, i2 -1)
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1821, i8 %25)
  %26 = zext i8 %25 to i32, !dbg !3187
  %27 = and i32 %26, -5, !dbg !3188
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1820, i32 %27)
  %28 = trunc i32 %27 to i8, !dbg !3187
  call void @llvm.dbg.value(metadata i8 %28, i64 0, metadata !3164, metadata !177), !dbg !3189
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1825, i8 %28)
  %29 = zext i8 %28 to i32, !dbg !3190
  %30 = getelementptr inbounds %struct.bmi160_acc_high_g_int_cfg, %struct.bmi160_acc_high_g_int_cfg* %0, i32 0, i32 2, !dbg !3191
  %31 = load i8, i8* %30, align 1, !dbg !3191
  %32 = lshr i8 %31, 2, !dbg !3191
  %33 = and i8 %32, 1, !dbg !3191
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 1830, i8 %33)
  %34 = zext i8 %33 to i32, !dbg !3192
  call void @qpr.shift.by.amount.i32(i32 1827, i32 %34, i32 2)
  call void @qpr.shift.by.negative.i32(i32 1828, i32 %34, i32 2)
  call void @qpr.shift.of.negative.i32(i32 1829, i32 %34, i32 2)
  %35 = shl i32 %34, 2, !dbg !3193
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 1826, i32 %35)
  %36 = and i32 %35, 4, !dbg !3194
  %37 = or i32 %29, %36, !dbg !3195
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1824, i32 %37)
  %38 = trunc i32 %37 to i8, !dbg !3190
  %39 = getelementptr inbounds [3 x i8], [3 x i8]* %3, i64 0, i64 2, !dbg !3196
  call void @qpr.arrayindex.i32.i2(i32 1823, i32 2, i2 -1)
  store i8 %38, i8* %39, align 1, !dbg !3197
  %40 = getelementptr inbounds %struct.bmi160_acc_high_g_int_cfg, %struct.bmi160_acc_high_g_int_cfg* %0, i32 0, i32 1, !dbg !3198
  %41 = load i8, i8* %40, align 1, !dbg !3198
  %42 = getelementptr inbounds [3 x i8], [3 x i8]* %3, i64 0, i64 1, !dbg !3199
  call void @qpr.arrayindex.i32.i2(i32 1831, i32 1, i2 -1)
  store i8 %41, i8* %42, align 1, !dbg !3200
  %43 = getelementptr inbounds %struct.bmi160_acc_high_g_int_cfg, %struct.bmi160_acc_high_g_int_cfg* %0, i32 0, i32 0, !dbg !3201
  %44 = load i8, i8* %43, align 1, !dbg !3201
  %45 = getelementptr inbounds [3 x i8], [3 x i8]* %3, i64 0, i64 0, !dbg !3202
  call void @qpr.arrayindex.i32.i2(i32 1832, i32 0, i2 -1)
  store i8 %44, i8* %45, align 1, !dbg !3203
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1833, i32 90)
  %46 = getelementptr inbounds [3 x i8], [3 x i8]* %3, i32 0, i32 0, !dbg !3204
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1834, i32 3)
  %47 = call signext i8 @bmi160_set_regs(i8 zeroext 90, i8* %46, i16 zeroext 3, %struct.bmi160_dev* @configStub) #5, !dbg !3205
  call void @llvm.dbg.value(metadata i8 %47, i64 0, metadata !3162, metadata !177), !dbg !3206
  br label %48, !dbg !3207

; <label>:48:                                     ; preds = %9, %2
  %49 = phi i8 [ %47, %9 ], [ %6, %2 ]
  call void @llvm.dbg.value(metadata i8 %49, i64 0, metadata !3162, metadata !177), !dbg !3163
  ret i8 %49, !dbg !3208
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @enable_flat_int(%struct.bmi160_int_pin_settg*, %struct.bmi160_dev*) #1 !dbg !3209 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3214, metadata !177), !dbg !3215
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3216, metadata !177), !dbg !3217
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3218, metadata !177), !dbg !3219
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3220, metadata !177), !dbg !3221
  call void @llvm.dbg.value(metadata %struct.bmi160_int_pin_settg* %0, i64 0, metadata !3214, metadata !177), !dbg !3215
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %1, i64 0, metadata !3216, metadata !177), !dbg !3217
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !3222
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !3216, metadata !177), !dbg !3222
  call void @llvm.dbg.declare(metadata i8* %3, metadata !3223, metadata !177), !dbg !3224
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1725, i32 0)
  store i8 0, i8* %3, align 1, !dbg !3224
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1726, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !3220, metadata !177), !dbg !3221
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1727, i32 80)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1728, i32 1)
  %4 = call signext i8 @bmi160_get_regs(i8 zeroext 80, i8* %3, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !3225
  call void @llvm.dbg.value(metadata i8 %4, i64 0, metadata !3218, metadata !177), !dbg !3226
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 1729, i8 %4)
  %5 = sext i8 %4 to i32, !dbg !3227
  %6 = icmp eq i32 %5, 0, !dbg !3229
  br i1 %6, label %7, label %23, !dbg !3230

; <label>:7:                                      ; preds = %2
  %8 = load i8, i8* %3, align 1, !dbg !3231
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1731, i8 %8)
  %9 = zext i8 %8 to i32, !dbg !3231
  %10 = and i32 %9, -129, !dbg !3233
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1730, i32 %10)
  %11 = trunc i32 %10 to i8, !dbg !3231
  call void @llvm.dbg.value(metadata i8 %11, i64 0, metadata !3220, metadata !177), !dbg !3234
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1733, i8 %11)
  %12 = zext i8 %11 to i32, !dbg !3235
  %13 = bitcast %struct.bmi160_int_pin_settg* %0 to i16*, !dbg !3236
  %14 = load i16, i16* %13, align 2, !dbg !3236
  %15 = lshr i16 %14, 11, !dbg !3236
  %16 = and i16 %15, 1, !dbg !3236
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 1738, i16 %16)
  %17 = zext i16 %16 to i32, !dbg !3237
  call void @qpr.shift.by.amount.i32(i32 1735, i32 %17, i32 7)
  call void @qpr.shift.by.negative.i32(i32 1736, i32 %17, i32 7)
  call void @qpr.shift.of.negative.i32(i32 1737, i32 %17, i32 7)
  %18 = shl i32 %17, 7, !dbg !3238
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 1734, i32 %18)
  %19 = and i32 %18, 128, !dbg !3239
  %20 = or i32 %12, %19, !dbg !3240
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1732, i32 %20)
  %21 = trunc i32 %20 to i8, !dbg !3235
  store i8 %21, i8* %3, align 1, !dbg !3241
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1739, i32 80)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1740, i32 1)
  %22 = call signext i8 @bmi160_set_regs(i8 zeroext 80, i8* %3, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !3242
  call void @llvm.dbg.value(metadata i8 %22, i64 0, metadata !3218, metadata !177), !dbg !3243
  br label %23, !dbg !3244

; <label>:23:                                     ; preds = %7, %2
  %24 = phi i8 [ %22, %7 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i8 %24, i64 0, metadata !3218, metadata !177), !dbg !3219
  ret i8 %24, !dbg !3245
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @config_flat_int_settg(%struct.bmi160_int_pin_settg*, %struct.bmi160_dev*) #1 !dbg !3246 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3247, metadata !177), !dbg !3248
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3249, metadata !177), !dbg !3250
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3251, metadata !177), !dbg !3252
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3253, metadata !177), !dbg !3254
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3255, metadata !177), !dbg !3256
  %3 = alloca [2 x i8], align 1
  call void @llvm.dbg.value(metadata %struct.bmi160_int_pin_settg* %0, i64 0, metadata !3247, metadata !177), !dbg !3248
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %1, i64 0, metadata !3249, metadata !177), !dbg !3250
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !3257
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !3249, metadata !177), !dbg !3257
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1741, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !3253, metadata !177), !dbg !3254
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1742, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !3255, metadata !177), !dbg !3256
  call void @llvm.dbg.declare(metadata [2 x i8]* %3, metadata !3258, metadata !177), !dbg !3259
  %4 = bitcast [2 x i8]* %3 to i8*, !dbg !3259
  call void @llvm.memset.p0i8.i64(i8* %4, i8 0, i64 2, i32 1, i1 false), !dbg !3259
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1745, i32 103)
  %5 = getelementptr inbounds [2 x i8], [2 x i8]* %3, i32 0, i32 0, !dbg !3260
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1746, i32 2)
  %6 = call signext i8 @bmi160_get_regs(i8 zeroext 103, i8* %5, i16 zeroext 2, %struct.bmi160_dev* @configStub) #5, !dbg !3261
  call void @llvm.dbg.value(metadata i8 %6, i64 0, metadata !3251, metadata !177), !dbg !3262
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 1747, i8 %6)
  %7 = sext i8 %6 to i32, !dbg !3263
  %8 = icmp eq i32 %7, 0, !dbg !3265
  br i1 %8, label %9, label %54, !dbg !3266

; <label>:9:                                      ; preds = %2
  %10 = getelementptr inbounds [2 x i8], [2 x i8]* %3, i64 0, i64 0, !dbg !3267
  %11 = load i8, i8* %10, align 1, !dbg !3267
  call void @qpr.arrayindex.i32.i2(i32 1748, i32 0, i2 -2)
  call void @llvm.dbg.value(metadata i8 %11, i64 0, metadata !3253, metadata !177), !dbg !3269
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1750, i8 %11)
  %12 = zext i8 %11 to i32, !dbg !3270
  %13 = and i32 %12, -64, !dbg !3271
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1749, i32 %13)
  %14 = trunc i32 %13 to i8, !dbg !3270
  call void @llvm.dbg.value(metadata i8 %14, i64 0, metadata !3255, metadata !177), !dbg !3272
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1752, i8 %14)
  %15 = zext i8 %14 to i32, !dbg !3273
  %16 = bitcast %struct.bmi160_int_pin_settg* %0 to i16*, !dbg !3274
  %17 = load i16, i16* %16, align 2, !dbg !3274
  %18 = and i16 %17, 63, !dbg !3274
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 1753, i16 %18)
  %19 = zext i16 %18 to i32, !dbg !3275
  %20 = and i32 %19, 63, !dbg !3276
  %21 = or i32 %15, %20, !dbg !3277
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1751, i32 %21)
  %22 = trunc i32 %21 to i8, !dbg !3273
  call void @llvm.dbg.value(metadata i8 %22, i64 0, metadata !3253, metadata !177), !dbg !3278
  %23 = getelementptr inbounds [2 x i8], [2 x i8]* %3, i64 0, i64 0, !dbg !3279
  call void @qpr.arrayindex.i32.i2(i32 1754, i32 0, i2 -2)
  store i8 %22, i8* %23, align 1, !dbg !3280
  %24 = getelementptr inbounds [2 x i8], [2 x i8]* %3, i64 0, i64 1, !dbg !3281
  %25 = load i8, i8* %24, align 1, !dbg !3281
  call void @qpr.arrayindex.i32.i2(i32 1755, i32 1, i2 -2)
  call void @llvm.dbg.value(metadata i8 %25, i64 0, metadata !3253, metadata !177), !dbg !3282
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1757, i8 %25)
  %26 = zext i8 %25 to i32, !dbg !3283
  %27 = and i32 %26, -49, !dbg !3284
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1756, i32 %27)
  %28 = trunc i32 %27 to i8, !dbg !3283
  call void @llvm.dbg.value(metadata i8 %28, i64 0, metadata !3255, metadata !177), !dbg !3285
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1759, i8 %28)
  %29 = zext i8 %28 to i32, !dbg !3286
  %30 = bitcast %struct.bmi160_int_pin_settg* %0 to i16*, !dbg !3287
  %31 = load i16, i16* %30, align 2, !dbg !3287
  %32 = lshr i16 %31, 9, !dbg !3287
  %33 = and i16 %32, 3, !dbg !3287
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 1764, i16 %33)
  %34 = zext i16 %33 to i32, !dbg !3288
  call void @qpr.shift.by.amount.i32(i32 1761, i32 %34, i32 4)
  call void @qpr.shift.by.negative.i32(i32 1762, i32 %34, i32 4)
  call void @qpr.shift.of.negative.i32(i32 1763, i32 %34, i32 4)
  %35 = shl i32 %34, 4, !dbg !3289
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 1760, i32 %35)
  %36 = and i32 %35, 48, !dbg !3290
  %37 = or i32 %29, %36, !dbg !3291
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1758, i32 %37)
  %38 = trunc i32 %37 to i8, !dbg !3286
  call void @llvm.dbg.value(metadata i8 %38, i64 0, metadata !3253, metadata !177), !dbg !3292
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1766, i8 %38)
  %39 = zext i8 %38 to i32, !dbg !3293
  %40 = and i32 %39, -8, !dbg !3294
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1765, i32 %40)
  %41 = trunc i32 %40 to i8, !dbg !3293
  call void @llvm.dbg.value(metadata i8 %41, i64 0, metadata !3255, metadata !177), !dbg !3295
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1768, i8 %41)
  %42 = zext i8 %41 to i32, !dbg !3296
  %43 = bitcast %struct.bmi160_int_pin_settg* %0 to i16*, !dbg !3297
  %44 = load i16, i16* %43, align 2, !dbg !3297
  %45 = lshr i16 %44, 6, !dbg !3297
  %46 = and i16 %45, 7, !dbg !3297
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 1769, i16 %46)
  %47 = zext i16 %46 to i32, !dbg !3298
  %48 = and i32 %47, 7, !dbg !3299
  %49 = or i32 %42, %48, !dbg !3300
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1767, i32 %49)
  %50 = trunc i32 %49 to i8, !dbg !3296
  call void @llvm.dbg.value(metadata i8 %50, i64 0, metadata !3253, metadata !177), !dbg !3301
  %51 = getelementptr inbounds [2 x i8], [2 x i8]* %3, i64 0, i64 1, !dbg !3302
  call void @qpr.arrayindex.i32.i2(i32 1770, i32 1, i2 -2)
  store i8 %50, i8* %51, align 1, !dbg !3303
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1771, i32 103)
  %52 = getelementptr inbounds [2 x i8], [2 x i8]* %3, i32 0, i32 0, !dbg !3304
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1772, i32 2)
  %53 = call signext i8 @bmi160_set_regs(i8 zeroext 103, i8* %52, i16 zeroext 2, %struct.bmi160_dev* @configStub) #5, !dbg !3305
  call void @llvm.dbg.value(metadata i8 %53, i64 0, metadata !3251, metadata !177), !dbg !3306
  br label %54, !dbg !3307

; <label>:54:                                     ; preds = %9, %2
  %55 = phi i8 [ %53, %9 ], [ %6, %2 ]
  call void @llvm.dbg.value(metadata i8 %55, i64 0, metadata !3251, metadata !177), !dbg !3252
  ret i8 %55, !dbg !3308
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @enable_orient_int(%struct.bmi160_acc_orient_int_cfg*, %struct.bmi160_dev*) #1 !dbg !3309 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3314, metadata !177), !dbg !3315
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3316, metadata !177), !dbg !3317
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3318, metadata !177), !dbg !3319
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3320, metadata !177), !dbg !3321
  call void @llvm.dbg.value(metadata %struct.bmi160_acc_orient_int_cfg* %0, i64 0, metadata !3314, metadata !177), !dbg !3315
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %1, i64 0, metadata !3316, metadata !177), !dbg !3317
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !3322
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !3316, metadata !177), !dbg !3322
  call void @llvm.dbg.declare(metadata i8* %3, metadata !3323, metadata !177), !dbg !3324
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1650, i32 0)
  store i8 0, i8* %3, align 1, !dbg !3324
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1651, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !3320, metadata !177), !dbg !3321
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1652, i32 80)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1653, i32 1)
  %4 = call signext i8 @bmi160_get_regs(i8 zeroext 80, i8* %3, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !3325
  call void @llvm.dbg.value(metadata i8 %4, i64 0, metadata !3318, metadata !177), !dbg !3326
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 1654, i8 %4)
  %5 = sext i8 %4 to i32, !dbg !3327
  %6 = icmp eq i32 %5, 0, !dbg !3329
  br i1 %6, label %7, label %24, !dbg !3330

; <label>:7:                                      ; preds = %2
  %8 = load i8, i8* %3, align 1, !dbg !3331
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1656, i8 %8)
  %9 = zext i8 %8 to i32, !dbg !3331
  %10 = and i32 %9, -65, !dbg !3333
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1655, i32 %10)
  %11 = trunc i32 %10 to i8, !dbg !3331
  call void @llvm.dbg.value(metadata i8 %11, i64 0, metadata !3320, metadata !177), !dbg !3334
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1658, i8 %11)
  %12 = zext i8 %11 to i32, !dbg !3335
  %13 = bitcast %struct.bmi160_acc_orient_int_cfg* %0 to i32*, !dbg !3336
  %14 = load i32, i32* %13, align 2, !dbg !3336
  %15 = lshr i32 %14, 16, !dbg !3336
  %16 = and i32 %15, 1, !dbg !3336
  %17 = trunc i32 %16 to i8, !dbg !3336
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 1663, i8 %17)
  %18 = zext i8 %17 to i32, !dbg !3337
  call void @qpr.shift.by.amount.i32(i32 1660, i32 %18, i32 6)
  call void @qpr.shift.by.negative.i32(i32 1661, i32 %18, i32 6)
  call void @qpr.shift.of.negative.i32(i32 1662, i32 %18, i32 6)
  %19 = shl i32 %18, 6, !dbg !3338
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 1659, i32 %19)
  %20 = and i32 %19, 64, !dbg !3339
  %21 = or i32 %12, %20, !dbg !3340
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1657, i32 %21)
  %22 = trunc i32 %21 to i8, !dbg !3335
  store i8 %22, i8* %3, align 1, !dbg !3341
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1664, i32 80)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1665, i32 1)
  %23 = call signext i8 @bmi160_set_regs(i8 zeroext 80, i8* %3, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !3342
  call void @llvm.dbg.value(metadata i8 %23, i64 0, metadata !3318, metadata !177), !dbg !3343
  br label %24, !dbg !3344

; <label>:24:                                     ; preds = %7, %2
  %25 = phi i8 [ %23, %7 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i8 %25, i64 0, metadata !3318, metadata !177), !dbg !3319
  ret i8 %25, !dbg !3345
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @config_orient_int_settg(%struct.bmi160_acc_orient_int_cfg*, %struct.bmi160_dev*) #1 !dbg !3346 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3347, metadata !177), !dbg !3348
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3349, metadata !177), !dbg !3350
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3351, metadata !177), !dbg !3352
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3353, metadata !177), !dbg !3354
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3355, metadata !177), !dbg !3356
  %3 = alloca [2 x i8], align 1
  call void @llvm.dbg.value(metadata %struct.bmi160_acc_orient_int_cfg* %0, i64 0, metadata !3347, metadata !177), !dbg !3348
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %1, i64 0, metadata !3349, metadata !177), !dbg !3350
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !3357
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !3349, metadata !177), !dbg !3357
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1666, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !3353, metadata !177), !dbg !3354
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1667, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !3355, metadata !177), !dbg !3356
  call void @llvm.dbg.declare(metadata [2 x i8]* %3, metadata !3358, metadata !177), !dbg !3359
  %4 = bitcast [2 x i8]* %3 to i8*, !dbg !3359
  call void @llvm.memset.p0i8.i64(i8* %4, i8 0, i64 2, i32 1, i1 false), !dbg !3359
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1670, i32 101)
  %5 = getelementptr inbounds [2 x i8], [2 x i8]* %3, i32 0, i32 0, !dbg !3360
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1671, i32 2)
  %6 = call signext i8 @bmi160_get_regs(i8 zeroext 101, i8* %5, i16 zeroext 2, %struct.bmi160_dev* @configStub) #5, !dbg !3361
  call void @llvm.dbg.value(metadata i8 %6, i64 0, metadata !3351, metadata !177), !dbg !3362
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 1672, i8 %6)
  %7 = sext i8 %6 to i32, !dbg !3363
  %8 = icmp eq i32 %7, 0, !dbg !3365
  br i1 %8, label %9, label %99, !dbg !3366

; <label>:9:                                      ; preds = %2
  %10 = getelementptr inbounds [2 x i8], [2 x i8]* %3, i64 0, i64 0, !dbg !3367
  %11 = load i8, i8* %10, align 1, !dbg !3367
  call void @qpr.arrayindex.i32.i2(i32 1673, i32 0, i2 -2)
  call void @llvm.dbg.value(metadata i8 %11, i64 0, metadata !3353, metadata !177), !dbg !3369
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1675, i8 %11)
  %12 = zext i8 %11 to i32, !dbg !3370
  %13 = and i32 %12, -4, !dbg !3371
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1674, i32 %13)
  %14 = trunc i32 %13 to i8, !dbg !3370
  call void @llvm.dbg.value(metadata i8 %14, i64 0, metadata !3355, metadata !177), !dbg !3372
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1677, i8 %14)
  %15 = zext i8 %14 to i32, !dbg !3373
  %16 = bitcast %struct.bmi160_acc_orient_int_cfg* %0 to i32*, !dbg !3374
  %17 = load i32, i32* %16, align 2, !dbg !3374
  %18 = and i32 %17, 3, !dbg !3374
  %19 = trunc i32 %18 to i16, !dbg !3374
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 1678, i16 %19)
  %20 = zext i16 %19 to i32, !dbg !3375
  %21 = and i32 %20, 3, !dbg !3376
  %22 = or i32 %15, %21, !dbg !3377
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1676, i32 %22)
  %23 = trunc i32 %22 to i8, !dbg !3373
  call void @llvm.dbg.value(metadata i8 %23, i64 0, metadata !3353, metadata !177), !dbg !3378
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1680, i8 %23)
  %24 = zext i8 %23 to i32, !dbg !3379
  %25 = and i32 %24, -13, !dbg !3380
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1679, i32 %25)
  %26 = trunc i32 %25 to i8, !dbg !3379
  call void @llvm.dbg.value(metadata i8 %26, i64 0, metadata !3355, metadata !177), !dbg !3381
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1682, i8 %26)
  %27 = zext i8 %26 to i32, !dbg !3382
  %28 = bitcast %struct.bmi160_acc_orient_int_cfg* %0 to i32*, !dbg !3383
  %29 = load i32, i32* %28, align 2, !dbg !3383
  %30 = lshr i32 %29, 2, !dbg !3383
  %31 = and i32 %30, 3, !dbg !3383
  %32 = trunc i32 %31 to i16, !dbg !3383
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 1687, i16 %32)
  %33 = zext i16 %32 to i32, !dbg !3384
  call void @qpr.shift.by.amount.i32(i32 1684, i32 %33, i32 2)
  call void @qpr.shift.by.negative.i32(i32 1685, i32 %33, i32 2)
  call void @qpr.shift.of.negative.i32(i32 1686, i32 %33, i32 2)
  %34 = shl i32 %33, 2, !dbg !3385
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 1683, i32 %34)
  %35 = and i32 %34, 12, !dbg !3386
  %36 = or i32 %27, %35, !dbg !3387
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1681, i32 %36)
  %37 = trunc i32 %36 to i8, !dbg !3382
  call void @llvm.dbg.value(metadata i8 %37, i64 0, metadata !3353, metadata !177), !dbg !3388
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1689, i8 %37)
  %38 = zext i8 %37 to i32, !dbg !3389
  %39 = and i32 %38, -241, !dbg !3390
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1688, i32 %39)
  %40 = trunc i32 %39 to i8, !dbg !3389
  call void @llvm.dbg.value(metadata i8 %40, i64 0, metadata !3355, metadata !177), !dbg !3391
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1691, i8 %40)
  %41 = zext i8 %40 to i32, !dbg !3392
  %42 = bitcast %struct.bmi160_acc_orient_int_cfg* %0 to i32*, !dbg !3393
  %43 = load i32, i32* %42, align 2, !dbg !3393
  %44 = lshr i32 %43, 4, !dbg !3393
  %45 = and i32 %44, 15, !dbg !3393
  %46 = trunc i32 %45 to i16, !dbg !3393
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 1696, i16 %46)
  %47 = zext i16 %46 to i32, !dbg !3394
  call void @qpr.shift.by.amount.i32(i32 1693, i32 %47, i32 4)
  call void @qpr.shift.by.negative.i32(i32 1694, i32 %47, i32 4)
  call void @qpr.shift.of.negative.i32(i32 1695, i32 %47, i32 4)
  %48 = shl i32 %47, 4, !dbg !3395
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 1692, i32 %48)
  %49 = and i32 %48, 240, !dbg !3396
  %50 = or i32 %41, %49, !dbg !3397
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1690, i32 %50)
  %51 = trunc i32 %50 to i8, !dbg !3392
  call void @llvm.dbg.value(metadata i8 %51, i64 0, metadata !3353, metadata !177), !dbg !3398
  %52 = getelementptr inbounds [2 x i8], [2 x i8]* %3, i64 0, i64 0, !dbg !3399
  call void @qpr.arrayindex.i32.i2(i32 1697, i32 0, i2 -2)
  store i8 %51, i8* %52, align 1, !dbg !3400
  %53 = getelementptr inbounds [2 x i8], [2 x i8]* %3, i64 0, i64 1, !dbg !3401
  %54 = load i8, i8* %53, align 1, !dbg !3401
  call void @qpr.arrayindex.i32.i2(i32 1698, i32 1, i2 -2)
  call void @llvm.dbg.value(metadata i8 %54, i64 0, metadata !3353, metadata !177), !dbg !3402
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1700, i8 %54)
  %55 = zext i8 %54 to i32, !dbg !3403
  %56 = and i32 %55, -64, !dbg !3404
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1699, i32 %56)
  %57 = trunc i32 %56 to i8, !dbg !3403
  call void @llvm.dbg.value(metadata i8 %57, i64 0, metadata !3355, metadata !177), !dbg !3405
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1702, i8 %57)
  %58 = zext i8 %57 to i32, !dbg !3406
  %59 = bitcast %struct.bmi160_acc_orient_int_cfg* %0 to i32*, !dbg !3407
  %60 = load i32, i32* %59, align 2, !dbg !3407
  %61 = lshr i32 %60, 8, !dbg !3407
  %62 = and i32 %61, 63, !dbg !3407
  %63 = trunc i32 %62 to i16, !dbg !3407
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 1703, i16 %63)
  %64 = zext i16 %63 to i32, !dbg !3408
  %65 = and i32 %64, 63, !dbg !3409
  %66 = or i32 %58, %65, !dbg !3410
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1701, i32 %66)
  %67 = trunc i32 %66 to i8, !dbg !3406
  call void @llvm.dbg.value(metadata i8 %67, i64 0, metadata !3353, metadata !177), !dbg !3411
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1705, i8 %67)
  %68 = zext i8 %67 to i32, !dbg !3412
  %69 = and i32 %68, -65, !dbg !3413
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1704, i32 %69)
  %70 = trunc i32 %69 to i8, !dbg !3412
  call void @llvm.dbg.value(metadata i8 %70, i64 0, metadata !3355, metadata !177), !dbg !3414
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1707, i8 %70)
  %71 = zext i8 %70 to i32, !dbg !3415
  %72 = bitcast %struct.bmi160_acc_orient_int_cfg* %0 to i32*, !dbg !3416
  %73 = load i32, i32* %72, align 2, !dbg !3416
  %74 = lshr i32 %73, 14, !dbg !3416
  %75 = and i32 %74, 1, !dbg !3416
  %76 = trunc i32 %75 to i16, !dbg !3416
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 1712, i16 %76)
  %77 = zext i16 %76 to i32, !dbg !3417
  call void @qpr.shift.by.amount.i32(i32 1709, i32 %77, i32 6)
  call void @qpr.shift.by.negative.i32(i32 1710, i32 %77, i32 6)
  call void @qpr.shift.of.negative.i32(i32 1711, i32 %77, i32 6)
  %78 = shl i32 %77, 6, !dbg !3418
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 1708, i32 %78)
  %79 = and i32 %78, 64, !dbg !3419
  %80 = or i32 %71, %79, !dbg !3420
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1706, i32 %80)
  %81 = trunc i32 %80 to i8, !dbg !3415
  call void @llvm.dbg.value(metadata i8 %81, i64 0, metadata !3353, metadata !177), !dbg !3421
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1714, i8 %81)
  %82 = zext i8 %81 to i32, !dbg !3422
  %83 = and i32 %82, -129, !dbg !3423
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1713, i32 %83)
  %84 = trunc i32 %83 to i8, !dbg !3422
  call void @llvm.dbg.value(metadata i8 %84, i64 0, metadata !3355, metadata !177), !dbg !3424
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1716, i8 %84)
  %85 = zext i8 %84 to i32, !dbg !3425
  %86 = bitcast %struct.bmi160_acc_orient_int_cfg* %0 to i32*, !dbg !3426
  %87 = load i32, i32* %86, align 2, !dbg !3426
  %88 = lshr i32 %87, 15, !dbg !3426
  %89 = and i32 %88, 1, !dbg !3426
  %90 = trunc i32 %89 to i16, !dbg !3426
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 1721, i16 %90)
  %91 = zext i16 %90 to i32, !dbg !3427
  call void @qpr.shift.by.amount.i32(i32 1718, i32 %91, i32 7)
  call void @qpr.shift.by.negative.i32(i32 1719, i32 %91, i32 7)
  call void @qpr.shift.of.negative.i32(i32 1720, i32 %91, i32 7)
  %92 = shl i32 %91, 7, !dbg !3428
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 1717, i32 %92)
  %93 = and i32 %92, 128, !dbg !3429
  %94 = or i32 %85, %93, !dbg !3430
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1715, i32 %94)
  %95 = trunc i32 %94 to i8, !dbg !3425
  call void @llvm.dbg.value(metadata i8 %95, i64 0, metadata !3353, metadata !177), !dbg !3431
  %96 = getelementptr inbounds [2 x i8], [2 x i8]* %3, i64 0, i64 1, !dbg !3432
  call void @qpr.arrayindex.i32.i2(i32 1722, i32 1, i2 -2)
  store i8 %95, i8* %96, align 1, !dbg !3433
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1723, i32 101)
  %97 = getelementptr inbounds [2 x i8], [2 x i8]* %3, i32 0, i32 0, !dbg !3434
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1724, i32 2)
  %98 = call signext i8 @bmi160_set_regs(i8 zeroext 101, i8* %97, i16 zeroext 2, %struct.bmi160_dev* @configStub) #5, !dbg !3435
  call void @llvm.dbg.value(metadata i8 %98, i64 0, metadata !3351, metadata !177), !dbg !3436
  br label %99, !dbg !3437

; <label>:99:                                     ; preds = %9, %2
  %100 = phi i8 [ %98, %9 ], [ %6, %2 ]
  call void @llvm.dbg.value(metadata i8 %100, i64 0, metadata !3351, metadata !177), !dbg !3352
  ret i8 %100, !dbg !3438
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @enable_step_detect_int(%struct.bmi160_int_pin_settg*, %struct.bmi160_dev*) #1 !dbg !3439 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3444, metadata !177), !dbg !3445
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3446, metadata !177), !dbg !3447
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3448, metadata !177), !dbg !3449
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3450, metadata !177), !dbg !3451
  call void @llvm.dbg.value(metadata %struct.bmi160_int_pin_settg* %0, i64 0, metadata !3444, metadata !177), !dbg !3445
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %1, i64 0, metadata !3446, metadata !177), !dbg !3447
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !3452
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !3446, metadata !177), !dbg !3452
  call void @llvm.dbg.declare(metadata i8* %3, metadata !3453, metadata !177), !dbg !3454
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1422, i32 0)
  store i8 0, i8* %3, align 1, !dbg !3454
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1423, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !3450, metadata !177), !dbg !3451
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1424, i32 82)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1425, i32 1)
  %4 = call signext i8 @bmi160_get_regs(i8 zeroext 82, i8* %3, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !3455
  call void @llvm.dbg.value(metadata i8 %4, i64 0, metadata !3448, metadata !177), !dbg !3456
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 1426, i8 %4)
  %5 = sext i8 %4 to i32, !dbg !3457
  %6 = icmp eq i32 %5, 0, !dbg !3459
  br i1 %6, label %7, label %22, !dbg !3460

; <label>:7:                                      ; preds = %2
  %8 = load i8, i8* %3, align 1, !dbg !3461
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1428, i8 %8)
  %9 = zext i8 %8 to i32, !dbg !3461
  %10 = and i32 %9, -9, !dbg !3463
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1427, i32 %10)
  %11 = trunc i32 %10 to i8, !dbg !3461
  call void @llvm.dbg.value(metadata i8 %11, i64 0, metadata !3450, metadata !177), !dbg !3464
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1430, i8 %11)
  %12 = zext i8 %11 to i32, !dbg !3465
  %13 = bitcast %struct.bmi160_int_pin_settg* %0 to i16*, !dbg !3466
  %14 = load i16, i16* %13, align 2, !dbg !3466
  %15 = and i16 %14, 1, !dbg !3466
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 1435, i16 %15)
  %16 = zext i16 %15 to i32, !dbg !3467
  call void @qpr.shift.by.amount.i32(i32 1432, i32 %16, i32 3)
  call void @qpr.shift.by.negative.i32(i32 1433, i32 %16, i32 3)
  call void @qpr.shift.of.negative.i32(i32 1434, i32 %16, i32 3)
  %17 = shl i32 %16, 3, !dbg !3468
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 1431, i32 %17)
  %18 = and i32 %17, 8, !dbg !3469
  %19 = or i32 %12, %18, !dbg !3470
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1429, i32 %19)
  %20 = trunc i32 %19 to i8, !dbg !3465
  store i8 %20, i8* %3, align 1, !dbg !3471
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1436, i32 82)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1437, i32 1)
  %21 = call signext i8 @bmi160_set_regs(i8 zeroext 82, i8* %3, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !3472
  call void @llvm.dbg.value(metadata i8 %21, i64 0, metadata !3448, metadata !177), !dbg !3473
  br label %22, !dbg !3474

; <label>:22:                                     ; preds = %7, %2
  %23 = phi i8 [ %21, %7 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i8 %23, i64 0, metadata !3448, metadata !177), !dbg !3449
  ret i8 %23, !dbg !3475
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @config_step_detect(%struct.bmi160_int_pin_settg*, %struct.bmi160_dev*) #1 !dbg !3476 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3477, metadata !177), !dbg !3478
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3479, metadata !177), !dbg !3480
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3481, metadata !177), !dbg !3482
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3483, metadata !177), !dbg !3484
  %3 = alloca [2 x i8], align 1
  call void @llvm.dbg.value(metadata %struct.bmi160_int_pin_settg* %0, i64 0, metadata !3477, metadata !177), !dbg !3478
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %1, i64 0, metadata !3479, metadata !177), !dbg !3480
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !3485
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !3479, metadata !177), !dbg !3485
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1438, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !3483, metadata !177), !dbg !3484
  call void @llvm.dbg.declare(metadata [2 x i8]* %3, metadata !3486, metadata !177), !dbg !3487
  %4 = bitcast [2 x i8]* %3 to i8*, !dbg !3487
  call void @llvm.memset.p0i8.i64(i8* %4, i8 0, i64 2, i32 1, i1 false), !dbg !3487
  %5 = bitcast %struct.bmi160_int_pin_settg* %0 to i16*, !dbg !3488
  %6 = load i16, i16* %5, align 2, !dbg !3488
  %7 = lshr i16 %6, 6, !dbg !3488
  %8 = and i16 %7, 3, !dbg !3488
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 1440, i16 %8)
  %9 = zext i16 %8 to i32, !dbg !3490
  %10 = icmp eq i32 %9, 0, !dbg !3491
  br i1 %10, label %11, label %14, !dbg !3492

; <label>:11:                                     ; preds = %2
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1442, i32 21)
  %12 = getelementptr inbounds [2 x i8], [2 x i8]* %3, i64 0, i64 0, !dbg !3493
  call void @qpr.arrayindex.i32.i2(i32 1441, i32 0, i2 -2)
  store i8 21, i8* %12, align 1, !dbg !3495
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1444, i32 3)
  %13 = getelementptr inbounds [2 x i8], [2 x i8]* %3, i64 0, i64 1, !dbg !3496
  call void @qpr.arrayindex.i32.i2(i32 1443, i32 1, i2 -2)
  store i8 3, i8* %13, align 1, !dbg !3497
  br label %97, !dbg !3498

; <label>:14:                                     ; preds = %2
  %15 = bitcast %struct.bmi160_int_pin_settg* %0 to i16*, !dbg !3499
  %16 = load i16, i16* %15, align 2, !dbg !3499
  %17 = lshr i16 %16, 6, !dbg !3499
  %18 = and i16 %17, 3, !dbg !3499
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 1445, i16 %18)
  %19 = zext i16 %18 to i32, !dbg !3502
  %20 = icmp eq i32 %19, 1, !dbg !3503
  br i1 %20, label %21, label %24, !dbg !3504

; <label>:21:                                     ; preds = %14
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1447, i32 45)
  %22 = getelementptr inbounds [2 x i8], [2 x i8]* %3, i64 0, i64 0, !dbg !3506
  call void @qpr.arrayindex.i32.i2(i32 1446, i32 0, i2 -2)
  store i8 45, i8* %22, align 1, !dbg !3508
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1449, i32 0)
  %23 = getelementptr inbounds [2 x i8], [2 x i8]* %3, i64 0, i64 1, !dbg !3509
  call void @qpr.arrayindex.i32.i2(i32 1448, i32 1, i2 -2)
  store i8 0, i8* %23, align 1, !dbg !3510
  br label %96, !dbg !3511

; <label>:24:                                     ; preds = %14
  %25 = bitcast %struct.bmi160_int_pin_settg* %0 to i16*, !dbg !3512
  %26 = load i16, i16* %25, align 2, !dbg !3512
  %27 = lshr i16 %26, 6, !dbg !3512
  %28 = and i16 %27, 3, !dbg !3512
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 1450, i16 %28)
  %29 = zext i16 %28 to i32, !dbg !3515
  %30 = icmp eq i32 %29, 2, !dbg !3516
  br i1 %30, label %31, label %34, !dbg !3517

; <label>:31:                                     ; preds = %24
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1452, i32 29)
  %32 = getelementptr inbounds [2 x i8], [2 x i8]* %3, i64 0, i64 0, !dbg !3518
  call void @qpr.arrayindex.i32.i2(i32 1451, i32 0, i2 -2)
  store i8 29, i8* %32, align 1, !dbg !3520
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1454, i32 7)
  %33 = getelementptr inbounds [2 x i8], [2 x i8]* %3, i64 0, i64 1, !dbg !3521
  call void @qpr.arrayindex.i32.i2(i32 1453, i32 1, i2 -2)
  store i8 7, i8* %33, align 1, !dbg !3522
  br label %95, !dbg !3523

; <label>:34:                                     ; preds = %24
  %35 = bitcast %struct.bmi160_int_pin_settg* %0 to i16*, !dbg !3524
  %36 = load i16, i16* %35, align 2, !dbg !3524
  %37 = lshr i16 %36, 6, !dbg !3524
  %38 = and i16 %37, 3, !dbg !3524
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 1455, i16 %38)
  %39 = zext i16 %38 to i32, !dbg !3527
  %40 = icmp eq i32 %39, 3, !dbg !3528
  br i1 %40, label %41, label %94, !dbg !3529

; <label>:41:                                     ; preds = %34
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1456, i32 122)
  %42 = getelementptr inbounds [2 x i8], [2 x i8]* %3, i64 0, i64 0, !dbg !3530
  call void @qpr.arrayindex.i32.i2(i32 1457, i32 0, i2 -2)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1458, i32 2)
  %43 = call signext i8 @bmi160_get_regs(i8 zeroext 122, i8* %42, i16 zeroext 2, %struct.bmi160_dev* @configStub) #5, !dbg !3532
  call void @llvm.dbg.value(metadata i8 %43, i64 0, metadata !3481, metadata !177), !dbg !3533
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 1459, i8 %43)
  %44 = sext i8 %43 to i32, !dbg !3534
  %45 = icmp eq i32 %44, 0, !dbg !3536
  br i1 %45, label %46, label %93, !dbg !3537

; <label>:46:                                     ; preds = %41
  %47 = getelementptr inbounds [2 x i8], [2 x i8]* %3, i64 0, i64 0, !dbg !3538
  %48 = load i8, i8* %47, align 1, !dbg !3538
  call void @qpr.arrayindex.i32.i2(i32 1462, i32 0, i2 -2)
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1461, i8 %48)
  %49 = zext i8 %48 to i32, !dbg !3538
  %50 = and i32 %49, -25, !dbg !3540
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1460, i32 %50)
  %51 = trunc i32 %50 to i8, !dbg !3538
  call void @llvm.dbg.value(metadata i8 %51, i64 0, metadata !3483, metadata !177), !dbg !3541
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1465, i8 %51)
  %52 = zext i8 %51 to i32, !dbg !3542
  %53 = bitcast %struct.bmi160_int_pin_settg* %0 to i16*, !dbg !3543
  %54 = load i16, i16* %53, align 2, !dbg !3543
  %55 = lshr i16 %54, 1, !dbg !3543
  %56 = and i16 %55, 3, !dbg !3543
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 1470, i16 %56)
  %57 = zext i16 %56 to i32, !dbg !3544
  call void @qpr.shift.by.amount.i32(i32 1467, i32 %57, i32 3)
  call void @qpr.shift.by.negative.i32(i32 1468, i32 %57, i32 3)
  call void @qpr.shift.of.negative.i32(i32 1469, i32 %57, i32 3)
  %58 = shl i32 %57, 3, !dbg !3545
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 1466, i32 %58)
  %59 = and i32 %58, 24, !dbg !3546
  %60 = or i32 %52, %59, !dbg !3547
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1464, i32 %60)
  %61 = trunc i32 %60 to i8, !dbg !3542
  %62 = getelementptr inbounds [2 x i8], [2 x i8]* %3, i64 0, i64 0, !dbg !3548
  call void @qpr.arrayindex.i32.i2(i32 1463, i32 0, i2 -2)
  store i8 %61, i8* %62, align 1, !dbg !3549
  %63 = getelementptr inbounds [2 x i8], [2 x i8]* %3, i64 0, i64 0, !dbg !3550
  %64 = load i8, i8* %63, align 1, !dbg !3550
  call void @qpr.arrayindex.i32.i2(i32 1473, i32 0, i2 -2)
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1472, i8 %64)
  %65 = zext i8 %64 to i32, !dbg !3550
  %66 = and i32 %65, -8, !dbg !3551
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1471, i32 %66)
  %67 = trunc i32 %66 to i8, !dbg !3550
  call void @llvm.dbg.value(metadata i8 %67, i64 0, metadata !3483, metadata !177), !dbg !3552
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1476, i8 %67)
  %68 = zext i8 %67 to i32, !dbg !3553
  %69 = bitcast %struct.bmi160_int_pin_settg* %0 to i16*, !dbg !3554
  %70 = load i16, i16* %69, align 2, !dbg !3554
  %71 = lshr i16 %70, 3, !dbg !3554
  %72 = and i16 %71, 7, !dbg !3554
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 1477, i16 %72)
  %73 = zext i16 %72 to i32, !dbg !3555
  %74 = and i32 %73, 7, !dbg !3556
  %75 = or i32 %68, %74, !dbg !3557
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1475, i32 %75)
  %76 = trunc i32 %75 to i8, !dbg !3553
  %77 = getelementptr inbounds [2 x i8], [2 x i8]* %3, i64 0, i64 0, !dbg !3558
  call void @qpr.arrayindex.i32.i2(i32 1474, i32 0, i2 -2)
  store i8 %76, i8* %77, align 1, !dbg !3559
  %78 = getelementptr inbounds [2 x i8], [2 x i8]* %3, i64 0, i64 1, !dbg !3560
  %79 = load i8, i8* %78, align 1, !dbg !3560
  call void @qpr.arrayindex.i32.i2(i32 1480, i32 1, i2 -2)
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1479, i8 %79)
  %80 = zext i8 %79 to i32, !dbg !3560
  %81 = and i32 %80, -8, !dbg !3561
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1478, i32 %81)
  %82 = trunc i32 %81 to i8, !dbg !3560
  call void @llvm.dbg.value(metadata i8 %82, i64 0, metadata !3483, metadata !177), !dbg !3562
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1483, i8 %82)
  %83 = zext i8 %82 to i32, !dbg !3563
  %84 = bitcast %struct.bmi160_int_pin_settg* %0 to i16*, !dbg !3564
  %85 = load i16, i16* %84, align 2, !dbg !3564
  %86 = lshr i16 %85, 8, !dbg !3564
  %87 = and i16 %86, 7, !dbg !3564
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 1484, i16 %87)
  %88 = zext i16 %87 to i32, !dbg !3565
  %89 = and i32 %88, 7, !dbg !3566
  %90 = or i32 %83, %89, !dbg !3567
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1482, i32 %90)
  %91 = trunc i32 %90 to i8, !dbg !3563
  %92 = getelementptr inbounds [2 x i8], [2 x i8]* %3, i64 0, i64 1, !dbg !3568
  call void @qpr.arrayindex.i32.i2(i32 1481, i32 1, i2 -2)
  store i8 %91, i8* %92, align 1, !dbg !3569
  br label %93, !dbg !3570

; <label>:93:                                     ; preds = %46, %41
  br label %94, !dbg !3571

; <label>:94:                                     ; preds = %93, %34
  br label %95

; <label>:95:                                     ; preds = %94, %31
  br label %96

; <label>:96:                                     ; preds = %95, %21
  br label %97

; <label>:97:                                     ; preds = %96, %11
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1485, i32 122)
  %98 = getelementptr inbounds [2 x i8], [2 x i8]* %3, i32 0, i32 0, !dbg !3572
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1486, i32 2)
  %99 = call signext i8 @bmi160_set_regs(i8 zeroext 122, i8* %98, i16 zeroext 2, %struct.bmi160_dev* @configStub) #5, !dbg !3573
  call void @llvm.dbg.value(metadata i8 %99, i64 0, metadata !3481, metadata !177), !dbg !3574
  ret i8 %99, !dbg !3575
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @enable_tap_int(%struct.bmi160_int_settg*, %struct.bmi160_int_pin_settg*, %struct.bmi160_dev*) #1 !dbg !3576 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3581, metadata !177), !dbg !3582
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3583, metadata !177), !dbg !3584
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3585, metadata !177), !dbg !3586
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3587, metadata !177), !dbg !3588
  %4 = alloca i8, align 1
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3589, metadata !177), !dbg !3590
  call void @llvm.dbg.value(metadata %struct.bmi160_int_settg* %0, i64 0, metadata !3581, metadata !177), !dbg !3582
  call void @llvm.dbg.value(metadata %struct.bmi160_int_pin_settg* %1, i64 0, metadata !3583, metadata !177), !dbg !3584
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %2, i64 0, metadata !3585, metadata !177), !dbg !3586
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !3591
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !3585, metadata !177), !dbg !3591
  call void @llvm.dbg.declare(metadata i8* %4, metadata !3592, metadata !177), !dbg !3593
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1487, i32 0)
  store i8 0, i8* %4, align 1, !dbg !3593
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1488, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !3589, metadata !177), !dbg !3590
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1489, i32 80)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1490, i32 1)
  %5 = call signext i8 @bmi160_get_regs(i8 zeroext 80, i8* %4, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !3594
  call void @llvm.dbg.value(metadata i8 %5, i64 0, metadata !3587, metadata !177), !dbg !3595
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 1491, i8 %5)
  %6 = sext i8 %5 to i32, !dbg !3596
  %7 = icmp eq i32 %6, 0, !dbg !3598
  br i1 %7, label %8, label %44, !dbg !3599

; <label>:8:                                      ; preds = %3
  %9 = getelementptr inbounds %struct.bmi160_int_settg, %struct.bmi160_int_settg* %0, i32 0, i32 1, !dbg !3600
  %10 = load i32, i32* %9, align 4, !dbg !3600
  call void @qpr.implicit.conversion.overflow.u32.u32(i32 1492, i32 %10)
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 1493, i32 4)
  %11 = icmp eq i32 %10, 4, !dbg !3603
  br i1 %11, label %12, label %27, !dbg !3604

; <label>:12:                                     ; preds = %8
  %13 = load i8, i8* %4, align 1, !dbg !3605
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1495, i8 %13)
  %14 = zext i8 %13 to i32, !dbg !3605
  %15 = and i32 %14, -33, !dbg !3607
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1494, i32 %15)
  %16 = trunc i32 %15 to i8, !dbg !3605
  call void @llvm.dbg.value(metadata i8 %16, i64 0, metadata !3589, metadata !177), !dbg !3608
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1497, i8 %16)
  %17 = zext i8 %16 to i32, !dbg !3609
  %18 = bitcast %struct.bmi160_int_pin_settg* %1 to i16*, !dbg !3610
  %19 = load i16, i16* %18, align 2, !dbg !3610
  %20 = lshr i16 %19, 11, !dbg !3610
  %21 = and i16 %20, 1, !dbg !3610
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 1502, i16 %21)
  %22 = zext i16 %21 to i32, !dbg !3611
  call void @qpr.shift.by.amount.i32(i32 1499, i32 %22, i32 5)
  call void @qpr.shift.by.negative.i32(i32 1500, i32 %22, i32 5)
  call void @qpr.shift.of.negative.i32(i32 1501, i32 %22, i32 5)
  %23 = shl i32 %22, 5, !dbg !3612
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 1498, i32 %23)
  %24 = and i32 %23, 32, !dbg !3613
  %25 = or i32 %17, %24, !dbg !3614
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1496, i32 %25)
  %26 = trunc i32 %25 to i8, !dbg !3609
  store i8 %26, i8* %4, align 1, !dbg !3615
  br label %42, !dbg !3616

; <label>:27:                                     ; preds = %8
  %28 = load i8, i8* %4, align 1, !dbg !3617
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1504, i8 %28)
  %29 = zext i8 %28 to i32, !dbg !3617
  %30 = and i32 %29, -17, !dbg !3619
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1503, i32 %30)
  %31 = trunc i32 %30 to i8, !dbg !3617
  call void @llvm.dbg.value(metadata i8 %31, i64 0, metadata !3589, metadata !177), !dbg !3620
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1506, i8 %31)
  %32 = zext i8 %31 to i32, !dbg !3621
  %33 = bitcast %struct.bmi160_int_pin_settg* %1 to i16*, !dbg !3622
  %34 = load i16, i16* %33, align 2, !dbg !3622
  %35 = lshr i16 %34, 11, !dbg !3622
  %36 = and i16 %35, 1, !dbg !3622
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 1511, i16 %36)
  %37 = zext i16 %36 to i32, !dbg !3623
  call void @qpr.shift.by.amount.i32(i32 1508, i32 %37, i32 4)
  call void @qpr.shift.by.negative.i32(i32 1509, i32 %37, i32 4)
  call void @qpr.shift.of.negative.i32(i32 1510, i32 %37, i32 4)
  %38 = shl i32 %37, 4, !dbg !3624
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 1507, i32 %38)
  %39 = and i32 %38, 16, !dbg !3625
  %40 = or i32 %32, %39, !dbg !3626
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1505, i32 %40)
  %41 = trunc i32 %40 to i8, !dbg !3621
  store i8 %41, i8* %4, align 1, !dbg !3627
  br label %42

; <label>:42:                                     ; preds = %27, %12
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1512, i32 80)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1513, i32 1)
  %43 = call signext i8 @bmi160_set_regs(i8 zeroext 80, i8* %4, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !3628
  call void @llvm.dbg.value(metadata i8 %43, i64 0, metadata !3587, metadata !177), !dbg !3629
  br label %44, !dbg !3630

; <label>:44:                                     ; preds = %42, %3
  %45 = phi i8 [ %43, %42 ], [ %5, %3 ]
  call void @llvm.dbg.value(metadata i8 %45, i64 0, metadata !3587, metadata !177), !dbg !3588
  ret i8 %45, !dbg !3631
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @config_tap_int_settg(%struct.bmi160_int_settg*, %struct.bmi160_int_pin_settg*, %struct.bmi160_dev*) #1 !dbg !3632 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3633, metadata !177), !dbg !3634
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3635, metadata !177), !dbg !3636
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3637, metadata !177), !dbg !3638
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3639, metadata !177), !dbg !3640
  call void @llvm.dbg.value(metadata %struct.bmi160_int_settg* %0, i64 0, metadata !3633, metadata !177), !dbg !3634
  call void @llvm.dbg.value(metadata %struct.bmi160_int_pin_settg* %1, i64 0, metadata !3635, metadata !177), !dbg !3636
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %2, i64 0, metadata !3637, metadata !177), !dbg !3638
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !3641
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !3637, metadata !177), !dbg !3641
  %4 = call signext i8 @set_intr_pin_config(%struct.bmi160_int_settg* %0, %struct.bmi160_dev* @configStub) #5, !dbg !3642
  call void @llvm.dbg.value(metadata i8 %4, i64 0, metadata !3639, metadata !177), !dbg !3643
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 1514, i8 %4)
  %5 = sext i8 %4 to i32, !dbg !3644
  %6 = icmp eq i32 %5, 0, !dbg !3646
  br i1 %6, label %7, label %21, !dbg !3647

; <label>:7:                                      ; preds = %3
  %8 = call signext i8 @map_feature_interrupt(%struct.bmi160_int_settg* %0, %struct.bmi160_dev* @configStub) #5, !dbg !3648
  call void @llvm.dbg.value(metadata i8 %8, i64 0, metadata !3639, metadata !177), !dbg !3650
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 1515, i8 %8)
  %9 = sext i8 %8 to i32, !dbg !3651
  %10 = icmp eq i32 %9, 0, !dbg !3653
  br i1 %10, label %11, label %19, !dbg !3654

; <label>:11:                                     ; preds = %7
  %12 = call signext i8 @config_tap_data_src(%struct.bmi160_int_pin_settg* %1, %struct.bmi160_dev* @configStub) #5, !dbg !3655
  call void @llvm.dbg.value(metadata i8 %12, i64 0, metadata !3639, metadata !177), !dbg !3657
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 1516, i8 %12)
  %13 = sext i8 %12 to i32, !dbg !3658
  %14 = icmp eq i32 %13, 0, !dbg !3660
  br i1 %14, label %15, label %17, !dbg !3661

; <label>:15:                                     ; preds = %11
  %16 = call signext i8 @config_tap_param(%struct.bmi160_int_settg* %0, %struct.bmi160_int_pin_settg* %1, %struct.bmi160_dev* @configStub) #5, !dbg !3662
  call void @llvm.dbg.value(metadata i8 %16, i64 0, metadata !3639, metadata !177), !dbg !3663
  br label %17, !dbg !3664

; <label>:17:                                     ; preds = %15, %11
  %18 = phi i8 [ %16, %15 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata i8 %18, i64 0, metadata !3639, metadata !177), !dbg !3640
  br label %19, !dbg !3665

; <label>:19:                                     ; preds = %17, %7
  %20 = phi i8 [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8 %20, i64 0, metadata !3639, metadata !177), !dbg !3640
  br label %21, !dbg !3666

; <label>:21:                                     ; preds = %19, %3
  %22 = phi i8 [ %20, %19 ], [ %4, %3 ]
  call void @llvm.dbg.value(metadata i8 %22, i64 0, metadata !3639, metadata !177), !dbg !3640
  ret i8 %22, !dbg !3667
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @config_tap_data_src(%struct.bmi160_int_pin_settg*, %struct.bmi160_dev*) #1 !dbg !3668 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3671, metadata !177), !dbg !3672
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3673, metadata !177), !dbg !3674
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3675, metadata !177), !dbg !3676
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3677, metadata !177), !dbg !3678
  call void @llvm.dbg.value(metadata %struct.bmi160_int_pin_settg* %0, i64 0, metadata !3671, metadata !177), !dbg !3672
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %1, i64 0, metadata !3673, metadata !177), !dbg !3674
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !3679
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !3673, metadata !177), !dbg !3679
  call void @llvm.dbg.declare(metadata i8* %3, metadata !3680, metadata !177), !dbg !3681
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1517, i32 0)
  store i8 0, i8* %3, align 1, !dbg !3681
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1518, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !3677, metadata !177), !dbg !3678
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1519, i32 88)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1520, i32 1)
  %4 = call signext i8 @bmi160_get_regs(i8 zeroext 88, i8* %3, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !3682
  call void @llvm.dbg.value(metadata i8 %4, i64 0, metadata !3675, metadata !177), !dbg !3683
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 1521, i8 %4)
  %5 = sext i8 %4 to i32, !dbg !3684
  %6 = icmp eq i32 %5, 0, !dbg !3686
  br i1 %6, label %7, label %23, !dbg !3687

; <label>:7:                                      ; preds = %2
  %8 = load i8, i8* %3, align 1, !dbg !3688
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1523, i8 %8)
  %9 = zext i8 %8 to i32, !dbg !3688
  %10 = and i32 %9, -9, !dbg !3690
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1522, i32 %10)
  %11 = trunc i32 %10 to i8, !dbg !3688
  call void @llvm.dbg.value(metadata i8 %11, i64 0, metadata !3677, metadata !177), !dbg !3691
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1525, i8 %11)
  %12 = zext i8 %11 to i32, !dbg !3692
  %13 = bitcast %struct.bmi160_int_pin_settg* %0 to i16*, !dbg !3693
  %14 = load i16, i16* %13, align 2, !dbg !3693
  %15 = lshr i16 %14, 10, !dbg !3693
  %16 = and i16 %15, 1, !dbg !3693
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 1530, i16 %16)
  %17 = zext i16 %16 to i32, !dbg !3694
  call void @qpr.shift.by.amount.i32(i32 1527, i32 %17, i32 3)
  call void @qpr.shift.by.negative.i32(i32 1528, i32 %17, i32 3)
  call void @qpr.shift.of.negative.i32(i32 1529, i32 %17, i32 3)
  %18 = shl i32 %17, 3, !dbg !3695
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 1526, i32 %18)
  %19 = and i32 %18, 8, !dbg !3696
  %20 = or i32 %12, %19, !dbg !3697
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1524, i32 %20)
  %21 = trunc i32 %20 to i8, !dbg !3692
  store i8 %21, i8* %3, align 1, !dbg !3698
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1531, i32 88)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1532, i32 1)
  %22 = call signext i8 @bmi160_set_regs(i8 zeroext 88, i8* %3, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !3699
  call void @llvm.dbg.value(metadata i8 %22, i64 0, metadata !3675, metadata !177), !dbg !3700
  br label %23, !dbg !3701

; <label>:23:                                     ; preds = %7, %2
  %24 = phi i8 [ %22, %7 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i8 %24, i64 0, metadata !3675, metadata !177), !dbg !3676
  ret i8 %24, !dbg !3702
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @config_tap_param(%struct.bmi160_int_settg*, %struct.bmi160_int_pin_settg*, %struct.bmi160_dev*) #1 !dbg !3703 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3704, metadata !177), !dbg !3705
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3706, metadata !177), !dbg !3707
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3708, metadata !177), !dbg !3709
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3710, metadata !177), !dbg !3711
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3712, metadata !177), !dbg !3713
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3714, metadata !177), !dbg !3715
  %4 = alloca [2 x i8], align 1
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3716, metadata !177), !dbg !3717
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3718, metadata !177), !dbg !3719
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3720, metadata !177), !dbg !3721
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3722, metadata !177), !dbg !3723
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3724, metadata !177), !dbg !3725
  call void @llvm.dbg.value(metadata %struct.bmi160_int_settg* %0, i64 0, metadata !3704, metadata !177), !dbg !3705
  call void @llvm.dbg.value(metadata %struct.bmi160_int_pin_settg* %1, i64 0, metadata !3706, metadata !177), !dbg !3707
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %2, i64 0, metadata !3708, metadata !177), !dbg !3709
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !3726
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !3708, metadata !177), !dbg !3726
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1533, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !3712, metadata !177), !dbg !3713
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1534, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !3714, metadata !177), !dbg !3715
  call void @llvm.dbg.declare(metadata [2 x i8]* %4, metadata !3727, metadata !177), !dbg !3728
  %5 = bitcast [2 x i8]* %4 to i8*, !dbg !3728
  call void @llvm.memset.p0i8.i64(i8* %5, i8 0, i64 2, i32 1, i1 false), !dbg !3728
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1536, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !3716, metadata !177), !dbg !3717
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1537, i32 99)
  %6 = getelementptr inbounds [2 x i8], [2 x i8]* %4, i32 0, i32 0, !dbg !3729
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1538, i32 2)
  %7 = call signext i8 @bmi160_get_regs(i8 zeroext 99, i8* %6, i16 zeroext 2, %struct.bmi160_dev* @configStub) #5, !dbg !3730
  call void @llvm.dbg.value(metadata i8 %7, i64 0, metadata !3710, metadata !177), !dbg !3731
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 1539, i8 %7)
  %8 = sext i8 %7 to i32, !dbg !3732
  %9 = icmp eq i32 %8, 0, !dbg !3734
  br i1 %9, label %10, label %85, !dbg !3735

; <label>:10:                                     ; preds = %3
  %11 = zext i8 0 to i64, !dbg !3736
  %12 = getelementptr inbounds [2 x i8], [2 x i8]* %4, i64 0, i64 %11, !dbg !3736
  %13 = load i8, i8* %12, align 1, !dbg !3736
  call void @qpr.arrayindex.i8.i2(i32 1540, i8 0, i2 -2)
  call void @llvm.dbg.value(metadata i8 %13, i64 0, metadata !3714, metadata !177), !dbg !3738
  %14 = getelementptr inbounds %struct.bmi160_int_settg, %struct.bmi160_int_settg* %0, i32 0, i32 1, !dbg !3739
  %15 = load i32, i32* %14, align 4, !dbg !3739
  call void @qpr.implicit.conversion.overflow.u32.u32(i32 1541, i32 %15)
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 1542, i32 3)
  %16 = icmp eq i32 %15, 3, !dbg !3741
  br i1 %16, label %17, label %31, !dbg !3742

; <label>:17:                                     ; preds = %10
  %18 = bitcast %struct.bmi160_int_pin_settg* %1 to i16*, !dbg !3743
  %19 = load i16, i16* %18, align 2, !dbg !3743
  %20 = lshr i16 %19, 7, !dbg !3743
  %21 = and i16 %20, 7, !dbg !3743
  call void @qpr.explicit.conversion.overflow.u16.u8(i32 1543, i16 %21)
  %22 = trunc i16 %21 to i8, !dbg !3745
  call void @llvm.dbg.value(metadata i8 %22, i64 0, metadata !3718, metadata !177), !dbg !3746
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1545, i8 %13)
  %23 = zext i8 %13 to i32, !dbg !3747
  %24 = and i32 %23, -8, !dbg !3748
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1544, i32 %24)
  %25 = trunc i32 %24 to i8, !dbg !3749
  call void @llvm.dbg.value(metadata i8 %25, i64 0, metadata !3712, metadata !177), !dbg !3750
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1547, i8 %25)
  %26 = zext i8 %25 to i32, !dbg !3751
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1548, i8 %22)
  %27 = zext i8 %22 to i32, !dbg !3752
  %28 = and i32 %27, 7, !dbg !3753
  %29 = or i32 %26, %28, !dbg !3754
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1546, i32 %29)
  %30 = trunc i32 %29 to i8, !dbg !3751
  call void @llvm.dbg.value(metadata i8 %30, i64 0, metadata !3714, metadata !177), !dbg !3755
  br label %31, !dbg !3756

; <label>:31:                                     ; preds = %17, %10
  %32 = phi i8 [ %30, %17 ], [ %13, %10 ]
  call void @llvm.dbg.value(metadata i8 %32, i64 0, metadata !3714, metadata !177), !dbg !3715
  %33 = bitcast %struct.bmi160_int_pin_settg* %1 to i16*, !dbg !3757
  %34 = load i16, i16* %33, align 2, !dbg !3757
  %35 = lshr i16 %34, 5, !dbg !3757
  %36 = and i16 %35, 1, !dbg !3757
  call void @qpr.explicit.conversion.overflow.u16.u8(i32 1549, i16 %36)
  %37 = trunc i16 %36 to i8, !dbg !3758
  call void @llvm.dbg.value(metadata i8 %37, i64 0, metadata !3720, metadata !177), !dbg !3759
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1551, i8 %32)
  %38 = zext i8 %32 to i32, !dbg !3760
  %39 = and i32 %38, -65, !dbg !3761
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1550, i32 %39)
  %40 = trunc i32 %39 to i8, !dbg !3760
  call void @llvm.dbg.value(metadata i8 %40, i64 0, metadata !3712, metadata !177), !dbg !3762
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1553, i8 %40)
  %41 = zext i8 %40 to i32, !dbg !3763
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 1558, i8 %37)
  %42 = zext i8 %37 to i32, !dbg !3764
  call void @qpr.shift.by.amount.i32(i32 1555, i32 %42, i32 6)
  call void @qpr.shift.by.negative.i32(i32 1556, i32 %42, i32 6)
  call void @qpr.shift.of.negative.i32(i32 1557, i32 %42, i32 6)
  %43 = shl i32 %42, 6, !dbg !3765
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 1554, i32 %43)
  %44 = and i32 %43, 64, !dbg !3766
  %45 = or i32 %41, %44, !dbg !3767
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1552, i32 %45)
  %46 = trunc i32 %45 to i8, !dbg !3763
  call void @llvm.dbg.value(metadata i8 %46, i64 0, metadata !3714, metadata !177), !dbg !3768
  %47 = bitcast %struct.bmi160_int_pin_settg* %1 to i16*, !dbg !3769
  %48 = load i16, i16* %47, align 2, !dbg !3769
  %49 = lshr i16 %48, 6, !dbg !3769
  %50 = and i16 %49, 1, !dbg !3769
  call void @qpr.explicit.conversion.overflow.u16.u8(i32 1559, i16 %50)
  %51 = trunc i16 %50 to i8, !dbg !3770
  call void @llvm.dbg.value(metadata i8 %51, i64 0, metadata !3722, metadata !177), !dbg !3771
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1561, i8 %46)
  %52 = zext i8 %46 to i32, !dbg !3772
  %53 = and i32 %52, -129, !dbg !3773
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1560, i32 %53)
  %54 = trunc i32 %53 to i8, !dbg !3772
  call void @llvm.dbg.value(metadata i8 %54, i64 0, metadata !3712, metadata !177), !dbg !3774
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1563, i8 %54)
  %55 = zext i8 %54 to i32, !dbg !3775
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 1568, i8 %51)
  %56 = zext i8 %51 to i32, !dbg !3776
  call void @qpr.shift.by.amount.i32(i32 1565, i32 %56, i32 7)
  call void @qpr.shift.by.negative.i32(i32 1566, i32 %56, i32 7)
  call void @qpr.shift.of.negative.i32(i32 1567, i32 %56, i32 7)
  %57 = shl i32 %56, 7, !dbg !3777
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 1564, i32 %57)
  %58 = and i32 %57, 128, !dbg !3778
  %59 = or i32 %55, %58, !dbg !3779
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1562, i32 %59)
  %60 = trunc i32 %59 to i8, !dbg !3775
  call void @llvm.dbg.value(metadata i8 %60, i64 0, metadata !3714, metadata !177), !dbg !3780
  call void @qpr.uinc.i8(i32 1570, i8 0)
  %61 = add i8 0, 1, !dbg !3781
  call void @llvm.dbg.value(metadata i8 %61, i64 0, metadata !3716, metadata !177), !dbg !3781
  %62 = zext i8 0 to i64, !dbg !3782
  %63 = getelementptr inbounds [2 x i8], [2 x i8]* %4, i64 0, i64 %62, !dbg !3782
  call void @qpr.arrayindex.i8.i2(i32 1569, i8 0, i2 -2)
  store i8 %60, i8* %63, align 1, !dbg !3783
  %64 = zext i8 %61 to i64, !dbg !3784
  %65 = getelementptr inbounds [2 x i8], [2 x i8]* %4, i64 0, i64 %64, !dbg !3784
  %66 = load i8, i8* %65, align 1, !dbg !3784
  call void @qpr.arrayindex.i8.i2(i32 1571, i8 %61, i2 -2)
  call void @llvm.dbg.value(metadata i8 %66, i64 0, metadata !3714, metadata !177), !dbg !3785
  %67 = bitcast %struct.bmi160_int_pin_settg* %1 to i16*, !dbg !3786
  %68 = load i16, i16* %67, align 2, !dbg !3786
  %69 = and i16 %68, 31, !dbg !3786
  call void @qpr.explicit.conversion.overflow.u16.u8(i32 1572, i16 %69)
  %70 = trunc i16 %69 to i8, !dbg !3787
  call void @llvm.dbg.value(metadata i8 %70, i64 0, metadata !3724, metadata !177), !dbg !3788
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1574, i8 %66)
  %71 = zext i8 %66 to i32, !dbg !3789
  %72 = and i32 %71, -32, !dbg !3790
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1573, i32 %72)
  %73 = trunc i32 %72 to i8, !dbg !3789
  call void @llvm.dbg.value(metadata i8 %73, i64 0, metadata !3712, metadata !177), !dbg !3791
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1576, i8 %73)
  %74 = zext i8 %73 to i32, !dbg !3792
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1577, i8 %70)
  %75 = zext i8 %70 to i32, !dbg !3793
  %76 = and i32 %75, 31, !dbg !3794
  %77 = or i32 %74, %76, !dbg !3795
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1575, i32 %77)
  %78 = trunc i32 %77 to i8, !dbg !3792
  call void @llvm.dbg.value(metadata i8 %78, i64 0, metadata !3714, metadata !177), !dbg !3796
  call void @qpr.uinc.i8(i32 1579, i8 %61)
  %79 = add i8 %61, 1, !dbg !3797
  call void @llvm.dbg.value(metadata i8 %79, i64 0, metadata !3716, metadata !177), !dbg !3797
  %80 = zext i8 %61 to i64, !dbg !3798
  %81 = getelementptr inbounds [2 x i8], [2 x i8]* %4, i64 0, i64 %80, !dbg !3798
  call void @qpr.arrayindex.i8.i2(i32 1578, i8 %61, i2 -2)
  store i8 %78, i8* %81, align 1, !dbg !3799
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1580, i32 99)
  %82 = getelementptr inbounds [2 x i8], [2 x i8]* %4, i32 0, i32 0, !dbg !3800
  call void @qpr.implicit.conversion.overflow.u8.u16(i32 1581, i8 %79)
  %83 = zext i8 %79 to i16, !dbg !3801
  %84 = call signext i8 @bmi160_set_regs(i8 zeroext 99, i8* %82, i16 zeroext %83, %struct.bmi160_dev* @configStub) #5, !dbg !3802
  call void @llvm.dbg.value(metadata i8 %84, i64 0, metadata !3710, metadata !177), !dbg !3803
  br label %85, !dbg !3804

; <label>:85:                                     ; preds = %31, %3
  %86 = phi i8 [ %84, %31 ], [ %7, %3 ]
  call void @llvm.dbg.value(metadata i8 %86, i64 0, metadata !3710, metadata !177), !dbg !3711
  ret i8 %86, !dbg !3805
}

; Function Attrs: inaccessiblememonly nounwind
define weak_odr void @qpr.arrayindex.i8.i2(i32, i8, i2) #0 {
  %4 = zext i2 %2 to i8
  %5 = icmp ult i8 %1, %4
  call void @llbmc.assert(i1 %5, i32 %0)
  ret void
}

; Function Attrs: inaccessiblememonly nounwind
define weak_odr void @qpr.explicit.conversion.overflow.u16.u8(i32, i16) #0 {
  %3 = icmp ule i16 %1, 255
  call void @llbmc.assert(i1 %3, i32 %0)
  ret void
}

; Function Attrs: inaccessiblememonly nounwind
define weak_odr void @qpr.implicit.conversion.overflow.u8.u16(i32, i8) #0 {
  call void @llbmc.assert(i1 true, i32 %0)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @enable_no_motion_int(%struct.bmi160_acc_no_motion_int_cfg*, %struct.bmi160_dev*) #1 !dbg !3806 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3811, metadata !177), !dbg !3812
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3813, metadata !177), !dbg !3814
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3815, metadata !177), !dbg !3816
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3817, metadata !177), !dbg !3818
  call void @llvm.dbg.value(metadata %struct.bmi160_acc_no_motion_int_cfg* %0, i64 0, metadata !3811, metadata !177), !dbg !3812
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %1, i64 0, metadata !3813, metadata !177), !dbg !3814
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !3819
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !3813, metadata !177), !dbg !3819
  call void @llvm.dbg.declare(metadata i8* %3, metadata !3820, metadata !177), !dbg !3821
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1268, i32 0)
  store i8 0, i8* %3, align 1, !dbg !3821
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1269, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !3817, metadata !177), !dbg !3818
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1270, i32 82)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1271, i32 1)
  %4 = call signext i8 @bmi160_get_regs(i8 zeroext 82, i8* %3, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !3822
  call void @llvm.dbg.value(metadata i8 %4, i64 0, metadata !3815, metadata !177), !dbg !3823
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 1272, i8 %4)
  %5 = sext i8 %4 to i32, !dbg !3824
  %6 = icmp eq i32 %5, 0, !dbg !3826
  br i1 %6, label %7, label %53, !dbg !3827

; <label>:7:                                      ; preds = %2
  %8 = bitcast %struct.bmi160_acc_no_motion_int_cfg* %0 to i16*, !dbg !3828
  %9 = load i16, i16* %8, align 2, !dbg !3828
  %10 = and i16 %9, 1, !dbg !3828
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 1273, i16 %10)
  %11 = zext i16 %10 to i32, !dbg !3831
  %12 = icmp eq i32 %11, 1, !dbg !3832
  br i1 %12, label %13, label %21, !dbg !3833

; <label>:13:                                     ; preds = %7
  %14 = load i8, i8* %3, align 1, !dbg !3834
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1275, i8 %14)
  %15 = zext i8 %14 to i32, !dbg !3834
  %16 = and i32 %15, -2, !dbg !3836
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1274, i32 %16)
  %17 = trunc i32 %16 to i8, !dbg !3834
  call void @llvm.dbg.value(metadata i8 %17, i64 0, metadata !3817, metadata !177), !dbg !3837
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1277, i8 %17)
  %18 = zext i8 %17 to i32, !dbg !3838
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 1278, i32 1)
  %19 = or i32 %18, 1, !dbg !3839
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1276, i32 %19)
  %20 = trunc i32 %19 to i8, !dbg !3838
  store i8 %20, i8* %3, align 1, !dbg !3840
  br label %21, !dbg !3841

; <label>:21:                                     ; preds = %13, %7
  %22 = bitcast %struct.bmi160_acc_no_motion_int_cfg* %0 to i16*, !dbg !3842
  %23 = load i16, i16* %22, align 2, !dbg !3842
  %24 = lshr i16 %23, 1, !dbg !3842
  %25 = and i16 %24, 1, !dbg !3842
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 1279, i16 %25)
  %26 = zext i16 %25 to i32, !dbg !3844
  %27 = icmp eq i32 %26, 1, !dbg !3845
  br i1 %27, label %28, label %36, !dbg !3846

; <label>:28:                                     ; preds = %21
  %29 = load i8, i8* %3, align 1, !dbg !3847
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1281, i8 %29)
  %30 = zext i8 %29 to i32, !dbg !3847
  %31 = and i32 %30, -3, !dbg !3849
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1280, i32 %31)
  %32 = trunc i32 %31 to i8, !dbg !3847
  call void @llvm.dbg.value(metadata i8 %32, i64 0, metadata !3817, metadata !177), !dbg !3850
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1283, i8 %32)
  %33 = zext i8 %32 to i32, !dbg !3851
  call void @qpr.shift.by.amount.i32(i32 1285, i32 1, i32 1)
  call void @qpr.shift.by.negative.i32(i32 1286, i32 1, i32 1)
  call void @qpr.shift.of.negative.i32(i32 1287, i32 1, i32 1)
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 1284, i32 2)
  %34 = or i32 %33, 2, !dbg !3852
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1282, i32 %34)
  %35 = trunc i32 %34 to i8, !dbg !3851
  store i8 %35, i8* %3, align 1, !dbg !3853
  br label %36, !dbg !3854

; <label>:36:                                     ; preds = %28, %21
  %37 = bitcast %struct.bmi160_acc_no_motion_int_cfg* %0 to i16*, !dbg !3855
  %38 = load i16, i16* %37, align 2, !dbg !3855
  %39 = lshr i16 %38, 2, !dbg !3855
  %40 = and i16 %39, 1, !dbg !3855
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 1288, i16 %40)
  %41 = zext i16 %40 to i32, !dbg !3857
  %42 = icmp eq i32 %41, 1, !dbg !3858
  br i1 %42, label %43, label %51, !dbg !3859

; <label>:43:                                     ; preds = %36
  %44 = load i8, i8* %3, align 1, !dbg !3860
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1290, i8 %44)
  %45 = zext i8 %44 to i32, !dbg !3860
  %46 = and i32 %45, -5, !dbg !3862
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1289, i32 %46)
  %47 = trunc i32 %46 to i8, !dbg !3860
  call void @llvm.dbg.value(metadata i8 %47, i64 0, metadata !3817, metadata !177), !dbg !3863
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1292, i8 %47)
  %48 = zext i8 %47 to i32, !dbg !3864
  call void @qpr.shift.by.amount.i32(i32 1294, i32 1, i32 2)
  call void @qpr.shift.by.negative.i32(i32 1295, i32 1, i32 2)
  call void @qpr.shift.of.negative.i32(i32 1296, i32 1, i32 2)
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 1293, i32 4)
  %49 = or i32 %48, 4, !dbg !3865
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1291, i32 %49)
  %50 = trunc i32 %49 to i8, !dbg !3864
  store i8 %50, i8* %3, align 1, !dbg !3866
  br label %51, !dbg !3867

; <label>:51:                                     ; preds = %43, %36
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1297, i32 82)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1298, i32 1)
  %52 = call signext i8 @bmi160_set_regs(i8 zeroext 82, i8* %3, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !3868
  call void @llvm.dbg.value(metadata i8 %52, i64 0, metadata !3815, metadata !177), !dbg !3869
  br label %53, !dbg !3870

; <label>:53:                                     ; preds = %51, %2
  %54 = phi i8 [ %52, %51 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i8 %54, i64 0, metadata !3815, metadata !177), !dbg !3816
  ret i8 %54, !dbg !3871
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @config_no_motion_int_settg(%struct.bmi160_int_settg*, %struct.bmi160_acc_no_motion_int_cfg*, %struct.bmi160_dev*) #1 !dbg !3872 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3875, metadata !177), !dbg !3876
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3877, metadata !177), !dbg !3878
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3879, metadata !177), !dbg !3880
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3881, metadata !177), !dbg !3882
  call void @llvm.dbg.value(metadata %struct.bmi160_int_settg* %0, i64 0, metadata !3875, metadata !177), !dbg !3876
  call void @llvm.dbg.value(metadata %struct.bmi160_acc_no_motion_int_cfg* %1, i64 0, metadata !3877, metadata !177), !dbg !3878
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %2, i64 0, metadata !3879, metadata !177), !dbg !3880
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !3883
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !3879, metadata !177), !dbg !3883
  %4 = call signext i8 @set_intr_pin_config(%struct.bmi160_int_settg* %0, %struct.bmi160_dev* @configStub) #5, !dbg !3884
  call void @llvm.dbg.value(metadata i8 %4, i64 0, metadata !3881, metadata !177), !dbg !3885
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 1299, i8 %4)
  %5 = sext i8 %4 to i32, !dbg !3886
  %6 = icmp eq i32 %5, 0, !dbg !3888
  br i1 %6, label %7, label %21, !dbg !3889

; <label>:7:                                      ; preds = %3
  %8 = call signext i8 @map_feature_interrupt(%struct.bmi160_int_settg* %0, %struct.bmi160_dev* @configStub) #5, !dbg !3890
  call void @llvm.dbg.value(metadata i8 %8, i64 0, metadata !3881, metadata !177), !dbg !3892
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 1300, i8 %8)
  %9 = sext i8 %8 to i32, !dbg !3893
  %10 = icmp eq i32 %9, 0, !dbg !3895
  br i1 %10, label %11, label %19, !dbg !3896

; <label>:11:                                     ; preds = %7
  %12 = call signext i8 @config_no_motion_data_src(%struct.bmi160_acc_no_motion_int_cfg* %1, %struct.bmi160_dev* @configStub) #5, !dbg !3897
  call void @llvm.dbg.value(metadata i8 %12, i64 0, metadata !3881, metadata !177), !dbg !3899
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 1301, i8 %12)
  %13 = sext i8 %12 to i32, !dbg !3900
  %14 = icmp eq i32 %13, 0, !dbg !3902
  br i1 %14, label %15, label %17, !dbg !3903

; <label>:15:                                     ; preds = %11
  %16 = call signext i8 @config_no_motion_dur_thr(%struct.bmi160_acc_no_motion_int_cfg* %1, %struct.bmi160_dev* @configStub) #5, !dbg !3904
  call void @llvm.dbg.value(metadata i8 %16, i64 0, metadata !3881, metadata !177), !dbg !3905
  br label %17, !dbg !3906

; <label>:17:                                     ; preds = %15, %11
  %18 = phi i8 [ %16, %15 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata i8 %18, i64 0, metadata !3881, metadata !177), !dbg !3882
  br label %19, !dbg !3907

; <label>:19:                                     ; preds = %17, %7
  %20 = phi i8 [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8 %20, i64 0, metadata !3881, metadata !177), !dbg !3882
  br label %21, !dbg !3908

; <label>:21:                                     ; preds = %19, %3
  %22 = phi i8 [ %20, %19 ], [ %4, %3 ]
  call void @llvm.dbg.value(metadata i8 %22, i64 0, metadata !3881, metadata !177), !dbg !3882
  ret i8 %22, !dbg !3909
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @config_no_motion_data_src(%struct.bmi160_acc_no_motion_int_cfg*, %struct.bmi160_dev*) #1 !dbg !3910 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3911, metadata !177), !dbg !3912
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3913, metadata !177), !dbg !3914
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3915, metadata !177), !dbg !3916
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3917, metadata !177), !dbg !3918
  call void @llvm.dbg.value(metadata %struct.bmi160_acc_no_motion_int_cfg* %0, i64 0, metadata !3911, metadata !177), !dbg !3912
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %1, i64 0, metadata !3913, metadata !177), !dbg !3914
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !3919
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !3913, metadata !177), !dbg !3919
  call void @llvm.dbg.declare(metadata i8* %3, metadata !3920, metadata !177), !dbg !3921
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1302, i32 0)
  store i8 0, i8* %3, align 1, !dbg !3921
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1303, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !3917, metadata !177), !dbg !3918
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1304, i32 89)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1305, i32 1)
  %4 = call signext i8 @bmi160_get_regs(i8 zeroext 89, i8* %3, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !3922
  call void @llvm.dbg.value(metadata i8 %4, i64 0, metadata !3915, metadata !177), !dbg !3923
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 1306, i8 %4)
  %5 = sext i8 %4 to i32, !dbg !3924
  %6 = icmp eq i32 %5, 0, !dbg !3926
  br i1 %6, label %7, label %23, !dbg !3927

; <label>:7:                                      ; preds = %2
  %8 = load i8, i8* %3, align 1, !dbg !3928
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1308, i8 %8)
  %9 = zext i8 %8 to i32, !dbg !3928
  %10 = and i32 %9, -129, !dbg !3930
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1307, i32 %10)
  %11 = trunc i32 %10 to i8, !dbg !3928
  call void @llvm.dbg.value(metadata i8 %11, i64 0, metadata !3917, metadata !177), !dbg !3931
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1310, i8 %11)
  %12 = zext i8 %11 to i32, !dbg !3932
  %13 = bitcast %struct.bmi160_acc_no_motion_int_cfg* %0 to i16*, !dbg !3933
  %14 = load i16, i16* %13, align 2, !dbg !3933
  %15 = lshr i16 %14, 10, !dbg !3933
  %16 = and i16 %15, 1, !dbg !3933
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 1315, i16 %16)
  %17 = zext i16 %16 to i32, !dbg !3934
  call void @qpr.shift.by.amount.i32(i32 1312, i32 %17, i32 7)
  call void @qpr.shift.by.negative.i32(i32 1313, i32 %17, i32 7)
  call void @qpr.shift.of.negative.i32(i32 1314, i32 %17, i32 7)
  %18 = shl i32 %17, 7, !dbg !3935
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 1311, i32 %18)
  %19 = and i32 %18, 128, !dbg !3936
  %20 = or i32 %12, %19, !dbg !3937
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1309, i32 %20)
  %21 = trunc i32 %20 to i8, !dbg !3932
  store i8 %21, i8* %3, align 1, !dbg !3938
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1316, i32 89)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1317, i32 1)
  %22 = call signext i8 @bmi160_set_regs(i8 zeroext 89, i8* %3, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !3939
  call void @llvm.dbg.value(metadata i8 %22, i64 0, metadata !3915, metadata !177), !dbg !3940
  br label %23, !dbg !3941

; <label>:23:                                     ; preds = %7, %2
  %24 = phi i8 [ %22, %7 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i8 %24, i64 0, metadata !3915, metadata !177), !dbg !3916
  ret i8 %24, !dbg !3942
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @config_no_motion_dur_thr(%struct.bmi160_acc_no_motion_int_cfg*, %struct.bmi160_dev*) #1 !dbg !3943 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3944, metadata !177), !dbg !3945
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3946, metadata !177), !dbg !3947
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3948, metadata !177), !dbg !3949
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3950, metadata !177), !dbg !3951
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3952, metadata !177), !dbg !3953
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !3954, metadata !177), !dbg !3955
  %4 = alloca [2 x i8], align 1
  call void @llvm.dbg.value(metadata %struct.bmi160_acc_no_motion_int_cfg* %0, i64 0, metadata !3944, metadata !177), !dbg !3945
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %1, i64 0, metadata !3946, metadata !177), !dbg !3947
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !3956
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !3946, metadata !177), !dbg !3956
  call void @llvm.dbg.declare(metadata i8* %3, metadata !3957, metadata !177), !dbg !3958
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1318, i32 0)
  store i8 0, i8* %3, align 1, !dbg !3958
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1319, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !3950, metadata !177), !dbg !3951
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1320, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !3952, metadata !177), !dbg !3953
  call void @llvm.dbg.declare(metadata [2 x i8]* %4, metadata !3959, metadata !177), !dbg !3960
  %5 = bitcast [2 x i8]* %4 to i8*, !dbg !3960
  call void @llvm.memset.p0i8.i64(i8* %5, i8 0, i64 2, i32 1, i1 false), !dbg !3960
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1322, i32 95)
  call void @llvm.dbg.value(metadata i8 95, i64 0, metadata !3954, metadata !177), !dbg !3961
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1323, i32 1)
  %6 = call signext i8 @bmi160_get_regs(i8 zeroext 95, i8* %3, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !3962
  call void @llvm.dbg.value(metadata i8 %6, i64 0, metadata !3948, metadata !177), !dbg !3963
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 1324, i8 %6)
  %7 = sext i8 %6 to i32, !dbg !3964
  %8 = icmp eq i32 %7, 0, !dbg !3966
  br i1 %8, label %9, label %58, !dbg !3967

; <label>:9:                                      ; preds = %2
  %10 = load i8, i8* %3, align 1, !dbg !3968
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1326, i8 %10)
  %11 = zext i8 %10 to i32, !dbg !3968
  %12 = and i32 %11, -253, !dbg !3970
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1325, i32 %12)
  %13 = trunc i32 %12 to i8, !dbg !3968
  call void @llvm.dbg.value(metadata i8 %13, i64 0, metadata !3950, metadata !177), !dbg !3971
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1328, i8 %13)
  %14 = zext i8 %13 to i32, !dbg !3972
  %15 = bitcast %struct.bmi160_acc_no_motion_int_cfg* %0 to i16*, !dbg !3973
  %16 = load i16, i16* %15, align 2, !dbg !3973
  %17 = lshr i16 %16, 3, !dbg !3973
  %18 = and i16 %17, 63, !dbg !3973
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 1333, i16 %18)
  %19 = zext i16 %18 to i32, !dbg !3974
  call void @qpr.shift.by.amount.i32(i32 1330, i32 %19, i32 2)
  call void @qpr.shift.by.negative.i32(i32 1331, i32 %19, i32 2)
  call void @qpr.shift.of.negative.i32(i32 1332, i32 %19, i32 2)
  %20 = shl i32 %19, 2, !dbg !3975
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 1329, i32 %20)
  %21 = and i32 %20, 252, !dbg !3976
  %22 = or i32 %14, %21, !dbg !3977
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1327, i32 %22)
  %23 = trunc i32 %22 to i8, !dbg !3972
  store i8 %23, i8* %3, align 1, !dbg !3978
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1334, i32 1)
  %24 = call signext i8 @bmi160_set_regs(i8 zeroext 95, i8* %3, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !3979
  call void @llvm.dbg.value(metadata i8 %24, i64 0, metadata !3948, metadata !177), !dbg !3980
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 1335, i8 %24)
  %25 = sext i8 %24 to i32, !dbg !3981
  %26 = icmp eq i32 %25, 0, !dbg !3983
  br i1 %26, label %27, label %56, !dbg !3984

; <label>:27:                                     ; preds = %9
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1336, i32 98)
  call void @llvm.dbg.value(metadata i8 98, i64 0, metadata !3954, metadata !177), !dbg !3985
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1337, i32 1)
  %28 = call signext i8 @bmi160_get_regs(i8 zeroext 98, i8* %3, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !3987
  call void @llvm.dbg.value(metadata i8 %28, i64 0, metadata !3948, metadata !177), !dbg !3988
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 1338, i8 %28)
  %29 = sext i8 %28 to i32, !dbg !3989
  %30 = icmp eq i32 %29, 0, !dbg !3991
  br i1 %30, label %31, label %54, !dbg !3992

; <label>:31:                                     ; preds = %27
  %32 = load i8, i8* %3, align 1, !dbg !3993
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1340, i8 %32)
  %33 = zext i8 %32 to i32, !dbg !3993
  %34 = and i32 %33, -2, !dbg !3995
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1339, i32 %34)
  %35 = trunc i32 %34 to i8, !dbg !3993
  call void @llvm.dbg.value(metadata i8 %35, i64 0, metadata !3950, metadata !177), !dbg !3996
  %36 = bitcast %struct.bmi160_acc_no_motion_int_cfg* %0 to i16*, !dbg !3997
  %37 = load i16, i16* %36, align 2, !dbg !3997
  %38 = lshr i16 %37, 9, !dbg !3997
  %39 = and i16 %38, 1, !dbg !3997
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 1342, i16 %39)
  %40 = zext i16 %39 to i32, !dbg !3998
  %41 = and i32 %40, 1, !dbg !3999
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1341, i32 %41)
  %42 = trunc i32 %41 to i8, !dbg !4000
  call void @llvm.dbg.value(metadata i8 %42, i64 0, metadata !3952, metadata !177), !dbg !4001
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 1344, i8 %35)
  %43 = zext i8 %35 to i32, !dbg !4002
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 1345, i8 %42)
  %44 = zext i8 %42 to i32, !dbg !4003
  %45 = or i32 %43, %44, !dbg !4004
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1343, i32 %45)
  %46 = trunc i32 %45 to i8, !dbg !4005
  store i8 %46, i8* %3, align 1, !dbg !4006
  %47 = load i8, i8* %3, align 1, !dbg !4007
  %48 = getelementptr inbounds [2 x i8], [2 x i8]* %4, i64 0, i64 1, !dbg !4008
  call void @qpr.arrayindex.i32.i2(i32 1346, i32 1, i2 -2)
  store i8 %47, i8* %48, align 1, !dbg !4009
  %49 = getelementptr inbounds %struct.bmi160_acc_no_motion_int_cfg, %struct.bmi160_acc_no_motion_int_cfg* %0, i32 0, i32 1, !dbg !4010
  %50 = load i8, i8* %49, align 2, !dbg !4010
  %51 = getelementptr inbounds [2 x i8], [2 x i8]* %4, i64 0, i64 0, !dbg !4011
  call void @qpr.arrayindex.i32.i2(i32 1347, i32 0, i2 -2)
  store i8 %50, i8* %51, align 1, !dbg !4012
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1348, i32 97)
  call void @llvm.dbg.value(metadata i8 97, i64 0, metadata !3954, metadata !177), !dbg !4013
  %52 = getelementptr inbounds [2 x i8], [2 x i8]* %4, i32 0, i32 0, !dbg !4014
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1349, i32 2)
  %53 = call signext i8 @bmi160_set_regs(i8 zeroext 97, i8* %52, i16 zeroext 2, %struct.bmi160_dev* @configStub) #5, !dbg !4015
  call void @llvm.dbg.value(metadata i8 %53, i64 0, metadata !3948, metadata !177), !dbg !4016
  br label %54, !dbg !4017

; <label>:54:                                     ; preds = %31, %27
  %55 = phi i8 [ %53, %31 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i8 %55, i64 0, metadata !3948, metadata !177), !dbg !3949
  br label %56, !dbg !4018

; <label>:56:                                     ; preds = %54, %9
  %57 = phi i8 [ %55, %54 ], [ %24, %9 ]
  call void @llvm.dbg.value(metadata i8 %57, i64 0, metadata !3948, metadata !177), !dbg !3949
  br label %58, !dbg !4019

; <label>:58:                                     ; preds = %56, %2
  %59 = phi i8 [ %57, %56 ], [ %6, %2 ]
  call void @llvm.dbg.value(metadata i8 %59, i64 0, metadata !3948, metadata !177), !dbg !3949
  ret i8 %59, !dbg !4020
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @enable_sig_motion_int(%struct.bmi160_aux_cfg*, %struct.bmi160_dev*) #1 !dbg !4021 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4026, metadata !177), !dbg !4027
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4028, metadata !177), !dbg !4029
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4030, metadata !177), !dbg !4031
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4032, metadata !177), !dbg !4033
  call void @llvm.dbg.value(metadata %struct.bmi160_aux_cfg* %0, i64 0, metadata !4026, metadata !177), !dbg !4027
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %1, i64 0, metadata !4028, metadata !177), !dbg !4029
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !4034
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !4028, metadata !177), !dbg !4034
  call void @llvm.dbg.declare(metadata i8* %3, metadata !4035, metadata !177), !dbg !4036
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1350, i32 0)
  store i8 0, i8* %3, align 1, !dbg !4036
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1351, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !4032, metadata !177), !dbg !4033
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1352, i32 80)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1353, i32 1)
  %4 = call signext i8 @bmi160_get_regs(i8 zeroext 80, i8* %3, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !4037
  call void @llvm.dbg.value(metadata i8 %4, i64 0, metadata !4030, metadata !177), !dbg !4038
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 1354, i8 %4)
  %5 = sext i8 %4 to i32, !dbg !4039
  %6 = icmp eq i32 %5, 0, !dbg !4041
  br i1 %6, label %7, label %31, !dbg !4042

; <label>:7:                                      ; preds = %2
  %8 = bitcast %struct.bmi160_aux_cfg* %0 to i8*, !dbg !4043
  %9 = load i8, i8* %8, align 1, !dbg !4043
  %10 = lshr i8 %9, 5, !dbg !4043
  %11 = and i8 %10, 1, !dbg !4043
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1355, i8 %11)
  %12 = zext i8 %11 to i32, !dbg !4046
  %13 = icmp eq i32 %12, 1, !dbg !4047
  br i1 %13, label %14, label %23, !dbg !4048

; <label>:14:                                     ; preds = %7
  %15 = load i8, i8* %3, align 1, !dbg !4049
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1357, i8 %15)
  %16 = zext i8 %15 to i32, !dbg !4049
  %17 = and i32 %16, -8, !dbg !4051
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1356, i32 %17)
  %18 = trunc i32 %17 to i8, !dbg !4049
  call void @llvm.dbg.value(metadata i8 %18, i64 0, metadata !4032, metadata !177), !dbg !4052
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1359, i8 %18)
  %19 = zext i8 %18 to i32, !dbg !4053
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 1360, i32 7)
  %20 = or i32 %19, 7, !dbg !4054
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1358, i32 %20)
  %21 = trunc i32 %20 to i8, !dbg !4053
  store i8 %21, i8* %3, align 1, !dbg !4055
  call void @qpr.implicit.conversion.overflow.s32.s32(i32 1361, i32 1)
  %22 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 3, !dbg !4056
  store i32 1, i32* %22, align 4, !dbg !4057
  br label %29, !dbg !4058

; <label>:23:                                     ; preds = %7
  %24 = load i8, i8* %3, align 1, !dbg !4059
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1363, i8 %24)
  %25 = zext i8 %24 to i32, !dbg !4059
  %26 = and i32 %25, -8, !dbg !4061
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1362, i32 %26)
  %27 = trunc i32 %26 to i8, !dbg !4059
  store i8 %27, i8* %3, align 1, !dbg !4062
  call void @qpr.implicit.conversion.overflow.s32.s32(i32 1364, i32 -1)
  %28 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 3, !dbg !4063
  store i32 -1, i32* %28, align 4, !dbg !4064
  br label %29

; <label>:29:                                     ; preds = %23, %14
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1365, i32 80)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1366, i32 1)
  %30 = call signext i8 @bmi160_set_regs(i8 zeroext 80, i8* %3, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !4065
  call void @llvm.dbg.value(metadata i8 %30, i64 0, metadata !4030, metadata !177), !dbg !4066
  br label %31, !dbg !4067

; <label>:31:                                     ; preds = %29, %2
  %32 = phi i8 [ %30, %29 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i8 %32, i64 0, metadata !4030, metadata !177), !dbg !4031
  ret i8 %32, !dbg !4068
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @config_sig_motion_int_settg(%struct.bmi160_int_settg*, %struct.bmi160_aux_cfg*, %struct.bmi160_dev*) #1 !dbg !4069 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4072, metadata !177), !dbg !4073
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4074, metadata !177), !dbg !4075
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4076, metadata !177), !dbg !4077
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4078, metadata !177), !dbg !4079
  call void @llvm.dbg.value(metadata %struct.bmi160_int_settg* %0, i64 0, metadata !4072, metadata !177), !dbg !4073
  call void @llvm.dbg.value(metadata %struct.bmi160_aux_cfg* %1, i64 0, metadata !4074, metadata !177), !dbg !4075
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %2, i64 0, metadata !4076, metadata !177), !dbg !4077
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !4080
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !4076, metadata !177), !dbg !4080
  %4 = call signext i8 @set_intr_pin_config(%struct.bmi160_int_settg* %0, %struct.bmi160_dev* @configStub) #5, !dbg !4081
  call void @llvm.dbg.value(metadata i8 %4, i64 0, metadata !4078, metadata !177), !dbg !4082
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 1367, i8 %4)
  %5 = sext i8 %4 to i32, !dbg !4083
  %6 = icmp eq i32 %5, 0, !dbg !4085
  br i1 %6, label %7, label %21, !dbg !4086

; <label>:7:                                      ; preds = %3
  %8 = call signext i8 @map_feature_interrupt(%struct.bmi160_int_settg* %0, %struct.bmi160_dev* @configStub) #5, !dbg !4087
  call void @llvm.dbg.value(metadata i8 %8, i64 0, metadata !4078, metadata !177), !dbg !4089
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 1368, i8 %8)
  %9 = sext i8 %8 to i32, !dbg !4090
  %10 = icmp eq i32 %9, 0, !dbg !4092
  br i1 %10, label %11, label %19, !dbg !4093

; <label>:11:                                     ; preds = %7
  %12 = call signext i8 @config_sig_motion_data_src(%struct.bmi160_aux_cfg* %1, %struct.bmi160_dev* @configStub) #5, !dbg !4094
  call void @llvm.dbg.value(metadata i8 %12, i64 0, metadata !4078, metadata !177), !dbg !4096
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 1369, i8 %12)
  %13 = sext i8 %12 to i32, !dbg !4097
  %14 = icmp eq i32 %13, 0, !dbg !4099
  br i1 %14, label %15, label %17, !dbg !4100

; <label>:15:                                     ; preds = %11
  %16 = call signext i8 @config_sig_dur_threshold(%struct.bmi160_aux_cfg* %1, %struct.bmi160_dev* @configStub) #5, !dbg !4101
  call void @llvm.dbg.value(metadata i8 %16, i64 0, metadata !4078, metadata !177), !dbg !4102
  br label %17, !dbg !4103

; <label>:17:                                     ; preds = %15, %11
  %18 = phi i8 [ %16, %15 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata i8 %18, i64 0, metadata !4078, metadata !177), !dbg !4079
  br label %19, !dbg !4104

; <label>:19:                                     ; preds = %17, %7
  %20 = phi i8 [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8 %20, i64 0, metadata !4078, metadata !177), !dbg !4079
  br label %21, !dbg !4105

; <label>:21:                                     ; preds = %19, %3
  %22 = phi i8 [ %20, %19 ], [ %4, %3 ]
  call void @llvm.dbg.value(metadata i8 %22, i64 0, metadata !4078, metadata !177), !dbg !4079
  ret i8 %22, !dbg !4106
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @config_sig_motion_data_src(%struct.bmi160_aux_cfg*, %struct.bmi160_dev*) #1 !dbg !4107 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4110, metadata !177), !dbg !4111
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4112, metadata !177), !dbg !4113
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4114, metadata !177), !dbg !4115
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4116, metadata !177), !dbg !4117
  call void @llvm.dbg.value(metadata %struct.bmi160_aux_cfg* %0, i64 0, metadata !4110, metadata !177), !dbg !4111
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %1, i64 0, metadata !4112, metadata !177), !dbg !4113
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !4118
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !4112, metadata !177), !dbg !4118
  call void @llvm.dbg.declare(metadata i8* %3, metadata !4119, metadata !177), !dbg !4120
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1370, i32 0)
  store i8 0, i8* %3, align 1, !dbg !4120
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1371, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !4116, metadata !177), !dbg !4117
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1372, i32 89)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1373, i32 1)
  %4 = call signext i8 @bmi160_get_regs(i8 zeroext 89, i8* %3, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !4121
  call void @llvm.dbg.value(metadata i8 %4, i64 0, metadata !4114, metadata !177), !dbg !4122
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 1374, i8 %4)
  %5 = sext i8 %4 to i32, !dbg !4123
  %6 = icmp eq i32 %5, 0, !dbg !4125
  br i1 %6, label %7, label %23, !dbg !4126

; <label>:7:                                      ; preds = %2
  %8 = load i8, i8* %3, align 1, !dbg !4127
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1376, i8 %8)
  %9 = zext i8 %8 to i32, !dbg !4127
  %10 = and i32 %9, -129, !dbg !4129
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1375, i32 %10)
  %11 = trunc i32 %10 to i8, !dbg !4127
  call void @llvm.dbg.value(metadata i8 %11, i64 0, metadata !4116, metadata !177), !dbg !4130
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1378, i8 %11)
  %12 = zext i8 %11 to i32, !dbg !4131
  %13 = bitcast %struct.bmi160_aux_cfg* %0 to i8*, !dbg !4132
  %14 = load i8, i8* %13, align 1, !dbg !4132
  %15 = lshr i8 %14, 4, !dbg !4132
  %16 = and i8 %15, 1, !dbg !4132
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 1383, i8 %16)
  %17 = zext i8 %16 to i32, !dbg !4133
  call void @qpr.shift.by.amount.i32(i32 1380, i32 %17, i32 7)
  call void @qpr.shift.by.negative.i32(i32 1381, i32 %17, i32 7)
  call void @qpr.shift.of.negative.i32(i32 1382, i32 %17, i32 7)
  %18 = shl i32 %17, 7, !dbg !4134
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 1379, i32 %18)
  %19 = and i32 %18, 128, !dbg !4135
  %20 = or i32 %12, %19, !dbg !4136
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1377, i32 %20)
  %21 = trunc i32 %20 to i8, !dbg !4131
  store i8 %21, i8* %3, align 1, !dbg !4137
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1384, i32 89)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1385, i32 1)
  %22 = call signext i8 @bmi160_set_regs(i8 zeroext 89, i8* %3, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !4138
  call void @llvm.dbg.value(metadata i8 %22, i64 0, metadata !4114, metadata !177), !dbg !4139
  br label %23, !dbg !4140

; <label>:23:                                     ; preds = %7, %2
  %24 = phi i8 [ %22, %7 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i8 %24, i64 0, metadata !4114, metadata !177), !dbg !4115
  ret i8 %24, !dbg !4141
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @config_sig_dur_threshold(%struct.bmi160_aux_cfg*, %struct.bmi160_dev*) #1 !dbg !4142 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4143, metadata !177), !dbg !4144
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4145, metadata !177), !dbg !4146
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4147, metadata !177), !dbg !4148
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4149, metadata !177), !dbg !4150
  call void @llvm.dbg.value(metadata %struct.bmi160_aux_cfg* %0, i64 0, metadata !4143, metadata !177), !dbg !4144
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %1, i64 0, metadata !4145, metadata !177), !dbg !4146
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !4151
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !4145, metadata !177), !dbg !4151
  call void @llvm.dbg.declare(metadata i8* %3, metadata !4152, metadata !177), !dbg !4153
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1386, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !4149, metadata !177), !dbg !4150
  %4 = getelementptr inbounds %struct.bmi160_aux_cfg, %struct.bmi160_aux_cfg* %0, i32 0, i32 1, !dbg !4154
  %5 = load i8, i8* %4, align 1, !dbg !4154
  store i8 %5, i8* %3, align 1, !dbg !4155
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1387, i32 96)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1388, i32 1)
  %6 = call signext i8 @bmi160_set_regs(i8 zeroext 96, i8* %3, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !4156
  call void @llvm.dbg.value(metadata i8 %6, i64 0, metadata !4147, metadata !177), !dbg !4157
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 1389, i8 %6)
  %7 = sext i8 %6 to i32, !dbg !4158
  %8 = icmp eq i32 %7, 0, !dbg !4160
  br i1 %8, label %9, label %58, !dbg !4161

; <label>:9:                                      ; preds = %2
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1390, i32 98)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1391, i32 1)
  %10 = call signext i8 @bmi160_get_regs(i8 zeroext 98, i8* %3, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !4162
  call void @llvm.dbg.value(metadata i8 %10, i64 0, metadata !4147, metadata !177), !dbg !4164
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 1392, i8 %10)
  %11 = sext i8 %10 to i32, !dbg !4165
  %12 = icmp eq i32 %11, 0, !dbg !4167
  br i1 %12, label %13, label %56, !dbg !4168

; <label>:13:                                     ; preds = %9
  %14 = load i8, i8* %3, align 1, !dbg !4169
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1394, i8 %14)
  %15 = zext i8 %14 to i32, !dbg !4169
  %16 = and i32 %15, -13, !dbg !4171
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1393, i32 %16)
  %17 = trunc i32 %16 to i8, !dbg !4169
  call void @llvm.dbg.value(metadata i8 %17, i64 0, metadata !4149, metadata !177), !dbg !4172
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1396, i8 %17)
  %18 = zext i8 %17 to i32, !dbg !4173
  %19 = bitcast %struct.bmi160_aux_cfg* %0 to i8*, !dbg !4174
  %20 = load i8, i8* %19, align 1, !dbg !4174
  %21 = and i8 %20, 3, !dbg !4174
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 1401, i8 %21)
  %22 = zext i8 %21 to i32, !dbg !4175
  call void @qpr.shift.by.amount.i32(i32 1398, i32 %22, i32 2)
  call void @qpr.shift.by.negative.i32(i32 1399, i32 %22, i32 2)
  call void @qpr.shift.of.negative.i32(i32 1400, i32 %22, i32 2)
  %23 = shl i32 %22, 2, !dbg !4176
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 1397, i32 %23)
  %24 = and i32 %23, 12, !dbg !4177
  %25 = or i32 %18, %24, !dbg !4178
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1395, i32 %25)
  %26 = trunc i32 %25 to i8, !dbg !4173
  store i8 %26, i8* %3, align 1, !dbg !4179
  %27 = load i8, i8* %3, align 1, !dbg !4180
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1403, i8 %27)
  %28 = zext i8 %27 to i32, !dbg !4180
  %29 = and i32 %28, -49, !dbg !4181
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1402, i32 %29)
  %30 = trunc i32 %29 to i8, !dbg !4180
  call void @llvm.dbg.value(metadata i8 %30, i64 0, metadata !4149, metadata !177), !dbg !4182
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1405, i8 %30)
  %31 = zext i8 %30 to i32, !dbg !4183
  %32 = bitcast %struct.bmi160_aux_cfg* %0 to i8*, !dbg !4184
  %33 = load i8, i8* %32, align 1, !dbg !4184
  %34 = lshr i8 %33, 2, !dbg !4184
  %35 = and i8 %34, 3, !dbg !4184
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 1410, i8 %35)
  %36 = zext i8 %35 to i32, !dbg !4185
  call void @qpr.shift.by.amount.i32(i32 1407, i32 %36, i32 4)
  call void @qpr.shift.by.negative.i32(i32 1408, i32 %36, i32 4)
  call void @qpr.shift.of.negative.i32(i32 1409, i32 %36, i32 4)
  %37 = shl i32 %36, 4, !dbg !4186
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 1406, i32 %37)
  %38 = and i32 %37, 48, !dbg !4187
  %39 = or i32 %31, %38, !dbg !4188
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1404, i32 %39)
  %40 = trunc i32 %39 to i8, !dbg !4183
  store i8 %40, i8* %3, align 1, !dbg !4189
  %41 = load i8, i8* %3, align 1, !dbg !4190
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1412, i8 %41)
  %42 = zext i8 %41 to i32, !dbg !4190
  %43 = and i32 %42, -3, !dbg !4191
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1411, i32 %43)
  %44 = trunc i32 %43 to i8, !dbg !4190
  call void @llvm.dbg.value(metadata i8 %44, i64 0, metadata !4149, metadata !177), !dbg !4192
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1414, i8 %44)
  %45 = zext i8 %44 to i32, !dbg !4193
  %46 = bitcast %struct.bmi160_aux_cfg* %0 to i8*, !dbg !4194
  %47 = load i8, i8* %46, align 1, !dbg !4194
  %48 = lshr i8 %47, 5, !dbg !4194
  %49 = and i8 %48, 1, !dbg !4194
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 1419, i8 %49)
  %50 = zext i8 %49 to i32, !dbg !4195
  call void @qpr.shift.by.amount.i32(i32 1416, i32 %50, i32 1)
  call void @qpr.shift.by.negative.i32(i32 1417, i32 %50, i32 1)
  call void @qpr.shift.of.negative.i32(i32 1418, i32 %50, i32 1)
  %51 = shl i32 %50, 1, !dbg !4196
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 1415, i32 %51)
  %52 = and i32 %51, 2, !dbg !4197
  %53 = or i32 %45, %52, !dbg !4198
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1413, i32 %53)
  %54 = trunc i32 %53 to i8, !dbg !4193
  store i8 %54, i8* %3, align 1, !dbg !4199
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1420, i32 98)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1421, i32 1)
  %55 = call signext i8 @bmi160_set_regs(i8 zeroext 98, i8* %3, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !4200
  call void @llvm.dbg.value(metadata i8 %55, i64 0, metadata !4147, metadata !177), !dbg !4201
  br label %56, !dbg !4202

; <label>:56:                                     ; preds = %13, %9
  %57 = phi i8 [ %55, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i8 %57, i64 0, metadata !4147, metadata !177), !dbg !4148
  br label %58, !dbg !4203

; <label>:58:                                     ; preds = %56, %2
  %59 = phi i8 [ %57, %56 ], [ %6, %2 ]
  call void @llvm.dbg.value(metadata i8 %59, i64 0, metadata !4147, metadata !177), !dbg !4148
  ret i8 %59, !dbg !4204
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @enable_accel_any_motion_int(%struct.bmi160_aux_cfg*, %struct.bmi160_dev*) #1 !dbg !4205 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4210, metadata !177), !dbg !4211
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4212, metadata !177), !dbg !4213
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4214, metadata !177), !dbg !4215
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4216, metadata !177), !dbg !4217
  call void @llvm.dbg.value(metadata %struct.bmi160_aux_cfg* %0, i64 0, metadata !4210, metadata !177), !dbg !4211
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %1, i64 0, metadata !4212, metadata !177), !dbg !4213
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !4218
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !4212, metadata !177), !dbg !4218
  call void @llvm.dbg.declare(metadata i8* %3, metadata !4219, metadata !177), !dbg !4220
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1055, i32 0)
  store i8 0, i8* %3, align 1, !dbg !4220
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1056, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !4216, metadata !177), !dbg !4217
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1057, i32 80)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1058, i32 1)
  %4 = call signext i8 @bmi160_get_regs(i8 zeroext 80, i8* %3, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !4221
  call void @llvm.dbg.value(metadata i8 %4, i64 0, metadata !4214, metadata !177), !dbg !4222
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 1059, i8 %4)
  %5 = sext i8 %4 to i32, !dbg !4223
  %6 = icmp eq i32 %5, 0, !dbg !4225
  br i1 %6, label %7, label %64, !dbg !4226

; <label>:7:                                      ; preds = %2
  %8 = bitcast %struct.bmi160_aux_cfg* %0 to i8*, !dbg !4227
  %9 = load i8, i8* %8, align 1, !dbg !4227
  %10 = and i8 %9, 1, !dbg !4227
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1060, i8 %10)
  %11 = zext i8 %10 to i32, !dbg !4230
  %12 = icmp eq i32 %11, 1, !dbg !4231
  br i1 %12, label %13, label %56, !dbg !4232

; <label>:13:                                     ; preds = %7
  %14 = load i8, i8* %3, align 1, !dbg !4233
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1062, i8 %14)
  %15 = zext i8 %14 to i32, !dbg !4233
  %16 = and i32 %15, -2, !dbg !4235
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1061, i32 %16)
  %17 = trunc i32 %16 to i8, !dbg !4233
  call void @llvm.dbg.value(metadata i8 %17, i64 0, metadata !4216, metadata !177), !dbg !4236
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1064, i8 %17)
  %18 = zext i8 %17 to i32, !dbg !4237
  %19 = bitcast %struct.bmi160_aux_cfg* %0 to i8*, !dbg !4238
  %20 = load i8, i8* %19, align 1, !dbg !4238
  %21 = lshr i8 %20, 1, !dbg !4238
  %22 = and i8 %21, 1, !dbg !4238
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1065, i8 %22)
  %23 = zext i8 %22 to i32, !dbg !4239
  %24 = and i32 %23, 1, !dbg !4240
  %25 = or i32 %18, %24, !dbg !4241
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1063, i32 %25)
  %26 = trunc i32 %25 to i8, !dbg !4237
  store i8 %26, i8* %3, align 1, !dbg !4242
  %27 = load i8, i8* %3, align 1, !dbg !4243
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1067, i8 %27)
  %28 = zext i8 %27 to i32, !dbg !4243
  %29 = and i32 %28, -3, !dbg !4244
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1066, i32 %29)
  %30 = trunc i32 %29 to i8, !dbg !4243
  call void @llvm.dbg.value(metadata i8 %30, i64 0, metadata !4216, metadata !177), !dbg !4245
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1069, i8 %30)
  %31 = zext i8 %30 to i32, !dbg !4246
  %32 = bitcast %struct.bmi160_aux_cfg* %0 to i8*, !dbg !4247
  %33 = load i8, i8* %32, align 1, !dbg !4247
  %34 = lshr i8 %33, 2, !dbg !4247
  %35 = and i8 %34, 1, !dbg !4247
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 1074, i8 %35)
  %36 = zext i8 %35 to i32, !dbg !4248
  call void @qpr.shift.by.amount.i32(i32 1071, i32 %36, i32 1)
  call void @qpr.shift.by.negative.i32(i32 1072, i32 %36, i32 1)
  call void @qpr.shift.of.negative.i32(i32 1073, i32 %36, i32 1)
  %37 = shl i32 %36, 1, !dbg !4249
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 1070, i32 %37)
  %38 = and i32 %37, 2, !dbg !4250
  %39 = or i32 %31, %38, !dbg !4251
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1068, i32 %39)
  %40 = trunc i32 %39 to i8, !dbg !4246
  store i8 %40, i8* %3, align 1, !dbg !4252
  %41 = load i8, i8* %3, align 1, !dbg !4253
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1076, i8 %41)
  %42 = zext i8 %41 to i32, !dbg !4253
  %43 = and i32 %42, -5, !dbg !4254
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1075, i32 %43)
  %44 = trunc i32 %43 to i8, !dbg !4253
  call void @llvm.dbg.value(metadata i8 %44, i64 0, metadata !4216, metadata !177), !dbg !4255
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1078, i8 %44)
  %45 = zext i8 %44 to i32, !dbg !4256
  %46 = bitcast %struct.bmi160_aux_cfg* %0 to i8*, !dbg !4257
  %47 = load i8, i8* %46, align 1, !dbg !4257
  %48 = lshr i8 %47, 3, !dbg !4257
  %49 = and i8 %48, 1, !dbg !4257
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 1083, i8 %49)
  %50 = zext i8 %49 to i32, !dbg !4258
  call void @qpr.shift.by.amount.i32(i32 1080, i32 %50, i32 2)
  call void @qpr.shift.by.negative.i32(i32 1081, i32 %50, i32 2)
  call void @qpr.shift.of.negative.i32(i32 1082, i32 %50, i32 2)
  %51 = shl i32 %50, 2, !dbg !4259
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 1079, i32 %51)
  %52 = and i32 %51, 4, !dbg !4260
  %53 = or i32 %45, %52, !dbg !4261
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1077, i32 %53)
  %54 = trunc i32 %53 to i8, !dbg !4256
  store i8 %54, i8* %3, align 1, !dbg !4262
  call void @qpr.implicit.conversion.overflow.s32.s32(i32 1084, i32 0)
  %55 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 3, !dbg !4263
  store i32 0, i32* %55, align 4, !dbg !4264
  br label %62, !dbg !4265

; <label>:56:                                     ; preds = %7
  %57 = load i8, i8* %3, align 1, !dbg !4266
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1086, i8 %57)
  %58 = zext i8 %57 to i32, !dbg !4266
  %59 = and i32 %58, -8, !dbg !4268
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1085, i32 %59)
  %60 = trunc i32 %59 to i8, !dbg !4266
  store i8 %60, i8* %3, align 1, !dbg !4269
  call void @qpr.implicit.conversion.overflow.s32.s32(i32 1087, i32 -1)
  %61 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 3, !dbg !4270
  store i32 -1, i32* %61, align 4, !dbg !4271
  br label %62

; <label>:62:                                     ; preds = %56, %13
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1088, i32 80)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1089, i32 1)
  %63 = call signext i8 @bmi160_set_regs(i8 zeroext 80, i8* %3, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !4272
  call void @llvm.dbg.value(metadata i8 %63, i64 0, metadata !4214, metadata !177), !dbg !4273
  br label %64, !dbg !4274

; <label>:64:                                     ; preds = %62, %2
  %65 = phi i8 [ %63, %62 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i8 %65, i64 0, metadata !4214, metadata !177), !dbg !4215
  ret i8 %65, !dbg !4275
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @config_any_motion_int_settg(%struct.bmi160_int_settg*, %struct.bmi160_aux_cfg*, %struct.bmi160_dev*) #1 !dbg !4276 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4279, metadata !177), !dbg !4280
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4281, metadata !177), !dbg !4282
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4283, metadata !177), !dbg !4284
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4285, metadata !177), !dbg !4286
  call void @llvm.dbg.value(metadata %struct.bmi160_int_settg* %0, i64 0, metadata !4279, metadata !177), !dbg !4280
  call void @llvm.dbg.value(metadata %struct.bmi160_aux_cfg* %1, i64 0, metadata !4281, metadata !177), !dbg !4282
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %2, i64 0, metadata !4283, metadata !177), !dbg !4284
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !4287
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !4283, metadata !177), !dbg !4287
  %4 = call signext i8 @set_intr_pin_config(%struct.bmi160_int_settg* %0, %struct.bmi160_dev* @configStub) #5, !dbg !4288
  call void @llvm.dbg.value(metadata i8 %4, i64 0, metadata !4285, metadata !177), !dbg !4289
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 1249, i8 %4)
  %5 = sext i8 %4 to i32, !dbg !4290
  %6 = icmp eq i32 %5, 0, !dbg !4292
  br i1 %6, label %7, label %27, !dbg !4293

; <label>:7:                                      ; preds = %3
  %8 = call signext i8 @disable_sig_motion_int(%struct.bmi160_dev* @configStub) #5, !dbg !4294
  call void @llvm.dbg.value(metadata i8 %8, i64 0, metadata !4285, metadata !177), !dbg !4296
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 1250, i8 %8)
  %9 = sext i8 %8 to i32, !dbg !4297
  %10 = icmp eq i32 %9, 0, !dbg !4299
  br i1 %10, label %11, label %25, !dbg !4300

; <label>:11:                                     ; preds = %7
  %12 = call signext i8 @map_feature_interrupt(%struct.bmi160_int_settg* %0, %struct.bmi160_dev* @configStub) #5, !dbg !4301
  call void @llvm.dbg.value(metadata i8 %12, i64 0, metadata !4285, metadata !177), !dbg !4303
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 1251, i8 %12)
  %13 = sext i8 %12 to i32, !dbg !4304
  %14 = icmp eq i32 %13, 0, !dbg !4306
  br i1 %14, label %15, label %23, !dbg !4307

; <label>:15:                                     ; preds = %11
  %16 = call signext i8 @config_any_motion_src(%struct.bmi160_aux_cfg* %1, %struct.bmi160_dev* @configStub) #5, !dbg !4308
  call void @llvm.dbg.value(metadata i8 %16, i64 0, metadata !4285, metadata !177), !dbg !4310
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 1252, i8 %16)
  %17 = sext i8 %16 to i32, !dbg !4311
  %18 = icmp eq i32 %17, 0, !dbg !4313
  br i1 %18, label %19, label %21, !dbg !4314

; <label>:19:                                     ; preds = %15
  %20 = call signext i8 @config_any_dur_threshold(%struct.bmi160_aux_cfg* %1, %struct.bmi160_dev* @configStub) #5, !dbg !4315
  call void @llvm.dbg.value(metadata i8 %20, i64 0, metadata !4285, metadata !177), !dbg !4316
  br label %21, !dbg !4317

; <label>:21:                                     ; preds = %19, %15
  %22 = phi i8 [ %20, %19 ], [ %16, %15 ]
  call void @llvm.dbg.value(metadata i8 %22, i64 0, metadata !4285, metadata !177), !dbg !4286
  br label %23, !dbg !4318

; <label>:23:                                     ; preds = %21, %11
  %24 = phi i8 [ %22, %21 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata i8 %24, i64 0, metadata !4285, metadata !177), !dbg !4286
  br label %25, !dbg !4319

; <label>:25:                                     ; preds = %23, %7
  %26 = phi i8 [ %24, %23 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8 %26, i64 0, metadata !4285, metadata !177), !dbg !4286
  br label %27, !dbg !4320

; <label>:27:                                     ; preds = %25, %3
  %28 = phi i8 [ %26, %25 ], [ %4, %3 ]
  call void @llvm.dbg.value(metadata i8 %28, i64 0, metadata !4285, metadata !177), !dbg !4286
  ret i8 %28, !dbg !4321
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @disable_sig_motion_int(%struct.bmi160_dev*) #1 !dbg !4322 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4323, metadata !177), !dbg !4324
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4325, metadata !177), !dbg !4326
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4327, metadata !177), !dbg !4328
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %0, i64 0, metadata !4323, metadata !177), !dbg !4324
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !4329
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !4323, metadata !177), !dbg !4329
  call void @llvm.dbg.declare(metadata i8* %2, metadata !4330, metadata !177), !dbg !4331
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1090, i32 0)
  store i8 0, i8* %2, align 1, !dbg !4331
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1091, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !4327, metadata !177), !dbg !4328
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1092, i32 98)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1093, i32 1)
  %3 = call signext i8 @bmi160_get_regs(i8 zeroext 98, i8* %2, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !4332
  call void @llvm.dbg.value(metadata i8 %3, i64 0, metadata !4325, metadata !177), !dbg !4333
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 1094, i8 %3)
  %4 = sext i8 %3 to i32, !dbg !4334
  %5 = icmp eq i32 %4, 0, !dbg !4336
  br i1 %5, label %6, label %20, !dbg !4337

; <label>:6:                                      ; preds = %1
  %7 = load i8, i8* %2, align 1, !dbg !4338
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1096, i8 %7)
  %8 = zext i8 %7 to i32, !dbg !4338
  %9 = and i32 %8, 2, !dbg !4340
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1095, i32 %9)
  %10 = trunc i32 %9 to i8, !dbg !4341
  call void @llvm.dbg.value(metadata i8 %10, i64 0, metadata !4327, metadata !177), !dbg !4342
  %11 = icmp ne i8 %10, 0, !dbg !4343
  br i1 %11, label %12, label %18, !dbg !4345

; <label>:12:                                     ; preds = %6
  %13 = load i8, i8* %2, align 1, !dbg !4346
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1098, i8 %13)
  %14 = zext i8 %13 to i32, !dbg !4346
  %15 = and i32 %14, -3, !dbg !4348
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1097, i32 %15)
  %16 = trunc i32 %15 to i8, !dbg !4346
  call void @llvm.dbg.value(metadata i8 %16, i64 0, metadata !4327, metadata !177), !dbg !4349
  store i8 %16, i8* %2, align 1, !dbg !4350
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1099, i32 98)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1100, i32 1)
  %17 = call signext i8 @bmi160_set_regs(i8 zeroext 98, i8* %2, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !4351
  call void @llvm.dbg.value(metadata i8 %17, i64 0, metadata !4325, metadata !177), !dbg !4352
  br label %18, !dbg !4353

; <label>:18:                                     ; preds = %12, %6
  %19 = phi i8 [ %17, %12 ], [ %3, %6 ]
  call void @llvm.dbg.value(metadata i8 %19, i64 0, metadata !4325, metadata !177), !dbg !4326
  br label %20, !dbg !4354

; <label>:20:                                     ; preds = %18, %1
  %21 = phi i8 [ %19, %18 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i8 %21, i64 0, metadata !4325, metadata !177), !dbg !4326
  ret i8 %21, !dbg !4355
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @config_any_motion_src(%struct.bmi160_aux_cfg*, %struct.bmi160_dev*) #1 !dbg !4356 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4359, metadata !177), !dbg !4360
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4361, metadata !177), !dbg !4362
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4363, metadata !177), !dbg !4364
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4365, metadata !177), !dbg !4366
  call void @llvm.dbg.value(metadata %struct.bmi160_aux_cfg* %0, i64 0, metadata !4359, metadata !177), !dbg !4360
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %1, i64 0, metadata !4361, metadata !177), !dbg !4362
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !4367
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !4361, metadata !177), !dbg !4367
  call void @llvm.dbg.declare(metadata i8* %3, metadata !4368, metadata !177), !dbg !4369
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1218, i32 0)
  store i8 0, i8* %3, align 1, !dbg !4369
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1219, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !4365, metadata !177), !dbg !4366
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1220, i32 89)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1221, i32 1)
  %4 = call signext i8 @bmi160_get_regs(i8 zeroext 89, i8* %3, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !4370
  call void @llvm.dbg.value(metadata i8 %4, i64 0, metadata !4363, metadata !177), !dbg !4371
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 1222, i8 %4)
  %5 = sext i8 %4 to i32, !dbg !4372
  %6 = icmp eq i32 %5, 0, !dbg !4374
  br i1 %6, label %7, label %23, !dbg !4375

; <label>:7:                                      ; preds = %2
  %8 = load i8, i8* %3, align 1, !dbg !4376
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1224, i8 %8)
  %9 = zext i8 %8 to i32, !dbg !4376
  %10 = and i32 %9, -129, !dbg !4378
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1223, i32 %10)
  %11 = trunc i32 %10 to i8, !dbg !4376
  call void @llvm.dbg.value(metadata i8 %11, i64 0, metadata !4365, metadata !177), !dbg !4379
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1226, i8 %11)
  %12 = zext i8 %11 to i32, !dbg !4380
  %13 = bitcast %struct.bmi160_aux_cfg* %0 to i8*, !dbg !4381
  %14 = load i8, i8* %13, align 1, !dbg !4381
  %15 = lshr i8 %14, 6, !dbg !4381
  %16 = and i8 %15, 1, !dbg !4381
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 1231, i8 %16)
  %17 = zext i8 %16 to i32, !dbg !4382
  call void @qpr.shift.by.amount.i32(i32 1228, i32 %17, i32 7)
  call void @qpr.shift.by.negative.i32(i32 1229, i32 %17, i32 7)
  call void @qpr.shift.of.negative.i32(i32 1230, i32 %17, i32 7)
  %18 = shl i32 %17, 7, !dbg !4383
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 1227, i32 %18)
  %19 = and i32 %18, 128, !dbg !4384
  %20 = or i32 %12, %19, !dbg !4385
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1225, i32 %20)
  %21 = trunc i32 %20 to i8, !dbg !4380
  store i8 %21, i8* %3, align 1, !dbg !4386
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1232, i32 89)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1233, i32 1)
  %22 = call signext i8 @bmi160_set_regs(i8 zeroext 89, i8* %3, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !4387
  call void @llvm.dbg.value(metadata i8 %22, i64 0, metadata !4363, metadata !177), !dbg !4388
  br label %23, !dbg !4389

; <label>:23:                                     ; preds = %7, %2
  %24 = phi i8 [ %22, %7 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i8 %24, i64 0, metadata !4363, metadata !177), !dbg !4364
  ret i8 %24, !dbg !4390
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @config_any_dur_threshold(%struct.bmi160_aux_cfg*, %struct.bmi160_dev*) #1 !dbg !4391 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4392, metadata !177), !dbg !4393
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4394, metadata !177), !dbg !4395
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4396, metadata !177), !dbg !4397
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4398, metadata !177), !dbg !4399
  %4 = alloca [2 x i8], align 1
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4400, metadata !177), !dbg !4401
  call void @llvm.dbg.value(metadata %struct.bmi160_aux_cfg* %0, i64 0, metadata !4392, metadata !177), !dbg !4393
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %1, i64 0, metadata !4394, metadata !177), !dbg !4395
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !4402
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !4394, metadata !177), !dbg !4402
  call void @llvm.dbg.declare(metadata i8* %3, metadata !4403, metadata !177), !dbg !4404
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1234, i32 0)
  store i8 0, i8* %3, align 1, !dbg !4404
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1235, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !4398, metadata !177), !dbg !4399
  call void @llvm.dbg.declare(metadata [2 x i8]* %4, metadata !4405, metadata !177), !dbg !4406
  %5 = bitcast [2 x i8]* %4 to i8*, !dbg !4406
  call void @llvm.memset.p0i8.i64(i8* %5, i8 0, i64 2, i32 1, i1 false), !dbg !4406
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1237, i32 95)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1238, i32 1)
  %6 = call signext i8 @bmi160_get_regs(i8 zeroext 95, i8* %3, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !4407
  call void @llvm.dbg.value(metadata i8 %6, i64 0, metadata !4396, metadata !177), !dbg !4408
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 1239, i8 %6)
  %7 = sext i8 %6 to i32, !dbg !4409
  %8 = icmp eq i32 %7, 0, !dbg !4411
  br i1 %8, label %9, label %30, !dbg !4412

; <label>:9:                                      ; preds = %2
  %10 = bitcast %struct.bmi160_aux_cfg* %0 to i8*, !dbg !4413
  %11 = load i8, i8* %10, align 1, !dbg !4413
  %12 = lshr i8 %11, 4, !dbg !4413
  %13 = and i8 %12, 3, !dbg !4413
  call void @llvm.dbg.value(metadata i8 %13, i64 0, metadata !4400, metadata !177), !dbg !4415
  %14 = load i8, i8* %3, align 1, !dbg !4416
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1241, i8 %14)
  %15 = zext i8 %14 to i32, !dbg !4416
  %16 = and i32 %15, -4, !dbg !4417
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1240, i32 %16)
  %17 = trunc i32 %16 to i8, !dbg !4416
  call void @llvm.dbg.value(metadata i8 %17, i64 0, metadata !4398, metadata !177), !dbg !4418
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1243, i8 %17)
  %18 = zext i8 %17 to i32, !dbg !4419
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 1244, i8 %13)
  %19 = zext i8 %13 to i32, !dbg !4420
  %20 = and i32 %19, 128, !dbg !4421
  %21 = or i32 %18, %20, !dbg !4422
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1242, i32 %21)
  %22 = trunc i32 %21 to i8, !dbg !4419
  store i8 %22, i8* %3, align 1, !dbg !4423
  %23 = load i8, i8* %3, align 1, !dbg !4424
  %24 = getelementptr inbounds [2 x i8], [2 x i8]* %4, i64 0, i64 0, !dbg !4425
  call void @qpr.arrayindex.i32.i2(i32 1245, i32 0, i2 -2)
  store i8 %23, i8* %24, align 1, !dbg !4426
  %25 = getelementptr inbounds %struct.bmi160_aux_cfg, %struct.bmi160_aux_cfg* %0, i32 0, i32 1, !dbg !4427
  %26 = load i8, i8* %25, align 1, !dbg !4427
  %27 = getelementptr inbounds [2 x i8], [2 x i8]* %4, i64 0, i64 1, !dbg !4428
  call void @qpr.arrayindex.i32.i2(i32 1246, i32 1, i2 -2)
  store i8 %26, i8* %27, align 1, !dbg !4429
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1247, i32 95)
  %28 = getelementptr inbounds [2 x i8], [2 x i8]* %4, i32 0, i32 0, !dbg !4430
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1248, i32 2)
  %29 = call signext i8 @bmi160_set_regs(i8 zeroext 95, i8* %28, i16 zeroext 2, %struct.bmi160_dev* @configStub) #5, !dbg !4431
  call void @llvm.dbg.value(metadata i8 %29, i64 0, metadata !4396, metadata !177), !dbg !4432
  br label %30, !dbg !4433

; <label>:30:                                     ; preds = %9, %2
  %31 = phi i8 [ %29, %9 ], [ %6, %2 ]
  call void @llvm.dbg.value(metadata i8 %31, i64 0, metadata !4396, metadata !177), !dbg !4397
  ret i8 %31, !dbg !4434
}

; Function Attrs: noinline nounwind uwtable
define signext i8 @bmi160_set_step_counter(i8 zeroext, %struct.bmi160_dev*) #1 !dbg !4435 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4438, metadata !177), !dbg !4439
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4440, metadata !177), !dbg !4441
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4442, metadata !177), !dbg !4443
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8 %0, i64 0, metadata !4438, metadata !177), !dbg !4439
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %1, i64 0, metadata !4440, metadata !177), !dbg !4441
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !4444
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !4440, metadata !177), !dbg !4444
  call void @llvm.dbg.declare(metadata i8* %3, metadata !4445, metadata !177), !dbg !4446
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 101, i32 0)
  store i8 0, i8* %3, align 1, !dbg !4446
  %4 = call signext i8 @null_ptr_check(%struct.bmi160_dev* @configStub) #5, !dbg !4447
  call void @llvm.dbg.value(metadata i8 %4, i64 0, metadata !4442, metadata !177), !dbg !4448
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 102, i8 %4)
  %5 = sext i8 %4 to i32, !dbg !4449
  %6 = icmp ne i32 %5, 0, !dbg !4451
  br i1 %6, label %7, label %8, !dbg !4452

; <label>:7:                                      ; preds = %2
  call void @qpr.arithmetic.overflow.ssub.i32(i32 104, i32 0, i32 1)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 103, i32 -1)
  call void @llvm.dbg.value(metadata i8 -1, i64 0, metadata !4442, metadata !177), !dbg !4453
  br label %33, !dbg !4455

; <label>:8:                                      ; preds = %2
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 105, i32 123)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 106, i32 1)
  %9 = call signext i8 @bmi160_get_regs(i8 zeroext 123, i8* %3, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !4456
  call void @llvm.dbg.value(metadata i8 %9, i64 0, metadata !4442, metadata !177), !dbg !4458
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 107, i8 %9)
  %10 = sext i8 %9 to i32, !dbg !4459
  %11 = icmp eq i32 %10, 0, !dbg !4461
  br i1 %11, label %12, label %31, !dbg !4462

; <label>:12:                                     ; preds = %8
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 108, i8 %0)
  %13 = zext i8 %0 to i32, !dbg !4463
  %14 = icmp eq i32 %13, 1, !dbg !4466
  br i1 %14, label %15, label %24, !dbg !4467

; <label>:15:                                     ; preds = %12
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 114, i8 %0)
  %16 = zext i8 %0 to i32, !dbg !4468
  call void @qpr.shift.by.amount.i32(i32 111, i32 %16, i32 3)
  call void @qpr.shift.by.negative.i32(i32 112, i32 %16, i32 3)
  call void @qpr.shift.of.negative.i32(i32 113, i32 %16, i32 3)
  %17 = shl i32 %16, 3, !dbg !4469
  call void @qpr.explicit.conversion.overflow.s32.u8(i32 110, i32 %17)
  %18 = trunc i32 %17 to i8, !dbg !4470
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 109, i8 %18)
  %19 = zext i8 %18 to i32, !dbg !4470
  %20 = load i8, i8* %3, align 1, !dbg !4471
  %21 = zext i8 %20 to i32, !dbg !4471
  %22 = or i32 %21, %19, !dbg !4471
  %23 = trunc i32 %22 to i8, !dbg !4471
  store i8 %23, i8* %3, align 1, !dbg !4471
  br label %29, !dbg !4472

; <label>:24:                                     ; preds = %12
  %25 = load i8, i8* %3, align 1, !dbg !4473
  %26 = zext i8 %25 to i32, !dbg !4473
  %27 = and i32 %26, -9, !dbg !4473
  %28 = trunc i32 %27 to i8, !dbg !4473
  store i8 %28, i8* %3, align 1, !dbg !4473
  br label %29

; <label>:29:                                     ; preds = %24, %15
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 115, i32 123)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 116, i32 1)
  %30 = call signext i8 @bmi160_set_regs(i8 zeroext 123, i8* %3, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !4474
  call void @llvm.dbg.value(metadata i8 %30, i64 0, metadata !4442, metadata !177), !dbg !4475
  br label %31, !dbg !4476

; <label>:31:                                     ; preds = %29, %8
  %32 = phi i8 [ %30, %29 ], [ %9, %8 ]
  call void @llvm.dbg.value(metadata i8 %32, i64 0, metadata !4442, metadata !177), !dbg !4443
  br label %33

; <label>:33:                                     ; preds = %31, %7
  %34 = phi i8 [ -1, %7 ], [ %32, %31 ]
  call void @llvm.dbg.value(metadata i8 %34, i64 0, metadata !4442, metadata !177), !dbg !4443
  ret i8 %34, !dbg !4477
}

; Function Attrs: noinline nounwind uwtable
define signext i8 @bmi160_read_step_counter(i16*, %struct.bmi160_dev*) #1 !dbg !4478 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4482, metadata !177), !dbg !4483
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4484, metadata !177), !dbg !4485
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4486, metadata !177), !dbg !4487
  %3 = alloca [2 x i8], align 1
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4488, metadata !177), !dbg !4489
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4490, metadata !177), !dbg !4491
  call void @llvm.dbg.value(metadata i16* %0, i64 0, metadata !4482, metadata !177), !dbg !4483
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %1, i64 0, metadata !4484, metadata !177), !dbg !4485
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !4492
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !4484, metadata !177), !dbg !4492
  call void @llvm.dbg.declare(metadata [2 x i8]* %3, metadata !4493, metadata !177), !dbg !4494
  %4 = bitcast [2 x i8]* %3 to i8*, !dbg !4494
  call void @llvm.memset.p0i8.i64(i8* %4, i8 0, i64 2, i32 1, i1 false), !dbg !4494
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 119, i32 0)
  call void @llvm.dbg.value(metadata i16 0, i64 0, metadata !4488, metadata !177), !dbg !4489
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 120, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !4490, metadata !177), !dbg !4491
  %5 = call signext i8 @null_ptr_check(%struct.bmi160_dev* @configStub) #5, !dbg !4495
  call void @llvm.dbg.value(metadata i8 %5, i64 0, metadata !4486, metadata !177), !dbg !4496
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 121, i8 %5)
  %6 = sext i8 %5 to i32, !dbg !4497
  %7 = icmp ne i32 %6, 0, !dbg !4499
  br i1 %7, label %8, label %9, !dbg !4500

; <label>:8:                                      ; preds = %2
  call void @qpr.arithmetic.overflow.ssub.i32(i32 123, i32 0, i32 1)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 122, i32 -1)
  call void @llvm.dbg.value(metadata i8 -1, i64 0, metadata !4486, metadata !177), !dbg !4501
  br label %27, !dbg !4503

; <label>:9:                                      ; preds = %2
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 124, i32 120)
  %10 = getelementptr inbounds [2 x i8], [2 x i8]* %3, i32 0, i32 0, !dbg !4504
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 125, i32 2)
  %11 = call signext i8 @bmi160_get_regs(i8 zeroext 120, i8* %10, i16 zeroext 2, %struct.bmi160_dev* @configStub) #5, !dbg !4506
  call void @llvm.dbg.value(metadata i8 %11, i64 0, metadata !4486, metadata !177), !dbg !4507
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 126, i8 %11)
  %12 = sext i8 %11 to i32, !dbg !4508
  %13 = icmp eq i32 %12, 0, !dbg !4510
  br i1 %13, label %14, label %26, !dbg !4511

; <label>:14:                                     ; preds = %9
  %15 = getelementptr inbounds [2 x i8], [2 x i8]* %3, i64 0, i64 0, !dbg !4512
  %16 = load i8, i8* %15, align 1, !dbg !4512
  call void @qpr.arrayindex.i32.i2(i32 127, i32 0, i2 -2)
  call void @llvm.dbg.value(metadata i8 %16, i64 0, metadata !4490, metadata !177), !dbg !4514
  %17 = getelementptr inbounds [2 x i8], [2 x i8]* %3, i64 0, i64 1, !dbg !4515
  %18 = load i8, i8* %17, align 1, !dbg !4515
  call void @qpr.arrayindex.i32.i2(i32 133, i32 1, i2 -2)
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 132, i8 %18)
  %19 = zext i8 %18 to i32, !dbg !4515
  call void @qpr.shift.by.amount.i32(i32 129, i32 %19, i32 8)
  call void @qpr.shift.by.negative.i32(i32 130, i32 %19, i32 8)
  call void @qpr.shift.of.negative.i32(i32 131, i32 %19, i32 8)
  %20 = shl i32 %19, 8, !dbg !4516
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 128, i32 %20)
  %21 = trunc i32 %20 to i16, !dbg !4515
  call void @llvm.dbg.value(metadata i16 %21, i64 0, metadata !4488, metadata !177), !dbg !4517
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 135, i16 %21)
  %22 = zext i16 %21 to i32, !dbg !4518
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 136, i8 %16)
  %23 = zext i8 %16 to i32, !dbg !4519
  %24 = or i32 %22, %23, !dbg !4520
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 134, i32 %24)
  %25 = trunc i32 %24 to i16, !dbg !4518
  store i16 %25, i16* %0, align 2, !dbg !4521
  br label %26, !dbg !4522

; <label>:26:                                     ; preds = %14, %9
  br label %27

; <label>:27:                                     ; preds = %26, %8
  %28 = phi i8 [ -1, %8 ], [ %11, %26 ]
  call void @llvm.dbg.value(metadata i8 %28, i64 0, metadata !4486, metadata !177), !dbg !4487
  ret i8 %28, !dbg !4523
}

; Function Attrs: noinline nounwind uwtable
define signext i8 @bmi160_aux_read(i8 zeroext, i8*, i16 zeroext, %struct.bmi160_dev*) #1 !dbg !4524 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4525, metadata !177), !dbg !4526
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4527, metadata !177), !dbg !4528
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4529, metadata !177), !dbg !4530
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4531, metadata !177), !dbg !4532
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4533, metadata !177), !dbg !4534
  %5 = alloca i16, align 2
  call void @llvm.dbg.value(metadata i8 %0, i64 0, metadata !4525, metadata !177), !dbg !4526
  call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !4527, metadata !177), !dbg !4528
  call void @llvm.dbg.value(metadata i16 %2, i64 0, metadata !4529, metadata !177), !dbg !4530
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %3, i64 0, metadata !4531, metadata !177), !dbg !4532
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !4535
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !4531, metadata !177), !dbg !4535
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 137, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !4533, metadata !177), !dbg !4534
  call void @llvm.dbg.declare(metadata i16* %5, metadata !4536, metadata !177), !dbg !4537
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 138, i32 0)
  store i16 0, i16* %5, align 2, !dbg !4537
  %6 = icmp eq %struct.bmi160_dev* @configStub, null, !dbg !4538
  br i1 %6, label %11, label %7, !dbg !4540

; <label>:7:                                      ; preds = %4
  %8 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 11, !dbg !4541
  %9 = load i8 (i8, i8, i8*, i16)*, i8 (i8, i8, i8*, i16)** %8, align 8, !dbg !4541
  %10 = icmp eq i8 (i8, i8, i8*, i16)* %9, null, !dbg !4543
  br i1 %10, label %11, label %12, !dbg !4544

; <label>:11:                                     ; preds = %7, %4
  call void @qpr.arithmetic.overflow.ssub.i32(i32 140, i32 0, i32 1)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 139, i32 -1)
  call void @llvm.dbg.value(metadata i8 -1, i64 0, metadata !4533, metadata !177), !dbg !4546
  br label %31, !dbg !4548

; <label>:12:                                     ; preds = %7
  %13 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 8, !dbg !4549
  %14 = bitcast %struct.bmi160_aux_cfg* %13 to i8*, !dbg !4552
  %15 = load i8, i8* %14, align 8, !dbg !4552
  %16 = and i8 %15, 1, !dbg !4552
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 141, i8 %16)
  %17 = zext i8 %16 to i32, !dbg !4553
  %18 = icmp eq i32 %17, 1, !dbg !4554
  br i1 %18, label %19, label %28, !dbg !4555

; <label>:19:                                     ; preds = %12
  %20 = call signext i8 @map_read_len(i16* %5, %struct.bmi160_dev* @configStub) #5, !dbg !4556
  call void @llvm.dbg.value(metadata i8 %20, i64 0, metadata !4533, metadata !177), !dbg !4558
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 142, i8 %20)
  %21 = sext i8 %20 to i32, !dbg !4559
  %22 = icmp eq i32 %21, 0, !dbg !4561
  br i1 %22, label %23, label %26, !dbg !4562

; <label>:23:                                     ; preds = %19
  %24 = load i16, i16* %5, align 2, !dbg !4563
  %25 = call signext i8 @extract_aux_read(i16 zeroext %24, i8 zeroext %0, i8* %1, i16 zeroext %2, %struct.bmi160_dev* @configStub) #5, !dbg !4564
  call void @llvm.dbg.value(metadata i8 %25, i64 0, metadata !4533, metadata !177), !dbg !4565
  br label %26, !dbg !4566

; <label>:26:                                     ; preds = %23, %19
  %27 = phi i8 [ %25, %23 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata i8 %27, i64 0, metadata !4533, metadata !177), !dbg !4534
  br label %29, !dbg !4567

; <label>:28:                                     ; preds = %12
  call void @qpr.arithmetic.overflow.ssub.i32(i32 144, i32 0, i32 5)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 143, i32 -5)
  call void @llvm.dbg.value(metadata i8 -5, i64 0, metadata !4533, metadata !177), !dbg !4568
  br label %29

; <label>:29:                                     ; preds = %28, %26
  %30 = phi i8 [ %27, %26 ], [ -5, %28 ]
  call void @llvm.dbg.value(metadata i8 %30, i64 0, metadata !4533, metadata !177), !dbg !4534
  br label %31

; <label>:31:                                     ; preds = %29, %11
  %32 = phi i8 [ -1, %11 ], [ %30, %29 ]
  call void @llvm.dbg.value(metadata i8 %32, i64 0, metadata !4533, metadata !177), !dbg !4534
  ret i8 %32, !dbg !4570
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @map_read_len(i16*, %struct.bmi160_dev*) #1 !dbg !4571 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4572, metadata !177), !dbg !4573
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4574, metadata !177), !dbg !4575
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4576, metadata !177), !dbg !4577
  call void @llvm.dbg.value(metadata i16* %0, i64 0, metadata !4572, metadata !177), !dbg !4573
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %1, i64 0, metadata !4574, metadata !177), !dbg !4575
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !4578
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !4574, metadata !177), !dbg !4578
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 1603, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !4576, metadata !177), !dbg !4577
  %3 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 8, !dbg !4579
  %4 = bitcast %struct.bmi160_aux_cfg* %3 to i8*, !dbg !4580
  %5 = load i8, i8* %4, align 8, !dbg !4580
  %6 = lshr i8 %5, 2, !dbg !4580
  %7 = and i8 %6, 3, !dbg !4580
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 1604, i8 %7)
  %8 = zext i8 %7 to i32, !dbg !4581
  switch i32 %8, label %13 [
    i32 0, label %9
    i32 1, label %10
    i32 2, label %11
    i32 3, label %12
  ], !dbg !4582

; <label>:9:                                      ; preds = %2
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1605, i32 1)
  store i16 1, i16* %0, align 2, !dbg !4583
  br label %14, !dbg !4585

; <label>:10:                                     ; preds = %2
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1606, i32 2)
  store i16 2, i16* %0, align 2, !dbg !4586
  br label %14, !dbg !4587

; <label>:11:                                     ; preds = %2
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1607, i32 6)
  store i16 6, i16* %0, align 2, !dbg !4588
  br label %14, !dbg !4589

; <label>:12:                                     ; preds = %2
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1608, i32 8)
  store i16 8, i16* %0, align 2, !dbg !4590
  br label %14, !dbg !4591

; <label>:13:                                     ; preds = %2
  call void @qpr.arithmetic.overflow.ssub.i32(i32 1610, i32 0, i32 5)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 1609, i32 -5)
  call void @llvm.dbg.value(metadata i8 -5, i64 0, metadata !4576, metadata !177), !dbg !4592
  br label %14, !dbg !4593

; <label>:14:                                     ; preds = %13, %12, %11, %10, %9
  %15 = phi i8 [ -5, %13 ], [ 0, %12 ], [ 0, %11 ], [ 0, %10 ], [ 0, %9 ]
  call void @llvm.dbg.value(metadata i8 %15, i64 0, metadata !4576, metadata !177), !dbg !4577
  ret i8 %15, !dbg !4594
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @extract_aux_read(i16 zeroext, i8 zeroext, i8*, i16 zeroext, %struct.bmi160_dev*) #1 !dbg !4595 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4598, metadata !177), !dbg !4599
  %6 = alloca i8, align 1
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4600, metadata !177), !dbg !4601
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4602, metadata !177), !dbg !4603
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4604, metadata !177), !dbg !4605
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4606, metadata !177), !dbg !4607
  %7 = alloca [8 x i8], align 1
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4608, metadata !177), !dbg !4609
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4610, metadata !177), !dbg !4611
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4612, metadata !177), !dbg !4613
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4614, metadata !177), !dbg !4615
  call void @llvm.dbg.value(metadata i16 %0, i64 0, metadata !4598, metadata !177), !dbg !4599
  store i8 %1, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !4616, metadata !177), !dbg !4617
  call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !4600, metadata !177), !dbg !4601
  call void @llvm.dbg.value(metadata i16 %3, i64 0, metadata !4602, metadata !177), !dbg !4603
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %4, i64 0, metadata !4604, metadata !177), !dbg !4605
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !4618
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !4604, metadata !177), !dbg !4618
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 1612, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !4606, metadata !177), !dbg !4607
  call void @llvm.dbg.declare(metadata [8 x i8]* %7, metadata !4619, metadata !177), !dbg !4620
  %8 = bitcast [8 x i8]* %7 to i8*, !dbg !4620
  call void @llvm.memset.p0i8.i64(i8* %8, i8 0, i64 8, i32 1, i1 false), !dbg !4620
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1614, i32 4)
  call void @llvm.dbg.value(metadata i8 4, i64 0, metadata !4608, metadata !177), !dbg !4609
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1615, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !4610, metadata !177), !dbg !4611
  call void @qpr.explicit.conversion.overflow.u16.u8(i32 1616, i16 %0)
  %9 = trunc i16 %0 to i8, !dbg !4621
  call void @llvm.dbg.value(metadata i8 %9, i64 0, metadata !4614, metadata !177), !dbg !4615
  br label %10, !dbg !4622

; <label>:10:                                     ; preds = %82, %5
  %11 = phi i8 [ %9, %5 ], [ %83, %82 ]
  %12 = phi i8 [ 0, %5 ], [ %84, %82 ]
  %13 = phi i8 [ 0, %5 ], [ %85, %82 ]
  call void @llvm.dbg.value(metadata i8 %13, i64 0, metadata !4606, metadata !177), !dbg !4607
  call void @llvm.dbg.value(metadata i8 %12, i64 0, metadata !4610, metadata !177), !dbg !4611
  call void @llvm.dbg.value(metadata i8 %11, i64 0, metadata !4614, metadata !177), !dbg !4615
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 1617, i8 %12)
  %14 = zext i8 %12 to i32, !dbg !4623
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 1618, i16 %3)
  %15 = zext i16 %3 to i32, !dbg !4627
  %16 = icmp slt i32 %14, %15, !dbg !4628
  br i1 %16, label %17, label %86, !dbg !4629

; <label>:17:                                     ; preds = %10
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1619, i32 77)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1620, i32 1)
  %18 = call signext i8 @bmi160_set_regs(i8 zeroext 77, i8* %6, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !4631
  call void @llvm.dbg.value(metadata i8 %18, i64 0, metadata !4606, metadata !177), !dbg !4633
  %19 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 13, !dbg !4634
  %20 = load void (i32)*, void (i32)** %19, align 8, !dbg !4634
  call void %20(i32 10) #5, !dbg !4635
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 1621, i8 %18)
  %21 = sext i8 %18 to i32, !dbg !4636
  %22 = icmp eq i32 %21, 0, !dbg !4638
  br i1 %22, label %23, label %82, !dbg !4639

; <label>:23:                                     ; preds = %17
  %24 = getelementptr inbounds [8 x i8], [8 x i8]* %7, i32 0, i32 0, !dbg !4640
  %25 = call signext i8 @bmi160_get_regs(i8 zeroext 4, i8* %24, i16 zeroext %0, %struct.bmi160_dev* @configStub) #5, !dbg !4642
  call void @llvm.dbg.value(metadata i8 %25, i64 0, metadata !4606, metadata !177), !dbg !4643
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 1622, i8 %25)
  %26 = sext i8 %25 to i32, !dbg !4644
  %27 = icmp eq i32 %26, 0, !dbg !4646
  br i1 %27, label %28, label %80, !dbg !4647

; <label>:28:                                     ; preds = %23
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1623, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !4612, metadata !177), !dbg !4648
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 1624, i16 %3)
  %29 = zext i16 %3 to i32, !dbg !4650
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 1625, i16 %0)
  %30 = zext i16 %0 to i32, !dbg !4652
  %31 = icmp slt i32 %29, %30, !dbg !4653
  br i1 %31, label %32, label %34, !dbg !4654

; <label>:32:                                     ; preds = %28
  call void @qpr.explicit.conversion.overflow.u16.u8(i32 1626, i16 %3)
  %33 = trunc i16 %3 to i8, !dbg !4655
  call void @llvm.dbg.value(metadata i8 %33, i64 0, metadata !4614, metadata !177), !dbg !4657
  br label %47, !dbg !4658

; <label>:34:                                     ; preds = %28
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 1628, i16 %3)
  %35 = zext i16 %3 to i32, !dbg !4659
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 1629, i8 %12)
  %36 = zext i8 %12 to i32, !dbg !4662
  call void @qpr.arithmetic.overflow.ssub.i32(i32 1627, i32 %35, i32 %36)
  %37 = sub nsw i32 %35, %36, !dbg !4663
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 1630, i16 %0)
  %38 = zext i16 %0 to i32, !dbg !4664
  %39 = icmp slt i32 %37, %38, !dbg !4665
  br i1 %39, label %40, label %45, !dbg !4666

; <label>:40:                                     ; preds = %34
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 1633, i16 %3)
  %41 = zext i16 %3 to i32, !dbg !4667
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 1634, i8 %12)
  %42 = zext i8 %12 to i32, !dbg !4668
  call void @qpr.arithmetic.overflow.ssub.i32(i32 1632, i32 %41, i32 %42)
  %43 = sub nsw i32 %41, %42, !dbg !4669
  call void @qpr.explicit.conversion.overflow.s32.u8(i32 1631, i32 %43)
  %44 = trunc i32 %43 to i8, !dbg !4670
  call void @llvm.dbg.value(metadata i8 %44, i64 0, metadata !4614, metadata !177), !dbg !4671
  br label %45, !dbg !4672

; <label>:45:                                     ; preds = %40, %34
  %46 = phi i8 [ %44, %40 ], [ %11, %34 ]
  call void @llvm.dbg.value(metadata i8 %46, i64 0, metadata !4614, metadata !177), !dbg !4615
  br label %47

; <label>:47:                                     ; preds = %45, %32
  %48 = phi i8 [ %33, %32 ], [ %46, %45 ]
  call void @llvm.dbg.value(metadata i8 %48, i64 0, metadata !4614, metadata !177), !dbg !4615
  br label %49, !dbg !4673

; <label>:49:                                     ; preds = %63, %47
  %50 = phi i8 [ 0, %47 ], [ %64, %63 ]
  call void @llvm.dbg.value(metadata i8 %50, i64 0, metadata !4612, metadata !177), !dbg !4613
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 1635, i8 %50)
  %51 = zext i8 %50 to i32, !dbg !4674
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 1636, i8 %48)
  %52 = zext i8 %48 to i32, !dbg !4678
  %53 = icmp slt i32 %51, %52, !dbg !4679
  br i1 %53, label %54, label %65, !dbg !4680

; <label>:54:                                     ; preds = %49
  %55 = zext i8 %50 to i64, !dbg !4682
  %56 = getelementptr inbounds [8 x i8], [8 x i8]* %7, i64 0, i64 %55, !dbg !4682
  %57 = load i8, i8* %56, align 1, !dbg !4682
  call void @qpr.arrayindex.i8.i4(i32 1641, i8 %50, i4 -8)
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 1639, i8 %12)
  %58 = zext i8 %12 to i32, !dbg !4683
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 1640, i8 %50)
  %59 = zext i8 %50 to i32, !dbg !4684
  call void @qpr.arithmetic.overflow.sadd.i32(i32 1638, i32 %58, i32 %59)
  %60 = add nsw i32 %58, %59, !dbg !4685
  %61 = sext i32 %60 to i64, !dbg !4686
  %62 = getelementptr inbounds i8, i8* %2, i64 %61, !dbg !4686
  store i8 %57, i8* %62, align 1, !dbg !4687
  br label %63, !dbg !4686

; <label>:63:                                     ; preds = %54
  call void @qpr.uinc.i8(i32 1637, i8 %50)
  %64 = add i8 %50, 1, !dbg !4688
  call void @llvm.dbg.value(metadata i8 %64, i64 0, metadata !4612, metadata !177), !dbg !4688
  br label %49, !dbg !4690, !llvm.loop !4691

; <label>:65:                                     ; preds = %49
  call void @qpr.explicit.conversion.overflow.u16.u8(i32 1644, i16 %0)
  %66 = trunc i16 %0 to i8, !dbg !4694
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 1643, i8 %66)
  %67 = zext i8 %66 to i32, !dbg !4694
  %68 = load i8, i8* %6
  %69 = zext i8 %68 to i32
  call void @qpr.arithmetic.overflow.warning.uadd.i32(i32 1642, i32 %69, i32 %67)
  %70 = load i8, i8* %6, align 1, !dbg !4695
  %71 = zext i8 %70 to i32, !dbg !4695
  %72 = add nsw i32 %71, %67, !dbg !4695
  %73 = trunc i32 %72 to i8, !dbg !4695
  store i8 %73, i8* %6, align 1, !dbg !4695
  call void @qpr.explicit.conversion.overflow.u16.u8(i32 1647, i16 %0)
  %74 = trunc i16 %0 to i8, !dbg !4696
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 1646, i8 %74)
  %75 = zext i8 %74 to i32, !dbg !4696
  %76 = zext i8 %12 to i32
  call void @qpr.arithmetic.overflow.warning.uadd.i32(i32 1645, i32 %76, i32 %75)
  %77 = zext i8 %12 to i32, !dbg !4697
  %78 = add nsw i32 %77, %75, !dbg !4697
  %79 = trunc i32 %78 to i8, !dbg !4697
  call void @llvm.dbg.value(metadata i8 %79, i64 0, metadata !4610, metadata !177), !dbg !4697
  br label %81, !dbg !4698

; <label>:80:                                     ; preds = %23
  call void @qpr.arithmetic.overflow.ssub.i32(i32 1649, i32 0, i32 2)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 1648, i32 -2)
  call void @llvm.dbg.value(metadata i8 -2, i64 0, metadata !4606, metadata !177), !dbg !4699
  br label %86, !dbg !4701

; <label>:81:                                     ; preds = %65
  br label %82, !dbg !4702

; <label>:82:                                     ; preds = %81, %17
  %83 = phi i8 [ %48, %81 ], [ %11, %17 ]
  %84 = phi i8 [ %79, %81 ], [ %12, %17 ]
  %85 = phi i8 [ %25, %81 ], [ %18, %17 ]
  call void @llvm.dbg.value(metadata i8 %85, i64 0, metadata !4606, metadata !177), !dbg !4607
  call void @llvm.dbg.value(metadata i8 %84, i64 0, metadata !4610, metadata !177), !dbg !4611
  call void @llvm.dbg.value(metadata i8 %83, i64 0, metadata !4614, metadata !177), !dbg !4615
  br label %10, !dbg !4703, !llvm.loop !4705

; <label>:86:                                     ; preds = %80, %10
  %87 = phi i8 [ -2, %80 ], [ %13, %10 ]
  call void @llvm.dbg.value(metadata i8 %87, i64 0, metadata !4606, metadata !177), !dbg !4607
  ret i8 %87, !dbg !4708
}

; Function Attrs: inaccessiblememonly nounwind
define weak_odr void @qpr.arithmetic.overflow.warning.uadd.i32(i32, i32, i32) #0 {
  %4 = call %0 @llvm.uadd.with.overflow.i32(i32 %1, i32 %2)
  %5 = extractvalue %0 %4, 1
  %6 = xor i1 %5, true
  call void @llbmc.assert(i1 %6, i32 %0)
  ret void
}

; Function Attrs: nounwind readnone
declare %0 @llvm.uadd.with.overflow.i32(i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define signext i8 @bmi160_aux_write(i8 zeroext, i8*, i16 zeroext, %struct.bmi160_dev*) #1 !dbg !4709 {
  %5 = alloca i8, align 1
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4710, metadata !177), !dbg !4711
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4712, metadata !177), !dbg !4713
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4714, metadata !177), !dbg !4715
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4716, metadata !177), !dbg !4717
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4718, metadata !177), !dbg !4719
  store i8 %0, i8* %5, align 1
  call void @llvm.dbg.declare(metadata i8* %5, metadata !4720, metadata !177), !dbg !4721
  call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !4710, metadata !177), !dbg !4711
  call void @llvm.dbg.value(metadata i16 %2, i64 0, metadata !4712, metadata !177), !dbg !4713
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %3, i64 0, metadata !4714, metadata !177), !dbg !4715
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !4722
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !4714, metadata !177), !dbg !4722
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 145, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !4716, metadata !177), !dbg !4717
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 146, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !4718, metadata !177), !dbg !4719
  %6 = icmp eq %struct.bmi160_dev* @configStub, null, !dbg !4723
  br i1 %6, label %11, label %7, !dbg !4725

; <label>:7:                                      ; preds = %4
  %8 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 12, !dbg !4726
  %9 = load i8 (i8, i8, i8*, i16)*, i8 (i8, i8, i8*, i16)** %8, align 8, !dbg !4726
  %10 = icmp eq i8 (i8, i8, i8*, i16)* %9, null, !dbg !4728
  br i1 %10, label %11, label %12, !dbg !4729

; <label>:11:                                     ; preds = %7, %4
  call void @qpr.arithmetic.overflow.ssub.i32(i32 148, i32 0, i32 1)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 147, i32 -1)
  call void @llvm.dbg.value(metadata i8 -1, i64 0, metadata !4716, metadata !177), !dbg !4731
  br label %50, !dbg !4733

; <label>:12:                                     ; preds = %7
  br label %13, !dbg !4734

; <label>:13:                                     ; preds = %47, %12
  %14 = phi i8 [ 0, %12 ], [ %48, %47 ]
  %15 = phi i8 [ 0, %12 ], [ %45, %47 ]
  %16 = phi i8* [ %1, %12 ], [ %46, %47 ]
  call void @llvm.dbg.value(metadata i8* %16, i64 0, metadata !4710, metadata !177), !dbg !4711
  call void @llvm.dbg.value(metadata i8 %15, i64 0, metadata !4716, metadata !177), !dbg !4717
  call void @llvm.dbg.value(metadata i8 %14, i64 0, metadata !4718, metadata !177), !dbg !4719
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 149, i8 %14)
  %17 = zext i8 %14 to i32, !dbg !4736
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 150, i16 %2)
  %18 = zext i16 %2 to i32, !dbg !4740
  %19 = icmp slt i32 %17, %18, !dbg !4741
  br i1 %19, label %20, label %49, !dbg !4742

; <label>:20:                                     ; preds = %13
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 152, i32 79)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 153, i32 1)
  %21 = call signext i8 @bmi160_set_regs(i8 zeroext 79, i8* %16, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !4744
  call void @llvm.dbg.value(metadata i8 %21, i64 0, metadata !4716, metadata !177), !dbg !4746
  %22 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 13, !dbg !4747
  %23 = load void (i32)*, void (i32)** %22, align 8, !dbg !4747
  call void %23(i32 10) #5, !dbg !4748
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 154, i8 %21)
  %24 = sext i8 %21 to i32, !dbg !4749
  %25 = icmp eq i32 %24, 0, !dbg !4751
  br i1 %25, label %26, label %44, !dbg !4752

; <label>:26:                                     ; preds = %20
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 155, i32 78)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 156, i32 1)
  %27 = call signext i8 @bmi160_set_regs(i8 zeroext 78, i8* %5, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !4753
  call void @llvm.dbg.value(metadata i8 %27, i64 0, metadata !4716, metadata !177), !dbg !4755
  %28 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 13, !dbg !4756
  %29 = load void (i32)*, void (i32)** %28, align 8, !dbg !4756
  call void %29(i32 10) #5, !dbg !4757
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 157, i8 %27)
  %30 = sext i8 %27 to i32, !dbg !4758
  %31 = icmp eq i32 %30, 0, !dbg !4760
  br i1 %31, label %32, label %42, !dbg !4761

; <label>:32:                                     ; preds = %26
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 158, i8 %14)
  %33 = zext i8 %14 to i32, !dbg !4762
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 160, i16 %2)
  %34 = zext i16 %2 to i32, !dbg !4764
  call void @qpr.arithmetic.overflow.ssub.i32(i32 159, i32 %34, i32 1)
  %35 = sub nsw i32 %34, 1, !dbg !4765
  %36 = icmp slt i32 %33, %35, !dbg !4766
  br i1 %36, label %37, label %42, !dbg !4767

; <label>:37:                                     ; preds = %32
  %38 = getelementptr inbounds i8, i8* %16, i32 1, !dbg !4769
  call void @llvm.dbg.value(metadata i8* %38, i64 0, metadata !4710, metadata !177), !dbg !4769
  %39 = load i8, i8* %5
  call void @qpr.uinc.i8(i32 161, i8 %39)
  %40 = load i8, i8* %5, align 1, !dbg !4771
  %41 = add i8 %40, 1, !dbg !4771
  store i8 %41, i8* %5, align 1, !dbg !4771
  br label %42, !dbg !4772

; <label>:42:                                     ; preds = %37, %32, %26
  %43 = phi i8* [ %38, %37 ], [ %16, %32 ], [ %16, %26 ]
  call void @llvm.dbg.value(metadata i8* %43, i64 0, metadata !4710, metadata !177), !dbg !4711
  br label %44, !dbg !4773

; <label>:44:                                     ; preds = %42, %20
  %45 = phi i8 [ %27, %42 ], [ %21, %20 ]
  %46 = phi i8* [ %43, %42 ], [ %16, %20 ]
  call void @llvm.dbg.value(metadata i8* %46, i64 0, metadata !4710, metadata !177), !dbg !4711
  call void @llvm.dbg.value(metadata i8 %45, i64 0, metadata !4716, metadata !177), !dbg !4717
  br label %47, !dbg !4774

; <label>:47:                                     ; preds = %44
  call void @qpr.uinc.i8(i32 151, i8 %14)
  %48 = add i8 %14, 1, !dbg !4775
  call void @llvm.dbg.value(metadata i8 %48, i64 0, metadata !4718, metadata !177), !dbg !4775
  br label %13, !dbg !4777, !llvm.loop !4778

; <label>:49:                                     ; preds = %13
  br label %50

; <label>:50:                                     ; preds = %49, %11
  %51 = phi i8 [ -1, %11 ], [ %15, %49 ]
  call void @llvm.dbg.value(metadata i8 %51, i64 0, metadata !4716, metadata !177), !dbg !4717
  ret i8 %51, !dbg !4781
}

; Function Attrs: noinline nounwind uwtable
define signext i8 @bmi160_aux_init(%struct.bmi160_dev*) #1 !dbg !4782 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4783, metadata !177), !dbg !4784
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4785, metadata !177), !dbg !4786
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %0, i64 0, metadata !4783, metadata !177), !dbg !4784
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !4787
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !4783, metadata !177), !dbg !4787
  %2 = call signext i8 @null_ptr_check(%struct.bmi160_dev* @configStub) #5, !dbg !4788
  call void @llvm.dbg.value(metadata i8 %2, i64 0, metadata !4785, metadata !177), !dbg !4789
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 162, i8 %2)
  %3 = sext i8 %2 to i32, !dbg !4790
  %4 = icmp ne i32 %3, 0, !dbg !4792
  br i1 %4, label %5, label %6, !dbg !4793

; <label>:5:                                      ; preds = %1
  call void @qpr.arithmetic.overflow.ssub.i32(i32 164, i32 0, i32 1)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 163, i32 -1)
  call void @llvm.dbg.value(metadata i8 -1, i64 0, metadata !4785, metadata !177), !dbg !4794
  br label %18, !dbg !4796

; <label>:6:                                      ; preds = %1
  %7 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 8, !dbg !4797
  %8 = bitcast %struct.bmi160_aux_cfg* %7 to i8*, !dbg !4800
  %9 = load i8, i8* %8, align 8, !dbg !4800
  %10 = and i8 %9, 1, !dbg !4800
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 165, i8 %10)
  %11 = zext i8 %10 to i32, !dbg !4801
  %12 = icmp eq i32 %11, 1, !dbg !4802
  br i1 %12, label %13, label %15, !dbg !4803

; <label>:13:                                     ; preds = %6
  %14 = call signext i8 @config_aux_settg(%struct.bmi160_dev* @configStub) #5, !dbg !4804
  call void @llvm.dbg.value(metadata i8 %14, i64 0, metadata !4785, metadata !177), !dbg !4806
  br label %16, !dbg !4807

; <label>:15:                                     ; preds = %6
  call void @qpr.arithmetic.overflow.ssub.i32(i32 167, i32 0, i32 5)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 166, i32 -5)
  call void @llvm.dbg.value(metadata i8 -5, i64 0, metadata !4785, metadata !177), !dbg !4808
  br label %16

; <label>:16:                                     ; preds = %15, %13
  %17 = phi i8 [ %14, %13 ], [ -5, %15 ]
  call void @llvm.dbg.value(metadata i8 %17, i64 0, metadata !4785, metadata !177), !dbg !4786
  br label %18

; <label>:18:                                     ; preds = %16, %5
  %19 = phi i8 [ -1, %5 ], [ %17, %16 ]
  call void @llvm.dbg.value(metadata i8 %19, i64 0, metadata !4785, metadata !177), !dbg !4786
  ret i8 %19, !dbg !4810
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @config_aux_settg(%struct.bmi160_dev*) #1 !dbg !4811 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4812, metadata !177), !dbg !4813
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4814, metadata !177), !dbg !4815
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %0, i64 0, metadata !4812, metadata !177), !dbg !4813
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !4816
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !4812, metadata !177), !dbg !4816
  %2 = call signext i8 @config_sec_if(%struct.bmi160_dev* @configStub) #5, !dbg !4817
  call void @llvm.dbg.value(metadata i8 %2, i64 0, metadata !4814, metadata !177), !dbg !4818
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 1611, i8 %2)
  %3 = sext i8 %2 to i32, !dbg !4819
  %4 = icmp eq i32 %3, 0, !dbg !4821
  br i1 %4, label %5, label %7, !dbg !4822

; <label>:5:                                      ; preds = %1
  %6 = call signext i8 @bmi160_config_aux_mode(%struct.bmi160_dev* @configStub) #5, !dbg !4823
  call void @llvm.dbg.value(metadata i8 %6, i64 0, metadata !4814, metadata !177), !dbg !4825
  br label %7, !dbg !4826

; <label>:7:                                      ; preds = %5, %1
  %8 = phi i8 [ %6, %5 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i8 %8, i64 0, metadata !4814, metadata !177), !dbg !4815
  ret i8 %8, !dbg !4827
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @config_sec_if(%struct.bmi160_dev*) #1 !dbg !4828 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4829, metadata !177), !dbg !4830
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4831, metadata !177), !dbg !4832
  %2 = alloca i8, align 1
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %0, i64 0, metadata !4829, metadata !177), !dbg !4830
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !4833
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !4829, metadata !177), !dbg !4833
  call void @llvm.dbg.declare(metadata i8* %2, metadata !4834, metadata !177), !dbg !4835
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 1582, i32 0)
  store i8 0, i8* %2, align 1, !dbg !4835
  call void @llvm.dbg.declare(metadata i8* %3, metadata !4836, metadata !177), !dbg !4837
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1583, i32 25)
  store i8 25, i8* %3, align 1, !dbg !4837
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1584, i32 126)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1585, i32 1)
  %4 = call signext i8 @bmi160_set_regs(i8 zeroext 126, i8* %3, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !4838
  call void @llvm.dbg.value(metadata i8 %4, i64 0, metadata !4831, metadata !177), !dbg !4839
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 1586, i8 %4)
  %5 = sext i8 %4 to i32, !dbg !4840
  %6 = icmp eq i32 %5, 0, !dbg !4842
  br i1 %6, label %7, label %21, !dbg !4843

; <label>:7:                                      ; preds = %1
  %8 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 13, !dbg !4844
  %9 = load void (i32)*, void (i32)** %8, align 8, !dbg !4844
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 1587, i32 60)
  call void %9(i32 60) #5, !dbg !4846
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1588, i32 107)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1589, i32 1)
  %10 = call signext i8 @bmi160_get_regs(i8 zeroext 107, i8* %2, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !4847
  call void @llvm.dbg.value(metadata i8 %10, i64 0, metadata !4831, metadata !177), !dbg !4848
  call void @qpr.shift.by.amount.i32(i32 1592, i32 1, i32 5)
  call void @qpr.shift.by.negative.i32(i32 1593, i32 1, i32 5)
  call void @qpr.shift.of.negative.i32(i32 1594, i32 1, i32 5)
  call void @qpr.explicit.conversion.overflow.s32.u8(i32 1591, i32 32)
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 1590, i8 32)
  %11 = load i8, i8* %2, align 1, !dbg !4849
  %12 = zext i8 %11 to i32, !dbg !4849
  %13 = or i32 %12, 32, !dbg !4849
  %14 = trunc i32 %13 to i8, !dbg !4849
  store i8 %14, i8* %2, align 1, !dbg !4849
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 1595, i8 %10)
  %15 = sext i8 %10 to i32, !dbg !4850
  %16 = icmp eq i32 %15, 0, !dbg !4852
  br i1 %16, label %17, label %19, !dbg !4853

; <label>:17:                                     ; preds = %7
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1596, i32 107)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1597, i32 1)
  %18 = call signext i8 @bmi160_set_regs(i8 zeroext 107, i8* %2, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !4854
  call void @llvm.dbg.value(metadata i8 %18, i64 0, metadata !4831, metadata !177), !dbg !4855
  br label %19, !dbg !4856

; <label>:19:                                     ; preds = %17, %7
  %20 = phi i8 [ %18, %17 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i8 %20, i64 0, metadata !4831, metadata !177), !dbg !4832
  br label %21, !dbg !4857

; <label>:21:                                     ; preds = %19, %1
  %22 = phi i8 [ %20, %19 ], [ %4, %1 ]
  call void @llvm.dbg.value(metadata i8 %22, i64 0, metadata !4831, metadata !177), !dbg !4832
  ret i8 %22, !dbg !4858
}

; Function Attrs: noinline nounwind uwtable
define signext i8 @bmi160_config_aux_mode(%struct.bmi160_dev*) #1 !dbg !4859 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4860, metadata !177), !dbg !4861
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4862, metadata !177), !dbg !4863
  %2 = alloca [2 x i8], align 1
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %0, i64 0, metadata !4860, metadata !177), !dbg !4861
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !4864
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !4860, metadata !177), !dbg !4864
  call void @llvm.dbg.declare(metadata [2 x i8]* %2, metadata !4865, metadata !177), !dbg !4866
  %3 = getelementptr inbounds [2 x i8], [2 x i8]* %2, i64 0, i64 0, !dbg !4867
  %4 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 8, !dbg !4868
  %5 = getelementptr inbounds %struct.bmi160_aux_cfg, %struct.bmi160_aux_cfg* %4, i32 0, i32 1, !dbg !4869
  %6 = load i8, i8* %5, align 1, !dbg !4869
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 181, i8 %6)
  %7 = zext i8 %6 to i32, !dbg !4870
  call void @qpr.arithmetic.overflow.smul.i32(i32 180, i32 %7, i32 2)
  %8 = mul nsw i32 %7, 2, !dbg !4871
  call void @qpr.explicit.conversion.overflow.s32.u8(i32 179, i32 %8)
  %9 = trunc i32 %8 to i8, !dbg !4872
  store i8 %9, i8* %3, align 1, !dbg !4867
  %10 = getelementptr inbounds i8, i8* %3, i64 1, !dbg !4867
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 182, i32 0)
  store i8 0, i8* %10, align 1, !dbg !4867
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 183, i32 76)
  %11 = getelementptr inbounds [2 x i8], [2 x i8]* %2, i64 0, i64 1, !dbg !4873
  call void @qpr.arrayindex.i32.i2(i32 184, i32 1, i2 -2)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 185, i32 1)
  %12 = call signext i8 @bmi160_get_regs(i8 zeroext 76, i8* %11, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !4874
  call void @llvm.dbg.value(metadata i8 %12, i64 0, metadata !4862, metadata !177), !dbg !4875
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 186, i8 %12)
  %13 = sext i8 %12 to i32, !dbg !4876
  %14 = icmp eq i32 %13, 0, !dbg !4878
  br i1 %14, label %15, label %49, !dbg !4879

; <label>:15:                                     ; preds = %1
  %16 = getelementptr inbounds [2 x i8], [2 x i8]* %2, i64 0, i64 1, !dbg !4880
  %17 = load i8, i8* %16, align 1, !dbg !4880
  call void @qpr.arrayindex.i32.i2(i32 190, i32 1, i2 -2)
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 189, i8 %17)
  %18 = zext i8 %17 to i32, !dbg !4880
  %19 = and i32 %18, -129, !dbg !4880
  %20 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 8, !dbg !4880
  %21 = bitcast %struct.bmi160_aux_cfg* %20 to i8*, !dbg !4880
  %22 = load i8, i8* %21, align 8, !dbg !4880
  %23 = lshr i8 %22, 1, !dbg !4880
  %24 = and i8 %23, 1, !dbg !4880
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 195, i8 %24)
  %25 = zext i8 %24 to i32, !dbg !4880
  call void @qpr.shift.by.amount.i32(i32 192, i32 %25, i32 7)
  call void @qpr.shift.by.negative.i32(i32 193, i32 %25, i32 7)
  call void @qpr.shift.of.negative.i32(i32 194, i32 %25, i32 7)
  %26 = shl i32 %25, 7, !dbg !4880
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 191, i32 %26)
  %27 = and i32 %26, 128, !dbg !4880
  %28 = or i32 %19, %27, !dbg !4880
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 188, i32 %28)
  %29 = trunc i32 %28 to i8, !dbg !4880
  %30 = getelementptr inbounds [2 x i8], [2 x i8]* %2, i64 0, i64 1, !dbg !4882
  call void @qpr.arrayindex.i32.i2(i32 187, i32 1, i2 -2)
  store i8 %29, i8* %30, align 1, !dbg !4883
  %31 = getelementptr inbounds [2 x i8], [2 x i8]* %2, i64 0, i64 1, !dbg !4884
  %32 = load i8, i8* %31, align 1, !dbg !4884
  call void @qpr.arrayindex.i32.i2(i32 199, i32 1, i2 -2)
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 198, i8 %32)
  %33 = zext i8 %32 to i32, !dbg !4884
  %34 = and i32 %33, -4, !dbg !4884
  %35 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 8, !dbg !4884
  %36 = bitcast %struct.bmi160_aux_cfg* %35 to i8*, !dbg !4884
  %37 = load i8, i8* %36, align 8, !dbg !4884
  %38 = lshr i8 %37, 2, !dbg !4884
  %39 = and i8 %38, 3, !dbg !4884
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 200, i8 %39)
  %40 = zext i8 %39 to i32, !dbg !4884
  %41 = and i32 %40, 3, !dbg !4884
  %42 = or i32 %34, %41, !dbg !4884
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 197, i32 %42)
  %43 = trunc i32 %42 to i8, !dbg !4884
  %44 = getelementptr inbounds [2 x i8], [2 x i8]* %2, i64 0, i64 1, !dbg !4885
  call void @qpr.arrayindex.i32.i2(i32 196, i32 1, i2 -2)
  store i8 %43, i8* %44, align 1, !dbg !4886
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 201, i32 75)
  %45 = getelementptr inbounds [2 x i8], [2 x i8]* %2, i64 0, i64 0, !dbg !4887
  call void @qpr.arrayindex.i32.i2(i32 202, i32 0, i2 -2)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 203, i32 2)
  %46 = call signext i8 @bmi160_set_regs(i8 zeroext 75, i8* %45, i16 zeroext 2, %struct.bmi160_dev* @configStub) #5, !dbg !4888
  call void @llvm.dbg.value(metadata i8 %46, i64 0, metadata !4862, metadata !177), !dbg !4889
  %47 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 13, !dbg !4890
  %48 = load void (i32)*, void (i32)** %47, align 8, !dbg !4890
  call void %48(i32 10) #5, !dbg !4891
  br label %49, !dbg !4892

; <label>:49:                                     ; preds = %15, %1
  %50 = phi i8 [ %46, %15 ], [ %12, %1 ]
  call void @llvm.dbg.value(metadata i8 %50, i64 0, metadata !4862, metadata !177), !dbg !4863
  ret i8 %50, !dbg !4893
}

; Function Attrs: inaccessiblememonly nounwind
define weak_odr void @qpr.arithmetic.overflow.smul.i32(i32, i32, i32) #0 {
  %4 = call %0 @llvm.smul.with.overflow.i32(i32 %1, i32 %2)
  %5 = extractvalue %0 %4, 1
  %6 = xor i1 %5, true
  call void @llbmc.assert(i1 %6, i32 %0)
  ret void
}

; Function Attrs: nounwind readnone
declare %0 @llvm.smul.with.overflow.i32(i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define signext i8 @bmi160_set_aux_auto_mode(i8*, %struct.bmi160_dev*) #1 !dbg !4894 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4897, metadata !177), !dbg !4898
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4899, metadata !177), !dbg !4900
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4901, metadata !177), !dbg !4902
  call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !4897, metadata !177), !dbg !4898
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %1, i64 0, metadata !4899, metadata !177), !dbg !4900
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !4903
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !4899, metadata !177), !dbg !4903
  %3 = call signext i8 @null_ptr_check(%struct.bmi160_dev* @configStub) #5, !dbg !4904
  call void @llvm.dbg.value(metadata i8 %3, i64 0, metadata !4901, metadata !177), !dbg !4905
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 168, i8 %3)
  %4 = sext i8 %3 to i32, !dbg !4906
  %5 = icmp ne i32 %4, 0, !dbg !4908
  br i1 %5, label %6, label %7, !dbg !4909

; <label>:6:                                      ; preds = %2
  call void @qpr.arithmetic.overflow.ssub.i32(i32 170, i32 0, i32 1)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 169, i32 -1)
  call void @llvm.dbg.value(metadata i8 -1, i64 0, metadata !4901, metadata !177), !dbg !4910
  br label %37, !dbg !4912

; <label>:7:                                      ; preds = %2
  %8 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 8, !dbg !4913
  %9 = bitcast %struct.bmi160_aux_cfg* %8 to i8*, !dbg !4916
  %10 = load i8, i8* %9, align 8, !dbg !4916
  %11 = and i8 %10, 1, !dbg !4916
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 171, i8 %11)
  %12 = zext i8 %11 to i32, !dbg !4917
  %13 = icmp eq i32 %12, 1, !dbg !4918
  br i1 %13, label %14, label %34, !dbg !4919

; <label>:14:                                     ; preds = %7
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 172, i32 77)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 173, i32 1)
  %15 = call signext i8 @bmi160_set_regs(i8 zeroext 77, i8* %0, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !4920
  call void @llvm.dbg.value(metadata i8 %15, i64 0, metadata !4901, metadata !177), !dbg !4922
  %16 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 13, !dbg !4923
  %17 = load void (i32)*, void (i32)** %16, align 8, !dbg !4923
  call void %17(i32 10) #5, !dbg !4924
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 174, i8 %15)
  %18 = sext i8 %15 to i32, !dbg !4925
  %19 = icmp eq i32 %18, 0, !dbg !4927
  br i1 %19, label %20, label %32, !dbg !4928

; <label>:20:                                     ; preds = %14
  %21 = call signext i8 @config_aux_odr(%struct.bmi160_dev* @configStub) #5, !dbg !4929
  call void @llvm.dbg.value(metadata i8 %21, i64 0, metadata !4901, metadata !177), !dbg !4931
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 175, i8 %21)
  %22 = sext i8 %21 to i32, !dbg !4932
  %23 = icmp eq i32 %22, 0, !dbg !4934
  br i1 %23, label %24, label %30, !dbg !4935

; <label>:24:                                     ; preds = %20
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 176, i32 0)
  %25 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 8, !dbg !4936
  %26 = bitcast %struct.bmi160_aux_cfg* %25 to i8*, !dbg !4938
  %27 = load i8, i8* %26, align 8, !dbg !4939
  %28 = and i8 %27, -3, !dbg !4939
  store i8 %28, i8* %26, align 8, !dbg !4939
  %29 = call signext i8 @bmi160_config_aux_mode(%struct.bmi160_dev* @configStub) #5, !dbg !4940
  call void @llvm.dbg.value(metadata i8 %29, i64 0, metadata !4901, metadata !177), !dbg !4941
  br label %30, !dbg !4942

; <label>:30:                                     ; preds = %24, %20
  %31 = phi i8 [ %29, %24 ], [ %21, %20 ]
  call void @llvm.dbg.value(metadata i8 %31, i64 0, metadata !4901, metadata !177), !dbg !4902
  br label %32, !dbg !4943

; <label>:32:                                     ; preds = %30, %14
  %33 = phi i8 [ %31, %30 ], [ %15, %14 ]
  call void @llvm.dbg.value(metadata i8 %33, i64 0, metadata !4901, metadata !177), !dbg !4902
  br label %35, !dbg !4944

; <label>:34:                                     ; preds = %7
  call void @qpr.arithmetic.overflow.ssub.i32(i32 178, i32 0, i32 5)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 177, i32 -5)
  call void @llvm.dbg.value(metadata i8 -5, i64 0, metadata !4901, metadata !177), !dbg !4945
  br label %35

; <label>:35:                                     ; preds = %34, %32
  %36 = phi i8 [ %33, %32 ], [ -5, %34 ]
  call void @llvm.dbg.value(metadata i8 %36, i64 0, metadata !4901, metadata !177), !dbg !4902
  br label %37

; <label>:37:                                     ; preds = %35, %6
  %38 = phi i8 [ -1, %6 ], [ %36, %35 ]
  call void @llvm.dbg.value(metadata i8 %38, i64 0, metadata !4901, metadata !177), !dbg !4902
  ret i8 %38, !dbg !4947
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @config_aux_odr(%struct.bmi160_dev*) #1 !dbg !4948 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4949, metadata !177), !dbg !4950
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4951, metadata !177), !dbg !4952
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %0, i64 0, metadata !4949, metadata !177), !dbg !4950
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !4953
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !4949, metadata !177), !dbg !4953
  call void @llvm.dbg.declare(metadata i8* %2, metadata !4954, metadata !177), !dbg !4955
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1598, i32 68)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1599, i32 1)
  %3 = call signext i8 @bmi160_get_regs(i8 zeroext 68, i8* %2, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !4956
  call void @llvm.dbg.value(metadata i8 %3, i64 0, metadata !4951, metadata !177), !dbg !4957
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 1600, i8 %3)
  %4 = sext i8 %3 to i32, !dbg !4958
  %5 = icmp eq i32 %4, 0, !dbg !4960
  br i1 %5, label %6, label %14, !dbg !4961

; <label>:6:                                      ; preds = %1
  %7 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 8, !dbg !4962
  %8 = bitcast %struct.bmi160_aux_cfg* %7 to i8*, !dbg !4964
  %9 = load i8, i8* %8, align 8, !dbg !4964
  %10 = lshr i8 %9, 4, !dbg !4964
  store i8 %10, i8* %2, align 1, !dbg !4965
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 1601, i32 68)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 1602, i32 1)
  %11 = call signext i8 @bmi160_set_regs(i8 zeroext 68, i8* %2, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !4966
  call void @llvm.dbg.value(metadata i8 %11, i64 0, metadata !4951, metadata !177), !dbg !4967
  %12 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 13, !dbg !4968
  %13 = load void (i32)*, void (i32)** %12, align 8, !dbg !4968
  call void %13(i32 10) #5, !dbg !4969
  br label %14, !dbg !4970

; <label>:14:                                     ; preds = %6, %1
  %15 = phi i8 [ %11, %6 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i8 %15, i64 0, metadata !4951, metadata !177), !dbg !4952
  ret i8 %15, !dbg !4971
}

; Function Attrs: noinline nounwind uwtable
define signext i8 @bmi160_read_aux_data_auto_mode(i8*, %struct.bmi160_dev*) #1 !dbg !4972 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4973, metadata !177), !dbg !4974
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4975, metadata !177), !dbg !4976
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !4977, metadata !177), !dbg !4978
  call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !4973, metadata !177), !dbg !4974
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %1, i64 0, metadata !4975, metadata !177), !dbg !4976
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !4979
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !4975, metadata !177), !dbg !4979
  %3 = call signext i8 @null_ptr_check(%struct.bmi160_dev* @configStub) #5, !dbg !4980
  call void @llvm.dbg.value(metadata i8 %3, i64 0, metadata !4977, metadata !177), !dbg !4981
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 204, i8 %3)
  %4 = sext i8 %3 to i32, !dbg !4982
  %5 = icmp ne i32 %4, 0, !dbg !4984
  br i1 %5, label %6, label %7, !dbg !4985

; <label>:6:                                      ; preds = %2
  call void @qpr.arithmetic.overflow.ssub.i32(i32 206, i32 0, i32 1)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 205, i32 -1)
  call void @llvm.dbg.value(metadata i8 -1, i64 0, metadata !4977, metadata !177), !dbg !4986
  br label %27, !dbg !4988

; <label>:7:                                      ; preds = %2
  %8 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 8, !dbg !4989
  %9 = bitcast %struct.bmi160_aux_cfg* %8 to i8*, !dbg !4992
  %10 = load i8, i8* %9, align 8, !dbg !4992
  %11 = and i8 %10, 1, !dbg !4992
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 207, i8 %11)
  %12 = zext i8 %11 to i32, !dbg !4993
  %13 = icmp eq i32 %12, 1, !dbg !4994
  br i1 %13, label %14, label %24, !dbg !4995

; <label>:14:                                     ; preds = %7
  %15 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 8, !dbg !4996
  %16 = bitcast %struct.bmi160_aux_cfg* %15 to i8*, !dbg !4997
  %17 = load i8, i8* %16, align 8, !dbg !4997
  %18 = lshr i8 %17, 1, !dbg !4997
  %19 = and i8 %18, 1, !dbg !4997
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 208, i8 %19)
  %20 = zext i8 %19 to i32, !dbg !4998
  %21 = icmp eq i32 %20, 0, !dbg !4999
  br i1 %21, label %22, label %24, !dbg !5000

; <label>:22:                                     ; preds = %14
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 209, i32 4)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 210, i32 8)
  %23 = call signext i8 @bmi160_get_regs(i8 zeroext 4, i8* %0, i16 zeroext 8, %struct.bmi160_dev* @configStub) #5, !dbg !5002
  call void @llvm.dbg.value(metadata i8 %23, i64 0, metadata !4977, metadata !177), !dbg !5004
  br label %25, !dbg !5005

; <label>:24:                                     ; preds = %14, %7
  call void @qpr.arithmetic.overflow.ssub.i32(i32 212, i32 0, i32 5)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 211, i32 -5)
  call void @llvm.dbg.value(metadata i8 -5, i64 0, metadata !4977, metadata !177), !dbg !5006
  br label %25

; <label>:25:                                     ; preds = %24, %22
  %26 = phi i8 [ %23, %22 ], [ -5, %24 ]
  call void @llvm.dbg.value(metadata i8 %26, i64 0, metadata !4977, metadata !177), !dbg !4978
  br label %27

; <label>:27:                                     ; preds = %25, %6
  %28 = phi i8 [ -1, %6 ], [ %26, %25 ]
  call void @llvm.dbg.value(metadata i8 %28, i64 0, metadata !4977, metadata !177), !dbg !4978
  ret i8 %28, !dbg !5008
}

; Function Attrs: noinline nounwind uwtable
define signext i8 @bmi160_perform_self_test(i8 zeroext, %struct.bmi160_dev*) #1 !dbg !5009 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !5012, metadata !177), !dbg !5013
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !5014, metadata !177), !dbg !5015
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !5016, metadata !177), !dbg !5017
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !5018, metadata !177), !dbg !5019
  call void @llvm.dbg.value(metadata i8 %0, i64 0, metadata !5012, metadata !177), !dbg !5013
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %1, i64 0, metadata !5014, metadata !177), !dbg !5015
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !5020
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !5014, metadata !177), !dbg !5020
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 213, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !5018, metadata !177), !dbg !5019
  %3 = call signext i8 @null_ptr_check(%struct.bmi160_dev* @configStub) #5, !dbg !5021
  call void @llvm.dbg.value(metadata i8 %3, i64 0, metadata !5016, metadata !177), !dbg !5022
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 214, i8 %3)
  %4 = sext i8 %3 to i32, !dbg !5023
  %5 = icmp ne i32 %4, 0, !dbg !5025
  br i1 %5, label %6, label %7, !dbg !5026

; <label>:6:                                      ; preds = %2
  call void @qpr.arithmetic.overflow.ssub.i32(i32 216, i32 0, i32 1)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 215, i32 -1)
  call void @llvm.dbg.value(metadata i8 -1, i64 0, metadata !5016, metadata !177), !dbg !5027
  br label %36, !dbg !5029

; <label>:7:                                      ; preds = %2
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 217, i8 %0)
  %8 = zext i8 %0 to i32, !dbg !5030
  switch i32 %8, label %21 [
    i32 1, label %9
    i32 2, label %11
  ], !dbg !5032

; <label>:9:                                      ; preds = %7
  %10 = call signext i8 @perform_accel_self_test(%struct.bmi160_dev* @configStub) #5, !dbg !5033
  call void @llvm.dbg.value(metadata i8 %10, i64 0, metadata !5016, metadata !177), !dbg !5035
  br label %22, !dbg !5036

; <label>:11:                                     ; preds = %7
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 218, i32 21)
  %12 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 6, !dbg !5037
  %13 = getelementptr inbounds %struct.bmi160_cfg, %struct.bmi160_cfg* %12, i32 0, i32 0, !dbg !5038
  store i8 21, i8* %13, align 8, !dbg !5039
  %14 = call signext i8 @bmi160_set_power_mode(%struct.bmi160_dev* @configStub) #5, !dbg !5040
  call void @llvm.dbg.value(metadata i8 %14, i64 0, metadata !5016, metadata !177), !dbg !5041
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 219, i8 %14)
  %15 = sext i8 %14 to i32, !dbg !5042
  %16 = icmp eq i32 %15, 0, !dbg !5044
  br i1 %16, label %17, label %19, !dbg !5045

; <label>:17:                                     ; preds = %11
  %18 = call signext i8 @perform_gyro_self_test(%struct.bmi160_dev* @configStub) #5, !dbg !5046
  call void @llvm.dbg.value(metadata i8 %18, i64 0, metadata !5016, metadata !177), !dbg !5048
  br label %19, !dbg !5049

; <label>:19:                                     ; preds = %17, %11
  %20 = phi i8 [ %18, %17 ], [ %14, %11 ]
  call void @llvm.dbg.value(metadata i8 %20, i64 0, metadata !5016, metadata !177), !dbg !5017
  br label %22, !dbg !5050

; <label>:21:                                     ; preds = %7
  call void @qpr.arithmetic.overflow.ssub.i32(i32 221, i32 0, i32 5)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 220, i32 -5)
  call void @llvm.dbg.value(metadata i8 -5, i64 0, metadata !5016, metadata !177), !dbg !5051
  br label %22, !dbg !5052

; <label>:22:                                     ; preds = %21, %19, %9
  %23 = phi i8 [ -5, %21 ], [ %20, %19 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i8 %23, i64 0, metadata !5016, metadata !177), !dbg !5017
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 222, i8 %23)
  %24 = sext i8 %23 to i32, !dbg !5053
  %25 = icmp sge i32 %24, 0, !dbg !5055
  br i1 %25, label %26, label %28, !dbg !5056

; <label>:26:                                     ; preds = %22
  call void @llvm.dbg.value(metadata i8 %23, i64 0, metadata !5018, metadata !177), !dbg !5057
  %27 = call signext i8 @bmi160_soft_reset(%struct.bmi160_dev* @configStub) #5, !dbg !5059
  call void @llvm.dbg.value(metadata i8 %27, i64 0, metadata !5016, metadata !177), !dbg !5060
  br label %28, !dbg !5061

; <label>:28:                                     ; preds = %26, %22
  %29 = phi i8 [ %23, %26 ], [ 0, %22 ]
  %30 = phi i8 [ %27, %26 ], [ %23, %22 ]
  call void @llvm.dbg.value(metadata i8 %30, i64 0, metadata !5016, metadata !177), !dbg !5017
  call void @llvm.dbg.value(metadata i8 %29, i64 0, metadata !5018, metadata !177), !dbg !5019
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 223, i8 %30)
  %31 = sext i8 %30 to i32, !dbg !5062
  %32 = icmp eq i32 %31, 0, !dbg !5064
  br i1 %32, label %33, label %34, !dbg !5065

; <label>:33:                                     ; preds = %28
  call void @llvm.dbg.value(metadata i8 %29, i64 0, metadata !5016, metadata !177), !dbg !5066
  br label %34, !dbg !5068

; <label>:34:                                     ; preds = %33, %28
  %35 = phi i8 [ %29, %33 ], [ %30, %28 ]
  call void @llvm.dbg.value(metadata i8 %35, i64 0, metadata !5016, metadata !177), !dbg !5017
  br label %36

; <label>:36:                                     ; preds = %34, %6
  %37 = phi i8 [ -1, %6 ], [ %35, %34 ]
  call void @llvm.dbg.value(metadata i8 %37, i64 0, metadata !5016, metadata !177), !dbg !5017
  ret i8 %37, !dbg !5069
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @perform_accel_self_test(%struct.bmi160_dev*) #1 !dbg !5070 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !5071, metadata !177), !dbg !5072
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !5073, metadata !177), !dbg !5074
  %2 = alloca %struct.bmi160_sensor_data, align 4
  %3 = alloca %struct.bmi160_sensor_data, align 4
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %0, i64 0, metadata !5071, metadata !177), !dbg !5072
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !5075
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !5071, metadata !177), !dbg !5075
  call void @llvm.dbg.declare(metadata %struct.bmi160_sensor_data* %2, metadata !5076, metadata !177), !dbg !5077
  call void @llvm.dbg.declare(metadata %struct.bmi160_sensor_data* %3, metadata !5078, metadata !177), !dbg !5079
  %4 = call signext i8 @enable_accel_self_test(%struct.bmi160_dev* @configStub) #5, !dbg !5080
  call void @llvm.dbg.value(metadata i8 %4, i64 0, metadata !5073, metadata !177), !dbg !5081
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 2013, i8 %4)
  %5 = sext i8 %4 to i32, !dbg !5082
  %6 = icmp eq i32 %5, 0, !dbg !5084
  br i1 %6, label %7, label %21, !dbg !5085

; <label>:7:                                      ; preds = %1
  %8 = call signext i8 @accel_self_test_positive_excitation(%struct.bmi160_sensor_data* %2, %struct.bmi160_dev* @configStub) #5, !dbg !5086
  call void @llvm.dbg.value(metadata i8 %8, i64 0, metadata !5073, metadata !177), !dbg !5088
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 2014, i8 %8)
  %9 = sext i8 %8 to i32, !dbg !5089
  %10 = icmp eq i32 %9, 0, !dbg !5091
  br i1 %10, label %11, label %19, !dbg !5092

; <label>:11:                                     ; preds = %7
  %12 = call signext i8 @accel_self_test_negative_excitation(%struct.bmi160_sensor_data* %3, %struct.bmi160_dev* @configStub) #5, !dbg !5093
  call void @llvm.dbg.value(metadata i8 %12, i64 0, metadata !5073, metadata !177), !dbg !5095
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 2015, i8 %12)
  %13 = sext i8 %12 to i32, !dbg !5096
  %14 = icmp eq i32 %13, 0, !dbg !5098
  br i1 %14, label %15, label %17, !dbg !5099

; <label>:15:                                     ; preds = %11
  %16 = call signext i8 @validate_accel_self_test(%struct.bmi160_sensor_data* %2, %struct.bmi160_sensor_data* %3) #5, !dbg !5100
  call void @llvm.dbg.value(metadata i8 %16, i64 0, metadata !5073, metadata !177), !dbg !5102
  br label %17, !dbg !5103

; <label>:17:                                     ; preds = %15, %11
  %18 = phi i8 [ %16, %15 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata i8 %18, i64 0, metadata !5073, metadata !177), !dbg !5074
  br label %19, !dbg !5104

; <label>:19:                                     ; preds = %17, %7
  %20 = phi i8 [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8 %20, i64 0, metadata !5073, metadata !177), !dbg !5074
  br label %21, !dbg !5105

; <label>:21:                                     ; preds = %19, %1
  %22 = phi i8 [ %20, %19 ], [ %4, %1 ]
  call void @llvm.dbg.value(metadata i8 %22, i64 0, metadata !5073, metadata !177), !dbg !5074
  ret i8 %22, !dbg !5106
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @perform_gyro_self_test(%struct.bmi160_dev*) #1 !dbg !5107 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !5108, metadata !177), !dbg !5109
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !5110, metadata !177), !dbg !5111
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %0, i64 0, metadata !5108, metadata !177), !dbg !5109
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !5112
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !5108, metadata !177), !dbg !5112
  %2 = call signext i8 @enable_gyro_self_test(%struct.bmi160_dev* @configStub) #5, !dbg !5113
  call void @llvm.dbg.value(metadata i8 %2, i64 0, metadata !5110, metadata !177), !dbg !5114
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 2046, i8 %2)
  %3 = sext i8 %2 to i32, !dbg !5115
  %4 = icmp eq i32 %3, 0, !dbg !5117
  br i1 %4, label %5, label %7, !dbg !5118

; <label>:5:                                      ; preds = %1
  %6 = call signext i8 @validate_gyro_self_test(%struct.bmi160_dev* @configStub) #5, !dbg !5119
  call void @llvm.dbg.value(metadata i8 %6, i64 0, metadata !5110, metadata !177), !dbg !5121
  br label %7, !dbg !5122

; <label>:7:                                      ; preds = %5, %1
  %8 = phi i8 [ %6, %5 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i8 %8, i64 0, metadata !5110, metadata !177), !dbg !5111
  ret i8 %8, !dbg !5123
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @enable_gyro_self_test(%struct.bmi160_dev*) #1 !dbg !5124 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !5125, metadata !177), !dbg !5126
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !5127, metadata !177), !dbg !5128
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %0, i64 0, metadata !5125, metadata !177), !dbg !5126
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !5129
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !5125, metadata !177), !dbg !5129
  call void @llvm.dbg.declare(metadata i8* %2, metadata !5130, metadata !177), !dbg !5131
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 2047, i32 109)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 2048, i32 1)
  %3 = call signext i8 @bmi160_get_regs(i8 zeroext 109, i8* %2, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !5132
  call void @llvm.dbg.value(metadata i8 %3, i64 0, metadata !5127, metadata !177), !dbg !5133
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 2049, i8 %3)
  %4 = sext i8 %3 to i32, !dbg !5134
  %5 = icmp eq i32 %4, 0, !dbg !5136
  br i1 %5, label %6, label %19, !dbg !5137

; <label>:6:                                      ; preds = %1
  %7 = load i8, i8* %2, align 1, !dbg !5138
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 2051, i8 %7)
  %8 = zext i8 %7 to i32, !dbg !5138
  %9 = and i32 %8, -17, !dbg !5138
  call void @qpr.shift.by.amount.i32(i32 2053, i32 1, i32 4)
  call void @qpr.shift.by.negative.i32(i32 2054, i32 1, i32 4)
  call void @qpr.shift.of.negative.i32(i32 2055, i32 1, i32 4)
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 2052, i32 16)
  %10 = or i32 %9, 16, !dbg !5138
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 2050, i32 %10)
  %11 = trunc i32 %10 to i8, !dbg !5138
  store i8 %11, i8* %2, align 1, !dbg !5140
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 2056, i32 109)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 2057, i32 1)
  %12 = call signext i8 @bmi160_set_regs(i8 zeroext 109, i8* %2, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !5141
  call void @llvm.dbg.value(metadata i8 %12, i64 0, metadata !5127, metadata !177), !dbg !5142
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 2058, i8 %12)
  %13 = sext i8 %12 to i32, !dbg !5143
  %14 = icmp eq i32 %13, 0, !dbg !5145
  br i1 %14, label %15, label %18, !dbg !5146

; <label>:15:                                     ; preds = %6
  %16 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 13, !dbg !5147
  %17 = load void (i32)*, void (i32)** %16, align 8, !dbg !5147
  call void %17(i32 20) #5, !dbg !5149
  br label %18, !dbg !5150

; <label>:18:                                     ; preds = %15, %6
  br label %19, !dbg !5151

; <label>:19:                                     ; preds = %18, %1
  %20 = phi i8 [ %12, %18 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i8 %20, i64 0, metadata !5127, metadata !177), !dbg !5128
  ret i8 %20, !dbg !5152
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @validate_gyro_self_test(%struct.bmi160_dev*) #1 !dbg !5153 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !5154, metadata !177), !dbg !5155
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !5156, metadata !177), !dbg !5157
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %0, i64 0, metadata !5154, metadata !177), !dbg !5155
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !5158
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !5154, metadata !177), !dbg !5158
  call void @llvm.dbg.declare(metadata i8* %2, metadata !5159, metadata !177), !dbg !5160
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 2059, i32 27)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 2060, i32 1)
  %3 = call signext i8 @bmi160_get_regs(i8 zeroext 27, i8* %2, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !5161
  call void @llvm.dbg.value(metadata i8 %3, i64 0, metadata !5156, metadata !177), !dbg !5162
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 2061, i8 %3)
  %4 = sext i8 %3 to i32, !dbg !5163
  %5 = icmp eq i32 %4, 0, !dbg !5165
  br i1 %5, label %6, label %19, !dbg !5166

; <label>:6:                                      ; preds = %1
  %7 = load i8, i8* %2, align 1, !dbg !5167
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 2064, i8 %7)
  %8 = zext i8 %7 to i32, !dbg !5167
  %9 = and i32 %8, 2, !dbg !5167
  call void @qpr.shift.by.amount.i32(i32 2063, i32 %9, i32 1)
  %10 = lshr i32 %9, 1, !dbg !5167
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 2062, i32 %10)
  %11 = trunc i32 %10 to i8, !dbg !5167
  store i8 %11, i8* %2, align 1, !dbg !5169
  %12 = load i8, i8* %2, align 1, !dbg !5170
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 2065, i8 %12)
  %13 = zext i8 %12 to i32, !dbg !5170
  %14 = icmp eq i32 %13, 1, !dbg !5172
  br i1 %14, label %15, label %16, !dbg !5173

; <label>:15:                                     ; preds = %6
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 2066, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !5156, metadata !177), !dbg !5174
  br label %17, !dbg !5176

; <label>:16:                                     ; preds = %6
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 2067, i32 1)
  call void @llvm.dbg.value(metadata i8 1, i64 0, metadata !5156, metadata !177), !dbg !5177
  br label %17

; <label>:17:                                     ; preds = %16, %15
  %18 = phi i8 [ 0, %15 ], [ 1, %16 ]
  call void @llvm.dbg.value(metadata i8 %18, i64 0, metadata !5156, metadata !177), !dbg !5157
  br label %19, !dbg !5179

; <label>:19:                                     ; preds = %17, %1
  %20 = phi i8 [ %18, %17 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i8 %20, i64 0, metadata !5156, metadata !177), !dbg !5157
  ret i8 %20, !dbg !5180
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @enable_accel_self_test(%struct.bmi160_dev*) #1 !dbg !5181 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !5182, metadata !177), !dbg !5183
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !5184, metadata !177), !dbg !5185
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %0, i64 0, metadata !5182, metadata !177), !dbg !5183
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !5186
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !5182, metadata !177), !dbg !5186
  call void @llvm.dbg.declare(metadata i8* %2, metadata !5187, metadata !177), !dbg !5188
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 2016, i32 17)
  %3 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 4, !dbg !5189
  %4 = getelementptr inbounds %struct.bmi160_cfg, %struct.bmi160_cfg* %3, i32 0, i32 0, !dbg !5190
  store i8 17, i8* %4, align 8, !dbg !5191
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 2017, i32 8)
  %5 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 4, !dbg !5192
  %6 = getelementptr inbounds %struct.bmi160_cfg, %struct.bmi160_cfg* %5, i32 0, i32 2, !dbg !5193
  store i8 8, i8* %6, align 2, !dbg !5194
  %7 = call signext i8 @bmi160_set_sens_conf(%struct.bmi160_dev* @configStub) #5, !dbg !5195
  call void @llvm.dbg.value(metadata i8 %7, i64 0, metadata !5184, metadata !177), !dbg !5196
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 2018, i8 %7)
  %8 = sext i8 %7 to i32, !dbg !5197
  %9 = icmp eq i32 %8, 0, !dbg !5199
  br i1 %9, label %10, label %12, !dbg !5200

; <label>:10:                                     ; preds = %1
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 2019, i32 44)
  store i8 44, i8* %2, align 1, !dbg !5201
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 2020, i32 64)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 2021, i32 1)
  %11 = call signext i8 @bmi160_set_regs(i8 zeroext 64, i8* %2, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !5203
  call void @llvm.dbg.value(metadata i8 %11, i64 0, metadata !5184, metadata !177), !dbg !5204
  br label %12, !dbg !5205

; <label>:12:                                     ; preds = %10, %1
  %13 = phi i8 [ %11, %10 ], [ %7, %1 ]
  call void @llvm.dbg.value(metadata i8 %13, i64 0, metadata !5184, metadata !177), !dbg !5185
  ret i8 %13, !dbg !5206
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @accel_self_test_positive_excitation(%struct.bmi160_sensor_data*, %struct.bmi160_dev*) #1 !dbg !5207 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !5210, metadata !177), !dbg !5211
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !5212, metadata !177), !dbg !5213
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !5214, metadata !177), !dbg !5215
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.bmi160_sensor_data* %0, i64 0, metadata !5210, metadata !177), !dbg !5211
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %1, i64 0, metadata !5212, metadata !177), !dbg !5213
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !5216
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !5212, metadata !177), !dbg !5216
  call void @llvm.dbg.declare(metadata i8* %3, metadata !5217, metadata !177), !dbg !5218
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 2022, i32 13)
  store i8 13, i8* %3, align 1, !dbg !5219
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 2023, i32 109)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 2024, i32 1)
  %4 = call signext i8 @bmi160_set_regs(i8 zeroext 109, i8* %3, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !5220
  call void @llvm.dbg.value(metadata i8 %4, i64 0, metadata !5214, metadata !177), !dbg !5221
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 2025, i8 %4)
  %5 = sext i8 %4 to i32, !dbg !5222
  %6 = icmp eq i32 %5, 0, !dbg !5224
  br i1 %6, label %7, label %11, !dbg !5225

; <label>:7:                                      ; preds = %2
  %8 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 13, !dbg !5226
  %9 = load void (i32)*, void (i32)** %8, align 8, !dbg !5226
  call void %9(i32 50) #5, !dbg !5228
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 2026, i32 1)
  %10 = call signext i8 @bmi160_get_sensor_data(i8 zeroext 1, %struct.bmi160_sensor_data* %0, %struct.bmi160_sensor_data* null, %struct.bmi160_dev* @configStub) #5, !dbg !5229
  call void @llvm.dbg.value(metadata i8 %10, i64 0, metadata !5214, metadata !177), !dbg !5230
  br label %11, !dbg !5231

; <label>:11:                                     ; preds = %7, %2
  %12 = phi i8 [ %10, %7 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i8 %12, i64 0, metadata !5214, metadata !177), !dbg !5215
  ret i8 %12, !dbg !5232
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @accel_self_test_negative_excitation(%struct.bmi160_sensor_data*, %struct.bmi160_dev*) #1 !dbg !5233 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !5234, metadata !177), !dbg !5235
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !5236, metadata !177), !dbg !5237
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !5238, metadata !177), !dbg !5239
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.bmi160_sensor_data* %0, i64 0, metadata !5234, metadata !177), !dbg !5235
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %1, i64 0, metadata !5236, metadata !177), !dbg !5237
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !5240
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !5236, metadata !177), !dbg !5240
  call void @llvm.dbg.declare(metadata i8* %3, metadata !5241, metadata !177), !dbg !5242
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 2027, i32 9)
  store i8 9, i8* %3, align 1, !dbg !5243
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 2028, i32 109)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 2029, i32 1)
  %4 = call signext i8 @bmi160_set_regs(i8 zeroext 109, i8* %3, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !5244
  call void @llvm.dbg.value(metadata i8 %4, i64 0, metadata !5238, metadata !177), !dbg !5245
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 2030, i8 %4)
  %5 = sext i8 %4 to i32, !dbg !5246
  %6 = icmp eq i32 %5, 0, !dbg !5248
  br i1 %6, label %7, label %11, !dbg !5249

; <label>:7:                                      ; preds = %2
  %8 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 13, !dbg !5250
  %9 = load void (i32)*, void (i32)** %8, align 8, !dbg !5250
  call void %9(i32 50) #5, !dbg !5252
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 2031, i32 1)
  %10 = call signext i8 @bmi160_get_sensor_data(i8 zeroext 1, %struct.bmi160_sensor_data* %0, %struct.bmi160_sensor_data* null, %struct.bmi160_dev* @configStub) #5, !dbg !5253
  call void @llvm.dbg.value(metadata i8 %10, i64 0, metadata !5238, metadata !177), !dbg !5254
  br label %11, !dbg !5255

; <label>:11:                                     ; preds = %7, %2
  %12 = phi i8 [ %10, %7 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i8 %12, i64 0, metadata !5238, metadata !177), !dbg !5239
  ret i8 %12, !dbg !5256
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @validate_accel_self_test(%struct.bmi160_sensor_data*, %struct.bmi160_sensor_data*) #1 !dbg !5257 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !5262, metadata !177), !dbg !5263
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !5264, metadata !177), !dbg !5265
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !5266, metadata !177), !dbg !5267
  call void @llvm.dbg.value(metadata %struct.bmi160_sensor_data* %0, i64 0, metadata !5262, metadata !177), !dbg !5263
  call void @llvm.dbg.value(metadata %struct.bmi160_sensor_data* %1, i64 0, metadata !5264, metadata !177), !dbg !5265
  %3 = getelementptr inbounds %struct.bmi160_sensor_data, %struct.bmi160_sensor_data* %1, i32 0, i32 0, !dbg !5268
  %4 = load i16, i16* %3, align 4, !dbg !5268
  call void @qpr.implicit.conversion.overflow.s16.s32(i32 2034, i16 %4)
  %5 = sext i16 %4 to i32, !dbg !5270
  %6 = getelementptr inbounds %struct.bmi160_sensor_data, %struct.bmi160_sensor_data* %0, i32 0, i32 0, !dbg !5271
  %7 = load i16, i16* %6, align 4, !dbg !5271
  call void @qpr.implicit.conversion.overflow.s16.s32(i32 2035, i16 %7)
  %8 = sext i16 %7 to i32, !dbg !5272
  call void @qpr.arithmetic.overflow.ssub.i32(i32 2033, i32 %5, i32 %8)
  %9 = sub nsw i32 %5, %8, !dbg !5273
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 2032, i32 %9)
  %10 = icmp ugt i32 %9, 8192, !dbg !5274
  br i1 %10, label %11, label %30, !dbg !5275

; <label>:11:                                     ; preds = %2
  %12 = getelementptr inbounds %struct.bmi160_sensor_data, %struct.bmi160_sensor_data* %1, i32 0, i32 1, !dbg !5276
  %13 = load i16, i16* %12, align 2, !dbg !5276
  call void @qpr.implicit.conversion.overflow.s16.s32(i32 2038, i16 %13)
  %14 = sext i16 %13 to i32, !dbg !5278
  %15 = getelementptr inbounds %struct.bmi160_sensor_data, %struct.bmi160_sensor_data* %0, i32 0, i32 1, !dbg !5279
  %16 = load i16, i16* %15, align 2, !dbg !5279
  call void @qpr.implicit.conversion.overflow.s16.s32(i32 2039, i16 %16)
  %17 = sext i16 %16 to i32, !dbg !5280
  call void @qpr.arithmetic.overflow.ssub.i32(i32 2037, i32 %14, i32 %17)
  %18 = sub nsw i32 %14, %17, !dbg !5281
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 2036, i32 %18)
  %19 = icmp ugt i32 %18, 8192, !dbg !5282
  br i1 %19, label %20, label %30, !dbg !5283

; <label>:20:                                     ; preds = %11
  %21 = getelementptr inbounds %struct.bmi160_sensor_data, %struct.bmi160_sensor_data* %1, i32 0, i32 2, !dbg !5284
  %22 = load i16, i16* %21, align 4, !dbg !5284
  call void @qpr.implicit.conversion.overflow.s16.s32(i32 2042, i16 %22)
  %23 = sext i16 %22 to i32, !dbg !5285
  %24 = getelementptr inbounds %struct.bmi160_sensor_data, %struct.bmi160_sensor_data* %0, i32 0, i32 2, !dbg !5286
  %25 = load i16, i16* %24, align 4, !dbg !5286
  call void @qpr.implicit.conversion.overflow.s16.s32(i32 2043, i16 %25)
  %26 = sext i16 %25 to i32, !dbg !5287
  call void @qpr.arithmetic.overflow.ssub.i32(i32 2041, i32 %23, i32 %26)
  %27 = sub nsw i32 %23, %26, !dbg !5288
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 2040, i32 %27)
  %28 = icmp ugt i32 %27, 8192, !dbg !5289
  br i1 %28, label %29, label %30, !dbg !5290

; <label>:29:                                     ; preds = %20
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 2044, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !5266, metadata !177), !dbg !5292
  br label %31, !dbg !5294

; <label>:30:                                     ; preds = %20, %11, %2
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 2045, i32 2)
  call void @llvm.dbg.value(metadata i8 2, i64 0, metadata !5266, metadata !177), !dbg !5295
  br label %31

; <label>:31:                                     ; preds = %30, %29
  %32 = phi i8 [ 0, %29 ], [ 2, %30 ]
  call void @llvm.dbg.value(metadata i8 %32, i64 0, metadata !5266, metadata !177), !dbg !5267
  ret i8 %32, !dbg !5297
}

; Function Attrs: inaccessiblememonly nounwind
define weak_odr void @qpr.implicit.conversion.overflow.s16.s32(i32, i16) #0 {
  call void @llbmc.assert(i1 true, i32 %0)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define signext i8 @bmi160_get_fifo_data(%struct.bmi160_dev*) #1 !dbg !5298 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !5299, metadata !177), !dbg !5300
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !5301, metadata !177), !dbg !5302
  %2 = alloca i16, align 2
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !5303, metadata !177), !dbg !5304
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !5305, metadata !177), !dbg !5306
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %0, i64 0, metadata !5299, metadata !177), !dbg !5300
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !5307
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !5299, metadata !177), !dbg !5307
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 224, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !5301, metadata !177), !dbg !5302
  call void @llvm.dbg.declare(metadata i16* %2, metadata !5308, metadata !177), !dbg !5309
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 225, i32 0)
  store i16 0, i16* %2, align 2, !dbg !5309
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 226, i32 0)
  call void @llvm.dbg.value(metadata i16 0, i64 0, metadata !5303, metadata !177), !dbg !5304
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 227, i32 36)
  call void @llvm.dbg.value(metadata i8 36, i64 0, metadata !5305, metadata !177), !dbg !5306
  %3 = icmp eq %struct.bmi160_dev* @configStub, null, !dbg !5310
  br i1 %3, label %10, label %4, !dbg !5312

; <label>:4:                                      ; preds = %1
  %5 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !5313
  %6 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %5, align 8, !dbg !5313
  %7 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %6, i32 0, i32 0, !dbg !5315
  %8 = load i8*, i8** %7, align 8, !dbg !5315
  %9 = icmp eq i8* %8, null, !dbg !5316
  br i1 %9, label %10, label %11, !dbg !5317

; <label>:10:                                     ; preds = %4, %1
  call void @qpr.arithmetic.overflow.ssub.i32(i32 229, i32 0, i32 1)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 228, i32 -1)
  call void @llvm.dbg.value(metadata i8 -1, i64 0, metadata !5301, metadata !177), !dbg !5319
  br label %83, !dbg !5321

; <label>:11:                                     ; preds = %4
  call void @reset_fifo_data_structure(%struct.bmi160_dev* @configStub) #5, !dbg !5322
  %12 = call signext i8 @get_fifo_byte_counter(i16* %2, %struct.bmi160_dev* @configStub) #5, !dbg !5324
  call void @llvm.dbg.value(metadata i8 %12, i64 0, metadata !5301, metadata !177), !dbg !5325
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 230, i8 %12)
  %13 = sext i8 %12 to i32, !dbg !5326
  %14 = icmp eq i32 %13, 0, !dbg !5328
  br i1 %14, label %15, label %81, !dbg !5329

; <label>:15:                                     ; preds = %11
  %16 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !5330
  %17 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %16, align 8, !dbg !5330
  %18 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %17, i32 0, i32 1, !dbg !5332
  %19 = load i16, i16* %18, align 8, !dbg !5332
  call void @llvm.dbg.value(metadata i16 %19, i64 0, metadata !5303, metadata !177), !dbg !5333
  %20 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !5334
  %21 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %20, align 8, !dbg !5334
  %22 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %21, i32 0, i32 1, !dbg !5336
  %23 = load i16, i16* %22, align 8, !dbg !5336
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 231, i16 %23)
  %24 = zext i16 %23 to i32, !dbg !5337
  %25 = load i16, i16* %2, align 2, !dbg !5338
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 232, i16 %25)
  %26 = zext i16 %25 to i32, !dbg !5338
  %27 = icmp sgt i32 %24, %26, !dbg !5339
  br i1 %27, label %28, label %33, !dbg !5340

; <label>:28:                                     ; preds = %15
  %29 = load i16, i16* %2, align 2, !dbg !5341
  %30 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !5343
  %31 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %30, align 8, !dbg !5343
  %32 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %31, i32 0, i32 1, !dbg !5344
  store i16 %29, i16* %32, align 8, !dbg !5345
  br label %33, !dbg !5346

; <label>:33:                                     ; preds = %28, %15
  %34 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !5347
  %35 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %34, align 8, !dbg !5347
  %36 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %35, i32 0, i32 2, !dbg !5349
  %37 = load i8, i8* %36, align 2, !dbg !5349
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 233, i8 %37)
  %38 = zext i8 %37 to i32, !dbg !5350
  %39 = icmp eq i32 %38, 2, !dbg !5351
  br i1 %39, label %40, label %57, !dbg !5352

; <label>:40:                                     ; preds = %33
  %41 = load i16, i16* %2, align 2, !dbg !5353
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 235, i16 %41)
  %42 = zext i16 %41 to i32, !dbg !5353
  call void @qpr.arithmetic.overflow.warning.uadd.i32(i32 234, i32 %42, i32 25)
  %43 = add i32 %42, 25, !dbg !5355
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 236, i16 %19)
  %44 = zext i16 %19 to i32, !dbg !5356
  %45 = icmp ule i32 %43, %44, !dbg !5357
  br i1 %45, label %46, label %57, !dbg !5358

; <label>:46:                                     ; preds = %40
  %47 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !5360
  %48 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %47, align 8, !dbg !5360
  %49 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %48, i32 0, i32 1, !dbg !5362
  %50 = load i16, i16* %49, align 8, !dbg !5362
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 239, i16 %50)
  %51 = zext i16 %50 to i32, !dbg !5363
  call void @qpr.arithmetic.overflow.warning.uadd.i32(i32 238, i32 %51, i32 25)
  %52 = add i32 %51, 25, !dbg !5364
  call void @qpr.implicit.conversion.overflow.u32.u16(i32 237, i32 %52)
  %53 = trunc i32 %52 to i16, !dbg !5363
  %54 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !5365
  %55 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %54, align 8, !dbg !5365
  %56 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %55, i32 0, i32 1, !dbg !5366
  store i16 %53, i16* %56, align 8, !dbg !5367
  br label %57, !dbg !5368

; <label>:57:                                     ; preds = %46, %40, %33
  %58 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 2, !dbg !5369
  %59 = load i8, i8* %58, align 2, !dbg !5369
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 240, i8 %59)
  %60 = zext i8 %59 to i32, !dbg !5371
  %61 = icmp eq i32 %60, 1, !dbg !5372
  br i1 %61, label %62, label %66, !dbg !5373

; <label>:62:                                     ; preds = %57
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 242, i8 36)
  %63 = zext i8 36 to i32, !dbg !5374
  %64 = or i32 %63, 128, !dbg !5376
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 241, i32 %64)
  %65 = trunc i32 %64 to i8, !dbg !5374
  call void @llvm.dbg.value(metadata i8 %65, i64 0, metadata !5305, metadata !177), !dbg !5377
  br label %66, !dbg !5378

; <label>:66:                                     ; preds = %62, %57
  %67 = phi i8 [ %65, %62 ], [ 36, %57 ]
  call void @llvm.dbg.value(metadata i8 %67, i64 0, metadata !5305, metadata !177), !dbg !5306
  %68 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 11, !dbg !5379
  %69 = load i8 (i8, i8, i8*, i16)*, i8 (i8, i8, i8*, i16)** %68, align 8, !dbg !5379
  %70 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 1, !dbg !5380
  %71 = load i8, i8* %70, align 1, !dbg !5380
  %72 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !5381
  %73 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %72, align 8, !dbg !5381
  %74 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %73, i32 0, i32 0, !dbg !5382
  %75 = load i8*, i8** %74, align 8, !dbg !5382
  %76 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !5383
  %77 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %76, align 8, !dbg !5383
  %78 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %77, i32 0, i32 1, !dbg !5384
  %79 = load i16, i16* %78, align 8, !dbg !5384
  %80 = call signext i8 %69(i8 zeroext %71, i8 zeroext %67, i8* %75, i16 zeroext %79) #5, !dbg !5385
  call void @llvm.dbg.value(metadata i8 %80, i64 0, metadata !5301, metadata !177), !dbg !5386
  br label %81, !dbg !5387

; <label>:81:                                     ; preds = %66, %11
  %82 = phi i8 [ %80, %66 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata i8 %82, i64 0, metadata !5301, metadata !177), !dbg !5302
  br label %83

; <label>:83:                                     ; preds = %81, %10
  %84 = phi i8 [ -1, %10 ], [ %82, %81 ]
  call void @llvm.dbg.value(metadata i8 %84, i64 0, metadata !5301, metadata !177), !dbg !5302
  ret i8 %84, !dbg !5388
}

; Function Attrs: noinline nounwind uwtable
define internal void @reset_fifo_data_structure(%struct.bmi160_dev*) #1 !dbg !5389 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !5392, metadata !177), !dbg !5393
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %0, i64 0, metadata !5392, metadata !177), !dbg !5393
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !5394
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !5392, metadata !177), !dbg !5394
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 2104, i32 0)
  %2 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !5395
  %3 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %2, align 8, !dbg !5395
  %4 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %3, i32 0, i32 5, !dbg !5396
  store i16 0, i16* %4, align 2, !dbg !5397
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 2105, i32 0)
  %5 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !5398
  %6 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %5, align 8, !dbg !5398
  %7 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %6, i32 0, i32 6, !dbg !5399
  store i16 0, i16* %7, align 8, !dbg !5400
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 2106, i32 0)
  %8 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !5401
  %9 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %8, align 8, !dbg !5401
  %10 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %9, i32 0, i32 7, !dbg !5402
  store i16 0, i16* %10, align 2, !dbg !5403
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 2107, i32 0)
  %11 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !5404
  %12 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %11, align 8, !dbg !5404
  %13 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %12, i32 0, i32 8, !dbg !5405
  store i32 0, i32* %13, align 4, !dbg !5406
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 2108, i32 0)
  %14 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !5407
  %15 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %14, align 8, !dbg !5407
  %16 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %15, i32 0, i32 9, !dbg !5408
  store i8 0, i8* %16, align 8, !dbg !5409
  ret void, !dbg !5410
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @get_fifo_byte_counter(i16*, %struct.bmi160_dev*) #1 !dbg !5411 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !5412, metadata !177), !dbg !5413
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !5414, metadata !177), !dbg !5415
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !5416, metadata !177), !dbg !5417
  %3 = alloca [2 x i8], align 1
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !5418, metadata !177), !dbg !5419
  call void @llvm.dbg.value(metadata i16* %0, i64 0, metadata !5412, metadata !177), !dbg !5413
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %1, i64 0, metadata !5414, metadata !177), !dbg !5415
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !5420
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !5414, metadata !177), !dbg !5420
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 2109, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !5416, metadata !177), !dbg !5417
  call void @llvm.dbg.declare(metadata [2 x i8]* %3, metadata !5421, metadata !177), !dbg !5422
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 2110, i32 34)
  call void @llvm.dbg.value(metadata i8 34, i64 0, metadata !5418, metadata !177), !dbg !5419
  %4 = getelementptr inbounds [2 x i8], [2 x i8]* %3, i32 0, i32 0, !dbg !5423
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 2112, i32 2)
  %5 = call signext i8 @bmi160_get_regs(i8 zeroext 34, i8* %4, i16 zeroext 2, %struct.bmi160_dev* @configStub) #5, !dbg !5424
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 2111, i8 %5)
  %6 = sext i8 %5 to i32, !dbg !5424
  %7 = sext i8 0 to i32, !dbg !5425
  %8 = or i32 %7, %6, !dbg !5425
  %9 = trunc i32 %8 to i8, !dbg !5425
  call void @llvm.dbg.value(metadata i8 %9, i64 0, metadata !5416, metadata !177), !dbg !5425
  %10 = getelementptr inbounds [2 x i8], [2 x i8]* %3, i64 0, i64 1, !dbg !5426
  %11 = load i8, i8* %10, align 1, !dbg !5426
  call void @qpr.arrayindex.i32.i2(i32 2116, i32 1, i2 -2)
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 2115, i8 %11)
  %12 = zext i8 %11 to i32, !dbg !5426
  %13 = and i32 %12, 7, !dbg !5427
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 2114, i32 %13)
  %14 = trunc i32 %13 to i8, !dbg !5426
  %15 = getelementptr inbounds [2 x i8], [2 x i8]* %3, i64 0, i64 1, !dbg !5428
  call void @qpr.arrayindex.i32.i2(i32 2113, i32 1, i2 -2)
  store i8 %14, i8* %15, align 1, !dbg !5429
  %16 = getelementptr inbounds [2 x i8], [2 x i8]* %3, i64 0, i64 1, !dbg !5430
  %17 = load i8, i8* %16, align 1, !dbg !5430
  call void @qpr.arrayindex.i32.i2(i32 2123, i32 1, i2 -2)
  call void @qpr.explicit.conversion.overflow.u8.u16(i32 2122, i8 %17)
  %18 = zext i8 %17 to i16, !dbg !5431
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 2121, i16 %18)
  %19 = zext i16 %18 to i32, !dbg !5431
  call void @qpr.shift.by.amount.i32(i32 2118, i32 %19, i32 8)
  call void @qpr.shift.by.negative.i32(i32 2119, i32 %19, i32 8)
  call void @qpr.shift.of.negative.i32(i32 2120, i32 %19, i32 8)
  %20 = shl i32 %19, 8, !dbg !5432
  %21 = getelementptr inbounds [2 x i8], [2 x i8]* %3, i64 0, i64 0, !dbg !5433
  %22 = load i8, i8* %21, align 1, !dbg !5433
  call void @qpr.arrayindex.i32.i2(i32 2126, i32 0, i2 -2)
  call void @qpr.explicit.conversion.overflow.u8.u16(i32 2125, i8 %22)
  %23 = zext i8 %22 to i16, !dbg !5434
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 2124, i16 %23)
  %24 = zext i16 %23 to i32, !dbg !5435
  %25 = or i32 %20, %24, !dbg !5436
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 2117, i32 %25)
  %26 = trunc i32 %25 to i16, !dbg !5437
  store i16 %26, i16* %0, align 2, !dbg !5438
  ret i8 %9, !dbg !5439
}

; Function Attrs: inaccessiblememonly nounwind
define weak_odr void @qpr.implicit.conversion.overflow.u32.u16(i32, i32) #0 {
  %3 = icmp ule i32 %1, 65535
  call void @llbmc.assert(i1 %3, i32 %0)
  ret void
}

; Function Attrs: inaccessiblememonly nounwind
define weak_odr void @qpr.explicit.conversion.overflow.u8.u16(i32, i8) #0 {
  call void @llbmc.assert(i1 true, i32 %0)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define signext i8 @bmi160_set_fifo_flush(%struct.bmi160_dev*) #1 !dbg !5440 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !5441, metadata !177), !dbg !5442
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !5443, metadata !177), !dbg !5444
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !5445, metadata !177), !dbg !5446
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %0, i64 0, metadata !5441, metadata !177), !dbg !5442
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !5447
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !5441, metadata !177), !dbg !5447
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 243, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !5443, metadata !177), !dbg !5444
  call void @llvm.dbg.declare(metadata i8* %2, metadata !5448, metadata !177), !dbg !5449
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 244, i32 176)
  store i8 -80, i8* %2, align 1, !dbg !5449
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 245, i32 126)
  call void @llvm.dbg.value(metadata i8 126, i64 0, metadata !5445, metadata !177), !dbg !5446
  %3 = icmp eq %struct.bmi160_dev* @configStub, null, !dbg !5450
  br i1 %3, label %4, label %5, !dbg !5452

; <label>:4:                                      ; preds = %1
  call void @qpr.arithmetic.overflow.ssub.i32(i32 247, i32 0, i32 1)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 246, i32 -1)
  call void @llvm.dbg.value(metadata i8 -1, i64 0, metadata !5443, metadata !177), !dbg !5453
  br label %7, !dbg !5454

; <label>:5:                                      ; preds = %1
  call void @qpr.implicit.conversion.overflow.u32.u16(i32 248, i32 1)
  %6 = call signext i8 @bmi160_set_regs(i8 zeroext 126, i8* %2, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !5455
  call void @llvm.dbg.value(metadata i8 %6, i64 0, metadata !5443, metadata !177), !dbg !5456
  br label %7

; <label>:7:                                      ; preds = %5, %4
  %8 = phi i8 [ -1, %4 ], [ %6, %5 ]
  call void @llvm.dbg.value(metadata i8 %8, i64 0, metadata !5443, metadata !177), !dbg !5444
  ret i8 %8, !dbg !5457
}

; Function Attrs: noinline nounwind uwtable
define signext i8 @bmi160_set_fifo_config(i8 zeroext, i8 zeroext, %struct.bmi160_dev*) #1 !dbg !5458 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !5461, metadata !177), !dbg !5462
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !5463, metadata !177), !dbg !5464
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !5465, metadata !177), !dbg !5466
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !5467, metadata !177), !dbg !5468
  %4 = alloca i8, align 1
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !5469, metadata !177), !dbg !5470
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !5471, metadata !177), !dbg !5472
  call void @llvm.dbg.value(metadata i8 %0, i64 0, metadata !5461, metadata !177), !dbg !5462
  call void @llvm.dbg.value(metadata i8 %1, i64 0, metadata !5463, metadata !177), !dbg !5464
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %2, i64 0, metadata !5465, metadata !177), !dbg !5466
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !5473
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !5465, metadata !177), !dbg !5473
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 249, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !5467, metadata !177), !dbg !5468
  call void @llvm.dbg.declare(metadata i8* %4, metadata !5474, metadata !177), !dbg !5475
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 250, i32 0)
  store i8 0, i8* %4, align 1, !dbg !5475
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 251, i32 71)
  call void @llvm.dbg.value(metadata i8 71, i64 0, metadata !5469, metadata !177), !dbg !5470
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 253, i8 %0)
  %5 = zext i8 %0 to i32, !dbg !5476
  %6 = and i32 %5, 254, !dbg !5477
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 252, i32 %6)
  %7 = trunc i32 %6 to i8, !dbg !5476
  call void @llvm.dbg.value(metadata i8 %7, i64 0, metadata !5471, metadata !177), !dbg !5472
  %8 = icmp eq %struct.bmi160_dev* @configStub, null, !dbg !5478
  br i1 %8, label %9, label %10, !dbg !5480

; <label>:9:                                      ; preds = %3
  call void @qpr.arithmetic.overflow.ssub.i32(i32 255, i32 0, i32 1)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 254, i32 -1)
  call void @llvm.dbg.value(metadata i8 -1, i64 0, metadata !5467, metadata !177), !dbg !5481
  br label %69, !dbg !5483

; <label>:10:                                     ; preds = %3
  call void @qpr.implicit.conversion.overflow.u32.u16(i32 256, i32 1)
  %11 = call signext i8 @bmi160_get_regs(i8 zeroext 71, i8* %4, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !5484
  call void @llvm.dbg.value(metadata i8 %11, i64 0, metadata !5467, metadata !177), !dbg !5486
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 257, i8 %11)
  %12 = sext i8 %11 to i32, !dbg !5487
  %13 = icmp eq i32 %12, 0, !dbg !5489
  br i1 %13, label %14, label %67, !dbg !5490

; <label>:14:                                     ; preds = %10
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 258, i8 %7)
  %15 = zext i8 %7 to i32, !dbg !5491
  %16 = icmp sgt i32 %15, 0, !dbg !5494
  br i1 %16, label %17, label %34, !dbg !5495

; <label>:17:                                     ; preds = %14
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 259, i8 %1)
  %18 = zext i8 %1 to i32, !dbg !5496
  %19 = icmp eq i32 %18, 1, !dbg !5499
  br i1 %19, label %20, label %26, !dbg !5500

; <label>:20:                                     ; preds = %17
  %21 = load i8, i8* %4, align 1, !dbg !5501
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 261, i8 %21)
  %22 = zext i8 %21 to i32, !dbg !5501
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 262, i8 %7)
  %23 = zext i8 %7 to i32, !dbg !5502
  %24 = or i32 %22, %23, !dbg !5503
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 260, i32 %24)
  %25 = trunc i32 %24 to i8, !dbg !5501
  store i8 %25, i8* %4, align 1, !dbg !5504
  br label %33, !dbg !5505

; <label>:26:                                     ; preds = %17
  %27 = load i8, i8* %4, align 1, !dbg !5506
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 264, i8 %27)
  %28 = zext i8 %27 to i32, !dbg !5506
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 265, i8 %7)
  %29 = zext i8 %7 to i32, !dbg !5507
  %30 = xor i32 %29, -1, !dbg !5508
  %31 = and i32 %28, %30, !dbg !5509
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 263, i32 %31)
  %32 = trunc i32 %31 to i8, !dbg !5506
  store i8 %32, i8* %4, align 1, !dbg !5510
  br label %33

; <label>:33:                                     ; preds = %26, %20
  br label %34, !dbg !5511

; <label>:34:                                     ; preds = %33, %14
  call void @qpr.implicit.conversion.overflow.u32.u16(i32 266, i32 1)
  %35 = call signext i8 @bmi160_set_regs(i8 zeroext 71, i8* %4, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !5512
  call void @llvm.dbg.value(metadata i8 %35, i64 0, metadata !5467, metadata !177), !dbg !5513
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 267, i8 %35)
  %36 = sext i8 %35 to i32, !dbg !5514
  %37 = icmp eq i32 %36, 0, !dbg !5516
  br i1 %37, label %38, label %65, !dbg !5517

; <label>:38:                                     ; preds = %34
  call void @qpr.implicit.conversion.overflow.u32.u16(i32 268, i32 1)
  %39 = call signext i8 @bmi160_get_regs(i8 zeroext 71, i8* %4, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !5518
  call void @llvm.dbg.value(metadata i8 %39, i64 0, metadata !5467, metadata !177), !dbg !5520
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 269, i8 %39)
  %40 = sext i8 %39 to i32, !dbg !5521
  %41 = icmp eq i32 %40, 0, !dbg !5523
  br i1 %41, label %42, label %64, !dbg !5524

; <label>:42:                                     ; preds = %38
  %43 = load i8, i8* %4, align 1, !dbg !5525
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 271, i8 %43)
  %44 = zext i8 %43 to i32, !dbg !5525
  %45 = and i32 %44, 16, !dbg !5527
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 270, i32 %45)
  %46 = trunc i32 %45 to i8, !dbg !5525
  %47 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !5528
  %48 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %47, align 8, !dbg !5528
  %49 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %48, i32 0, i32 3, !dbg !5529
  store i8 %46, i8* %49, align 1, !dbg !5530
  %50 = load i8, i8* %4, align 1, !dbg !5531
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 273, i8 %50)
  %51 = zext i8 %50 to i32, !dbg !5531
  %52 = and i32 %51, 224, !dbg !5532
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 272, i32 %52)
  %53 = trunc i32 %52 to i8, !dbg !5531
  %54 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !5533
  %55 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %54, align 8, !dbg !5533
  %56 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %55, i32 0, i32 4, !dbg !5534
  store i8 %53, i8* %56, align 4, !dbg !5535
  %57 = load i8, i8* %4, align 1, !dbg !5536
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 275, i8 %57)
  %58 = zext i8 %57 to i32, !dbg !5536
  %59 = and i32 %58, 2, !dbg !5537
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 274, i32 %59)
  %60 = trunc i32 %59 to i8, !dbg !5536
  %61 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !5538
  %62 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %61, align 8, !dbg !5538
  %63 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %62, i32 0, i32 2, !dbg !5539
  store i8 %60, i8* %63, align 2, !dbg !5540
  br label %64, !dbg !5541

; <label>:64:                                     ; preds = %42, %38
  br label %65, !dbg !5542

; <label>:65:                                     ; preds = %64, %34
  %66 = phi i8 [ %39, %64 ], [ %35, %34 ]
  call void @llvm.dbg.value(metadata i8 %66, i64 0, metadata !5467, metadata !177), !dbg !5468
  br label %67, !dbg !5543

; <label>:67:                                     ; preds = %65, %10
  %68 = phi i8 [ %66, %65 ], [ %11, %10 ]
  call void @llvm.dbg.value(metadata i8 %68, i64 0, metadata !5467, metadata !177), !dbg !5468
  br label %69

; <label>:69:                                     ; preds = %67, %9
  %70 = phi i8 [ -1, %9 ], [ %68, %67 ]
  call void @llvm.dbg.value(metadata i8 %70, i64 0, metadata !5467, metadata !177), !dbg !5468
  ret i8 %70, !dbg !5544
}

; Function Attrs: noinline nounwind uwtable
define signext i8 @bmi160_set_fifo_down(i8 zeroext, %struct.bmi160_dev*) #1 !dbg !5545 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !5546, metadata !177), !dbg !5547
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !5548, metadata !177), !dbg !5549
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !5550, metadata !177), !dbg !5551
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !5552, metadata !177), !dbg !5553
  call void @llvm.dbg.value(metadata i8 %0, i64 0, metadata !5546, metadata !177), !dbg !5547
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %1, i64 0, metadata !5548, metadata !177), !dbg !5549
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !5554
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !5548, metadata !177), !dbg !5554
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 276, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !5550, metadata !177), !dbg !5551
  call void @llvm.dbg.declare(metadata i8* %3, metadata !5555, metadata !177), !dbg !5556
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 277, i32 0)
  store i8 0, i8* %3, align 1, !dbg !5556
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 278, i32 69)
  call void @llvm.dbg.value(metadata i8 69, i64 0, metadata !5552, metadata !177), !dbg !5553
  %4 = icmp eq %struct.bmi160_dev* @configStub, null, !dbg !5557
  br i1 %4, label %5, label %6, !dbg !5559

; <label>:5:                                      ; preds = %2
  call void @qpr.arithmetic.overflow.ssub.i32(i32 280, i32 0, i32 1)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 279, i32 -1)
  call void @llvm.dbg.value(metadata i8 -1, i64 0, metadata !5550, metadata !177), !dbg !5560
  br label %19, !dbg !5562

; <label>:6:                                      ; preds = %2
  call void @qpr.implicit.conversion.overflow.u32.u16(i32 281, i32 1)
  %7 = call signext i8 @bmi160_get_regs(i8 zeroext 69, i8* %3, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !5563
  call void @llvm.dbg.value(metadata i8 %7, i64 0, metadata !5550, metadata !177), !dbg !5565
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 282, i8 %7)
  %8 = sext i8 %7 to i32, !dbg !5566
  %9 = icmp eq i32 %8, 0, !dbg !5568
  br i1 %9, label %10, label %17, !dbg !5569

; <label>:10:                                     ; preds = %6
  %11 = load i8, i8* %3, align 1, !dbg !5570
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 284, i8 %11)
  %12 = zext i8 %11 to i32, !dbg !5570
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 285, i8 %0)
  %13 = zext i8 %0 to i32, !dbg !5572
  %14 = or i32 %12, %13, !dbg !5573
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 283, i32 %14)
  %15 = trunc i32 %14 to i8, !dbg !5570
  store i8 %15, i8* %3, align 1, !dbg !5574
  call void @qpr.implicit.conversion.overflow.u32.u16(i32 286, i32 1)
  %16 = call signext i8 @bmi160_set_regs(i8 zeroext 69, i8* %3, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !5575
  call void @llvm.dbg.value(metadata i8 %16, i64 0, metadata !5550, metadata !177), !dbg !5576
  br label %17, !dbg !5577

; <label>:17:                                     ; preds = %10, %6
  %18 = phi i8 [ %16, %10 ], [ %7, %6 ]
  call void @llvm.dbg.value(metadata i8 %18, i64 0, metadata !5550, metadata !177), !dbg !5551
  br label %19

; <label>:19:                                     ; preds = %17, %5
  %20 = phi i8 [ -1, %5 ], [ %18, %17 ]
  call void @llvm.dbg.value(metadata i8 %20, i64 0, metadata !5550, metadata !177), !dbg !5551
  ret i8 %20, !dbg !5578
}

; Function Attrs: noinline nounwind uwtable
define signext i8 @bmi160_set_fifo_wm(i8 zeroext, %struct.bmi160_dev*) #1 !dbg !5579 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !5580, metadata !177), !dbg !5581
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !5582, metadata !177), !dbg !5583
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !5584, metadata !177), !dbg !5585
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !5586, metadata !177), !dbg !5587
  call void @llvm.dbg.value(metadata i8 %0, i64 0, metadata !5580, metadata !177), !dbg !5581
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %1, i64 0, metadata !5582, metadata !177), !dbg !5583
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !5588
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !5582, metadata !177), !dbg !5588
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 287, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !5584, metadata !177), !dbg !5585
  call void @llvm.dbg.declare(metadata i8* %3, metadata !5589, metadata !177), !dbg !5590
  store i8 %0, i8* %3, align 1, !dbg !5590
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 288, i32 70)
  call void @llvm.dbg.value(metadata i8 70, i64 0, metadata !5586, metadata !177), !dbg !5587
  %4 = icmp eq %struct.bmi160_dev* @configStub, null, !dbg !5591
  br i1 %4, label %5, label %6, !dbg !5593

; <label>:5:                                      ; preds = %2
  call void @qpr.arithmetic.overflow.ssub.i32(i32 290, i32 0, i32 1)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 289, i32 -1)
  call void @llvm.dbg.value(metadata i8 -1, i64 0, metadata !5584, metadata !177), !dbg !5594
  br label %8, !dbg !5595

; <label>:6:                                      ; preds = %2
  call void @qpr.implicit.conversion.overflow.u32.u16(i32 291, i32 1)
  %7 = call signext i8 @bmi160_set_regs(i8 zeroext 70, i8* %3, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !5596
  call void @llvm.dbg.value(metadata i8 %7, i64 0, metadata !5584, metadata !177), !dbg !5597
  br label %8

; <label>:8:                                      ; preds = %6, %5
  %9 = phi i8 [ -1, %5 ], [ %7, %6 ]
  call void @llvm.dbg.value(metadata i8 %9, i64 0, metadata !5584, metadata !177), !dbg !5585
  ret i8 %9, !dbg !5598
}

; Function Attrs: noinline nounwind uwtable
define signext i8 @bmi160_extract_accel(%struct.bmi160_sensor_data*, i8*, %struct.bmi160_dev*) #1 !dbg !5599 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !5602, metadata !177), !dbg !5603
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !5604, metadata !177), !dbg !5605
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !5606, metadata !177), !dbg !5607
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !5608, metadata !177), !dbg !5609
  %4 = alloca i16, align 2
  %5 = alloca i16, align 2
  %6 = alloca i8, align 1
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !5610, metadata !177), !dbg !5611
  call void @llvm.dbg.value(metadata %struct.bmi160_sensor_data* %0, i64 0, metadata !5602, metadata !177), !dbg !5603
  call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !5604, metadata !177), !dbg !5605
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %2, i64 0, metadata !5606, metadata !177), !dbg !5607
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !5612
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !5606, metadata !177), !dbg !5612
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 292, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !5608, metadata !177), !dbg !5609
  call void @llvm.dbg.declare(metadata i16* %4, metadata !5613, metadata !177), !dbg !5614
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 293, i32 0)
  store i16 0, i16* %4, align 2, !dbg !5614
  call void @llvm.dbg.declare(metadata i16* %5, metadata !5615, metadata !177), !dbg !5616
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 294, i32 0)
  store i16 0, i16* %5, align 2, !dbg !5616
  call void @llvm.dbg.declare(metadata i8* %6, metadata !5617, metadata !177), !dbg !5618
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 295, i32 0)
  store i8 0, i8* %6, align 1, !dbg !5618
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 296, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !5610, metadata !177), !dbg !5611
  %7 = icmp eq %struct.bmi160_dev* @configStub, null, !dbg !5619
  br i1 %7, label %18, label %8, !dbg !5621

; <label>:8:                                      ; preds = %3
  %9 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !5622
  %10 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %9, align 8, !dbg !5622
  %11 = icmp eq %struct.bmi160_fifo_frame* %10, null, !dbg !5624
  br i1 %11, label %18, label %12, !dbg !5625

; <label>:12:                                     ; preds = %8
  %13 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !5626
  %14 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %13, align 8, !dbg !5626
  %15 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %14, i32 0, i32 0, !dbg !5628
  %16 = load i8*, i8** %15, align 8, !dbg !5628
  %17 = icmp eq i8* %16, null, !dbg !5629
  br i1 %17, label %18, label %19, !dbg !5630

; <label>:18:                                     ; preds = %12, %8, %3
  call void @qpr.arithmetic.overflow.ssub.i32(i32 298, i32 0, i32 1)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 297, i32 -1)
  call void @llvm.dbg.value(metadata i8 -1, i64 0, metadata !5608, metadata !177), !dbg !5632
  br label %46, !dbg !5634

; <label>:19:                                     ; preds = %12
  %20 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !5635
  %21 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %20, align 8, !dbg !5635
  %22 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %21, i32 0, i32 3, !dbg !5638
  %23 = load i8, i8* %22, align 1, !dbg !5638
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 299, i8 %23)
  %24 = zext i8 %23 to i32, !dbg !5639
  %25 = icmp eq i32 %24, 0, !dbg !5640
  br i1 %25, label %26, label %44, !dbg !5641

; <label>:26:                                     ; preds = %19
  call void @get_accel_len_to_parse(i16* %4, i16* %5, i8* %1, %struct.bmi160_dev* @configStub) #5, !dbg !5642
  br label %27, !dbg !5644

; <label>:27:                                     ; preds = %33, %26
  %28 = load i16, i16* %4, align 2, !dbg !5645
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 300, i16 %28)
  %29 = zext i16 %28 to i32, !dbg !5645
  %30 = load i16, i16* %5, align 2, !dbg !5649
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 301, i16 %30)
  %31 = zext i16 %30 to i32, !dbg !5649
  %32 = icmp slt i32 %29, %31, !dbg !5650
  br i1 %32, label %33, label %38, !dbg !5651

; <label>:33:                                     ; preds = %27
  call void @check_frame_validity(i16* %4, %struct.bmi160_dev* @configStub) #5, !dbg !5653
  %34 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !5655
  %35 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %34, align 8, !dbg !5655
  %36 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %35, i32 0, i32 4, !dbg !5656
  %37 = load i8, i8* %36, align 4, !dbg !5656
  call void @llvm.dbg.value(metadata i8 %37, i64 0, metadata !5610, metadata !177), !dbg !5657
  call void @unpack_accel_frame(%struct.bmi160_sensor_data* %0, i16* %4, i8* %6, i8 zeroext %37, %struct.bmi160_dev* @configStub) #5, !dbg !5658
  br label %27, !dbg !5659, !llvm.loop !5661

; <label>:38:                                     ; preds = %27
  %39 = load i8, i8* %6, align 1, !dbg !5664
  store i8 %39, i8* %1, align 1, !dbg !5665
  %40 = load i16, i16* %4, align 2, !dbg !5666
  %41 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !5667
  %42 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %41, align 8, !dbg !5667
  %43 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %42, i32 0, i32 5, !dbg !5668
  store i16 %40, i16* %43, align 2, !dbg !5669
  br label %45, !dbg !5670

; <label>:44:                                     ; preds = %19
  call void @extract_accel_header_mode(%struct.bmi160_sensor_data* %0, i8* %1, %struct.bmi160_dev* @configStub) #5, !dbg !5671
  br label %45

; <label>:45:                                     ; preds = %44, %38
  br label %46

; <label>:46:                                     ; preds = %45, %18
  %47 = phi i8 [ -1, %18 ], [ 0, %45 ]
  call void @llvm.dbg.value(metadata i8 %47, i64 0, metadata !5608, metadata !177), !dbg !5609
  ret i8 %47, !dbg !5673
}

; Function Attrs: noinline nounwind uwtable
define internal void @get_accel_len_to_parse(i16*, i16*, i8*, %struct.bmi160_dev*) #1 !dbg !5674 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !5678, metadata !177), !dbg !5679
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !5680, metadata !177), !dbg !5681
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !5682, metadata !177), !dbg !5683
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !5684, metadata !177), !dbg !5685
  call void @llvm.dbg.value(metadata i16* %0, i64 0, metadata !5678, metadata !177), !dbg !5679
  call void @llvm.dbg.value(metadata i16* %1, i64 0, metadata !5680, metadata !177), !dbg !5681
  call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !5682, metadata !177), !dbg !5683
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %3, i64 0, metadata !5684, metadata !177), !dbg !5685
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !5686
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !5684, metadata !177), !dbg !5686
  %5 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !5687
  %6 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %5, align 8, !dbg !5687
  %7 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %6, i32 0, i32 5, !dbg !5688
  %8 = load i16, i16* %7, align 2, !dbg !5688
  store i16 %8, i16* %0, align 2, !dbg !5689
  %9 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !5690
  %10 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %9, align 8, !dbg !5690
  %11 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %10, i32 0, i32 4, !dbg !5692
  %12 = load i8, i8* %11, align 4, !dbg !5692
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 2127, i8 %12)
  %13 = zext i8 %12 to i32, !dbg !5693
  %14 = icmp eq i32 %13, 64, !dbg !5694
  br i1 %14, label %15, label %20, !dbg !5695

; <label>:15:                                     ; preds = %4
  %16 = load i8, i8* %2, align 1, !dbg !5696
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 2130, i8 %16)
  %17 = zext i8 %16 to i32, !dbg !5698
  call void @qpr.arithmetic.overflow.warning.umul.i32(i32 2129, i32 %17, i32 6)
  %18 = mul i32 %17, 6, !dbg !5699
  call void @qpr.implicit.conversion.overflow.u32.u16(i32 2128, i32 %18)
  %19 = trunc i32 %18 to i16, !dbg !5698
  store i16 %19, i16* %1, align 2, !dbg !5700
  br label %64, !dbg !5701

; <label>:20:                                     ; preds = %4
  %21 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !5702
  %22 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %21, align 8, !dbg !5702
  %23 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %22, i32 0, i32 4, !dbg !5705
  %24 = load i8, i8* %23, align 4, !dbg !5705
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 2131, i8 %24)
  %25 = zext i8 %24 to i32, !dbg !5706
  %26 = icmp eq i32 %25, 192, !dbg !5707
  br i1 %26, label %27, label %32, !dbg !5708

; <label>:27:                                     ; preds = %20
  %28 = load i8, i8* %2, align 1, !dbg !5710
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 2134, i8 %28)
  %29 = zext i8 %28 to i32, !dbg !5712
  call void @qpr.arithmetic.overflow.warning.umul.i32(i32 2133, i32 %29, i32 12)
  %30 = mul i32 %29, 12, !dbg !5713
  call void @qpr.implicit.conversion.overflow.u32.u16(i32 2132, i32 %30)
  %31 = trunc i32 %30 to i16, !dbg !5712
  store i16 %31, i16* %1, align 2, !dbg !5714
  br label %63, !dbg !5715

; <label>:32:                                     ; preds = %20
  %33 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !5716
  %34 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %33, align 8, !dbg !5716
  %35 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %34, i32 0, i32 4, !dbg !5719
  %36 = load i8, i8* %35, align 4, !dbg !5719
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 2135, i8 %36)
  %37 = zext i8 %36 to i32, !dbg !5720
  %38 = icmp eq i32 %37, 96, !dbg !5721
  br i1 %38, label %39, label %44, !dbg !5722

; <label>:39:                                     ; preds = %32
  %40 = load i8, i8* %2, align 1, !dbg !5723
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 2138, i8 %40)
  %41 = zext i8 %40 to i32, !dbg !5725
  call void @qpr.arithmetic.overflow.warning.umul.i32(i32 2137, i32 %41, i32 14)
  %42 = mul i32 %41, 14, !dbg !5726
  call void @qpr.implicit.conversion.overflow.u32.u16(i32 2136, i32 %42)
  %43 = trunc i32 %42 to i16, !dbg !5725
  store i16 %43, i16* %1, align 2, !dbg !5727
  br label %62, !dbg !5728

; <label>:44:                                     ; preds = %32
  %45 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !5729
  %46 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %45, align 8, !dbg !5729
  %47 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %46, i32 0, i32 4, !dbg !5732
  %48 = load i8, i8* %47, align 4, !dbg !5732
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 2139, i8 %48)
  %49 = zext i8 %48 to i32, !dbg !5733
  %50 = icmp eq i32 %49, 224, !dbg !5734
  br i1 %50, label %51, label %56, !dbg !5735

; <label>:51:                                     ; preds = %44
  %52 = load i8, i8* %2, align 1, !dbg !5736
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 2142, i8 %52)
  %53 = zext i8 %52 to i32, !dbg !5738
  call void @qpr.arithmetic.overflow.warning.umul.i32(i32 2141, i32 %53, i32 20)
  %54 = mul i32 %53, 20, !dbg !5739
  call void @qpr.implicit.conversion.overflow.u32.u16(i32 2140, i32 %54)
  %55 = trunc i32 %54 to i16, !dbg !5738
  store i16 %55, i16* %1, align 2, !dbg !5740
  br label %61, !dbg !5741

; <label>:56:                                     ; preds = %44
  %57 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !5742
  %58 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %57, align 8, !dbg !5742
  %59 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %58, i32 0, i32 1, !dbg !5744
  %60 = load i16, i16* %59, align 8, !dbg !5744
  store i16 %60, i16* %0, align 2, !dbg !5745
  br label %61

; <label>:61:                                     ; preds = %56, %51
  br label %62

; <label>:62:                                     ; preds = %61, %39
  br label %63

; <label>:63:                                     ; preds = %62, %27
  br label %64

; <label>:64:                                     ; preds = %63, %15
  %65 = load i16, i16* %1, align 2, !dbg !5746
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 2143, i16 %65)
  %66 = zext i16 %65 to i32, !dbg !5746
  %67 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !5748
  %68 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %67, align 8, !dbg !5748
  %69 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %68, i32 0, i32 1, !dbg !5749
  %70 = load i16, i16* %69, align 8, !dbg !5749
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 2144, i16 %70)
  %71 = zext i16 %70 to i32, !dbg !5750
  %72 = icmp sgt i32 %66, %71, !dbg !5751
  br i1 %72, label %73, label %78, !dbg !5752

; <label>:73:                                     ; preds = %64
  %74 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !5753
  %75 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %74, align 8, !dbg !5753
  %76 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %75, i32 0, i32 1, !dbg !5755
  %77 = load i16, i16* %76, align 8, !dbg !5755
  store i16 %77, i16* %1, align 2, !dbg !5756
  br label %78, !dbg !5757

; <label>:78:                                     ; preds = %73, %64
  ret void, !dbg !5758
}

; Function Attrs: noinline nounwind uwtable
define internal void @check_frame_validity(i16*, %struct.bmi160_dev*) #1 !dbg !5759 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !5762, metadata !177), !dbg !5763
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !5764, metadata !177), !dbg !5765
  call void @llvm.dbg.value(metadata i16* %0, i64 0, metadata !5762, metadata !177), !dbg !5763
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %1, i64 0, metadata !5764, metadata !177), !dbg !5765
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !5766
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !5764, metadata !177), !dbg !5766
  %3 = load i16, i16* %0, align 2, !dbg !5767
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 2504, i16 %3)
  %4 = zext i16 %3 to i32, !dbg !5767
  call void @qpr.arithmetic.overflow.sadd.i32(i32 2503, i32 %4, i32 2)
  %5 = add nsw i32 %4, 2, !dbg !5769
  %6 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !5770
  %7 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %6, align 8, !dbg !5770
  %8 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %7, i32 0, i32 1, !dbg !5771
  %9 = load i16, i16* %8, align 8, !dbg !5771
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 2505, i16 %9)
  %10 = zext i16 %9 to i32, !dbg !5772
  %11 = icmp slt i32 %5, %10, !dbg !5773
  br i1 %11, label %12, label %42, !dbg !5774

; <label>:12:                                     ; preds = %2
  %13 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !5775
  %14 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %13, align 8, !dbg !5775
  %15 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %14, i32 0, i32 0, !dbg !5778
  %16 = load i8*, i8** %15, align 8, !dbg !5778
  %17 = load i16, i16* %0, align 2, !dbg !5779
  %18 = zext i16 %17 to i64, !dbg !5780
  %19 = getelementptr inbounds i8, i8* %16, i64 %18, !dbg !5780
  %20 = load i8, i8* %19, align 1, !dbg !5780
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 2506, i8 %20)
  %21 = zext i8 %20 to i32, !dbg !5780
  %22 = icmp eq i32 %21, 128, !dbg !5781
  br i1 %22, label %23, label %41, !dbg !5782

; <label>:23:                                     ; preds = %12
  %24 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !5783
  %25 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %24, align 8, !dbg !5783
  %26 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %25, i32 0, i32 0, !dbg !5785
  %27 = load i8*, i8** %26, align 8, !dbg !5785
  %28 = load i16, i16* %0, align 2, !dbg !5786
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 2509, i16 %28)
  %29 = zext i16 %28 to i32, !dbg !5786
  call void @qpr.arithmetic.overflow.sadd.i32(i32 2508, i32 %29, i32 1)
  %30 = add nsw i32 %29, 1, !dbg !5787
  %31 = sext i32 %30 to i64, !dbg !5788
  %32 = getelementptr inbounds i8, i8* %27, i64 %31, !dbg !5788
  %33 = load i8, i8* %32, align 1, !dbg !5788
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 2507, i8 %33)
  %34 = zext i8 %33 to i32, !dbg !5788
  %35 = icmp eq i32 %34, 0, !dbg !5789
  br i1 %35, label %36, label %41, !dbg !5790

; <label>:36:                                     ; preds = %23
  %37 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !5792
  %38 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %37, align 8, !dbg !5792
  %39 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %38, i32 0, i32 1, !dbg !5794
  %40 = load i16, i16* %39, align 8, !dbg !5794
  store i16 %40, i16* %0, align 2, !dbg !5795
  br label %41, !dbg !5796

; <label>:41:                                     ; preds = %36, %23, %12
  br label %42, !dbg !5797

; <label>:42:                                     ; preds = %41, %2
  ret void, !dbg !5798
}

; Function Attrs: noinline nounwind uwtable
define internal void @unpack_accel_frame(%struct.bmi160_sensor_data* %arg0, i16* %arg1, i8* %arg2, i8 zeroext %arg3, %struct.bmi160_dev* %arg4) #1 !dbg !5799 {
entry:
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !5802, metadata !177), !dbg !5803
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !5804, metadata !177), !dbg !5805
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !5806, metadata !177), !dbg !5807
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !5808, metadata !177), !dbg !5809
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !5810, metadata !177), !dbg !5811
  call void @llvm.dbg.value(metadata %struct.bmi160_sensor_data* %arg0, i64 0, metadata !5802, metadata !177), !dbg !5803
  call void @llvm.dbg.value(metadata i16* %arg1, i64 0, metadata !5804, metadata !177), !dbg !5805
  call void @llvm.dbg.value(metadata i8* %arg2, i64 0, metadata !5806, metadata !177), !dbg !5807
  call void @llvm.dbg.value(metadata i8 %arg3, i64 0, metadata !5808, metadata !177), !dbg !5809
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %arg4, i64 0, metadata !5810, metadata !177), !dbg !5811
  call void @initStubs() #5, !dbg !5812
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !5810, metadata !177), !dbg !5812
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 2145, i8 %arg3)
  %0 = zext i8 %arg3 to i32, !dbg !5813
  br label %NodeBlock64

NodeBlock64:                                      ; preds = %entry
  %Pivot65 = icmp slt i32 %0, 144
  br i1 %Pivot65, label %NodeBlock36, label %NodeBlock62

NodeBlock62:                                      ; preds = %NodeBlock64
  %Pivot63 = icmp slt i32 %0, 156
  br i1 %Pivot63, label %NodeBlock46, label %NodeBlock60

NodeBlock60:                                      ; preds = %NodeBlock62
  %Pivot61 = icmp slt i32 %0, 192
  br i1 %Pivot61, label %NodeBlock52, label %NodeBlock58

NodeBlock58:                                      ; preds = %NodeBlock60
  %Pivot59 = icmp slt i32 %0, 224
  br i1 %Pivot59, label %LeafBlock54, label %LeafBlock56

LeafBlock56:                                      ; preds = %NodeBlock58
  %SwitchLeaf57 = icmp eq i32 %0, 224
  br i1 %SwitchLeaf57, label %bb9, label %NewDefault

LeafBlock54:                                      ; preds = %NodeBlock58
  %SwitchLeaf55 = icmp eq i32 %0, 192
  br i1 %SwitchLeaf55, label %bb3, label %NewDefault

NodeBlock52:                                      ; preds = %NodeBlock60
  %Pivot53 = icmp slt i32 %0, 160
  br i1 %Pivot53, label %LeafBlock48, label %LeafBlock50

LeafBlock50:                                      ; preds = %NodeBlock52
  %SwitchLeaf51 = icmp eq i32 %0, 160
  br i1 %SwitchLeaf51, label %bb14, label %NewDefault

LeafBlock48:                                      ; preds = %NodeBlock52
  %SwitchLeaf49 = icmp eq i32 %0, 156
  br i1 %SwitchLeaf49, label %bb9, label %NewDefault

NodeBlock46:                                      ; preds = %NodeBlock62
  %Pivot47 = icmp slt i32 %0, 148
  br i1 %Pivot47, label %LeafBlock38, label %NodeBlock44

NodeBlock44:                                      ; preds = %NodeBlock46
  %Pivot45 = icmp slt i32 %0, 152
  br i1 %Pivot45, label %LeafBlock40, label %LeafBlock42

LeafBlock42:                                      ; preds = %NodeBlock44
  %SwitchLeaf43 = icmp eq i32 %0, 152
  br i1 %SwitchLeaf43, label %bb14, label %NewDefault

LeafBlock40:                                      ; preds = %NodeBlock44
  %SwitchLeaf41 = icmp eq i32 %0, 148
  br i1 %SwitchLeaf41, label %bb6, label %NewDefault

LeafBlock38:                                      ; preds = %NodeBlock46
  %SwitchLeaf39 = icmp eq i32 %0, 144
  br i1 %SwitchLeaf39, label %bb12, label %NewDefault

NodeBlock36:                                      ; preds = %NodeBlock64
  %Pivot37 = icmp slt i32 %0, 128
  br i1 %Pivot37, label %NodeBlock20, label %NodeBlock34

NodeBlock34:                                      ; preds = %NodeBlock36
  %Pivot35 = icmp slt i32 %0, 136
  br i1 %Pivot35, label %NodeBlock26, label %NodeBlock32

NodeBlock32:                                      ; preds = %NodeBlock34
  %Pivot33 = icmp slt i32 %0, 140
  br i1 %Pivot33, label %LeafBlock28, label %LeafBlock30

LeafBlock30:                                      ; preds = %NodeBlock32
  %SwitchLeaf31 = icmp eq i32 %0, 140
  br i1 %SwitchLeaf31, label %bb3, label %NewDefault

LeafBlock28:                                      ; preds = %NodeBlock32
  %SwitchLeaf29 = icmp eq i32 %0, 136
  br i1 %SwitchLeaf29, label %bb13, label %NewDefault

NodeBlock26:                                      ; preds = %NodeBlock34
  %Pivot27 = icmp slt i32 %0, 132
  br i1 %Pivot27, label %LeafBlock22, label %LeafBlock24

LeafBlock24:                                      ; preds = %NodeBlock26
  %SwitchLeaf25 = icmp eq i32 %0, 132
  br i1 %SwitchLeaf25, label %bb, label %NewDefault

LeafBlock22:                                      ; preds = %NodeBlock26
  %SwitchLeaf23 = icmp eq i32 %0, 128
  br i1 %SwitchLeaf23, label %bb13, label %NewDefault

NodeBlock20:                                      ; preds = %NodeBlock36
  %Pivot21 = icmp slt i32 %0, 64
  br i1 %Pivot21, label %LeafBlock, label %NodeBlock

NodeBlock:                                        ; preds = %NodeBlock20
  %Pivot = icmp slt i32 %0, 96
  br i1 %Pivot, label %LeafBlock16, label %LeafBlock18

LeafBlock18:                                      ; preds = %NodeBlock
  %SwitchLeaf19 = icmp eq i32 %0, 96
  br i1 %SwitchLeaf19, label %bb6, label %NewDefault

LeafBlock16:                                      ; preds = %NodeBlock
  %SwitchLeaf17 = icmp eq i32 %0, 64
  br i1 %SwitchLeaf17, label %bb, label %NewDefault

LeafBlock:                                        ; preds = %NodeBlock20
  %SwitchLeaf = icmp eq i32 %0, 32
  br i1 %SwitchLeaf, label %bb12, label %NewDefault

bb:                                               ; preds = %LeafBlock24, %LeafBlock16
  %1 = load i16, i16* %arg1, align 2, !dbg !5814
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 2149, i16 %1)
  %2 = zext i16 %1 to i32, !dbg !5814
  call void @qpr.arithmetic.overflow.warning.uadd.i32(i32 2148, i32 %2, i32 6)
  %3 = add i32 %2, 6, !dbg !5817
  %4 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !5818
  %5 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %4, align 8, !dbg !5818
  %6 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %5, i32 0, i32 1, !dbg !5819
  %7 = load i16, i16* %6, align 8, !dbg !5819
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 2150, i16 %7)
  %8 = zext i16 %7 to i32, !dbg !5820
  %9 = icmp ugt i32 %3, %8, !dbg !5821
  br i1 %9, label %bb1, label %bb2, !dbg !5822

bb1:                                              ; preds = %bb
  %10 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !5823
  %11 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %10, align 8, !dbg !5823
  %12 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %11, i32 0, i32 1, !dbg !5825
  %13 = load i16, i16* %12, align 8, !dbg !5825
  store i16 %13, i16* %arg1, align 2, !dbg !5826
  br label %return, !dbg !5827

bb2:                                              ; preds = %bb
  %14 = load i8, i8* %arg2, align 1, !dbg !5828
  %15 = zext i8 %14 to i64, !dbg !5829
  %16 = getelementptr inbounds %struct.bmi160_sensor_data, %struct.bmi160_sensor_data* %arg0, i64 %15, !dbg !5829
  %17 = load i16, i16* %arg1, align 2, !dbg !5830
  call void @unpack_accel_data(%struct.bmi160_sensor_data* %16, i16 zeroext %17, %struct.bmi160_dev* @configStub) #5, !dbg !5831
  %18 = load i16, i16* %arg1, align 2, !dbg !5832
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 2153, i16 %18)
  %19 = zext i16 %18 to i32, !dbg !5832
  call void @qpr.arithmetic.overflow.warning.uadd.i32(i32 2152, i32 %19, i32 6)
  %20 = add i32 %19, 6, !dbg !5833
  call void @qpr.implicit.conversion.overflow.u32.u16(i32 2151, i32 %20)
  %21 = trunc i32 %20 to i16, !dbg !5832
  store i16 %21, i16* %arg1, align 2, !dbg !5834
  %22 = load i8, i8* %arg2
  call void @qpr.uinc.i8(i32 2154, i8 %22)
  %23 = load i8, i8* %arg2, align 1, !dbg !5835
  %24 = add i8 %23, 1, !dbg !5835
  store i8 %24, i8* %arg2, align 1, !dbg !5835
  br label %return, !dbg !5836

bb3:                                              ; preds = %LeafBlock54, %LeafBlock30
  %25 = load i16, i16* %arg1, align 2, !dbg !5837
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 2158, i16 %25)
  %26 = zext i16 %25 to i32, !dbg !5837
  call void @qpr.arithmetic.overflow.warning.uadd.i32(i32 2157, i32 %26, i32 12)
  %27 = add i32 %26, 12, !dbg !5839
  %28 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !5840
  %29 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %28, align 8, !dbg !5840
  %30 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %29, i32 0, i32 1, !dbg !5841
  %31 = load i16, i16* %30, align 8, !dbg !5841
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 2159, i16 %31)
  %32 = zext i16 %31 to i32, !dbg !5842
  %33 = icmp ugt i32 %27, %32, !dbg !5843
  br i1 %33, label %bb4, label %bb5, !dbg !5844

bb4:                                              ; preds = %bb3
  %34 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !5845
  %35 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %34, align 8, !dbg !5845
  %36 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %35, i32 0, i32 1, !dbg !5847
  %37 = load i16, i16* %36, align 8, !dbg !5847
  store i16 %37, i16* %arg1, align 2, !dbg !5848
  br label %return, !dbg !5849

bb5:                                              ; preds = %bb3
  %38 = load i8, i8* %arg2, align 1, !dbg !5850
  %39 = zext i8 %38 to i64, !dbg !5851
  %40 = getelementptr inbounds %struct.bmi160_sensor_data, %struct.bmi160_sensor_data* %arg0, i64 %39, !dbg !5851
  %41 = load i16, i16* %arg1, align 2, !dbg !5852
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 2162, i16 %41)
  %42 = zext i16 %41 to i32, !dbg !5852
  call void @qpr.arithmetic.overflow.warning.uadd.i32(i32 2161, i32 %42, i32 6)
  %43 = add i32 %42, 6, !dbg !5853
  call void @qpr.implicit.conversion.overflow.u32.u16(i32 2160, i32 %43)
  %44 = trunc i32 %43 to i16, !dbg !5852
  call void @unpack_accel_data(%struct.bmi160_sensor_data* %40, i16 zeroext %44, %struct.bmi160_dev* @configStub) #5, !dbg !5854
  %45 = load i16, i16* %arg1, align 2, !dbg !5855
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 2165, i16 %45)
  %46 = zext i16 %45 to i32, !dbg !5855
  call void @qpr.arithmetic.overflow.warning.uadd.i32(i32 2164, i32 %46, i32 12)
  %47 = add i32 %46, 12, !dbg !5856
  call void @qpr.implicit.conversion.overflow.u32.u16(i32 2163, i32 %47)
  %48 = trunc i32 %47 to i16, !dbg !5855
  store i16 %48, i16* %arg1, align 2, !dbg !5857
  %49 = load i8, i8* %arg2
  call void @qpr.uinc.i8(i32 2166, i8 %49)
  %50 = load i8, i8* %arg2, align 1, !dbg !5858
  %51 = add i8 %50, 1, !dbg !5858
  store i8 %51, i8* %arg2, align 1, !dbg !5858
  br label %return, !dbg !5859

bb6:                                              ; preds = %LeafBlock40, %LeafBlock18
  %52 = load i16, i16* %arg1, align 2, !dbg !5860
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 2170, i16 %52)
  %53 = zext i16 %52 to i32, !dbg !5860
  call void @qpr.arithmetic.overflow.warning.uadd.i32(i32 2169, i32 %53, i32 14)
  %54 = add i32 %53, 14, !dbg !5862
  %55 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !5863
  %56 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %55, align 8, !dbg !5863
  %57 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %56, i32 0, i32 1, !dbg !5864
  %58 = load i16, i16* %57, align 8, !dbg !5864
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 2171, i16 %58)
  %59 = zext i16 %58 to i32, !dbg !5865
  %60 = icmp ugt i32 %54, %59, !dbg !5866
  br i1 %60, label %bb7, label %bb8, !dbg !5867

bb7:                                              ; preds = %bb6
  %61 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !5868
  %62 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %61, align 8, !dbg !5868
  %63 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %62, i32 0, i32 1, !dbg !5870
  %64 = load i16, i16* %63, align 8, !dbg !5870
  store i16 %64, i16* %arg1, align 2, !dbg !5871
  br label %return, !dbg !5872

bb8:                                              ; preds = %bb6
  %65 = load i8, i8* %arg2, align 1, !dbg !5873
  %66 = zext i8 %65 to i64, !dbg !5874
  %67 = getelementptr inbounds %struct.bmi160_sensor_data, %struct.bmi160_sensor_data* %arg0, i64 %66, !dbg !5874
  %68 = load i16, i16* %arg1, align 2, !dbg !5875
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 2174, i16 %68)
  %69 = zext i16 %68 to i32, !dbg !5875
  call void @qpr.arithmetic.overflow.warning.uadd.i32(i32 2173, i32 %69, i32 8)
  %70 = add i32 %69, 8, !dbg !5876
  call void @qpr.implicit.conversion.overflow.u32.u16(i32 2172, i32 %70)
  %71 = trunc i32 %70 to i16, !dbg !5875
  call void @unpack_accel_data(%struct.bmi160_sensor_data* %67, i16 zeroext %71, %struct.bmi160_dev* @configStub) #5, !dbg !5877
  %72 = load i16, i16* %arg1, align 2, !dbg !5878
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 2177, i16 %72)
  %73 = zext i16 %72 to i32, !dbg !5878
  call void @qpr.arithmetic.overflow.warning.uadd.i32(i32 2176, i32 %73, i32 14)
  %74 = add i32 %73, 14, !dbg !5879
  call void @qpr.implicit.conversion.overflow.u32.u16(i32 2175, i32 %74)
  %75 = trunc i32 %74 to i16, !dbg !5878
  store i16 %75, i16* %arg1, align 2, !dbg !5880
  %76 = load i8, i8* %arg2
  call void @qpr.uinc.i8(i32 2178, i8 %76)
  %77 = load i8, i8* %arg2, align 1, !dbg !5881
  %78 = add i8 %77, 1, !dbg !5881
  store i8 %78, i8* %arg2, align 1, !dbg !5881
  br label %return, !dbg !5882

bb9:                                              ; preds = %LeafBlock56, %LeafBlock48
  %79 = load i16, i16* %arg1, align 2, !dbg !5883
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 2182, i16 %79)
  %80 = zext i16 %79 to i32, !dbg !5883
  call void @qpr.arithmetic.overflow.warning.uadd.i32(i32 2181, i32 %80, i32 20)
  %81 = add i32 %80, 20, !dbg !5885
  %82 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !5886
  %83 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %82, align 8, !dbg !5886
  %84 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %83, i32 0, i32 1, !dbg !5887
  %85 = load i16, i16* %84, align 8, !dbg !5887
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 2183, i16 %85)
  %86 = zext i16 %85 to i32, !dbg !5888
  %87 = icmp ugt i32 %81, %86, !dbg !5889
  br i1 %87, label %bb10, label %bb11, !dbg !5890

bb10:                                             ; preds = %bb9
  %88 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !5891
  %89 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %88, align 8, !dbg !5891
  %90 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %89, i32 0, i32 1, !dbg !5893
  %91 = load i16, i16* %90, align 8, !dbg !5893
  store i16 %91, i16* %arg1, align 2, !dbg !5894
  br label %return, !dbg !5895

bb11:                                             ; preds = %bb9
  %92 = load i8, i8* %arg2, align 1, !dbg !5896
  %93 = zext i8 %92 to i64, !dbg !5897
  %94 = getelementptr inbounds %struct.bmi160_sensor_data, %struct.bmi160_sensor_data* %arg0, i64 %93, !dbg !5897
  %95 = load i16, i16* %arg1, align 2, !dbg !5898
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 2186, i16 %95)
  %96 = zext i16 %95 to i32, !dbg !5898
  call void @qpr.arithmetic.overflow.warning.uadd.i32(i32 2185, i32 %96, i32 14)
  %97 = add i32 %96, 14, !dbg !5899
  call void @qpr.implicit.conversion.overflow.u32.u16(i32 2184, i32 %97)
  %98 = trunc i32 %97 to i16, !dbg !5898
  call void @unpack_accel_data(%struct.bmi160_sensor_data* %94, i16 zeroext %98, %struct.bmi160_dev* @configStub) #5, !dbg !5900
  %99 = load i16, i16* %arg1, align 2, !dbg !5901
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 2189, i16 %99)
  %100 = zext i16 %99 to i32, !dbg !5901
  call void @qpr.arithmetic.overflow.warning.uadd.i32(i32 2188, i32 %100, i32 20)
  %101 = add i32 %100, 20, !dbg !5902
  call void @qpr.implicit.conversion.overflow.u32.u16(i32 2187, i32 %101)
  %102 = trunc i32 %101 to i16, !dbg !5901
  store i16 %102, i16* %arg1, align 2, !dbg !5903
  %103 = load i8, i8* %arg2
  call void @qpr.uinc.i8(i32 2190, i8 %103)
  %104 = load i8, i8* %arg2, align 1, !dbg !5904
  %105 = add i8 %104, 1, !dbg !5904
  store i8 %105, i8* %arg2, align 1, !dbg !5904
  br label %return, !dbg !5905

bb12:                                             ; preds = %LeafBlock38, %LeafBlock
  %106 = load i16, i16* %arg1, align 2, !dbg !5906
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 2195, i16 %106)
  %107 = zext i16 %106 to i32, !dbg !5907
  call void @qpr.arithmetic.overflow.warning.uadd.i32(i32 2194, i32 %107, i32 8)
  %108 = add i32 %107, 8, !dbg !5908
  call void @qpr.implicit.conversion.overflow.u32.u16(i32 2193, i32 %108)
  %109 = trunc i32 %108 to i16, !dbg !5907
  store i16 %109, i16* %arg1, align 2, !dbg !5909
  br label %return, !dbg !5910

bb13:                                             ; preds = %LeafBlock28, %LeafBlock22
  %110 = load i16, i16* %arg1, align 2, !dbg !5911
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 2200, i16 %110)
  %111 = zext i16 %110 to i32, !dbg !5912
  call void @qpr.arithmetic.overflow.warning.uadd.i32(i32 2199, i32 %111, i32 6)
  %112 = add i32 %111, 6, !dbg !5913
  call void @qpr.implicit.conversion.overflow.u32.u16(i32 2198, i32 %112)
  %113 = trunc i32 %112 to i16, !dbg !5912
  store i16 %113, i16* %arg1, align 2, !dbg !5914
  br label %return, !dbg !5915

bb14:                                             ; preds = %LeafBlock50, %LeafBlock42
  %114 = load i16, i16* %arg1, align 2, !dbg !5916
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 2205, i16 %114)
  %115 = zext i16 %114 to i32, !dbg !5917
  call void @qpr.arithmetic.overflow.warning.uadd.i32(i32 2204, i32 %115, i32 14)
  %116 = add i32 %115, 14, !dbg !5918
  call void @qpr.implicit.conversion.overflow.u32.u16(i32 2203, i32 %116)
  %117 = trunc i32 %116 to i16, !dbg !5917
  store i16 %117, i16* %arg1, align 2, !dbg !5919
  br label %return, !dbg !5920

NewDefault:                                       ; preds = %LeafBlock56, %LeafBlock54, %LeafBlock50, %LeafBlock48, %LeafBlock42, %LeafBlock40, %LeafBlock38, %LeafBlock30, %LeafBlock28, %LeafBlock24, %LeafBlock22, %LeafBlock18, %LeafBlock16, %LeafBlock
  br label %bb15

bb15:                                             ; preds = %NewDefault
  br label %return, !dbg !5921

return:                                           ; preds = %bb15, %bb14, %bb13, %bb12, %bb11, %bb10, %bb8, %bb7, %bb5, %bb4, %bb2, %bb1
  ret void, !dbg !5922
}

; Function Attrs: noinline nounwind uwtable
define internal void @extract_accel_header_mode(%struct.bmi160_sensor_data*, i8*, %struct.bmi160_dev*) #1 !dbg !5923 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !5926, metadata !177), !dbg !5927
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !5928, metadata !177), !dbg !5929
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !5930, metadata !177), !dbg !5931
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !5932, metadata !177), !dbg !5933
  %4 = alloca i16, align 2
  %5 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.bmi160_sensor_data* %0, i64 0, metadata !5926, metadata !177), !dbg !5927
  call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !5928, metadata !177), !dbg !5929
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %2, i64 0, metadata !5930, metadata !177), !dbg !5931
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !5934
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !5930, metadata !177), !dbg !5934
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 2236, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !5932, metadata !177), !dbg !5933
  call void @llvm.dbg.declare(metadata i16* %4, metadata !5935, metadata !177), !dbg !5936
  call void @llvm.dbg.declare(metadata i8* %5, metadata !5937, metadata !177), !dbg !5938
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 2237, i32 0)
  store i8 0, i8* %5, align 1, !dbg !5938
  %6 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !5939
  %7 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %6, align 8, !dbg !5939
  %8 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %7, i32 0, i32 5, !dbg !5941
  %9 = load i16, i16* %8, align 2, !dbg !5941
  store i16 %9, i16* %4, align 2, !dbg !5942
  br label %10, !dbg !5943

; <label>:10:                                     ; preds = %55, %3
  %11 = load i16, i16* %4, align 2, !dbg !5944
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 2238, i16 %11)
  %12 = zext i16 %11 to i32, !dbg !5944
  %13 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !5947
  %14 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %13, align 8, !dbg !5947
  %15 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %14, i32 0, i32 1, !dbg !5948
  %16 = load i16, i16* %15, align 8, !dbg !5948
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 2239, i16 %16)
  %17 = zext i16 %16 to i32, !dbg !5949
  %18 = icmp slt i32 %12, %17, !dbg !5950
  br i1 %18, label %19, label %56, !dbg !5951

; <label>:19:                                     ; preds = %10
  %20 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !5953
  %21 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %20, align 8, !dbg !5953
  %22 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %21, i32 0, i32 0, !dbg !5955
  %23 = load i8*, i8** %22, align 8, !dbg !5955
  %24 = load i16, i16* %4, align 2, !dbg !5956
  %25 = zext i16 %24 to i64, !dbg !5957
  %26 = getelementptr inbounds i8, i8* %23, i64 %25, !dbg !5957
  %27 = load i8, i8* %26, align 1, !dbg !5957
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 2241, i8 %27)
  %28 = zext i8 %27 to i32, !dbg !5957
  %29 = and i32 %28, 252, !dbg !5958
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 2240, i32 %29)
  %30 = trunc i32 %29 to i8, !dbg !5959
  call void @llvm.dbg.value(metadata i8 %30, i64 0, metadata !5932, metadata !177), !dbg !5960
  %31 = load i16, i16* %4
  call void @qpr.uinc.i16(i32 2242, i16 %31)
  %32 = load i16, i16* %4, align 2, !dbg !5961
  %33 = add i16 %32, 1, !dbg !5961
  store i16 %33, i16* %4, align 2, !dbg !5961
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 2243, i8 %30)
  %34 = zext i8 %30 to i32, !dbg !5962
  switch i32 %34, label %47 [
    i32 132, label %35
    i32 148, label %35
    i32 140, label %35
    i32 156, label %35
    i32 144, label %36
    i32 136, label %37
    i32 152, label %38
    i32 68, label %39
    i32 64, label %40
    i32 72, label %41
    i32 128, label %42
  ], !dbg !5963

; <label>:35:                                     ; preds = %19, %19, %19, %19
  call void @unpack_accel_frame(%struct.bmi160_sensor_data* %0, i16* %4, i8* %5, i8 zeroext %30, %struct.bmi160_dev* @configStub) #5, !dbg !5964
  br label %48, !dbg !5966

; <label>:36:                                     ; preds = %19
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 2249, i32 8)
  call void @move_next_frame(i16* %4, i8 zeroext 8, %struct.bmi160_dev* @configStub) #5, !dbg !5967
  br label %48, !dbg !5968

; <label>:37:                                     ; preds = %19
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 2251, i32 6)
  call void @move_next_frame(i16* %4, i8 zeroext 6, %struct.bmi160_dev* @configStub) #5, !dbg !5969
  br label %48, !dbg !5970

; <label>:38:                                     ; preds = %19
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 2253, i32 14)
  call void @move_next_frame(i16* %4, i8 zeroext 14, %struct.bmi160_dev* @configStub) #5, !dbg !5971
  br label %48, !dbg !5972

; <label>:39:                                     ; preds = %19
  call void @unpack_sensortime_frame(i16* %4, %struct.bmi160_dev* @configStub) #5, !dbg !5973
  br label %48, !dbg !5974

; <label>:40:                                     ; preds = %19
  call void @unpack_skipped_frame(i16* %4, %struct.bmi160_dev* @configStub) #5, !dbg !5975
  br label %48, !dbg !5976

; <label>:41:                                     ; preds = %19
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 2257, i32 1)
  call void @move_next_frame(i16* %4, i8 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !5977
  br label %48, !dbg !5978

; <label>:42:                                     ; preds = %19
  %43 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !5979
  %44 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %43, align 8, !dbg !5979
  %45 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %44, i32 0, i32 1, !dbg !5980
  %46 = load i16, i16* %45, align 8, !dbg !5980
  store i16 %46, i16* %4, align 2, !dbg !5981
  br label %48, !dbg !5982

; <label>:47:                                     ; preds = %19
  br label %48, !dbg !5983

; <label>:48:                                     ; preds = %47, %42, %41, %40, %39, %38, %37, %36, %35
  %49 = load i8, i8* %1, align 1, !dbg !5984
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 2259, i8 %49)
  %50 = zext i8 %49 to i32, !dbg !5984
  %51 = load i8, i8* %5, align 1, !dbg !5986
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 2260, i8 %51)
  %52 = zext i8 %51 to i32, !dbg !5986
  %53 = icmp eq i32 %50, %52, !dbg !5987
  br i1 %53, label %54, label %55, !dbg !5988

; <label>:54:                                     ; preds = %48
  br label %56, !dbg !5989

; <label>:55:                                     ; preds = %48
  br label %10, !dbg !5991, !llvm.loop !5993

; <label>:56:                                     ; preds = %54, %10
  %57 = load i8, i8* %5, align 1, !dbg !5996
  store i8 %57, i8* %1, align 1, !dbg !5997
  %58 = load i16, i16* %4, align 2, !dbg !5998
  %59 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !5999
  %60 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %59, align 8, !dbg !5999
  %61 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %60, i32 0, i32 5, !dbg !6000
  store i16 %58, i16* %61, align 2, !dbg !6001
  ret void, !dbg !6002
}

; Function Attrs: inaccessiblememonly nounwind
define weak_odr void @qpr.uinc.i16(i32, i16) #0 {
  %3 = icmp ne i16 %1, -1
  call void @llbmc.assert(i1 %3, i32 %0)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @move_next_frame(i16*, i8 zeroext, %struct.bmi160_dev*) #1 !dbg !6003 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !6006, metadata !177), !dbg !6007
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !6008, metadata !177), !dbg !6009
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !6010, metadata !177), !dbg !6011
  call void @llvm.dbg.value(metadata i16* %0, i64 0, metadata !6006, metadata !177), !dbg !6007
  call void @llvm.dbg.value(metadata i8 %1, i64 0, metadata !6008, metadata !177), !dbg !6009
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %2, i64 0, metadata !6010, metadata !177), !dbg !6011
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !6012
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !6010, metadata !177), !dbg !6012
  %4 = load i16, i16* %0, align 2, !dbg !6013
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 2511, i16 %4)
  %5 = zext i16 %4 to i32, !dbg !6013
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 2512, i8 %1)
  %6 = zext i8 %1 to i32, !dbg !6015
  call void @qpr.arithmetic.overflow.sadd.i32(i32 2510, i32 %5, i32 %6)
  %7 = add nsw i32 %5, %6, !dbg !6016
  %8 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6017
  %9 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %8, align 8, !dbg !6017
  %10 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %9, i32 0, i32 1, !dbg !6018
  %11 = load i16, i16* %10, align 8, !dbg !6018
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 2513, i16 %11)
  %12 = zext i16 %11 to i32, !dbg !6019
  %13 = icmp sgt i32 %7, %12, !dbg !6020
  br i1 %13, label %14, label %19, !dbg !6021

; <label>:14:                                     ; preds = %3
  %15 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6022
  %16 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %15, align 8, !dbg !6022
  %17 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %16, i32 0, i32 1, !dbg !6024
  %18 = load i16, i16* %17, align 8, !dbg !6024
  store i16 %18, i16* %0, align 2, !dbg !6025
  br label %25, !dbg !6026

; <label>:19:                                     ; preds = %3
  %20 = load i16, i16* %0, align 2, !dbg !6027
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 2516, i16 %20)
  %21 = zext i16 %20 to i32, !dbg !6027
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 2517, i8 %1)
  %22 = zext i8 %1 to i32, !dbg !6029
  call void @qpr.arithmetic.overflow.sadd.i32(i32 2515, i32 %21, i32 %22)
  %23 = add nsw i32 %21, %22, !dbg !6030
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 2514, i32 %23)
  %24 = trunc i32 %23 to i16, !dbg !6027
  store i16 %24, i16* %0, align 2, !dbg !6031
  br label %25

; <label>:25:                                     ; preds = %19, %14
  ret void, !dbg !6032
}

; Function Attrs: noinline nounwind uwtable
define internal void @unpack_sensortime_frame(i16*, %struct.bmi160_dev*) #1 !dbg !6033 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !6034, metadata !177), !dbg !6035
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !6036, metadata !177), !dbg !6037
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !6038, metadata !177), !dbg !6039
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !6040, metadata !177), !dbg !6041
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !6042, metadata !177), !dbg !6043
  call void @llvm.dbg.value(metadata i16* %0, i64 0, metadata !6034, metadata !177), !dbg !6035
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %1, i64 0, metadata !6036, metadata !177), !dbg !6037
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !6044
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !6036, metadata !177), !dbg !6044
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 2518, i32 0)
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !6038, metadata !177), !dbg !6039
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 2519, i32 0)
  call void @llvm.dbg.value(metadata i16 0, i64 0, metadata !6040, metadata !177), !dbg !6041
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 2520, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !6042, metadata !177), !dbg !6043
  %3 = load i16, i16* %0, align 2, !dbg !6045
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 2522, i16 %3)
  %4 = zext i16 %3 to i32, !dbg !6045
  call void @qpr.arithmetic.overflow.warning.uadd.i32(i32 2521, i32 %4, i32 3)
  %5 = add i32 %4, 3, !dbg !6047
  %6 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6048
  %7 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %6, align 8, !dbg !6048
  %8 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %7, i32 0, i32 1, !dbg !6049
  %9 = load i16, i16* %8, align 8, !dbg !6049
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 2523, i16 %9)
  %10 = zext i16 %9 to i32, !dbg !6050
  %11 = icmp ugt i32 %5, %10, !dbg !6051
  br i1 %11, label %12, label %17, !dbg !6052

; <label>:12:                                     ; preds = %2
  %13 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6053
  %14 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %13, align 8, !dbg !6053
  %15 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %14, i32 0, i32 1, !dbg !6055
  %16 = load i16, i16* %15, align 8, !dbg !6055
  store i16 %16, i16* %0, align 2, !dbg !6056
  br label %62, !dbg !6057

; <label>:17:                                     ; preds = %2
  %18 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6058
  %19 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %18, align 8, !dbg !6058
  %20 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %19, i32 0, i32 0, !dbg !6060
  %21 = load i8*, i8** %20, align 8, !dbg !6060
  %22 = load i16, i16* %0, align 2, !dbg !6061
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 2530, i16 %22)
  %23 = zext i16 %22 to i32, !dbg !6062
  call void @qpr.arithmetic.overflow.warning.uadd.i32(i32 2529, i32 %23, i32 2)
  %24 = add i32 %23, 2, !dbg !6063
  %25 = zext i32 %24 to i64, !dbg !6064
  %26 = getelementptr inbounds i8, i8* %21, i64 %25, !dbg !6064
  %27 = load i8, i8* %26, align 1, !dbg !6064
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 2528, i8 %27)
  %28 = zext i8 %27 to i32, !dbg !6064
  call void @qpr.shift.by.amount.i32(i32 2525, i32 %28, i32 16)
  call void @qpr.shift.by.negative.i32(i32 2526, i32 %28, i32 16)
  call void @qpr.shift.of.negative.i32(i32 2527, i32 %28, i32 16)
  %29 = shl i32 %28, 16, !dbg !6065
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 2524, i32 %29)
  call void @llvm.dbg.value(metadata i32 %29, i64 0, metadata !6038, metadata !177), !dbg !6066
  %30 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6067
  %31 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %30, align 8, !dbg !6067
  %32 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %31, i32 0, i32 0, !dbg !6068
  %33 = load i8*, i8** %32, align 8, !dbg !6068
  %34 = load i16, i16* %0, align 2, !dbg !6069
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 2537, i16 %34)
  %35 = zext i16 %34 to i32, !dbg !6070
  call void @qpr.arithmetic.overflow.warning.uadd.i32(i32 2536, i32 %35, i32 1)
  %36 = add i32 %35, 1, !dbg !6071
  %37 = zext i32 %36 to i64, !dbg !6072
  %38 = getelementptr inbounds i8, i8* %33, i64 %37, !dbg !6072
  %39 = load i8, i8* %38, align 1, !dbg !6072
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 2535, i8 %39)
  %40 = zext i8 %39 to i32, !dbg !6072
  call void @qpr.shift.by.amount.i32(i32 2532, i32 %40, i32 8)
  call void @qpr.shift.by.negative.i32(i32 2533, i32 %40, i32 8)
  call void @qpr.shift.of.negative.i32(i32 2534, i32 %40, i32 8)
  %41 = shl i32 %40, 8, !dbg !6073
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 2531, i32 %41)
  %42 = trunc i32 %41 to i16, !dbg !6072
  call void @llvm.dbg.value(metadata i16 %42, i64 0, metadata !6040, metadata !177), !dbg !6074
  %43 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6075
  %44 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %43, align 8, !dbg !6075
  %45 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %44, i32 0, i32 0, !dbg !6076
  %46 = load i8*, i8** %45, align 8, !dbg !6076
  %47 = load i16, i16* %0, align 2, !dbg !6077
  %48 = zext i16 %47 to i64, !dbg !6078
  %49 = getelementptr inbounds i8, i8* %46, i64 %48, !dbg !6078
  %50 = load i8, i8* %49, align 1, !dbg !6078
  call void @llvm.dbg.value(metadata i8 %50, i64 0, metadata !6042, metadata !177), !dbg !6079
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 2538, i16 %42)
  %51 = zext i16 %42 to i32, !dbg !6080
  %52 = or i32 %29, %51, !dbg !6081
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 2539, i8 %50)
  %53 = zext i8 %50 to i32, !dbg !6082
  %54 = or i32 %52, %53, !dbg !6083
  %55 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6084
  %56 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %55, align 8, !dbg !6084
  %57 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %56, i32 0, i32 8, !dbg !6085
  store i32 %54, i32* %57, align 4, !dbg !6086
  %58 = load i16, i16* %0, align 2, !dbg !6087
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 2542, i16 %58)
  %59 = zext i16 %58 to i32, !dbg !6088
  call void @qpr.arithmetic.overflow.warning.uadd.i32(i32 2541, i32 %59, i32 3)
  %60 = add i32 %59, 3, !dbg !6089
  call void @qpr.implicit.conversion.overflow.u32.u16(i32 2540, i32 %60)
  %61 = trunc i32 %60 to i16, !dbg !6088
  store i16 %61, i16* %0, align 2, !dbg !6090
  br label %62

; <label>:62:                                     ; preds = %17, %12
  ret void, !dbg !6091
}

; Function Attrs: noinline nounwind uwtable
define internal void @unpack_skipped_frame(i16*, %struct.bmi160_dev*) #1 !dbg !6092 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !6093, metadata !177), !dbg !6094
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !6095, metadata !177), !dbg !6096
  call void @llvm.dbg.value(metadata i16* %0, i64 0, metadata !6093, metadata !177), !dbg !6094
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %1, i64 0, metadata !6095, metadata !177), !dbg !6096
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !6097
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !6095, metadata !177), !dbg !6097
  %3 = load i16, i16* %0, align 2, !dbg !6098
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 2543, i16 %3)
  %4 = zext i16 %3 to i32, !dbg !6098
  %5 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6100
  %6 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %5, align 8, !dbg !6100
  %7 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %6, i32 0, i32 1, !dbg !6101
  %8 = load i16, i16* %7, align 8, !dbg !6101
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 2544, i16 %8)
  %9 = zext i16 %8 to i32, !dbg !6102
  %10 = icmp sge i32 %4, %9, !dbg !6103
  br i1 %10, label %11, label %16, !dbg !6104

; <label>:11:                                     ; preds = %2
  %12 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6105
  %13 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %12, align 8, !dbg !6105
  %14 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %13, i32 0, i32 1, !dbg !6107
  %15 = load i16, i16* %14, align 8, !dbg !6107
  store i16 %15, i16* %0, align 2, !dbg !6108
  br label %32, !dbg !6109

; <label>:16:                                     ; preds = %2
  %17 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6110
  %18 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %17, align 8, !dbg !6110
  %19 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %18, i32 0, i32 0, !dbg !6112
  %20 = load i8*, i8** %19, align 8, !dbg !6112
  %21 = load i16, i16* %0, align 2, !dbg !6113
  %22 = zext i16 %21 to i64, !dbg !6114
  %23 = getelementptr inbounds i8, i8* %20, i64 %22, !dbg !6114
  %24 = load i8, i8* %23, align 1, !dbg !6114
  %25 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6115
  %26 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %25, align 8, !dbg !6115
  %27 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %26, i32 0, i32 9, !dbg !6116
  store i8 %24, i8* %27, align 8, !dbg !6117
  %28 = load i16, i16* %0, align 2, !dbg !6118
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 2547, i16 %28)
  %29 = zext i16 %28 to i32, !dbg !6119
  call void @qpr.arithmetic.overflow.sadd.i32(i32 2546, i32 %29, i32 1)
  %30 = add nsw i32 %29, 1, !dbg !6120
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 2545, i32 %30)
  %31 = trunc i32 %30 to i16, !dbg !6119
  store i16 %31, i16* %0, align 2, !dbg !6121
  br label %32

; <label>:32:                                     ; preds = %16, %11
  ret void, !dbg !6122
}

; Function Attrs: noinline nounwind uwtable
define internal void @unpack_accel_data(%struct.bmi160_sensor_data*, i16 zeroext, %struct.bmi160_dev*) #1 !dbg !6123 {
entry:
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !6126, metadata !177), !dbg !6127
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !6128, metadata !177), !dbg !6129
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !6130, metadata !177), !dbg !6131
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !6132, metadata !177), !dbg !6133
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !6134, metadata !177), !dbg !6135
  call void @llvm.dbg.value(metadata %struct.bmi160_sensor_data* %0, i64 0, metadata !6126, metadata !177), !dbg !6127
  call void @llvm.dbg.value(metadata i16 %1, i64 0, metadata !6128, metadata !177), !dbg !6129
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %2, i64 0, metadata !6130, metadata !177), !dbg !6131
  call void @initStubs() #5, !dbg !6136
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !6130, metadata !177), !dbg !6136
  %3 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6137
  %4 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %3, align 8, !dbg !6137
  %5 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %4, i32 0, i32 0, !dbg !6138
  %6 = load i8*, i8** %5, align 8, !dbg !6138
  call void @qpr.uinc.i16(i32 2207, i16 %1)
  %7 = add i16 %1, 1, !dbg !6139
  call void @llvm.dbg.value(metadata i16 %7, i64 0, metadata !6128, metadata !177), !dbg !6139
  %8 = zext i16 %1 to i64, !dbg !6140
  %9 = getelementptr inbounds i8, i8* %6, i64 %8, !dbg !6140
  %10 = load i8, i8* %9, align 1, !dbg !6140
  call void @qpr.implicit.conversion.overflow.u8.u16(i32 2206, i8 %10)
  %11 = zext i8 %10 to i16, !dbg !6140
  call void @llvm.dbg.value(metadata i16 %11, i64 0, metadata !6132, metadata !177), !dbg !6141
  %12 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6142
  %13 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %12, align 8, !dbg !6142
  %14 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %13, i32 0, i32 0, !dbg !6143
  %15 = load i8*, i8** %14, align 8, !dbg !6143
  call void @qpr.uinc.i16(i32 2209, i16 %7)
  %16 = add i16 %7, 1, !dbg !6144
  call void @llvm.dbg.value(metadata i16 %16, i64 0, metadata !6128, metadata !177), !dbg !6144
  %17 = zext i16 %7 to i64, !dbg !6145
  %18 = getelementptr inbounds i8, i8* %15, i64 %17, !dbg !6145
  %19 = load i8, i8* %18, align 1, !dbg !6145
  call void @qpr.implicit.conversion.overflow.u8.u16(i32 2208, i8 %19)
  %20 = zext i8 %19 to i16, !dbg !6145
  call void @llvm.dbg.value(metadata i16 %20, i64 0, metadata !6134, metadata !177), !dbg !6146
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 2214, i16 %20)
  %21 = zext i16 %20 to i32, !dbg !6147
  call void @qpr.shift.by.amount.i32(i32 2211, i32 %21, i32 8)
  call void @qpr.shift.by.negative.i32(i32 2212, i32 %21, i32 8)
  call void @qpr.shift.of.negative.i32(i32 2213, i32 %21, i32 8)
  %22 = shl i32 %21, 8, !dbg !6148
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 2215, i16 %11)
  %23 = zext i16 %11 to i32, !dbg !6149
  %24 = or i32 %22, %23, !dbg !6150
  call void @qpr.explicit.conversion.overflow.s32.s16(i32 2210, i32 %24)
  %25 = trunc i32 %24 to i16, !dbg !6151
  %26 = getelementptr inbounds %struct.bmi160_sensor_data, %struct.bmi160_sensor_data* %0, i32 0, i32 0, !dbg !6152
  store i16 %25, i16* %26, align 4, !dbg !6153
  %27 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6154
  %28 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %27, align 8, !dbg !6154
  %29 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %28, i32 0, i32 0, !dbg !6155
  %30 = load i8*, i8** %29, align 8, !dbg !6155
  call void @qpr.uinc.i16(i32 2217, i16 %16)
  %31 = add i16 %16, 1, !dbg !6156
  call void @llvm.dbg.value(metadata i16 %31, i64 0, metadata !6128, metadata !177), !dbg !6156
  %32 = zext i16 %16 to i64, !dbg !6157
  %33 = getelementptr inbounds i8, i8* %30, i64 %32, !dbg !6157
  %34 = load i8, i8* %33, align 1, !dbg !6157
  call void @qpr.implicit.conversion.overflow.u8.u16(i32 2216, i8 %34)
  %35 = zext i8 %34 to i16, !dbg !6157
  call void @llvm.dbg.value(metadata i16 %35, i64 0, metadata !6132, metadata !177), !dbg !6158
  %36 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6159
  %37 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %36, align 8, !dbg !6159
  %38 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %37, i32 0, i32 0, !dbg !6160
  %39 = load i8*, i8** %38, align 8, !dbg !6160
  call void @qpr.uinc.i16(i32 2219, i16 %31)
  %40 = add i16 %31, 1, !dbg !6161
  call void @llvm.dbg.value(metadata i16 %40, i64 0, metadata !6128, metadata !177), !dbg !6161
  %41 = zext i16 %31 to i64, !dbg !6162
  %42 = getelementptr inbounds i8, i8* %39, i64 %41, !dbg !6162
  %43 = load i8, i8* %42, align 1, !dbg !6162
  call void @qpr.implicit.conversion.overflow.u8.u16(i32 2218, i8 %43)
  %44 = zext i8 %43 to i16, !dbg !6162
  call void @llvm.dbg.value(metadata i16 %44, i64 0, metadata !6134, metadata !177), !dbg !6163
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 2224, i16 %44)
  %45 = zext i16 %44 to i32, !dbg !6164
  call void @qpr.shift.by.amount.i32(i32 2221, i32 %45, i32 8)
  call void @qpr.shift.by.negative.i32(i32 2222, i32 %45, i32 8)
  call void @qpr.shift.of.negative.i32(i32 2223, i32 %45, i32 8)
  %46 = shl i32 %45, 8, !dbg !6165
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 2225, i16 %35)
  %47 = zext i16 %35 to i32, !dbg !6166
  %48 = or i32 %46, %47, !dbg !6167
  call void @qpr.explicit.conversion.overflow.s32.s16(i32 2220, i32 %48)
  %49 = trunc i32 %48 to i16, !dbg !6168
  %50 = getelementptr inbounds %struct.bmi160_sensor_data, %struct.bmi160_sensor_data* %0, i32 0, i32 1, !dbg !6169
  store i16 %49, i16* %50, align 2, !dbg !6170
  %51 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6171
  %52 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %51, align 8, !dbg !6171
  %53 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %52, i32 0, i32 0, !dbg !6172
  %54 = load i8*, i8** %53, align 8, !dbg !6172
  call void @qpr.uinc.i16(i32 2227, i16 %40)
  %55 = add i16 %40, 1, !dbg !6173
  call void @llvm.dbg.value(metadata i16 %55, i64 0, metadata !6128, metadata !177), !dbg !6173
  %56 = zext i16 %40 to i64, !dbg !6174
  %57 = getelementptr inbounds i8, i8* %54, i64 %56, !dbg !6174
  %58 = load i8, i8* %57, align 1, !dbg !6174
  call void @qpr.implicit.conversion.overflow.u8.u16(i32 2226, i8 %58)
  %59 = zext i8 %58 to i16, !dbg !6174
  call void @llvm.dbg.value(metadata i16 %59, i64 0, metadata !6132, metadata !177), !dbg !6175
  %60 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6176
  %61 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %60, align 8, !dbg !6176
  %62 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %61, i32 0, i32 0, !dbg !6177
  %63 = load i8*, i8** %62, align 8, !dbg !6177
  call void @qpr.uinc.i16(i32 2229, i16 %55)
  %64 = add i16 %55, 1, !dbg !6178
  call void @llvm.dbg.value(metadata i16 %64, i64 0, metadata !6128, metadata !177), !dbg !6178
  %65 = zext i16 %55 to i64, !dbg !6179
  %66 = getelementptr inbounds i8, i8* %63, i64 %65, !dbg !6179
  %67 = load i8, i8* %66, align 1, !dbg !6179
  call void @qpr.implicit.conversion.overflow.u8.u16(i32 2228, i8 %67)
  %68 = zext i8 %67 to i16, !dbg !6179
  call void @llvm.dbg.value(metadata i16 %68, i64 0, metadata !6134, metadata !177), !dbg !6180
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 2234, i16 %68)
  %69 = zext i16 %68 to i32, !dbg !6181
  call void @qpr.shift.by.amount.i32(i32 2231, i32 %69, i32 8)
  call void @qpr.shift.by.negative.i32(i32 2232, i32 %69, i32 8)
  call void @qpr.shift.of.negative.i32(i32 2233, i32 %69, i32 8)
  %70 = shl i32 %69, 8, !dbg !6182
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 2235, i16 %59)
  %71 = zext i16 %59 to i32, !dbg !6183
  %72 = or i32 %70, %71, !dbg !6184
  call void @qpr.explicit.conversion.overflow.s32.s16(i32 2230, i32 %72)
  %73 = trunc i32 %72 to i16, !dbg !6185
  %74 = getelementptr inbounds %struct.bmi160_sensor_data, %struct.bmi160_sensor_data* %0, i32 0, i32 2, !dbg !6186
  store i16 %73, i16* %74, align 4, !dbg !6187
  ret void, !dbg !6188
}

; Function Attrs: inaccessiblememonly nounwind
define weak_odr void @qpr.arithmetic.overflow.warning.umul.i32(i32, i32, i32) #0 {
  %4 = call %0 @llvm.umul.with.overflow.i32(i32 %1, i32 %2)
  %5 = extractvalue %0 %4, 1
  %6 = xor i1 %5, true
  call void @llbmc.assert(i1 %6, i32 %0)
  ret void
}

; Function Attrs: nounwind readnone
declare %0 @llvm.umul.with.overflow.i32(i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define signext i8 @bmi160_extract_gyro(%struct.bmi160_sensor_data*, i8*, %struct.bmi160_dev*) #1 !dbg !6189 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !6190, metadata !177), !dbg !6191
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !6192, metadata !177), !dbg !6193
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !6194, metadata !177), !dbg !6195
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !6196, metadata !177), !dbg !6197
  %4 = alloca i16, align 2
  %5 = alloca i16, align 2
  %6 = alloca i8, align 1
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !6198, metadata !177), !dbg !6199
  call void @llvm.dbg.value(metadata %struct.bmi160_sensor_data* %0, i64 0, metadata !6190, metadata !177), !dbg !6191
  call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !6192, metadata !177), !dbg !6193
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %2, i64 0, metadata !6194, metadata !177), !dbg !6195
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !6200
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !6194, metadata !177), !dbg !6200
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 302, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !6196, metadata !177), !dbg !6197
  call void @llvm.dbg.declare(metadata i16* %4, metadata !6201, metadata !177), !dbg !6202
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 303, i32 0)
  store i16 0, i16* %4, align 2, !dbg !6202
  call void @llvm.dbg.declare(metadata i16* %5, metadata !6203, metadata !177), !dbg !6204
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 304, i32 0)
  store i16 0, i16* %5, align 2, !dbg !6204
  call void @llvm.dbg.declare(metadata i8* %6, metadata !6205, metadata !177), !dbg !6206
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 305, i32 0)
  store i8 0, i8* %6, align 1, !dbg !6206
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 306, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !6198, metadata !177), !dbg !6199
  %7 = icmp eq %struct.bmi160_dev* @configStub, null, !dbg !6207
  br i1 %7, label %14, label %8, !dbg !6209

; <label>:8:                                      ; preds = %3
  %9 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6210
  %10 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %9, align 8, !dbg !6210
  %11 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %10, i32 0, i32 0, !dbg !6212
  %12 = load i8*, i8** %11, align 8, !dbg !6212
  %13 = icmp eq i8* %12, null, !dbg !6213
  br i1 %13, label %14, label %15, !dbg !6214

; <label>:14:                                     ; preds = %8, %3
  call void @qpr.arithmetic.overflow.ssub.i32(i32 308, i32 0, i32 1)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 307, i32 -1)
  call void @llvm.dbg.value(metadata i8 -1, i64 0, metadata !6196, metadata !177), !dbg !6216
  br label %42, !dbg !6218

; <label>:15:                                     ; preds = %8
  %16 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6219
  %17 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %16, align 8, !dbg !6219
  %18 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %17, i32 0, i32 3, !dbg !6222
  %19 = load i8, i8* %18, align 1, !dbg !6222
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 309, i8 %19)
  %20 = zext i8 %19 to i32, !dbg !6223
  %21 = icmp eq i32 %20, 0, !dbg !6224
  br i1 %21, label %22, label %40, !dbg !6225

; <label>:22:                                     ; preds = %15
  call void @get_gyro_len_to_parse(i16* %4, i16* %5, i8* %1, %struct.bmi160_dev* @configStub) #5, !dbg !6226
  br label %23, !dbg !6228

; <label>:23:                                     ; preds = %29, %22
  %24 = load i16, i16* %4, align 2, !dbg !6229
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 310, i16 %24)
  %25 = zext i16 %24 to i32, !dbg !6229
  %26 = load i16, i16* %5, align 2, !dbg !6233
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 311, i16 %26)
  %27 = zext i16 %26 to i32, !dbg !6233
  %28 = icmp slt i32 %25, %27, !dbg !6234
  br i1 %28, label %29, label %34, !dbg !6235

; <label>:29:                                     ; preds = %23
  call void @check_frame_validity(i16* %4, %struct.bmi160_dev* @configStub) #5, !dbg !6237
  %30 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6239
  %31 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %30, align 8, !dbg !6239
  %32 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %31, i32 0, i32 4, !dbg !6240
  %33 = load i8, i8* %32, align 4, !dbg !6240
  call void @llvm.dbg.value(metadata i8 %33, i64 0, metadata !6198, metadata !177), !dbg !6241
  call void @unpack_gyro_frame(%struct.bmi160_sensor_data* %0, i16* %4, i8* %6, i8 zeroext %33, %struct.bmi160_dev* @configStub) #5, !dbg !6242
  br label %23, !dbg !6243, !llvm.loop !6245

; <label>:34:                                     ; preds = %23
  %35 = load i8, i8* %6, align 1, !dbg !6248
  store i8 %35, i8* %1, align 1, !dbg !6249
  %36 = load i16, i16* %4, align 2, !dbg !6250
  %37 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6251
  %38 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %37, align 8, !dbg !6251
  %39 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %38, i32 0, i32 6, !dbg !6252
  store i16 %36, i16* %39, align 8, !dbg !6253
  br label %41, !dbg !6254

; <label>:40:                                     ; preds = %15
  call void @extract_gyro_header_mode(%struct.bmi160_sensor_data* %0, i8* %1, %struct.bmi160_dev* @configStub) #5, !dbg !6255
  br label %41

; <label>:41:                                     ; preds = %40, %34
  br label %42

; <label>:42:                                     ; preds = %41, %14
  %43 = phi i8 [ -1, %14 ], [ 0, %41 ]
  call void @llvm.dbg.value(metadata i8 %43, i64 0, metadata !6196, metadata !177), !dbg !6197
  ret i8 %43, !dbg !6257
}

; Function Attrs: noinline nounwind uwtable
define internal void @get_gyro_len_to_parse(i16*, i16*, i8*, %struct.bmi160_dev*) #1 !dbg !6258 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !6259, metadata !177), !dbg !6260
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !6261, metadata !177), !dbg !6262
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !6263, metadata !177), !dbg !6264
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !6265, metadata !177), !dbg !6266
  call void @llvm.dbg.value(metadata i16* %0, i64 0, metadata !6259, metadata !177), !dbg !6260
  call void @llvm.dbg.value(metadata i16* %1, i64 0, metadata !6261, metadata !177), !dbg !6262
  call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !6263, metadata !177), !dbg !6264
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %3, i64 0, metadata !6265, metadata !177), !dbg !6266
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !6267
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !6265, metadata !177), !dbg !6267
  %5 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6268
  %6 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %5, align 8, !dbg !6268
  %7 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %6, i32 0, i32 6, !dbg !6269
  %8 = load i16, i16* %7, align 8, !dbg !6269
  store i16 %8, i16* %0, align 2, !dbg !6270
  %9 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6271
  %10 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %9, align 8, !dbg !6271
  %11 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %10, i32 0, i32 4, !dbg !6273
  %12 = load i8, i8* %11, align 4, !dbg !6273
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 2261, i8 %12)
  %13 = zext i8 %12 to i32, !dbg !6274
  %14 = icmp eq i32 %13, 128, !dbg !6275
  br i1 %14, label %15, label %20, !dbg !6276

; <label>:15:                                     ; preds = %4
  %16 = load i8, i8* %2, align 1, !dbg !6277
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 2264, i8 %16)
  %17 = zext i8 %16 to i32, !dbg !6279
  call void @qpr.arithmetic.overflow.warning.umul.i32(i32 2263, i32 %17, i32 6)
  %18 = mul i32 %17, 6, !dbg !6280
  call void @qpr.implicit.conversion.overflow.u32.u16(i32 2262, i32 %18)
  %19 = trunc i32 %18 to i16, !dbg !6279
  store i16 %19, i16* %1, align 2, !dbg !6281
  br label %64, !dbg !6282

; <label>:20:                                     ; preds = %4
  %21 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6283
  %22 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %21, align 8, !dbg !6283
  %23 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %22, i32 0, i32 4, !dbg !6286
  %24 = load i8, i8* %23, align 4, !dbg !6286
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 2265, i8 %24)
  %25 = zext i8 %24 to i32, !dbg !6287
  %26 = icmp eq i32 %25, 192, !dbg !6288
  br i1 %26, label %27, label %32, !dbg !6289

; <label>:27:                                     ; preds = %20
  %28 = load i8, i8* %2, align 1, !dbg !6291
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 2268, i8 %28)
  %29 = zext i8 %28 to i32, !dbg !6293
  call void @qpr.arithmetic.overflow.warning.umul.i32(i32 2267, i32 %29, i32 12)
  %30 = mul i32 %29, 12, !dbg !6294
  call void @qpr.implicit.conversion.overflow.u32.u16(i32 2266, i32 %30)
  %31 = trunc i32 %30 to i16, !dbg !6293
  store i16 %31, i16* %1, align 2, !dbg !6295
  br label %63, !dbg !6296

; <label>:32:                                     ; preds = %20
  %33 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6297
  %34 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %33, align 8, !dbg !6297
  %35 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %34, i32 0, i32 4, !dbg !6300
  %36 = load i8, i8* %35, align 4, !dbg !6300
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 2269, i8 %36)
  %37 = zext i8 %36 to i32, !dbg !6301
  %38 = icmp eq i32 %37, 160, !dbg !6302
  br i1 %38, label %39, label %44, !dbg !6303

; <label>:39:                                     ; preds = %32
  %40 = load i8, i8* %2, align 1, !dbg !6304
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 2272, i8 %40)
  %41 = zext i8 %40 to i32, !dbg !6306
  call void @qpr.arithmetic.overflow.warning.umul.i32(i32 2271, i32 %41, i32 14)
  %42 = mul i32 %41, 14, !dbg !6307
  call void @qpr.implicit.conversion.overflow.u32.u16(i32 2270, i32 %42)
  %43 = trunc i32 %42 to i16, !dbg !6306
  store i16 %43, i16* %1, align 2, !dbg !6308
  br label %62, !dbg !6309

; <label>:44:                                     ; preds = %32
  %45 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6310
  %46 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %45, align 8, !dbg !6310
  %47 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %46, i32 0, i32 4, !dbg !6313
  %48 = load i8, i8* %47, align 4, !dbg !6313
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 2273, i8 %48)
  %49 = zext i8 %48 to i32, !dbg !6314
  %50 = icmp eq i32 %49, 224, !dbg !6315
  br i1 %50, label %51, label %56, !dbg !6316

; <label>:51:                                     ; preds = %44
  %52 = load i8, i8* %2, align 1, !dbg !6317
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 2276, i8 %52)
  %53 = zext i8 %52 to i32, !dbg !6319
  call void @qpr.arithmetic.overflow.warning.umul.i32(i32 2275, i32 %53, i32 20)
  %54 = mul i32 %53, 20, !dbg !6320
  call void @qpr.implicit.conversion.overflow.u32.u16(i32 2274, i32 %54)
  %55 = trunc i32 %54 to i16, !dbg !6319
  store i16 %55, i16* %1, align 2, !dbg !6321
  br label %61, !dbg !6322

; <label>:56:                                     ; preds = %44
  %57 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6323
  %58 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %57, align 8, !dbg !6323
  %59 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %58, i32 0, i32 1, !dbg !6325
  %60 = load i16, i16* %59, align 8, !dbg !6325
  store i16 %60, i16* %0, align 2, !dbg !6326
  br label %61

; <label>:61:                                     ; preds = %56, %51
  br label %62

; <label>:62:                                     ; preds = %61, %39
  br label %63

; <label>:63:                                     ; preds = %62, %27
  br label %64

; <label>:64:                                     ; preds = %63, %15
  %65 = load i16, i16* %1, align 2, !dbg !6327
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 2277, i16 %65)
  %66 = zext i16 %65 to i32, !dbg !6327
  %67 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6329
  %68 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %67, align 8, !dbg !6329
  %69 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %68, i32 0, i32 1, !dbg !6330
  %70 = load i16, i16* %69, align 8, !dbg !6330
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 2278, i16 %70)
  %71 = zext i16 %70 to i32, !dbg !6331
  %72 = icmp sgt i32 %66, %71, !dbg !6332
  br i1 %72, label %73, label %78, !dbg !6333

; <label>:73:                                     ; preds = %64
  %74 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6334
  %75 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %74, align 8, !dbg !6334
  %76 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %75, i32 0, i32 1, !dbg !6336
  %77 = load i16, i16* %76, align 8, !dbg !6336
  store i16 %77, i16* %1, align 2, !dbg !6337
  br label %78, !dbg !6338

; <label>:78:                                     ; preds = %73, %64
  ret void, !dbg !6339
}

; Function Attrs: noinline nounwind uwtable
define internal void @unpack_gyro_frame(%struct.bmi160_sensor_data*, i16*, i8*, i8 zeroext, %struct.bmi160_dev*) #1 !dbg !6340 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !6341, metadata !177), !dbg !6342
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !6343, metadata !177), !dbg !6344
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !6345, metadata !177), !dbg !6346
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !6347, metadata !177), !dbg !6348
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !6349, metadata !177), !dbg !6350
  call void @llvm.dbg.value(metadata %struct.bmi160_sensor_data* %0, i64 0, metadata !6341, metadata !177), !dbg !6342
  call void @llvm.dbg.value(metadata i16* %1, i64 0, metadata !6343, metadata !177), !dbg !6344
  call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !6345, metadata !177), !dbg !6346
  call void @llvm.dbg.value(metadata i8 %3, i64 0, metadata !6347, metadata !177), !dbg !6348
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %4, i64 0, metadata !6349, metadata !177), !dbg !6350
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !6351
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !6349, metadata !177), !dbg !6351
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 2279, i8 %3)
  %6 = zext i8 %3 to i32, !dbg !6352
  switch i32 %6, label %136 [
    i32 136, label %7
    i32 128, label %7
    i32 140, label %34
    i32 192, label %34
    i32 156, label %61
    i32 224, label %61
    i32 148, label %91
    i32 96, label %91
    i32 144, label %96
    i32 32, label %96
    i32 152, label %101
    i32 160, label %101
    i32 132, label %131
    i32 64, label %131
  ], !dbg !6353

; <label>:7:                                      ; preds = %5, %5
  %8 = load i16, i16* %1, align 2, !dbg !6354
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 2283, i16 %8)
  %9 = zext i16 %8 to i32, !dbg !6354
  call void @qpr.arithmetic.overflow.warning.uadd.i32(i32 2282, i32 %9, i32 6)
  %10 = add i32 %9, 6, !dbg !6357
  %11 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6358
  %12 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %11, align 8, !dbg !6358
  %13 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %12, i32 0, i32 1, !dbg !6359
  %14 = load i16, i16* %13, align 8, !dbg !6359
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 2284, i16 %14)
  %15 = zext i16 %14 to i32, !dbg !6360
  %16 = icmp ugt i32 %10, %15, !dbg !6361
  br i1 %16, label %17, label %22, !dbg !6362

; <label>:17:                                     ; preds = %7
  %18 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6363
  %19 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %18, align 8, !dbg !6363
  %20 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %19, i32 0, i32 1, !dbg !6365
  %21 = load i16, i16* %20, align 8, !dbg !6365
  store i16 %21, i16* %1, align 2, !dbg !6366
  br label %137, !dbg !6367

; <label>:22:                                     ; preds = %7
  %23 = load i8, i8* %2, align 1, !dbg !6368
  %24 = zext i8 %23 to i64, !dbg !6369
  %25 = getelementptr inbounds %struct.bmi160_sensor_data, %struct.bmi160_sensor_data* %0, i64 %24, !dbg !6369
  %26 = load i16, i16* %1, align 2, !dbg !6370
  call void @unpack_gyro_data(%struct.bmi160_sensor_data* %25, i16 zeroext %26, %struct.bmi160_dev* @configStub) #5, !dbg !6371
  %27 = load i16, i16* %1, align 2, !dbg !6372
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 2287, i16 %27)
  %28 = zext i16 %27 to i32, !dbg !6373
  call void @qpr.arithmetic.overflow.warning.uadd.i32(i32 2286, i32 %28, i32 6)
  %29 = add i32 %28, 6, !dbg !6374
  call void @qpr.implicit.conversion.overflow.u32.u16(i32 2285, i32 %29)
  %30 = trunc i32 %29 to i16, !dbg !6373
  store i16 %30, i16* %1, align 2, !dbg !6375
  %31 = load i8, i8* %2
  call void @qpr.uinc.i8(i32 2288, i8 %31)
  %32 = load i8, i8* %2, align 1, !dbg !6376
  %33 = add i8 %32, 1, !dbg !6376
  store i8 %33, i8* %2, align 1, !dbg !6376
  br label %137, !dbg !6377

; <label>:34:                                     ; preds = %5, %5
  %35 = load i16, i16* %1, align 2, !dbg !6378
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 2292, i16 %35)
  %36 = zext i16 %35 to i32, !dbg !6378
  call void @qpr.arithmetic.overflow.warning.uadd.i32(i32 2291, i32 %36, i32 12)
  %37 = add i32 %36, 12, !dbg !6380
  %38 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6381
  %39 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %38, align 8, !dbg !6381
  %40 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %39, i32 0, i32 1, !dbg !6382
  %41 = load i16, i16* %40, align 8, !dbg !6382
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 2293, i16 %41)
  %42 = zext i16 %41 to i32, !dbg !6383
  %43 = icmp ugt i32 %37, %42, !dbg !6384
  br i1 %43, label %44, label %49, !dbg !6385

; <label>:44:                                     ; preds = %34
  %45 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6386
  %46 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %45, align 8, !dbg !6386
  %47 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %46, i32 0, i32 1, !dbg !6388
  %48 = load i16, i16* %47, align 8, !dbg !6388
  store i16 %48, i16* %1, align 2, !dbg !6389
  br label %137, !dbg !6390

; <label>:49:                                     ; preds = %34
  %50 = load i8, i8* %2, align 1, !dbg !6391
  %51 = zext i8 %50 to i64, !dbg !6392
  %52 = getelementptr inbounds %struct.bmi160_sensor_data, %struct.bmi160_sensor_data* %0, i64 %51, !dbg !6392
  %53 = load i16, i16* %1, align 2, !dbg !6393
  call void @unpack_gyro_data(%struct.bmi160_sensor_data* %52, i16 zeroext %53, %struct.bmi160_dev* @configStub) #5, !dbg !6394
  %54 = load i16, i16* %1, align 2, !dbg !6395
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 2296, i16 %54)
  %55 = zext i16 %54 to i32, !dbg !6395
  call void @qpr.arithmetic.overflow.warning.uadd.i32(i32 2295, i32 %55, i32 12)
  %56 = add i32 %55, 12, !dbg !6396
  call void @qpr.implicit.conversion.overflow.u32.u16(i32 2294, i32 %56)
  %57 = trunc i32 %56 to i16, !dbg !6395
  store i16 %57, i16* %1, align 2, !dbg !6397
  %58 = load i8, i8* %2
  call void @qpr.uinc.i8(i32 2297, i8 %58)
  %59 = load i8, i8* %2, align 1, !dbg !6398
  %60 = add i8 %59, 1, !dbg !6398
  store i8 %60, i8* %2, align 1, !dbg !6398
  br label %137, !dbg !6399

; <label>:61:                                     ; preds = %5, %5
  %62 = load i16, i16* %1, align 2, !dbg !6400
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 2301, i16 %62)
  %63 = zext i16 %62 to i32, !dbg !6400
  call void @qpr.arithmetic.overflow.warning.uadd.i32(i32 2300, i32 %63, i32 20)
  %64 = add i32 %63, 20, !dbg !6402
  %65 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6403
  %66 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %65, align 8, !dbg !6403
  %67 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %66, i32 0, i32 1, !dbg !6404
  %68 = load i16, i16* %67, align 8, !dbg !6404
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 2302, i16 %68)
  %69 = zext i16 %68 to i32, !dbg !6405
  %70 = icmp ugt i32 %64, %69, !dbg !6406
  br i1 %70, label %71, label %76, !dbg !6407

; <label>:71:                                     ; preds = %61
  %72 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6408
  %73 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %72, align 8, !dbg !6408
  %74 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %73, i32 0, i32 1, !dbg !6410
  %75 = load i16, i16* %74, align 8, !dbg !6410
  store i16 %75, i16* %1, align 2, !dbg !6411
  br label %137, !dbg !6412

; <label>:76:                                     ; preds = %61
  %77 = load i8, i8* %2, align 1, !dbg !6413
  %78 = zext i8 %77 to i64, !dbg !6414
  %79 = getelementptr inbounds %struct.bmi160_sensor_data, %struct.bmi160_sensor_data* %0, i64 %78, !dbg !6414
  %80 = load i16, i16* %1, align 2, !dbg !6415
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 2305, i16 %80)
  %81 = zext i16 %80 to i32, !dbg !6415
  call void @qpr.arithmetic.overflow.warning.uadd.i32(i32 2304, i32 %81, i32 8)
  %82 = add i32 %81, 8, !dbg !6416
  call void @qpr.implicit.conversion.overflow.u32.u16(i32 2303, i32 %82)
  %83 = trunc i32 %82 to i16, !dbg !6415
  call void @unpack_gyro_data(%struct.bmi160_sensor_data* %79, i16 zeroext %83, %struct.bmi160_dev* @configStub) #5, !dbg !6417
  %84 = load i16, i16* %1, align 2, !dbg !6418
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 2308, i16 %84)
  %85 = zext i16 %84 to i32, !dbg !6418
  call void @qpr.arithmetic.overflow.warning.uadd.i32(i32 2307, i32 %85, i32 20)
  %86 = add i32 %85, 20, !dbg !6419
  call void @qpr.implicit.conversion.overflow.u32.u16(i32 2306, i32 %86)
  %87 = trunc i32 %86 to i16, !dbg !6418
  store i16 %87, i16* %1, align 2, !dbg !6420
  %88 = load i8, i8* %2
  call void @qpr.uinc.i8(i32 2309, i8 %88)
  %89 = load i8, i8* %2, align 1, !dbg !6421
  %90 = add i8 %89, 1, !dbg !6421
  store i8 %90, i8* %2, align 1, !dbg !6421
  br label %137, !dbg !6422

; <label>:91:                                     ; preds = %5, %5
  %92 = load i16, i16* %1, align 2, !dbg !6423
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 2314, i16 %92)
  %93 = zext i16 %92 to i32, !dbg !6423
  call void @qpr.arithmetic.overflow.warning.uadd.i32(i32 2313, i32 %93, i32 14)
  %94 = add i32 %93, 14, !dbg !6424
  call void @qpr.implicit.conversion.overflow.u32.u16(i32 2312, i32 %94)
  %95 = trunc i32 %94 to i16, !dbg !6423
  store i16 %95, i16* %1, align 2, !dbg !6425
  br label %137, !dbg !6426

; <label>:96:                                     ; preds = %5, %5
  %97 = load i16, i16* %1, align 2, !dbg !6427
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 2319, i16 %97)
  %98 = zext i16 %97 to i32, !dbg !6428
  call void @qpr.arithmetic.overflow.warning.uadd.i32(i32 2318, i32 %98, i32 8)
  %99 = add i32 %98, 8, !dbg !6429
  call void @qpr.implicit.conversion.overflow.u32.u16(i32 2317, i32 %99)
  %100 = trunc i32 %99 to i16, !dbg !6428
  store i16 %100, i16* %1, align 2, !dbg !6430
  br label %137, !dbg !6431

; <label>:101:                                    ; preds = %5, %5
  %102 = load i16, i16* %1, align 2, !dbg !6432
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 2323, i16 %102)
  %103 = zext i16 %102 to i32, !dbg !6432
  call void @qpr.arithmetic.overflow.warning.uadd.i32(i32 2322, i32 %103, i32 14)
  %104 = add i32 %103, 14, !dbg !6434
  %105 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6435
  %106 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %105, align 8, !dbg !6435
  %107 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %106, i32 0, i32 1, !dbg !6436
  %108 = load i16, i16* %107, align 8, !dbg !6436
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 2324, i16 %108)
  %109 = zext i16 %108 to i32, !dbg !6437
  %110 = icmp ugt i32 %104, %109, !dbg !6438
  br i1 %110, label %111, label %116, !dbg !6439

; <label>:111:                                    ; preds = %101
  %112 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6440
  %113 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %112, align 8, !dbg !6440
  %114 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %113, i32 0, i32 1, !dbg !6442
  %115 = load i16, i16* %114, align 8, !dbg !6442
  store i16 %115, i16* %1, align 2, !dbg !6443
  br label %137, !dbg !6444

; <label>:116:                                    ; preds = %101
  %117 = load i8, i8* %2, align 1, !dbg !6445
  %118 = zext i8 %117 to i64, !dbg !6446
  %119 = getelementptr inbounds %struct.bmi160_sensor_data, %struct.bmi160_sensor_data* %0, i64 %118, !dbg !6446
  %120 = load i16, i16* %1, align 2, !dbg !6447
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 2327, i16 %120)
  %121 = zext i16 %120 to i32, !dbg !6447
  call void @qpr.arithmetic.overflow.warning.uadd.i32(i32 2326, i32 %121, i32 8)
  %122 = add i32 %121, 8, !dbg !6448
  call void @qpr.implicit.conversion.overflow.u32.u16(i32 2325, i32 %122)
  %123 = trunc i32 %122 to i16, !dbg !6447
  call void @unpack_gyro_data(%struct.bmi160_sensor_data* %119, i16 zeroext %123, %struct.bmi160_dev* @configStub) #5, !dbg !6449
  %124 = load i16, i16* %1, align 2, !dbg !6450
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 2330, i16 %124)
  %125 = zext i16 %124 to i32, !dbg !6451
  call void @qpr.arithmetic.overflow.warning.uadd.i32(i32 2329, i32 %125, i32 14)
  %126 = add i32 %125, 14, !dbg !6452
  call void @qpr.implicit.conversion.overflow.u32.u16(i32 2328, i32 %126)
  %127 = trunc i32 %126 to i16, !dbg !6451
  store i16 %127, i16* %1, align 2, !dbg !6453
  %128 = load i8, i8* %2
  call void @qpr.uinc.i8(i32 2331, i8 %128)
  %129 = load i8, i8* %2, align 1, !dbg !6454
  %130 = add i8 %129, 1, !dbg !6454
  store i8 %130, i8* %2, align 1, !dbg !6454
  br label %137, !dbg !6455

; <label>:131:                                    ; preds = %5, %5
  %132 = load i16, i16* %1, align 2, !dbg !6456
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 2336, i16 %132)
  %133 = zext i16 %132 to i32, !dbg !6456
  call void @qpr.arithmetic.overflow.warning.uadd.i32(i32 2335, i32 %133, i32 6)
  %134 = add i32 %133, 6, !dbg !6457
  call void @qpr.implicit.conversion.overflow.u32.u16(i32 2334, i32 %134)
  %135 = trunc i32 %134 to i16, !dbg !6456
  store i16 %135, i16* %1, align 2, !dbg !6458
  br label %137, !dbg !6459

; <label>:136:                                    ; preds = %5
  br label %137, !dbg !6460

; <label>:137:                                    ; preds = %136, %131, %116, %111, %96, %91, %76, %71, %49, %44, %22, %17
  ret void, !dbg !6461
}

; Function Attrs: noinline nounwind uwtable
define internal void @extract_gyro_header_mode(%struct.bmi160_sensor_data*, i8*, %struct.bmi160_dev*) #1 !dbg !6462 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !6463, metadata !177), !dbg !6464
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !6465, metadata !177), !dbg !6466
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !6467, metadata !177), !dbg !6468
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !6469, metadata !177), !dbg !6470
  %4 = alloca i16, align 2
  %5 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.bmi160_sensor_data* %0, i64 0, metadata !6463, metadata !177), !dbg !6464
  call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !6465, metadata !177), !dbg !6466
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %2, i64 0, metadata !6467, metadata !177), !dbg !6468
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !6471
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !6467, metadata !177), !dbg !6471
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 2367, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !6469, metadata !177), !dbg !6470
  call void @llvm.dbg.declare(metadata i16* %4, metadata !6472, metadata !177), !dbg !6473
  call void @llvm.dbg.declare(metadata i8* %5, metadata !6474, metadata !177), !dbg !6475
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 2368, i32 0)
  store i8 0, i8* %5, align 1, !dbg !6475
  %6 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6476
  %7 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %6, align 8, !dbg !6476
  %8 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %7, i32 0, i32 6, !dbg !6478
  %9 = load i16, i16* %8, align 8, !dbg !6478
  store i16 %9, i16* %4, align 2, !dbg !6479
  br label %10, !dbg !6480

; <label>:10:                                     ; preds = %55, %3
  %11 = load i16, i16* %4, align 2, !dbg !6481
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 2369, i16 %11)
  %12 = zext i16 %11 to i32, !dbg !6481
  %13 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6484
  %14 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %13, align 8, !dbg !6484
  %15 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %14, i32 0, i32 1, !dbg !6485
  %16 = load i16, i16* %15, align 8, !dbg !6485
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 2370, i16 %16)
  %17 = zext i16 %16 to i32, !dbg !6486
  %18 = icmp slt i32 %12, %17, !dbg !6487
  br i1 %18, label %19, label %56, !dbg !6488

; <label>:19:                                     ; preds = %10
  %20 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6490
  %21 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %20, align 8, !dbg !6490
  %22 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %21, i32 0, i32 0, !dbg !6492
  %23 = load i8*, i8** %22, align 8, !dbg !6492
  %24 = load i16, i16* %4, align 2, !dbg !6493
  %25 = zext i16 %24 to i64, !dbg !6494
  %26 = getelementptr inbounds i8, i8* %23, i64 %25, !dbg !6494
  %27 = load i8, i8* %26, align 1, !dbg !6494
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 2372, i8 %27)
  %28 = zext i8 %27 to i32, !dbg !6494
  %29 = and i32 %28, 252, !dbg !6495
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 2371, i32 %29)
  %30 = trunc i32 %29 to i8, !dbg !6496
  call void @llvm.dbg.value(metadata i8 %30, i64 0, metadata !6469, metadata !177), !dbg !6497
  %31 = load i16, i16* %4
  call void @qpr.uinc.i16(i32 2373, i16 %31)
  %32 = load i16, i16* %4, align 2, !dbg !6498
  %33 = add i16 %32, 1, !dbg !6498
  store i16 %33, i16* %4, align 2, !dbg !6498
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 2374, i8 %30)
  %34 = zext i8 %30 to i32, !dbg !6499
  switch i32 %34, label %47 [
    i32 136, label %35
    i32 140, label %35
    i32 152, label %35
    i32 156, label %35
    i32 132, label %36
    i32 144, label %37
    i32 148, label %38
    i32 68, label %39
    i32 64, label %40
    i32 72, label %41
    i32 128, label %42
  ], !dbg !6500

; <label>:35:                                     ; preds = %19, %19, %19, %19
  call void @unpack_gyro_frame(%struct.bmi160_sensor_data* %0, i16* %4, i8* %5, i8 zeroext %30, %struct.bmi160_dev* @configStub) #5, !dbg !6501
  br label %48, !dbg !6503

; <label>:36:                                     ; preds = %19
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 2380, i32 6)
  call void @move_next_frame(i16* %4, i8 zeroext 6, %struct.bmi160_dev* @configStub) #5, !dbg !6504
  br label %48, !dbg !6505

; <label>:37:                                     ; preds = %19
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 2382, i32 8)
  call void @move_next_frame(i16* %4, i8 zeroext 8, %struct.bmi160_dev* @configStub) #5, !dbg !6506
  br label %48, !dbg !6507

; <label>:38:                                     ; preds = %19
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 2384, i32 8)
  call void @move_next_frame(i16* %4, i8 zeroext 8, %struct.bmi160_dev* @configStub) #5, !dbg !6508
  br label %48, !dbg !6509

; <label>:39:                                     ; preds = %19
  call void @unpack_sensortime_frame(i16* %4, %struct.bmi160_dev* @configStub) #5, !dbg !6510
  br label %48, !dbg !6511

; <label>:40:                                     ; preds = %19
  call void @unpack_skipped_frame(i16* %4, %struct.bmi160_dev* @configStub) #5, !dbg !6512
  br label %48, !dbg !6513

; <label>:41:                                     ; preds = %19
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 2388, i32 1)
  call void @move_next_frame(i16* %4, i8 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !6514
  br label %48, !dbg !6515

; <label>:42:                                     ; preds = %19
  %43 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6516
  %44 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %43, align 8, !dbg !6516
  %45 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %44, i32 0, i32 1, !dbg !6517
  %46 = load i16, i16* %45, align 8, !dbg !6517
  store i16 %46, i16* %4, align 2, !dbg !6518
  br label %48, !dbg !6519

; <label>:47:                                     ; preds = %19
  br label %48, !dbg !6520

; <label>:48:                                     ; preds = %47, %42, %41, %40, %39, %38, %37, %36, %35
  %49 = load i8, i8* %1, align 1, !dbg !6521
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 2390, i8 %49)
  %50 = zext i8 %49 to i32, !dbg !6521
  %51 = load i8, i8* %5, align 1, !dbg !6523
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 2391, i8 %51)
  %52 = zext i8 %51 to i32, !dbg !6523
  %53 = icmp eq i32 %50, %52, !dbg !6524
  br i1 %53, label %54, label %55, !dbg !6525

; <label>:54:                                     ; preds = %48
  br label %56, !dbg !6526

; <label>:55:                                     ; preds = %48
  br label %10, !dbg !6528, !llvm.loop !6530

; <label>:56:                                     ; preds = %54, %10
  %57 = load i8, i8* %5, align 1, !dbg !6533
  store i8 %57, i8* %1, align 1, !dbg !6534
  %58 = load i16, i16* %4, align 2, !dbg !6535
  %59 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6536
  %60 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %59, align 8, !dbg !6536
  %61 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %60, i32 0, i32 6, !dbg !6537
  store i16 %58, i16* %61, align 8, !dbg !6538
  ret void, !dbg !6539
}

; Function Attrs: noinline nounwind uwtable
define internal void @unpack_gyro_data(%struct.bmi160_sensor_data*, i16 zeroext, %struct.bmi160_dev*) #1 !dbg !6540 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !6541, metadata !177), !dbg !6542
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !6543, metadata !177), !dbg !6544
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !6545, metadata !177), !dbg !6546
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !6547, metadata !177), !dbg !6548
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !6549, metadata !177), !dbg !6550
  call void @llvm.dbg.value(metadata %struct.bmi160_sensor_data* %0, i64 0, metadata !6541, metadata !177), !dbg !6542
  call void @llvm.dbg.value(metadata i16 %1, i64 0, metadata !6543, metadata !177), !dbg !6544
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %2, i64 0, metadata !6545, metadata !177), !dbg !6546
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !6551
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !6545, metadata !177), !dbg !6551
  %4 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6552
  %5 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %4, align 8, !dbg !6552
  %6 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %5, i32 0, i32 0, !dbg !6553
  %7 = load i8*, i8** %6, align 8, !dbg !6553
  call void @qpr.uinc.i16(i32 2338, i16 %1)
  %8 = add i16 %1, 1, !dbg !6554
  call void @llvm.dbg.value(metadata i16 %8, i64 0, metadata !6543, metadata !177), !dbg !6554
  %9 = zext i16 %1 to i64, !dbg !6555
  %10 = getelementptr inbounds i8, i8* %7, i64 %9, !dbg !6555
  %11 = load i8, i8* %10, align 1, !dbg !6555
  call void @qpr.implicit.conversion.overflow.u8.u16(i32 2337, i8 %11)
  %12 = zext i8 %11 to i16, !dbg !6555
  call void @llvm.dbg.value(metadata i16 %12, i64 0, metadata !6547, metadata !177), !dbg !6556
  %13 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6557
  %14 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %13, align 8, !dbg !6557
  %15 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %14, i32 0, i32 0, !dbg !6558
  %16 = load i8*, i8** %15, align 8, !dbg !6558
  call void @qpr.uinc.i16(i32 2340, i16 %8)
  %17 = add i16 %8, 1, !dbg !6559
  call void @llvm.dbg.value(metadata i16 %17, i64 0, metadata !6543, metadata !177), !dbg !6559
  %18 = zext i16 %8 to i64, !dbg !6560
  %19 = getelementptr inbounds i8, i8* %16, i64 %18, !dbg !6560
  %20 = load i8, i8* %19, align 1, !dbg !6560
  call void @qpr.implicit.conversion.overflow.u8.u16(i32 2339, i8 %20)
  %21 = zext i8 %20 to i16, !dbg !6560
  call void @llvm.dbg.value(metadata i16 %21, i64 0, metadata !6549, metadata !177), !dbg !6561
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 2345, i16 %21)
  %22 = zext i16 %21 to i32, !dbg !6562
  call void @qpr.shift.by.amount.i32(i32 2342, i32 %22, i32 8)
  call void @qpr.shift.by.negative.i32(i32 2343, i32 %22, i32 8)
  call void @qpr.shift.of.negative.i32(i32 2344, i32 %22, i32 8)
  %23 = shl i32 %22, 8, !dbg !6563
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 2346, i16 %12)
  %24 = zext i16 %12 to i32, !dbg !6564
  %25 = or i32 %23, %24, !dbg !6565
  call void @qpr.explicit.conversion.overflow.s32.s16(i32 2341, i32 %25)
  %26 = trunc i32 %25 to i16, !dbg !6566
  %27 = getelementptr inbounds %struct.bmi160_sensor_data, %struct.bmi160_sensor_data* %0, i32 0, i32 0, !dbg !6567
  store i16 %26, i16* %27, align 4, !dbg !6568
  %28 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6569
  %29 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %28, align 8, !dbg !6569
  %30 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %29, i32 0, i32 0, !dbg !6570
  %31 = load i8*, i8** %30, align 8, !dbg !6570
  call void @qpr.uinc.i16(i32 2348, i16 %17)
  %32 = add i16 %17, 1, !dbg !6571
  call void @llvm.dbg.value(metadata i16 %32, i64 0, metadata !6543, metadata !177), !dbg !6571
  %33 = zext i16 %17 to i64, !dbg !6572
  %34 = getelementptr inbounds i8, i8* %31, i64 %33, !dbg !6572
  %35 = load i8, i8* %34, align 1, !dbg !6572
  call void @qpr.implicit.conversion.overflow.u8.u16(i32 2347, i8 %35)
  %36 = zext i8 %35 to i16, !dbg !6572
  call void @llvm.dbg.value(metadata i16 %36, i64 0, metadata !6547, metadata !177), !dbg !6573
  %37 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6574
  %38 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %37, align 8, !dbg !6574
  %39 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %38, i32 0, i32 0, !dbg !6575
  %40 = load i8*, i8** %39, align 8, !dbg !6575
  call void @qpr.uinc.i16(i32 2350, i16 %32)
  %41 = add i16 %32, 1, !dbg !6576
  call void @llvm.dbg.value(metadata i16 %41, i64 0, metadata !6543, metadata !177), !dbg !6576
  %42 = zext i16 %32 to i64, !dbg !6577
  %43 = getelementptr inbounds i8, i8* %40, i64 %42, !dbg !6577
  %44 = load i8, i8* %43, align 1, !dbg !6577
  call void @qpr.implicit.conversion.overflow.u8.u16(i32 2349, i8 %44)
  %45 = zext i8 %44 to i16, !dbg !6577
  call void @llvm.dbg.value(metadata i16 %45, i64 0, metadata !6549, metadata !177), !dbg !6578
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 2355, i16 %45)
  %46 = zext i16 %45 to i32, !dbg !6579
  call void @qpr.shift.by.amount.i32(i32 2352, i32 %46, i32 8)
  call void @qpr.shift.by.negative.i32(i32 2353, i32 %46, i32 8)
  call void @qpr.shift.of.negative.i32(i32 2354, i32 %46, i32 8)
  %47 = shl i32 %46, 8, !dbg !6580
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 2356, i16 %36)
  %48 = zext i16 %36 to i32, !dbg !6581
  %49 = or i32 %47, %48, !dbg !6582
  call void @qpr.explicit.conversion.overflow.s32.s16(i32 2351, i32 %49)
  %50 = trunc i32 %49 to i16, !dbg !6583
  %51 = getelementptr inbounds %struct.bmi160_sensor_data, %struct.bmi160_sensor_data* %0, i32 0, i32 1, !dbg !6584
  store i16 %50, i16* %51, align 2, !dbg !6585
  %52 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6586
  %53 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %52, align 8, !dbg !6586
  %54 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %53, i32 0, i32 0, !dbg !6587
  %55 = load i8*, i8** %54, align 8, !dbg !6587
  call void @qpr.uinc.i16(i32 2358, i16 %41)
  %56 = add i16 %41, 1, !dbg !6588
  call void @llvm.dbg.value(metadata i16 %56, i64 0, metadata !6543, metadata !177), !dbg !6588
  %57 = zext i16 %41 to i64, !dbg !6589
  %58 = getelementptr inbounds i8, i8* %55, i64 %57, !dbg !6589
  %59 = load i8, i8* %58, align 1, !dbg !6589
  call void @qpr.implicit.conversion.overflow.u8.u16(i32 2357, i8 %59)
  %60 = zext i8 %59 to i16, !dbg !6589
  call void @llvm.dbg.value(metadata i16 %60, i64 0, metadata !6547, metadata !177), !dbg !6590
  %61 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6591
  %62 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %61, align 8, !dbg !6591
  %63 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %62, i32 0, i32 0, !dbg !6592
  %64 = load i8*, i8** %63, align 8, !dbg !6592
  call void @qpr.uinc.i16(i32 2360, i16 %56)
  %65 = add i16 %56, 1, !dbg !6593
  call void @llvm.dbg.value(metadata i16 %65, i64 0, metadata !6543, metadata !177), !dbg !6593
  %66 = zext i16 %56 to i64, !dbg !6594
  %67 = getelementptr inbounds i8, i8* %64, i64 %66, !dbg !6594
  %68 = load i8, i8* %67, align 1, !dbg !6594
  call void @qpr.implicit.conversion.overflow.u8.u16(i32 2359, i8 %68)
  %69 = zext i8 %68 to i16, !dbg !6594
  call void @llvm.dbg.value(metadata i16 %69, i64 0, metadata !6549, metadata !177), !dbg !6595
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 2365, i16 %69)
  %70 = zext i16 %69 to i32, !dbg !6596
  call void @qpr.shift.by.amount.i32(i32 2362, i32 %70, i32 8)
  call void @qpr.shift.by.negative.i32(i32 2363, i32 %70, i32 8)
  call void @qpr.shift.of.negative.i32(i32 2364, i32 %70, i32 8)
  %71 = shl i32 %70, 8, !dbg !6597
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 2366, i16 %60)
  %72 = zext i16 %60 to i32, !dbg !6598
  %73 = or i32 %71, %72, !dbg !6599
  call void @qpr.explicit.conversion.overflow.s32.s16(i32 2361, i32 %73)
  %74 = trunc i32 %73 to i16, !dbg !6600
  %75 = getelementptr inbounds %struct.bmi160_sensor_data, %struct.bmi160_sensor_data* %0, i32 0, i32 2, !dbg !6601
  store i16 %74, i16* %75, align 4, !dbg !6602
  ret void, !dbg !6603
}

; Function Attrs: noinline nounwind uwtable
define signext i8 @bmi160_extract_aux(%struct.bmi160_aux_data*, i8*, %struct.bmi160_dev*) #1 !dbg !6604 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !6611, metadata !177), !dbg !6612
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !6613, metadata !177), !dbg !6614
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !6615, metadata !177), !dbg !6616
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !6617, metadata !177), !dbg !6618
  %4 = alloca i16, align 2
  %5 = alloca i16, align 2
  %6 = alloca i8, align 1
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !6619, metadata !177), !dbg !6620
  call void @llvm.dbg.value(metadata %struct.bmi160_aux_data* %0, i64 0, metadata !6611, metadata !177), !dbg !6612
  call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !6613, metadata !177), !dbg !6614
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %2, i64 0, metadata !6615, metadata !177), !dbg !6616
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !6621
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !6615, metadata !177), !dbg !6621
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 312, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !6617, metadata !177), !dbg !6618
  call void @llvm.dbg.declare(metadata i16* %4, metadata !6622, metadata !177), !dbg !6623
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 313, i32 0)
  store i16 0, i16* %4, align 2, !dbg !6623
  call void @llvm.dbg.declare(metadata i16* %5, metadata !6624, metadata !177), !dbg !6625
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 314, i32 0)
  store i16 0, i16* %5, align 2, !dbg !6625
  call void @llvm.dbg.declare(metadata i8* %6, metadata !6626, metadata !177), !dbg !6627
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 315, i32 0)
  store i8 0, i8* %6, align 1, !dbg !6627
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 316, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !6619, metadata !177), !dbg !6620
  %7 = icmp eq %struct.bmi160_dev* @configStub, null, !dbg !6628
  br i1 %7, label %16, label %8, !dbg !6630

; <label>:8:                                      ; preds = %3
  %9 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6631
  %10 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %9, align 8, !dbg !6631
  %11 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %10, i32 0, i32 0, !dbg !6633
  %12 = load i8*, i8** %11, align 8, !dbg !6633
  %13 = icmp eq i8* %12, null, !dbg !6634
  br i1 %13, label %16, label %14, !dbg !6635

; <label>:14:                                     ; preds = %8
  %15 = icmp eq %struct.bmi160_aux_data* %0, null, !dbg !6636
  br i1 %15, label %16, label %17, !dbg !6638

; <label>:16:                                     ; preds = %14, %8, %3
  call void @qpr.arithmetic.overflow.ssub.i32(i32 318, i32 0, i32 1)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 317, i32 -1)
  call void @llvm.dbg.value(metadata i8 -1, i64 0, metadata !6617, metadata !177), !dbg !6640
  br label %44, !dbg !6642

; <label>:17:                                     ; preds = %14
  %18 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6643
  %19 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %18, align 8, !dbg !6643
  %20 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %19, i32 0, i32 3, !dbg !6646
  %21 = load i8, i8* %20, align 1, !dbg !6646
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 319, i8 %21)
  %22 = zext i8 %21 to i32, !dbg !6647
  %23 = icmp eq i32 %22, 0, !dbg !6648
  br i1 %23, label %24, label %42, !dbg !6649

; <label>:24:                                     ; preds = %17
  call void @get_aux_len_to_parse(i16* %4, i16* %5, i8* %1, %struct.bmi160_dev* @configStub) #5, !dbg !6650
  br label %25, !dbg !6652

; <label>:25:                                     ; preds = %31, %24
  %26 = load i16, i16* %4, align 2, !dbg !6653
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 320, i16 %26)
  %27 = zext i16 %26 to i32, !dbg !6653
  %28 = load i16, i16* %5, align 2, !dbg !6657
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 321, i16 %28)
  %29 = zext i16 %28 to i32, !dbg !6657
  %30 = icmp slt i32 %27, %29, !dbg !6658
  br i1 %30, label %31, label %36, !dbg !6659

; <label>:31:                                     ; preds = %25
  call void @check_frame_validity(i16* %4, %struct.bmi160_dev* @configStub) #5, !dbg !6661
  %32 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6663
  %33 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %32, align 8, !dbg !6663
  %34 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %33, i32 0, i32 4, !dbg !6664
  %35 = load i8, i8* %34, align 4, !dbg !6664
  call void @llvm.dbg.value(metadata i8 %35, i64 0, metadata !6619, metadata !177), !dbg !6665
  call void @unpack_aux_frame(%struct.bmi160_aux_data* %0, i16* %4, i8* %6, i8 zeroext %35, %struct.bmi160_dev* @configStub) #5, !dbg !6666
  br label %25, !dbg !6667, !llvm.loop !6669

; <label>:36:                                     ; preds = %25
  %37 = load i8, i8* %6, align 1, !dbg !6672
  store i8 %37, i8* %1, align 1, !dbg !6673
  %38 = load i16, i16* %4, align 2, !dbg !6674
  %39 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6675
  %40 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %39, align 8, !dbg !6675
  %41 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %40, i32 0, i32 7, !dbg !6676
  store i16 %38, i16* %41, align 2, !dbg !6677
  br label %43, !dbg !6678

; <label>:42:                                     ; preds = %17
  call void @extract_aux_header_mode(%struct.bmi160_aux_data* %0, i8* %1, %struct.bmi160_dev* @configStub) #5, !dbg !6679
  br label %43

; <label>:43:                                     ; preds = %42, %36
  br label %44

; <label>:44:                                     ; preds = %43, %16
  %45 = phi i8 [ -1, %16 ], [ 0, %43 ]
  call void @llvm.dbg.value(metadata i8 %45, i64 0, metadata !6617, metadata !177), !dbg !6618
  ret i8 %45, !dbg !6681
}

; Function Attrs: noinline nounwind uwtable
define internal void @get_aux_len_to_parse(i16*, i16*, i8*, %struct.bmi160_dev*) #1 !dbg !6682 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !6683, metadata !177), !dbg !6684
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !6685, metadata !177), !dbg !6686
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !6687, metadata !177), !dbg !6688
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !6689, metadata !177), !dbg !6690
  call void @llvm.dbg.value(metadata i16* %0, i64 0, metadata !6683, metadata !177), !dbg !6684
  call void @llvm.dbg.value(metadata i16* %1, i64 0, metadata !6685, metadata !177), !dbg !6686
  call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !6687, metadata !177), !dbg !6688
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %3, i64 0, metadata !6689, metadata !177), !dbg !6690
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !6691
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !6689, metadata !177), !dbg !6691
  %5 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6692
  %6 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %5, align 8, !dbg !6692
  %7 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %6, i32 0, i32 6, !dbg !6693
  %8 = load i16, i16* %7, align 8, !dbg !6693
  store i16 %8, i16* %0, align 2, !dbg !6694
  %9 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6695
  %10 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %9, align 8, !dbg !6695
  %11 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %10, i32 0, i32 4, !dbg !6697
  %12 = load i8, i8* %11, align 4, !dbg !6697
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 2392, i8 %12)
  %13 = zext i8 %12 to i32, !dbg !6698
  %14 = icmp eq i32 %13, 32, !dbg !6699
  br i1 %14, label %15, label %20, !dbg !6700

; <label>:15:                                     ; preds = %4
  %16 = load i8, i8* %2, align 1, !dbg !6701
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 2395, i8 %16)
  %17 = zext i8 %16 to i32, !dbg !6703
  call void @qpr.arithmetic.overflow.warning.umul.i32(i32 2394, i32 %17, i32 8)
  %18 = mul i32 %17, 8, !dbg !6704
  call void @qpr.implicit.conversion.overflow.u32.u16(i32 2393, i32 %18)
  %19 = trunc i32 %18 to i16, !dbg !6703
  store i16 %19, i16* %1, align 2, !dbg !6705
  br label %64, !dbg !6706

; <label>:20:                                     ; preds = %4
  %21 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6707
  %22 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %21, align 8, !dbg !6707
  %23 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %22, i32 0, i32 4, !dbg !6710
  %24 = load i8, i8* %23, align 4, !dbg !6710
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 2396, i8 %24)
  %25 = zext i8 %24 to i32, !dbg !6711
  %26 = icmp eq i32 %25, 96, !dbg !6712
  br i1 %26, label %27, label %32, !dbg !6713

; <label>:27:                                     ; preds = %20
  %28 = load i8, i8* %2, align 1, !dbg !6715
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 2399, i8 %28)
  %29 = zext i8 %28 to i32, !dbg !6717
  call void @qpr.arithmetic.overflow.warning.umul.i32(i32 2398, i32 %29, i32 14)
  %30 = mul i32 %29, 14, !dbg !6718
  call void @qpr.implicit.conversion.overflow.u32.u16(i32 2397, i32 %30)
  %31 = trunc i32 %30 to i16, !dbg !6717
  store i16 %31, i16* %1, align 2, !dbg !6719
  br label %63, !dbg !6720

; <label>:32:                                     ; preds = %20
  %33 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6721
  %34 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %33, align 8, !dbg !6721
  %35 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %34, i32 0, i32 4, !dbg !6724
  %36 = load i8, i8* %35, align 4, !dbg !6724
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 2400, i8 %36)
  %37 = zext i8 %36 to i32, !dbg !6725
  %38 = icmp eq i32 %37, 160, !dbg !6726
  br i1 %38, label %39, label %44, !dbg !6727

; <label>:39:                                     ; preds = %32
  %40 = load i8, i8* %2, align 1, !dbg !6728
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 2403, i8 %40)
  %41 = zext i8 %40 to i32, !dbg !6730
  call void @qpr.arithmetic.overflow.warning.umul.i32(i32 2402, i32 %41, i32 14)
  %42 = mul i32 %41, 14, !dbg !6731
  call void @qpr.implicit.conversion.overflow.u32.u16(i32 2401, i32 %42)
  %43 = trunc i32 %42 to i16, !dbg !6730
  store i16 %43, i16* %1, align 2, !dbg !6732
  br label %62, !dbg !6733

; <label>:44:                                     ; preds = %32
  %45 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6734
  %46 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %45, align 8, !dbg !6734
  %47 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %46, i32 0, i32 4, !dbg !6737
  %48 = load i8, i8* %47, align 4, !dbg !6737
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 2404, i8 %48)
  %49 = zext i8 %48 to i32, !dbg !6738
  %50 = icmp eq i32 %49, 224, !dbg !6739
  br i1 %50, label %51, label %56, !dbg !6740

; <label>:51:                                     ; preds = %44
  %52 = load i8, i8* %2, align 1, !dbg !6741
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 2407, i8 %52)
  %53 = zext i8 %52 to i32, !dbg !6743
  call void @qpr.arithmetic.overflow.warning.umul.i32(i32 2406, i32 %53, i32 20)
  %54 = mul i32 %53, 20, !dbg !6744
  call void @qpr.implicit.conversion.overflow.u32.u16(i32 2405, i32 %54)
  %55 = trunc i32 %54 to i16, !dbg !6743
  store i16 %55, i16* %1, align 2, !dbg !6745
  br label %61, !dbg !6746

; <label>:56:                                     ; preds = %44
  %57 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6747
  %58 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %57, align 8, !dbg !6747
  %59 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %58, i32 0, i32 1, !dbg !6749
  %60 = load i16, i16* %59, align 8, !dbg !6749
  store i16 %60, i16* %0, align 2, !dbg !6750
  br label %61

; <label>:61:                                     ; preds = %56, %51
  br label %62

; <label>:62:                                     ; preds = %61, %39
  br label %63

; <label>:63:                                     ; preds = %62, %27
  br label %64

; <label>:64:                                     ; preds = %63, %15
  %65 = load i16, i16* %1, align 2, !dbg !6751
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 2408, i16 %65)
  %66 = zext i16 %65 to i32, !dbg !6751
  %67 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6753
  %68 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %67, align 8, !dbg !6753
  %69 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %68, i32 0, i32 1, !dbg !6754
  %70 = load i16, i16* %69, align 8, !dbg !6754
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 2409, i16 %70)
  %71 = zext i16 %70 to i32, !dbg !6755
  %72 = icmp sgt i32 %66, %71, !dbg !6756
  br i1 %72, label %73, label %78, !dbg !6757

; <label>:73:                                     ; preds = %64
  %74 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6758
  %75 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %74, align 8, !dbg !6758
  %76 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %75, i32 0, i32 1, !dbg !6760
  %77 = load i16, i16* %76, align 8, !dbg !6760
  store i16 %77, i16* %1, align 2, !dbg !6761
  br label %78, !dbg !6762

; <label>:78:                                     ; preds = %73, %64
  ret void, !dbg !6763
}

; Function Attrs: noinline nounwind uwtable
define internal void @unpack_aux_frame(%struct.bmi160_aux_data*, i16*, i8*, i8 zeroext, %struct.bmi160_dev*) #1 !dbg !6764 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !6767, metadata !177), !dbg !6768
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !6769, metadata !177), !dbg !6770
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !6771, metadata !177), !dbg !6772
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !6773, metadata !177), !dbg !6774
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !6775, metadata !177), !dbg !6776
  call void @llvm.dbg.value(metadata %struct.bmi160_aux_data* %0, i64 0, metadata !6767, metadata !177), !dbg !6768
  call void @llvm.dbg.value(metadata i16* %1, i64 0, metadata !6769, metadata !177), !dbg !6770
  call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !6771, metadata !177), !dbg !6772
  call void @llvm.dbg.value(metadata i8 %3, i64 0, metadata !6773, metadata !177), !dbg !6774
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %4, i64 0, metadata !6775, metadata !177), !dbg !6776
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !6777
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !6775, metadata !177), !dbg !6777
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 2410, i8 %3)
  %6 = zext i8 %3 to i32, !dbg !6778
  switch i32 %6, label %130 [
    i32 144, label %7
    i32 32, label %7
    i32 148, label %34
    i32 96, label %34
    i32 152, label %61
    i32 160, label %61
    i32 156, label %88
    i32 224, label %88
    i32 136, label %115
    i32 128, label %115
    i32 140, label %120
    i32 192, label %120
    i32 132, label %125
    i32 64, label %125
  ], !dbg !6779

; <label>:7:                                      ; preds = %5, %5
  %8 = load i16, i16* %1, align 2, !dbg !6780
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 2414, i16 %8)
  %9 = zext i16 %8 to i32, !dbg !6780
  call void @qpr.arithmetic.overflow.warning.uadd.i32(i32 2413, i32 %9, i32 8)
  %10 = add i32 %9, 8, !dbg !6783
  %11 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6784
  %12 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %11, align 8, !dbg !6784
  %13 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %12, i32 0, i32 1, !dbg !6785
  %14 = load i16, i16* %13, align 8, !dbg !6785
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 2415, i16 %14)
  %15 = zext i16 %14 to i32, !dbg !6786
  %16 = icmp ugt i32 %10, %15, !dbg !6787
  br i1 %16, label %17, label %22, !dbg !6788

; <label>:17:                                     ; preds = %7
  %18 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6789
  %19 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %18, align 8, !dbg !6789
  %20 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %19, i32 0, i32 1, !dbg !6791
  %21 = load i16, i16* %20, align 8, !dbg !6791
  store i16 %21, i16* %1, align 2, !dbg !6792
  br label %131, !dbg !6793

; <label>:22:                                     ; preds = %7
  %23 = load i8, i8* %2, align 1, !dbg !6794
  %24 = zext i8 %23 to i64, !dbg !6795
  %25 = getelementptr inbounds %struct.bmi160_aux_data, %struct.bmi160_aux_data* %0, i64 %24, !dbg !6795
  %26 = load i16, i16* %1, align 2, !dbg !6796
  call void @unpack_aux_data(%struct.bmi160_aux_data* %25, i16 zeroext %26, %struct.bmi160_dev* @configStub) #5, !dbg !6797
  %27 = load i16, i16* %1, align 2, !dbg !6798
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 2418, i16 %27)
  %28 = zext i16 %27 to i32, !dbg !6798
  call void @qpr.arithmetic.overflow.warning.uadd.i32(i32 2417, i32 %28, i32 8)
  %29 = add i32 %28, 8, !dbg !6799
  call void @qpr.implicit.conversion.overflow.u32.u16(i32 2416, i32 %29)
  %30 = trunc i32 %29 to i16, !dbg !6798
  store i16 %30, i16* %1, align 2, !dbg !6800
  %31 = load i8, i8* %2
  call void @qpr.uinc.i8(i32 2419, i8 %31)
  %32 = load i8, i8* %2, align 1, !dbg !6801
  %33 = add i8 %32, 1, !dbg !6801
  store i8 %33, i8* %2, align 1, !dbg !6801
  br label %131, !dbg !6802

; <label>:34:                                     ; preds = %5, %5
  %35 = load i16, i16* %1, align 2, !dbg !6803
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 2423, i16 %35)
  %36 = zext i16 %35 to i32, !dbg !6803
  call void @qpr.arithmetic.overflow.warning.uadd.i32(i32 2422, i32 %36, i32 14)
  %37 = add i32 %36, 14, !dbg !6805
  %38 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6806
  %39 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %38, align 8, !dbg !6806
  %40 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %39, i32 0, i32 1, !dbg !6807
  %41 = load i16, i16* %40, align 8, !dbg !6807
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 2424, i16 %41)
  %42 = zext i16 %41 to i32, !dbg !6808
  %43 = icmp ugt i32 %37, %42, !dbg !6809
  br i1 %43, label %44, label %49, !dbg !6810

; <label>:44:                                     ; preds = %34
  %45 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6811
  %46 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %45, align 8, !dbg !6811
  %47 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %46, i32 0, i32 1, !dbg !6813
  %48 = load i16, i16* %47, align 8, !dbg !6813
  store i16 %48, i16* %1, align 2, !dbg !6814
  br label %131, !dbg !6815

; <label>:49:                                     ; preds = %34
  %50 = load i8, i8* %2, align 1, !dbg !6816
  %51 = zext i8 %50 to i64, !dbg !6817
  %52 = getelementptr inbounds %struct.bmi160_aux_data, %struct.bmi160_aux_data* %0, i64 %51, !dbg !6817
  %53 = load i16, i16* %1, align 2, !dbg !6818
  call void @unpack_aux_data(%struct.bmi160_aux_data* %52, i16 zeroext %53, %struct.bmi160_dev* @configStub) #5, !dbg !6819
  %54 = load i16, i16* %1, align 2, !dbg !6820
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 2427, i16 %54)
  %55 = zext i16 %54 to i32, !dbg !6820
  call void @qpr.arithmetic.overflow.warning.uadd.i32(i32 2426, i32 %55, i32 14)
  %56 = add i32 %55, 14, !dbg !6821
  call void @qpr.implicit.conversion.overflow.u32.u16(i32 2425, i32 %56)
  %57 = trunc i32 %56 to i16, !dbg !6820
  store i16 %57, i16* %1, align 2, !dbg !6822
  %58 = load i8, i8* %2
  call void @qpr.uinc.i8(i32 2428, i8 %58)
  %59 = load i8, i8* %2, align 1, !dbg !6823
  %60 = add i8 %59, 1, !dbg !6823
  store i8 %60, i8* %2, align 1, !dbg !6823
  br label %131, !dbg !6824

; <label>:61:                                     ; preds = %5, %5
  %62 = load i16, i16* %1, align 2, !dbg !6825
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 2432, i16 %62)
  %63 = zext i16 %62 to i32, !dbg !6825
  call void @qpr.arithmetic.overflow.warning.uadd.i32(i32 2431, i32 %63, i32 14)
  %64 = add i32 %63, 14, !dbg !6827
  %65 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6828
  %66 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %65, align 8, !dbg !6828
  %67 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %66, i32 0, i32 1, !dbg !6829
  %68 = load i16, i16* %67, align 8, !dbg !6829
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 2433, i16 %68)
  %69 = zext i16 %68 to i32, !dbg !6830
  %70 = icmp ugt i32 %64, %69, !dbg !6831
  br i1 %70, label %71, label %76, !dbg !6832

; <label>:71:                                     ; preds = %61
  %72 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6833
  %73 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %72, align 8, !dbg !6833
  %74 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %73, i32 0, i32 1, !dbg !6835
  %75 = load i16, i16* %74, align 8, !dbg !6835
  store i16 %75, i16* %1, align 2, !dbg !6836
  br label %131, !dbg !6837

; <label>:76:                                     ; preds = %61
  %77 = load i8, i8* %2, align 1, !dbg !6838
  %78 = zext i8 %77 to i64, !dbg !6839
  %79 = getelementptr inbounds %struct.bmi160_aux_data, %struct.bmi160_aux_data* %0, i64 %78, !dbg !6839
  %80 = load i16, i16* %1, align 2, !dbg !6840
  call void @unpack_aux_data(%struct.bmi160_aux_data* %79, i16 zeroext %80, %struct.bmi160_dev* @configStub) #5, !dbg !6841
  %81 = load i16, i16* %1, align 2, !dbg !6842
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 2436, i16 %81)
  %82 = zext i16 %81 to i32, !dbg !6843
  call void @qpr.arithmetic.overflow.warning.uadd.i32(i32 2435, i32 %82, i32 14)
  %83 = add i32 %82, 14, !dbg !6844
  call void @qpr.implicit.conversion.overflow.u32.u16(i32 2434, i32 %83)
  %84 = trunc i32 %83 to i16, !dbg !6843
  store i16 %84, i16* %1, align 2, !dbg !6845
  %85 = load i8, i8* %2
  call void @qpr.uinc.i8(i32 2437, i8 %85)
  %86 = load i8, i8* %2, align 1, !dbg !6846
  %87 = add i8 %86, 1, !dbg !6846
  store i8 %87, i8* %2, align 1, !dbg !6846
  br label %131, !dbg !6847

; <label>:88:                                     ; preds = %5, %5
  %89 = load i16, i16* %1, align 2, !dbg !6848
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 2441, i16 %89)
  %90 = zext i16 %89 to i32, !dbg !6848
  call void @qpr.arithmetic.overflow.warning.uadd.i32(i32 2440, i32 %90, i32 20)
  %91 = add i32 %90, 20, !dbg !6850
  %92 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6851
  %93 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %92, align 8, !dbg !6851
  %94 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %93, i32 0, i32 1, !dbg !6852
  %95 = load i16, i16* %94, align 8, !dbg !6852
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 2442, i16 %95)
  %96 = zext i16 %95 to i32, !dbg !6853
  %97 = icmp ugt i32 %91, %96, !dbg !6854
  br i1 %97, label %98, label %103, !dbg !6855

; <label>:98:                                     ; preds = %88
  %99 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6856
  %100 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %99, align 8, !dbg !6856
  %101 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %100, i32 0, i32 1, !dbg !6858
  %102 = load i16, i16* %101, align 8, !dbg !6858
  store i16 %102, i16* %1, align 2, !dbg !6859
  br label %131, !dbg !6860

; <label>:103:                                    ; preds = %88
  %104 = load i8, i8* %2, align 1, !dbg !6861
  %105 = zext i8 %104 to i64, !dbg !6862
  %106 = getelementptr inbounds %struct.bmi160_aux_data, %struct.bmi160_aux_data* %0, i64 %105, !dbg !6862
  %107 = load i16, i16* %1, align 2, !dbg !6863
  call void @unpack_aux_data(%struct.bmi160_aux_data* %106, i16 zeroext %107, %struct.bmi160_dev* @configStub) #5, !dbg !6864
  %108 = load i16, i16* %1, align 2, !dbg !6865
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 2445, i16 %108)
  %109 = zext i16 %108 to i32, !dbg !6865
  call void @qpr.arithmetic.overflow.warning.uadd.i32(i32 2444, i32 %109, i32 20)
  %110 = add i32 %109, 20, !dbg !6866
  call void @qpr.implicit.conversion.overflow.u32.u16(i32 2443, i32 %110)
  %111 = trunc i32 %110 to i16, !dbg !6865
  store i16 %111, i16* %1, align 2, !dbg !6867
  %112 = load i8, i8* %2
  call void @qpr.uinc.i8(i32 2446, i8 %112)
  %113 = load i8, i8* %2, align 1, !dbg !6868
  %114 = add i8 %113, 1, !dbg !6868
  store i8 %114, i8* %2, align 1, !dbg !6868
  br label %131, !dbg !6869

; <label>:115:                                    ; preds = %5, %5
  %116 = load i16, i16* %1, align 2, !dbg !6870
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 2451, i16 %116)
  %117 = zext i16 %116 to i32, !dbg !6871
  call void @qpr.arithmetic.overflow.warning.uadd.i32(i32 2450, i32 %117, i32 6)
  %118 = add i32 %117, 6, !dbg !6872
  call void @qpr.implicit.conversion.overflow.u32.u16(i32 2449, i32 %118)
  %119 = trunc i32 %118 to i16, !dbg !6871
  store i16 %119, i16* %1, align 2, !dbg !6873
  br label %131, !dbg !6874

; <label>:120:                                    ; preds = %5, %5
  %121 = load i16, i16* %1, align 2, !dbg !6875
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 2456, i16 %121)
  %122 = zext i16 %121 to i32, !dbg !6875
  call void @qpr.arithmetic.overflow.warning.uadd.i32(i32 2455, i32 %122, i32 12)
  %123 = add i32 %122, 12, !dbg !6876
  call void @qpr.implicit.conversion.overflow.u32.u16(i32 2454, i32 %123)
  %124 = trunc i32 %123 to i16, !dbg !6875
  store i16 %124, i16* %1, align 2, !dbg !6877
  br label %131, !dbg !6878

; <label>:125:                                    ; preds = %5, %5
  %126 = load i16, i16* %1, align 2, !dbg !6879
  call void @qpr.implicit.conversion.overflow.u16.u32(i32 2461, i16 %126)
  %127 = zext i16 %126 to i32, !dbg !6879
  call void @qpr.arithmetic.overflow.warning.uadd.i32(i32 2460, i32 %127, i32 6)
  %128 = add i32 %127, 6, !dbg !6880
  call void @qpr.implicit.conversion.overflow.u32.u16(i32 2459, i32 %128)
  %129 = trunc i32 %128 to i16, !dbg !6879
  store i16 %129, i16* %1, align 2, !dbg !6881
  br label %131, !dbg !6882

; <label>:130:                                    ; preds = %5
  br label %131, !dbg !6883

; <label>:131:                                    ; preds = %130, %125, %120, %115, %103, %98, %76, %71, %49, %44, %22, %17
  ret void, !dbg !6884
}

; Function Attrs: noinline nounwind uwtable
define internal void @extract_aux_header_mode(%struct.bmi160_aux_data*, i8*, %struct.bmi160_dev*) #1 !dbg !6885 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !6888, metadata !177), !dbg !6889
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !6890, metadata !177), !dbg !6891
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !6892, metadata !177), !dbg !6893
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !6894, metadata !177), !dbg !6895
  %4 = alloca i16, align 2
  %5 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.bmi160_aux_data* %0, i64 0, metadata !6888, metadata !177), !dbg !6889
  call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !6890, metadata !177), !dbg !6891
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %2, i64 0, metadata !6892, metadata !177), !dbg !6893
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !6896
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !6892, metadata !177), !dbg !6896
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 2478, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !6894, metadata !177), !dbg !6895
  call void @llvm.dbg.declare(metadata i16* %4, metadata !6897, metadata !177), !dbg !6898
  call void @llvm.dbg.declare(metadata i8* %5, metadata !6899, metadata !177), !dbg !6900
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 2479, i32 0)
  store i8 0, i8* %5, align 1, !dbg !6900
  %6 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6901
  %7 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %6, align 8, !dbg !6901
  %8 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %7, i32 0, i32 7, !dbg !6903
  %9 = load i16, i16* %8, align 2, !dbg !6903
  store i16 %9, i16* %4, align 2, !dbg !6904
  br label %10, !dbg !6905

; <label>:10:                                     ; preds = %59, %3
  %11 = load i16, i16* %4, align 2, !dbg !6906
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 2480, i16 %11)
  %12 = zext i16 %11 to i32, !dbg !6906
  %13 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6909
  %14 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %13, align 8, !dbg !6909
  %15 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %14, i32 0, i32 1, !dbg !6910
  %16 = load i16, i16* %15, align 8, !dbg !6910
  call void @qpr.implicit.conversion.overflow.u16.s32(i32 2481, i16 %16)
  %17 = zext i16 %16 to i32, !dbg !6911
  %18 = icmp slt i32 %12, %17, !dbg !6912
  br i1 %18, label %19, label %60, !dbg !6913

; <label>:19:                                     ; preds = %10
  %20 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6915
  %21 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %20, align 8, !dbg !6915
  %22 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %21, i32 0, i32 0, !dbg !6917
  %23 = load i8*, i8** %22, align 8, !dbg !6917
  %24 = load i16, i16* %4, align 2, !dbg !6918
  %25 = zext i16 %24 to i64, !dbg !6919
  %26 = getelementptr inbounds i8, i8* %23, i64 %25, !dbg !6919
  %27 = load i8, i8* %26, align 1, !dbg !6919
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 2483, i8 %27)
  %28 = zext i8 %27 to i32, !dbg !6919
  %29 = and i32 %28, 252, !dbg !6920
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 2482, i32 %29)
  %30 = trunc i32 %29 to i8, !dbg !6921
  call void @llvm.dbg.value(metadata i8 %30, i64 0, metadata !6894, metadata !177), !dbg !6922
  %31 = load i16, i16* %4
  call void @qpr.uinc.i16(i32 2484, i16 %31)
  %32 = load i16, i16* %4, align 2, !dbg !6923
  %33 = add i16 %32, 1, !dbg !6923
  store i16 %33, i16* %4, align 2, !dbg !6923
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 2485, i8 %30)
  %34 = zext i8 %30 to i32, !dbg !6924
  switch i32 %34, label %47 [
    i32 144, label %35
    i32 148, label %35
    i32 152, label %35
    i32 156, label %35
    i32 136, label %36
    i32 140, label %37
    i32 132, label %38
    i32 68, label %39
    i32 64, label %40
    i32 72, label %41
    i32 128, label %42
  ], !dbg !6925

; <label>:35:                                     ; preds = %19, %19, %19, %19
  call void @unpack_aux_frame(%struct.bmi160_aux_data* %0, i16* %4, i8* %5, i8 zeroext %30, %struct.bmi160_dev* @configStub) #5, !dbg !6926
  br label %52, !dbg !6928

; <label>:36:                                     ; preds = %19
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 2491, i32 6)
  call void @move_next_frame(i16* %4, i8 zeroext 6, %struct.bmi160_dev* @configStub) #5, !dbg !6929
  br label %52, !dbg !6930

; <label>:37:                                     ; preds = %19
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 2493, i32 12)
  call void @move_next_frame(i16* %4, i8 zeroext 12, %struct.bmi160_dev* @configStub) #5, !dbg !6931
  br label %52, !dbg !6932

; <label>:38:                                     ; preds = %19
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 2495, i32 6)
  call void @move_next_frame(i16* %4, i8 zeroext 6, %struct.bmi160_dev* @configStub) #5, !dbg !6933
  br label %52, !dbg !6934

; <label>:39:                                     ; preds = %19
  call void @unpack_sensortime_frame(i16* %4, %struct.bmi160_dev* @configStub) #5, !dbg !6935
  br label %52, !dbg !6936

; <label>:40:                                     ; preds = %19
  call void @unpack_skipped_frame(i16* %4, %struct.bmi160_dev* @configStub) #5, !dbg !6937
  br label %52, !dbg !6938

; <label>:41:                                     ; preds = %19
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 2499, i32 1)
  call void @move_next_frame(i16* %4, i8 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !6939
  br label %52, !dbg !6940

; <label>:42:                                     ; preds = %19
  %43 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6941
  %44 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %43, align 8, !dbg !6941
  %45 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %44, i32 0, i32 1, !dbg !6942
  %46 = load i16, i16* %45, align 8, !dbg !6942
  store i16 %46, i16* %4, align 2, !dbg !6943
  br label %52, !dbg !6944

; <label>:47:                                     ; preds = %19
  %48 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6945
  %49 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %48, align 8, !dbg !6945
  %50 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %49, i32 0, i32 1, !dbg !6946
  %51 = load i16, i16* %50, align 8, !dbg !6946
  store i16 %51, i16* %4, align 2, !dbg !6947
  br label %52, !dbg !6948

; <label>:52:                                     ; preds = %47, %42, %41, %40, %39, %38, %37, %36, %35
  %53 = load i8, i8* %1, align 1, !dbg !6949
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 2501, i8 %53)
  %54 = zext i8 %53 to i32, !dbg !6949
  %55 = load i8, i8* %5, align 1, !dbg !6951
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 2502, i8 %55)
  %56 = zext i8 %55 to i32, !dbg !6951
  %57 = icmp eq i32 %54, %56, !dbg !6952
  br i1 %57, label %58, label %59, !dbg !6953

; <label>:58:                                     ; preds = %52
  br label %60, !dbg !6954

; <label>:59:                                     ; preds = %52
  br label %10, !dbg !6956, !llvm.loop !6958

; <label>:60:                                     ; preds = %58, %10
  %61 = load i8, i8* %5, align 1, !dbg !6961
  store i8 %61, i8* %1, align 1, !dbg !6962
  %62 = load i16, i16* %4, align 2, !dbg !6963
  %63 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6964
  %64 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %63, align 8, !dbg !6964
  %65 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %64, i32 0, i32 7, !dbg !6965
  store i16 %62, i16* %65, align 2, !dbg !6966
  ret void, !dbg !6967
}

; Function Attrs: noinline nounwind uwtable
define internal void @unpack_aux_data(%struct.bmi160_aux_data*, i16 zeroext, %struct.bmi160_dev*) #1 !dbg !6968 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !6971, metadata !177), !dbg !6972
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !6973, metadata !177), !dbg !6974
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !6975, metadata !177), !dbg !6976
  call void @llvm.dbg.value(metadata %struct.bmi160_aux_data* %0, i64 0, metadata !6971, metadata !177), !dbg !6972
  call void @llvm.dbg.value(metadata i16 %1, i64 0, metadata !6973, metadata !177), !dbg !6974
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %2, i64 0, metadata !6975, metadata !177), !dbg !6976
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !6977
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !6975, metadata !177), !dbg !6977
  %4 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6978
  %5 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %4, align 8, !dbg !6978
  %6 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %5, i32 0, i32 0, !dbg !6979
  %7 = load i8*, i8** %6, align 8, !dbg !6979
  call void @qpr.uinc.i16(i32 2463, i16 %1)
  %8 = add i16 %1, 1, !dbg !6980
  call void @llvm.dbg.value(metadata i16 %8, i64 0, metadata !6973, metadata !177), !dbg !6980
  %9 = zext i16 %1 to i64, !dbg !6981
  %10 = getelementptr inbounds i8, i8* %7, i64 %9, !dbg !6981
  %11 = load i8, i8* %10, align 1, !dbg !6981
  %12 = getelementptr inbounds %struct.bmi160_aux_data, %struct.bmi160_aux_data* %0, i32 0, i32 0, !dbg !6982
  %13 = getelementptr inbounds [8 x i8], [8 x i8]* %12, i64 0, i64 0, !dbg !6983
  call void @qpr.arrayindex.i32.i4(i32 2462, i32 0, i4 -8)
  store i8 %11, i8* %13, align 1, !dbg !6984
  %14 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6985
  %15 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %14, align 8, !dbg !6985
  %16 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %15, i32 0, i32 0, !dbg !6986
  %17 = load i8*, i8** %16, align 8, !dbg !6986
  call void @qpr.uinc.i16(i32 2465, i16 %8)
  %18 = add i16 %8, 1, !dbg !6987
  call void @llvm.dbg.value(metadata i16 %18, i64 0, metadata !6973, metadata !177), !dbg !6987
  %19 = zext i16 %8 to i64, !dbg !6988
  %20 = getelementptr inbounds i8, i8* %17, i64 %19, !dbg !6988
  %21 = load i8, i8* %20, align 1, !dbg !6988
  %22 = getelementptr inbounds %struct.bmi160_aux_data, %struct.bmi160_aux_data* %0, i32 0, i32 0, !dbg !6989
  %23 = getelementptr inbounds [8 x i8], [8 x i8]* %22, i64 0, i64 1, !dbg !6990
  call void @qpr.arrayindex.i32.i4(i32 2464, i32 1, i4 -8)
  store i8 %21, i8* %23, align 1, !dbg !6991
  %24 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6992
  %25 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %24, align 8, !dbg !6992
  %26 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %25, i32 0, i32 0, !dbg !6993
  %27 = load i8*, i8** %26, align 8, !dbg !6993
  call void @qpr.uinc.i16(i32 2467, i16 %18)
  %28 = add i16 %18, 1, !dbg !6994
  call void @llvm.dbg.value(metadata i16 %28, i64 0, metadata !6973, metadata !177), !dbg !6994
  %29 = zext i16 %18 to i64, !dbg !6995
  %30 = getelementptr inbounds i8, i8* %27, i64 %29, !dbg !6995
  %31 = load i8, i8* %30, align 1, !dbg !6995
  %32 = getelementptr inbounds %struct.bmi160_aux_data, %struct.bmi160_aux_data* %0, i32 0, i32 0, !dbg !6996
  %33 = getelementptr inbounds [8 x i8], [8 x i8]* %32, i64 0, i64 2, !dbg !6997
  call void @qpr.arrayindex.i32.i4(i32 2466, i32 2, i4 -8)
  store i8 %31, i8* %33, align 1, !dbg !6998
  %34 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !6999
  %35 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %34, align 8, !dbg !6999
  %36 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %35, i32 0, i32 0, !dbg !7000
  %37 = load i8*, i8** %36, align 8, !dbg !7000
  call void @qpr.uinc.i16(i32 2469, i16 %28)
  %38 = add i16 %28, 1, !dbg !7001
  call void @llvm.dbg.value(metadata i16 %38, i64 0, metadata !6973, metadata !177), !dbg !7001
  %39 = zext i16 %28 to i64, !dbg !7002
  %40 = getelementptr inbounds i8, i8* %37, i64 %39, !dbg !7002
  %41 = load i8, i8* %40, align 1, !dbg !7002
  %42 = getelementptr inbounds %struct.bmi160_aux_data, %struct.bmi160_aux_data* %0, i32 0, i32 0, !dbg !7003
  %43 = getelementptr inbounds [8 x i8], [8 x i8]* %42, i64 0, i64 3, !dbg !7004
  call void @qpr.arrayindex.i32.i4(i32 2468, i32 3, i4 -8)
  store i8 %41, i8* %43, align 1, !dbg !7005
  %44 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !7006
  %45 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %44, align 8, !dbg !7006
  %46 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %45, i32 0, i32 0, !dbg !7007
  %47 = load i8*, i8** %46, align 8, !dbg !7007
  call void @qpr.uinc.i16(i32 2471, i16 %38)
  %48 = add i16 %38, 1, !dbg !7008
  call void @llvm.dbg.value(metadata i16 %48, i64 0, metadata !6973, metadata !177), !dbg !7008
  %49 = zext i16 %38 to i64, !dbg !7009
  %50 = getelementptr inbounds i8, i8* %47, i64 %49, !dbg !7009
  %51 = load i8, i8* %50, align 1, !dbg !7009
  %52 = getelementptr inbounds %struct.bmi160_aux_data, %struct.bmi160_aux_data* %0, i32 0, i32 0, !dbg !7010
  %53 = getelementptr inbounds [8 x i8], [8 x i8]* %52, i64 0, i64 4, !dbg !7011
  call void @qpr.arrayindex.i32.i4(i32 2470, i32 4, i4 -8)
  store i8 %51, i8* %53, align 1, !dbg !7012
  %54 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !7013
  %55 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %54, align 8, !dbg !7013
  %56 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %55, i32 0, i32 0, !dbg !7014
  %57 = load i8*, i8** %56, align 8, !dbg !7014
  call void @qpr.uinc.i16(i32 2473, i16 %48)
  %58 = add i16 %48, 1, !dbg !7015
  call void @llvm.dbg.value(metadata i16 %58, i64 0, metadata !6973, metadata !177), !dbg !7015
  %59 = zext i16 %48 to i64, !dbg !7016
  %60 = getelementptr inbounds i8, i8* %57, i64 %59, !dbg !7016
  %61 = load i8, i8* %60, align 1, !dbg !7016
  %62 = getelementptr inbounds %struct.bmi160_aux_data, %struct.bmi160_aux_data* %0, i32 0, i32 0, !dbg !7017
  %63 = getelementptr inbounds [8 x i8], [8 x i8]* %62, i64 0, i64 5, !dbg !7018
  call void @qpr.arrayindex.i32.i4(i32 2472, i32 5, i4 -8)
  store i8 %61, i8* %63, align 1, !dbg !7019
  %64 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !7020
  %65 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %64, align 8, !dbg !7020
  %66 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %65, i32 0, i32 0, !dbg !7021
  %67 = load i8*, i8** %66, align 8, !dbg !7021
  call void @qpr.uinc.i16(i32 2475, i16 %58)
  %68 = add i16 %58, 1, !dbg !7022
  call void @llvm.dbg.value(metadata i16 %68, i64 0, metadata !6973, metadata !177), !dbg !7022
  %69 = zext i16 %58 to i64, !dbg !7023
  %70 = getelementptr inbounds i8, i8* %67, i64 %69, !dbg !7023
  %71 = load i8, i8* %70, align 1, !dbg !7023
  %72 = getelementptr inbounds %struct.bmi160_aux_data, %struct.bmi160_aux_data* %0, i32 0, i32 0, !dbg !7024
  %73 = getelementptr inbounds [8 x i8], [8 x i8]* %72, i64 0, i64 6, !dbg !7025
  call void @qpr.arrayindex.i32.i4(i32 2474, i32 6, i4 -8)
  store i8 %71, i8* %73, align 1, !dbg !7026
  %74 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 10, !dbg !7027
  %75 = load %struct.bmi160_fifo_frame*, %struct.bmi160_fifo_frame** %74, align 8, !dbg !7027
  %76 = getelementptr inbounds %struct.bmi160_fifo_frame, %struct.bmi160_fifo_frame* %75, i32 0, i32 0, !dbg !7028
  %77 = load i8*, i8** %76, align 8, !dbg !7028
  call void @qpr.uinc.i16(i32 2477, i16 %68)
  %78 = add i16 %68, 1, !dbg !7029
  call void @llvm.dbg.value(metadata i16 %78, i64 0, metadata !6973, metadata !177), !dbg !7029
  %79 = zext i16 %68 to i64, !dbg !7030
  %80 = getelementptr inbounds i8, i8* %77, i64 %79, !dbg !7030
  %81 = load i8, i8* %80, align 1, !dbg !7030
  %82 = getelementptr inbounds %struct.bmi160_aux_data, %struct.bmi160_aux_data* %0, i32 0, i32 0, !dbg !7031
  %83 = getelementptr inbounds [8 x i8], [8 x i8]* %82, i64 0, i64 7, !dbg !7032
  call void @qpr.arrayindex.i32.i4(i32 2476, i32 7, i4 -8)
  store i8 %81, i8* %83, align 1, !dbg !7033
  ret void, !dbg !7034
}

; Function Attrs: noinline nounwind uwtable
define signext i8 @bmi160_start_foc(%struct.bmi160_foc_conf*, %struct.bmi160_offsets*, %struct.bmi160_dev*) #1 !dbg !7035 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !7057, metadata !177), !dbg !7058
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !7059, metadata !177), !dbg !7060
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !7061, metadata !177), !dbg !7062
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !7063, metadata !177), !dbg !7064
  %4 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.bmi160_foc_conf* %0, i64 0, metadata !7057, metadata !177), !dbg !7058
  call void @llvm.dbg.value(metadata %struct.bmi160_offsets* %1, i64 0, metadata !7059, metadata !177), !dbg !7060
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %2, i64 0, metadata !7061, metadata !177), !dbg !7062
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !7065
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !7061, metadata !177), !dbg !7065
  call void @llvm.dbg.declare(metadata i8* %4, metadata !7066, metadata !177), !dbg !7067
  %5 = call signext i8 @null_ptr_check(%struct.bmi160_dev* @configStub) #5, !dbg !7068
  call void @llvm.dbg.value(metadata i8 %5, i64 0, metadata !7063, metadata !177), !dbg !7069
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 322, i8 %5)
  %6 = sext i8 %5 to i32, !dbg !7070
  %7 = icmp ne i32 %6, 0, !dbg !7072
  br i1 %7, label %8, label %9, !dbg !7073

; <label>:8:                                      ; preds = %3
  call void @qpr.arithmetic.overflow.ssub.i32(i32 324, i32 0, i32 1)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 323, i32 -1)
  call void @llvm.dbg.value(metadata i8 -1, i64 0, metadata !7063, metadata !177), !dbg !7074
  br label %68, !dbg !7076

; <label>:9:                                      ; preds = %3
  %10 = call signext i8 @configure_offset_enable(%struct.bmi160_foc_conf* %0, %struct.bmi160_dev* @configStub) #5, !dbg !7077
  call void @llvm.dbg.value(metadata i8 %10, i64 0, metadata !7063, metadata !177), !dbg !7079
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 325, i8 %10)
  %11 = sext i8 %10 to i32, !dbg !7080
  %12 = icmp eq i32 %11, 0, !dbg !7082
  br i1 %12, label %13, label %66, !dbg !7083

; <label>:13:                                     ; preds = %9
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 326, i32 105)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 327, i32 1)
  %14 = call signext i8 @bmi160_get_regs(i8 zeroext 105, i8* %4, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !7084
  call void @llvm.dbg.value(metadata i8 %14, i64 0, metadata !7063, metadata !177), !dbg !7086
  %15 = load i8, i8* %4, align 1, !dbg !7087
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 329, i8 %15)
  %16 = zext i8 %15 to i32, !dbg !7087
  %17 = and i32 %16, -65, !dbg !7087
  %18 = getelementptr inbounds %struct.bmi160_foc_conf, %struct.bmi160_foc_conf* %0, i32 0, i32 0, !dbg !7087
  %19 = load i8, i8* %18, align 1, !dbg !7087
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 334, i8 %19)
  %20 = zext i8 %19 to i32, !dbg !7087
  call void @qpr.shift.by.amount.i32(i32 331, i32 %20, i32 6)
  call void @qpr.shift.by.negative.i32(i32 332, i32 %20, i32 6)
  call void @qpr.shift.of.negative.i32(i32 333, i32 %20, i32 6)
  %21 = shl i32 %20, 6, !dbg !7087
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 330, i32 %21)
  %22 = and i32 %21, 64, !dbg !7087
  %23 = or i32 %17, %22, !dbg !7087
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 328, i32 %23)
  %24 = trunc i32 %23 to i8, !dbg !7087
  store i8 %24, i8* %4, align 1, !dbg !7088
  %25 = load i8, i8* %4, align 1, !dbg !7089
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 336, i8 %25)
  %26 = zext i8 %25 to i32, !dbg !7089
  %27 = and i32 %26, -49, !dbg !7089
  %28 = getelementptr inbounds %struct.bmi160_foc_conf, %struct.bmi160_foc_conf* %0, i32 0, i32 1, !dbg !7089
  %29 = load i8, i8* %28, align 1, !dbg !7089
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 341, i8 %29)
  %30 = zext i8 %29 to i32, !dbg !7089
  call void @qpr.shift.by.amount.i32(i32 338, i32 %30, i32 4)
  call void @qpr.shift.by.negative.i32(i32 339, i32 %30, i32 4)
  call void @qpr.shift.of.negative.i32(i32 340, i32 %30, i32 4)
  %31 = shl i32 %30, 4, !dbg !7089
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 337, i32 %31)
  %32 = and i32 %31, 48, !dbg !7089
  %33 = or i32 %27, %32, !dbg !7089
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 335, i32 %33)
  %34 = trunc i32 %33 to i8, !dbg !7089
  store i8 %34, i8* %4, align 1, !dbg !7090
  %35 = load i8, i8* %4, align 1, !dbg !7091
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 343, i8 %35)
  %36 = zext i8 %35 to i32, !dbg !7091
  %37 = and i32 %36, -13, !dbg !7091
  %38 = getelementptr inbounds %struct.bmi160_foc_conf, %struct.bmi160_foc_conf* %0, i32 0, i32 2, !dbg !7091
  %39 = load i8, i8* %38, align 1, !dbg !7091
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 348, i8 %39)
  %40 = zext i8 %39 to i32, !dbg !7091
  call void @qpr.shift.by.amount.i32(i32 345, i32 %40, i32 2)
  call void @qpr.shift.by.negative.i32(i32 346, i32 %40, i32 2)
  call void @qpr.shift.of.negative.i32(i32 347, i32 %40, i32 2)
  %41 = shl i32 %40, 2, !dbg !7091
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 344, i32 %41)
  %42 = and i32 %41, 12, !dbg !7091
  %43 = or i32 %37, %42, !dbg !7091
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 342, i32 %43)
  %44 = trunc i32 %43 to i8, !dbg !7091
  store i8 %44, i8* %4, align 1, !dbg !7092
  %45 = load i8, i8* %4, align 1, !dbg !7093
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 350, i8 %45)
  %46 = zext i8 %45 to i32, !dbg !7093
  %47 = and i32 %46, -4, !dbg !7093
  %48 = getelementptr inbounds %struct.bmi160_foc_conf, %struct.bmi160_foc_conf* %0, i32 0, i32 3, !dbg !7093
  %49 = load i8, i8* %48, align 1, !dbg !7093
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 351, i8 %49)
  %50 = zext i8 %49 to i32, !dbg !7093
  %51 = and i32 %50, 3, !dbg !7093
  %52 = or i32 %47, %51, !dbg !7093
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 349, i32 %52)
  %53 = trunc i32 %52 to i8, !dbg !7093
  store i8 %53, i8* %4, align 1, !dbg !7094
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 352, i8 %14)
  %54 = sext i8 %14 to i32, !dbg !7095
  %55 = icmp eq i32 %54, 0, !dbg !7097
  br i1 %55, label %56, label %64, !dbg !7098

; <label>:56:                                     ; preds = %13
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 353, i32 105)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 354, i32 1)
  %57 = call signext i8 @bmi160_set_regs(i8 zeroext 105, i8* %4, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !7099
  call void @llvm.dbg.value(metadata i8 %57, i64 0, metadata !7063, metadata !177), !dbg !7101
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 355, i8 %57)
  %58 = sext i8 %57 to i32, !dbg !7102
  %59 = icmp eq i32 %58, 0, !dbg !7104
  br i1 %59, label %60, label %62, !dbg !7105

; <label>:60:                                     ; preds = %56
  %61 = call signext i8 @trigger_foc(%struct.bmi160_offsets* %1, %struct.bmi160_dev* @configStub) #5, !dbg !7106
  call void @llvm.dbg.value(metadata i8 %61, i64 0, metadata !7063, metadata !177), !dbg !7108
  br label %62, !dbg !7109

; <label>:62:                                     ; preds = %60, %56
  %63 = phi i8 [ %61, %60 ], [ %57, %56 ]
  call void @llvm.dbg.value(metadata i8 %63, i64 0, metadata !7063, metadata !177), !dbg !7064
  br label %64, !dbg !7110

; <label>:64:                                     ; preds = %62, %13
  %65 = phi i8 [ %63, %62 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata i8 %65, i64 0, metadata !7063, metadata !177), !dbg !7064
  br label %66, !dbg !7111

; <label>:66:                                     ; preds = %64, %9
  %67 = phi i8 [ %65, %64 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i8 %67, i64 0, metadata !7063, metadata !177), !dbg !7064
  br label %68

; <label>:68:                                     ; preds = %66, %8
  %69 = phi i8 [ -1, %8 ], [ %67, %66 ]
  call void @llvm.dbg.value(metadata i8 %69, i64 0, metadata !7063, metadata !177), !dbg !7064
  ret i8 %69, !dbg !7112
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @configure_offset_enable(%struct.bmi160_foc_conf*, %struct.bmi160_dev*) #1 !dbg !7113 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !7116, metadata !177), !dbg !7117
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !7118, metadata !177), !dbg !7119
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !7120, metadata !177), !dbg !7121
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.bmi160_foc_conf* %0, i64 0, metadata !7116, metadata !177), !dbg !7117
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %1, i64 0, metadata !7118, metadata !177), !dbg !7119
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !7122
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !7118, metadata !177), !dbg !7122
  call void @llvm.dbg.declare(metadata i8* %3, metadata !7123, metadata !177), !dbg !7124
  %4 = call signext i8 @null_ptr_check(%struct.bmi160_dev* @configStub) #5, !dbg !7125
  call void @llvm.dbg.value(metadata i8 %4, i64 0, metadata !7120, metadata !177), !dbg !7126
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 2554, i8 %4)
  %5 = sext i8 %4 to i32, !dbg !7127
  %6 = icmp ne i32 %5, 0, !dbg !7129
  br i1 %6, label %7, label %8, !dbg !7130

; <label>:7:                                      ; preds = %2
  call void @qpr.arithmetic.overflow.ssub.i32(i32 2556, i32 0, i32 1)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 2555, i32 -1)
  call void @llvm.dbg.value(metadata i8 -1, i64 0, metadata !7120, metadata !177), !dbg !7131
  br label %36, !dbg !7133

; <label>:8:                                      ; preds = %2
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 2557, i32 119)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 2558, i32 1)
  %9 = call signext i8 @bmi160_get_regs(i8 zeroext 119, i8* %3, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !7134
  call void @llvm.dbg.value(metadata i8 %9, i64 0, metadata !7120, metadata !177), !dbg !7136
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 2559, i8 %9)
  %10 = sext i8 %9 to i32, !dbg !7137
  %11 = icmp eq i32 %10, 0, !dbg !7139
  br i1 %11, label %12, label %34, !dbg !7140

; <label>:12:                                     ; preds = %8
  %13 = load i8, i8* %3, align 1, !dbg !7141
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 2561, i8 %13)
  %14 = zext i8 %13 to i32, !dbg !7141
  %15 = and i32 %14, -129, !dbg !7141
  %16 = getelementptr inbounds %struct.bmi160_foc_conf, %struct.bmi160_foc_conf* %0, i32 0, i32 5, !dbg !7141
  %17 = load i8, i8* %16, align 1, !dbg !7141
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 2566, i8 %17)
  %18 = zext i8 %17 to i32, !dbg !7141
  call void @qpr.shift.by.amount.i32(i32 2563, i32 %18, i32 7)
  call void @qpr.shift.by.negative.i32(i32 2564, i32 %18, i32 7)
  call void @qpr.shift.of.negative.i32(i32 2565, i32 %18, i32 7)
  %19 = shl i32 %18, 7, !dbg !7141
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 2562, i32 %19)
  %20 = and i32 %19, 128, !dbg !7141
  %21 = or i32 %15, %20, !dbg !7141
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 2560, i32 %21)
  %22 = trunc i32 %21 to i8, !dbg !7141
  store i8 %22, i8* %3, align 1, !dbg !7143
  %23 = load i8, i8* %3, align 1, !dbg !7144
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 2568, i8 %23)
  %24 = zext i8 %23 to i32, !dbg !7144
  %25 = and i32 %24, -65, !dbg !7144
  %26 = getelementptr inbounds %struct.bmi160_foc_conf, %struct.bmi160_foc_conf* %0, i32 0, i32 4, !dbg !7144
  %27 = load i8, i8* %26, align 1, !dbg !7144
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 2573, i8 %27)
  %28 = zext i8 %27 to i32, !dbg !7144
  call void @qpr.shift.by.amount.i32(i32 2570, i32 %28, i32 6)
  call void @qpr.shift.by.negative.i32(i32 2571, i32 %28, i32 6)
  call void @qpr.shift.of.negative.i32(i32 2572, i32 %28, i32 6)
  %29 = shl i32 %28, 6, !dbg !7144
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 2569, i32 %29)
  %30 = and i32 %29, 64, !dbg !7144
  %31 = or i32 %25, %30, !dbg !7144
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 2567, i32 %31)
  %32 = trunc i32 %31 to i8, !dbg !7144
  store i8 %32, i8* %3, align 1, !dbg !7145
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 2574, i32 119)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 2575, i32 1)
  %33 = call signext i8 @bmi160_set_regs(i8 zeroext 119, i8* %3, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !7146
  call void @llvm.dbg.value(metadata i8 %33, i64 0, metadata !7120, metadata !177), !dbg !7147
  br label %34, !dbg !7148

; <label>:34:                                     ; preds = %12, %8
  %35 = phi i8 [ %33, %12 ], [ %9, %8 ]
  call void @llvm.dbg.value(metadata i8 %35, i64 0, metadata !7120, metadata !177), !dbg !7121
  br label %36

; <label>:36:                                     ; preds = %34, %7
  %37 = phi i8 [ -1, %7 ], [ %35, %34 ]
  call void @llvm.dbg.value(metadata i8 %37, i64 0, metadata !7120, metadata !177), !dbg !7121
  ret i8 %37, !dbg !7149
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @trigger_foc(%struct.bmi160_offsets*, %struct.bmi160_dev*) #1 !dbg !7150 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !7153, metadata !177), !dbg !7154
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !7155, metadata !177), !dbg !7156
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !7157, metadata !177), !dbg !7158
  %3 = alloca i8, align 1
  %4 = alloca i8, align 1
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !7159, metadata !177), !dbg !7160
  %5 = alloca [20 x i8], align 16
  call void @llvm.dbg.value(metadata %struct.bmi160_offsets* %0, i64 0, metadata !7153, metadata !177), !dbg !7154
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %1, i64 0, metadata !7155, metadata !177), !dbg !7156
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !7161
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !7155, metadata !177), !dbg !7161
  call void @llvm.dbg.declare(metadata i8* %3, metadata !7162, metadata !177), !dbg !7163
  call void @llvm.dbg.declare(metadata i8* %4, metadata !7164, metadata !177), !dbg !7165
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 2576, i32 3)
  store i8 3, i8* %4, align 1, !dbg !7165
  call void @qpr.implicit.conversion.overflow.s32.u8(i32 2577, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !7159, metadata !177), !dbg !7160
  call void @llvm.dbg.declare(metadata [20 x i8]* %5, metadata !7166, metadata !177), !dbg !7170
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 2578, i32 126)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 2579, i32 1)
  %6 = call signext i8 @bmi160_set_regs(i8 zeroext 126, i8* %4, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !7171
  call void @llvm.dbg.value(metadata i8 %6, i64 0, metadata !7157, metadata !177), !dbg !7172
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 2580, i8 %6)
  %7 = sext i8 %6 to i32, !dbg !7173
  %8 = icmp eq i32 %7, 0, !dbg !7175
  br i1 %8, label %9, label %55, !dbg !7176

; <label>:9:                                      ; preds = %2
  %10 = call signext i8 @get_foc_status(i8* %3, %struct.bmi160_dev* @configStub) #5, !dbg !7177
  call void @llvm.dbg.value(metadata i8 %10, i64 0, metadata !7157, metadata !177), !dbg !7179
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 2581, i8 %10)
  %11 = sext i8 %10 to i32, !dbg !7180
  %12 = icmp ne i32 %11, 0, !dbg !7182
  br i1 %12, label %17, label %13, !dbg !7183

; <label>:13:                                     ; preds = %9
  %14 = load i8, i8* %3, align 1, !dbg !7184
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 2582, i8 %14)
  %15 = zext i8 %14 to i32, !dbg !7184
  %16 = icmp ne i32 %15, 1, !dbg !7186
  br i1 %16, label %17, label %46, !dbg !7187

; <label>:17:                                     ; preds = %13, %9
  br label %18, !dbg !7189

; <label>:18:                                     ; preds = %29, %17
  %19 = phi i8 [ 0, %17 ], [ %33, %29 ]
  %20 = phi i8 [ %10, %17 ], [ %32, %29 ]
  call void @llvm.dbg.value(metadata i8 %20, i64 0, metadata !7157, metadata !177), !dbg !7158
  call void @llvm.dbg.value(metadata i8 %19, i64 0, metadata !7159, metadata !177), !dbg !7160
  %21 = load i8, i8* %3, align 1, !dbg !7191
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 2583, i8 %21)
  %22 = zext i8 %21 to i32, !dbg !7191
  %23 = icmp ne i32 %22, 1, !dbg !7193
  br i1 %23, label %24, label %27, !dbg !7194

; <label>:24:                                     ; preds = %18
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 2584, i8 %19)
  %25 = zext i8 %19 to i32, !dbg !7195
  %26 = icmp slt i32 %25, 11, !dbg !7197
  br label %27

; <label>:27:                                     ; preds = %24, %18
  %28 = phi i1 [ false, %18 ], [ %26, %24 ]
  br i1 %28, label %29, label %34, !dbg !7198

; <label>:29:                                     ; preds = %27
  %30 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 13, !dbg !7200
  %31 = load void (i32)*, void (i32)** %30, align 8, !dbg !7200
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 2585, i32 25)
  call void %31(i32 25) #5, !dbg !7202
  %32 = call signext i8 @get_foc_status(i8* %3, %struct.bmi160_dev* @configStub) #5, !dbg !7203
  call void @llvm.dbg.value(metadata i8 %32, i64 0, metadata !7157, metadata !177), !dbg !7204
  call void @qpr.uinc.i8(i32 2586, i8 %19)
  %33 = add i8 %19, 1, !dbg !7205
  call void @llvm.dbg.value(metadata i8 %33, i64 0, metadata !7159, metadata !177), !dbg !7205
  br label %18, !dbg !7206, !llvm.loop !7208

; <label>:34:                                     ; preds = %27
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 2587, i8 %20)
  %35 = sext i8 %20 to i32, !dbg !7210
  %36 = icmp eq i32 %35, 0, !dbg !7212
  br i1 %36, label %37, label %43, !dbg !7213

; <label>:37:                                     ; preds = %34
  %38 = load i8, i8* %3, align 1, !dbg !7214
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 2588, i8 %38)
  %39 = zext i8 %38 to i32, !dbg !7214
  %40 = icmp eq i32 %39, 1, !dbg !7216
  br i1 %40, label %41, label %43, !dbg !7217

; <label>:41:                                     ; preds = %37
  %42 = call signext i8 @bmi160_get_offsets(%struct.bmi160_offsets* %0, %struct.bmi160_dev* @configStub) #5, !dbg !7218
  call void @llvm.dbg.value(metadata i8 %42, i64 0, metadata !7157, metadata !177), !dbg !7220
  br label %44, !dbg !7221

; <label>:43:                                     ; preds = %37, %34
  call void @qpr.arithmetic.overflow.ssub.i32(i32 2590, i32 0, i32 11)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 2589, i32 -11)
  call void @llvm.dbg.value(metadata i8 -11, i64 0, metadata !7157, metadata !177), !dbg !7222
  br label %44

; <label>:44:                                     ; preds = %43, %41
  %45 = phi i8 [ %42, %41 ], [ -11, %43 ]
  call void @llvm.dbg.value(metadata i8 %45, i64 0, metadata !7157, metadata !177), !dbg !7158
  br label %46, !dbg !7224

; <label>:46:                                     ; preds = %44, %13
  %47 = phi i8 [ %45, %44 ], [ %10, %13 ]
  call void @llvm.dbg.value(metadata i8 %47, i64 0, metadata !7157, metadata !177), !dbg !7158
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 2591, i8 %47)
  %48 = sext i8 %47 to i32, !dbg !7225
  %49 = icmp eq i32 %48, 0, !dbg !7227
  br i1 %49, label %50, label %53, !dbg !7228

; <label>:50:                                     ; preds = %46
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 2592, i32 12)
  %51 = getelementptr inbounds [20 x i8], [20 x i8]* %5, i32 0, i32 0, !dbg !7229
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 2593, i32 20)
  %52 = call signext i8 @bmi160_get_regs(i8 zeroext 12, i8* %51, i16 zeroext 20, %struct.bmi160_dev* @configStub) #5, !dbg !7231
  call void @llvm.dbg.value(metadata i8 %52, i64 0, metadata !7157, metadata !177), !dbg !7232
  br label %53, !dbg !7233

; <label>:53:                                     ; preds = %50, %46
  %54 = phi i8 [ %52, %50 ], [ %47, %46 ]
  call void @llvm.dbg.value(metadata i8 %54, i64 0, metadata !7157, metadata !177), !dbg !7158
  br label %55, !dbg !7234

; <label>:55:                                     ; preds = %53, %2
  %56 = phi i8 [ %54, %53 ], [ %6, %2 ]
  call void @llvm.dbg.value(metadata i8 %56, i64 0, metadata !7157, metadata !177), !dbg !7158
  ret i8 %56, !dbg !7235
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @get_foc_status(i8*, %struct.bmi160_dev*) #1 !dbg !7236 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !7237, metadata !177), !dbg !7238
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !7239, metadata !177), !dbg !7240
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !7241, metadata !177), !dbg !7242
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !7237, metadata !177), !dbg !7238
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %1, i64 0, metadata !7239, metadata !177), !dbg !7240
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !7243
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !7239, metadata !177), !dbg !7243
  call void @llvm.dbg.declare(metadata i8* %3, metadata !7244, metadata !177), !dbg !7245
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 2548, i32 27)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 2549, i32 1)
  %4 = call signext i8 @bmi160_get_regs(i8 zeroext 27, i8* %3, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !7246
  call void @llvm.dbg.value(metadata i8 %4, i64 0, metadata !7241, metadata !177), !dbg !7247
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 2550, i8 %4)
  %5 = sext i8 %4 to i32, !dbg !7248
  %6 = icmp eq i32 %5, 0, !dbg !7250
  br i1 %6, label %7, label %13, !dbg !7251

; <label>:7:                                      ; preds = %2
  %8 = load i8, i8* %3, align 1, !dbg !7252
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 2553, i8 %8)
  %9 = zext i8 %8 to i32, !dbg !7252
  %10 = and i32 %9, 8, !dbg !7252
  call void @qpr.shift.by.amount.i32(i32 2552, i32 %10, i32 3)
  %11 = lshr i32 %10, 3, !dbg !7252
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 2551, i32 %11)
  %12 = trunc i32 %11 to i8, !dbg !7252
  store i8 %12, i8* %0, align 1, !dbg !7254
  br label %13, !dbg !7255

; <label>:13:                                     ; preds = %7, %2
  ret i8 %4, !dbg !7256
}

; Function Attrs: noinline nounwind uwtable
define signext i8 @bmi160_get_offsets(%struct.bmi160_offsets*, %struct.bmi160_dev*) #1 !dbg !7257 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !7258, metadata !177), !dbg !7259
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !7260, metadata !177), !dbg !7261
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !7262, metadata !177), !dbg !7263
  %3 = alloca [7 x i8], align 1
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !7264, metadata !177), !dbg !7265
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !7266, metadata !177), !dbg !7267
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !7268, metadata !177), !dbg !7269
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !7270, metadata !177), !dbg !7271
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !7272, metadata !177), !dbg !7273
  call void @llvm.dbg.value(metadata %struct.bmi160_offsets* %0, i64 0, metadata !7258, metadata !177), !dbg !7259
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %1, i64 0, metadata !7260, metadata !177), !dbg !7261
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !7274
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !7260, metadata !177), !dbg !7274
  call void @llvm.dbg.declare(metadata [7 x i8]* %3, metadata !7275, metadata !177), !dbg !7279
  %4 = call signext i8 @null_ptr_check(%struct.bmi160_dev* @configStub) #5, !dbg !7280
  call void @llvm.dbg.value(metadata i8 %4, i64 0, metadata !7262, metadata !177), !dbg !7281
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 356, i8 %4)
  %5 = sext i8 %4 to i32, !dbg !7282
  %6 = icmp ne i32 %5, 0, !dbg !7284
  br i1 %6, label %7, label %8, !dbg !7285

; <label>:7:                                      ; preds = %2
  call void @qpr.arithmetic.overflow.ssub.i32(i32 358, i32 0, i32 1)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 357, i32 -1)
  call void @llvm.dbg.value(metadata i8 -1, i64 0, metadata !7262, metadata !177), !dbg !7286
  br label %85, !dbg !7288

; <label>:8:                                      ; preds = %2
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 359, i32 113)
  %9 = getelementptr inbounds [7 x i8], [7 x i8]* %3, i32 0, i32 0, !dbg !7289
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 360, i32 7)
  %10 = call signext i8 @bmi160_get_regs(i8 zeroext 113, i8* %9, i16 zeroext 7, %struct.bmi160_dev* @configStub) #5, !dbg !7291
  call void @llvm.dbg.value(metadata i8 %10, i64 0, metadata !7262, metadata !177), !dbg !7292
  %11 = getelementptr inbounds [7 x i8], [7 x i8]* %3, i64 0, i64 0, !dbg !7293
  %12 = load i8, i8* %11, align 1, !dbg !7293
  call void @qpr.arrayindex.i32.i3(i32 362, i32 0, i3 -1)
  call void @qpr.explicit.conversion.overflow.u8.s8(i32 361, i8 %12)
  %13 = getelementptr inbounds %struct.bmi160_offsets, %struct.bmi160_offsets* %0, i32 0, i32 0, !dbg !7294
  store i8 %12, i8* %13, align 2, !dbg !7295
  %14 = getelementptr inbounds [7 x i8], [7 x i8]* %3, i64 0, i64 1, !dbg !7296
  %15 = load i8, i8* %14, align 1, !dbg !7296
  call void @qpr.arrayindex.i32.i3(i32 364, i32 1, i3 -1)
  call void @qpr.explicit.conversion.overflow.u8.s8(i32 363, i8 %15)
  %16 = getelementptr inbounds %struct.bmi160_offsets, %struct.bmi160_offsets* %0, i32 0, i32 1, !dbg !7297
  store i8 %15, i8* %16, align 1, !dbg !7298
  %17 = getelementptr inbounds [7 x i8], [7 x i8]* %3, i64 0, i64 2, !dbg !7299
  %18 = load i8, i8* %17, align 1, !dbg !7299
  call void @qpr.arrayindex.i32.i3(i32 366, i32 2, i3 -1)
  call void @qpr.explicit.conversion.overflow.u8.s8(i32 365, i8 %18)
  %19 = getelementptr inbounds %struct.bmi160_offsets, %struct.bmi160_offsets* %0, i32 0, i32 2, !dbg !7300
  store i8 %18, i8* %19, align 2, !dbg !7301
  %20 = getelementptr inbounds [7 x i8], [7 x i8]* %3, i64 0, i64 3, !dbg !7302
  %21 = load i8, i8* %20, align 1, !dbg !7302
  call void @qpr.arrayindex.i32.i3(i32 367, i32 3, i3 -1)
  call void @llvm.dbg.value(metadata i8 %21, i64 0, metadata !7264, metadata !177), !dbg !7303
  %22 = getelementptr inbounds [7 x i8], [7 x i8]* %3, i64 0, i64 6, !dbg !7304
  %23 = load i8, i8* %22, align 1, !dbg !7304
  call void @qpr.arrayindex.i32.i3(i32 370, i32 6, i3 -1)
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 369, i8 %23)
  %24 = zext i8 %23 to i32, !dbg !7304
  %25 = and i32 %24, 3, !dbg !7304
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 368, i32 %25)
  %26 = trunc i32 %25 to i8, !dbg !7304
  call void @llvm.dbg.value(metadata i8 %26, i64 0, metadata !7266, metadata !177), !dbg !7305
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 375, i8 %26)
  %27 = zext i8 %26 to i32, !dbg !7306
  call void @qpr.shift.by.amount.i32(i32 372, i32 %27, i32 14)
  call void @qpr.shift.by.negative.i32(i32 373, i32 %27, i32 14)
  call void @qpr.shift.of.negative.i32(i32 374, i32 %27, i32 14)
  %28 = shl i32 %27, 14, !dbg !7307
  call void @qpr.explicit.conversion.overflow.s32.s16(i32 371, i32 %28)
  %29 = trunc i32 %28 to i16, !dbg !7308
  call void @llvm.dbg.value(metadata i16 %29, i64 0, metadata !7268, metadata !177), !dbg !7309
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 380, i8 %21)
  %30 = zext i8 %21 to i32, !dbg !7310
  call void @qpr.shift.by.amount.i32(i32 377, i32 %30, i32 6)
  call void @qpr.shift.by.negative.i32(i32 378, i32 %30, i32 6)
  call void @qpr.shift.of.negative.i32(i32 379, i32 %30, i32 6)
  %31 = shl i32 %30, 6, !dbg !7311
  call void @qpr.implicit.conversion.overflow.s32.s16(i32 376, i32 %31)
  %32 = trunc i32 %31 to i16, !dbg !7310
  call void @llvm.dbg.value(metadata i16 %32, i64 0, metadata !7270, metadata !177), !dbg !7312
  call void @qpr.implicit.conversion.overflow.s16.s32(i32 382, i16 %29)
  %33 = sext i16 %29 to i32, !dbg !7313
  call void @qpr.implicit.conversion.overflow.s16.s32(i32 383, i16 %32)
  %34 = sext i16 %32 to i32, !dbg !7314
  %35 = or i32 %33, %34, !dbg !7315
  call void @qpr.implicit.conversion.overflow.s32.s16(i32 381, i32 %35)
  %36 = trunc i32 %35 to i16, !dbg !7313
  call void @llvm.dbg.value(metadata i16 %36, i64 0, metadata !7272, metadata !177), !dbg !7316
  call void @qpr.implicit.conversion.overflow.s16.s32(i32 387, i16 %36)
  %37 = sext i16 %36 to i32, !dbg !7317
  call void @qpr.arithmetic.overflow.div.i32(i32 385, i32 %37, i32 64)
  call void @qpr.divbyzero.i32(i32 386, i32 %37, i32 64)
  %38 = sdiv i32 %37, 64, !dbg !7318
  call void @qpr.explicit.conversion.overflow.s32.s16(i32 384, i32 %38)
  %39 = trunc i32 %38 to i16, !dbg !7319
  %40 = getelementptr inbounds %struct.bmi160_offsets, %struct.bmi160_offsets* %0, i32 0, i32 3, !dbg !7320
  store i16 %39, i16* %40, align 2, !dbg !7321
  %41 = getelementptr inbounds [7 x i8], [7 x i8]* %3, i64 0, i64 4, !dbg !7322
  %42 = load i8, i8* %41, align 1, !dbg !7322
  call void @qpr.arrayindex.i32.i3(i32 388, i32 4, i3 -1)
  call void @llvm.dbg.value(metadata i8 %42, i64 0, metadata !7264, metadata !177), !dbg !7323
  %43 = getelementptr inbounds [7 x i8], [7 x i8]* %3, i64 0, i64 6, !dbg !7324
  %44 = load i8, i8* %43, align 1, !dbg !7324
  call void @qpr.arrayindex.i32.i3(i32 392, i32 6, i3 -1)
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 391, i8 %44)
  %45 = zext i8 %44 to i32, !dbg !7324
  %46 = and i32 %45, 12, !dbg !7324
  call void @qpr.shift.by.amount.i32(i32 390, i32 %46, i32 2)
  %47 = lshr i32 %46, 2, !dbg !7324
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 389, i32 %47)
  %48 = trunc i32 %47 to i8, !dbg !7324
  call void @llvm.dbg.value(metadata i8 %48, i64 0, metadata !7266, metadata !177), !dbg !7325
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 397, i8 %48)
  %49 = zext i8 %48 to i32, !dbg !7326
  call void @qpr.shift.by.amount.i32(i32 394, i32 %49, i32 14)
  call void @qpr.shift.by.negative.i32(i32 395, i32 %49, i32 14)
  call void @qpr.shift.of.negative.i32(i32 396, i32 %49, i32 14)
  %50 = shl i32 %49, 14, !dbg !7327
  call void @qpr.explicit.conversion.overflow.s32.s16(i32 393, i32 %50)
  %51 = trunc i32 %50 to i16, !dbg !7328
  call void @llvm.dbg.value(metadata i16 %51, i64 0, metadata !7268, metadata !177), !dbg !7329
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 402, i8 %42)
  %52 = zext i8 %42 to i32, !dbg !7330
  call void @qpr.shift.by.amount.i32(i32 399, i32 %52, i32 6)
  call void @qpr.shift.by.negative.i32(i32 400, i32 %52, i32 6)
  call void @qpr.shift.of.negative.i32(i32 401, i32 %52, i32 6)
  %53 = shl i32 %52, 6, !dbg !7331
  call void @qpr.implicit.conversion.overflow.s32.s16(i32 398, i32 %53)
  %54 = trunc i32 %53 to i16, !dbg !7330
  call void @llvm.dbg.value(metadata i16 %54, i64 0, metadata !7270, metadata !177), !dbg !7332
  call void @qpr.implicit.conversion.overflow.s16.s32(i32 404, i16 %51)
  %55 = sext i16 %51 to i32, !dbg !7333
  call void @qpr.implicit.conversion.overflow.s16.s32(i32 405, i16 %54)
  %56 = sext i16 %54 to i32, !dbg !7334
  %57 = or i32 %55, %56, !dbg !7335
  call void @qpr.implicit.conversion.overflow.s32.s16(i32 403, i32 %57)
  %58 = trunc i32 %57 to i16, !dbg !7333
  call void @llvm.dbg.value(metadata i16 %58, i64 0, metadata !7272, metadata !177), !dbg !7336
  call void @qpr.implicit.conversion.overflow.s16.s32(i32 409, i16 %58)
  %59 = sext i16 %58 to i32, !dbg !7337
  call void @qpr.arithmetic.overflow.div.i32(i32 407, i32 %59, i32 64)
  call void @qpr.divbyzero.i32(i32 408, i32 %59, i32 64)
  %60 = sdiv i32 %59, 64, !dbg !7338
  call void @qpr.explicit.conversion.overflow.s32.s16(i32 406, i32 %60)
  %61 = trunc i32 %60 to i16, !dbg !7339
  %62 = getelementptr inbounds %struct.bmi160_offsets, %struct.bmi160_offsets* %0, i32 0, i32 4, !dbg !7340
  store i16 %61, i16* %62, align 2, !dbg !7341
  %63 = getelementptr inbounds [7 x i8], [7 x i8]* %3, i64 0, i64 5, !dbg !7342
  %64 = load i8, i8* %63, align 1, !dbg !7342
  call void @qpr.arrayindex.i32.i3(i32 410, i32 5, i3 -1)
  call void @llvm.dbg.value(metadata i8 %64, i64 0, metadata !7264, metadata !177), !dbg !7343
  %65 = getelementptr inbounds [7 x i8], [7 x i8]* %3, i64 0, i64 6, !dbg !7344
  %66 = load i8, i8* %65, align 1, !dbg !7344
  call void @qpr.arrayindex.i32.i3(i32 414, i32 6, i3 -1)
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 413, i8 %66)
  %67 = zext i8 %66 to i32, !dbg !7344
  %68 = and i32 %67, 48, !dbg !7344
  call void @qpr.shift.by.amount.i32(i32 412, i32 %68, i32 4)
  %69 = lshr i32 %68, 4, !dbg !7344
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 411, i32 %69)
  %70 = trunc i32 %69 to i8, !dbg !7344
  call void @llvm.dbg.value(metadata i8 %70, i64 0, metadata !7266, metadata !177), !dbg !7345
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 419, i8 %70)
  %71 = zext i8 %70 to i32, !dbg !7346
  call void @qpr.shift.by.amount.i32(i32 416, i32 %71, i32 14)
  call void @qpr.shift.by.negative.i32(i32 417, i32 %71, i32 14)
  call void @qpr.shift.of.negative.i32(i32 418, i32 %71, i32 14)
  %72 = shl i32 %71, 14, !dbg !7347
  call void @qpr.explicit.conversion.overflow.s32.s16(i32 415, i32 %72)
  %73 = trunc i32 %72 to i16, !dbg !7348
  call void @llvm.dbg.value(metadata i16 %73, i64 0, metadata !7268, metadata !177), !dbg !7349
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 424, i8 %64)
  %74 = zext i8 %64 to i32, !dbg !7350
  call void @qpr.shift.by.amount.i32(i32 421, i32 %74, i32 6)
  call void @qpr.shift.by.negative.i32(i32 422, i32 %74, i32 6)
  call void @qpr.shift.of.negative.i32(i32 423, i32 %74, i32 6)
  %75 = shl i32 %74, 6, !dbg !7351
  call void @qpr.implicit.conversion.overflow.s32.s16(i32 420, i32 %75)
  %76 = trunc i32 %75 to i16, !dbg !7350
  call void @llvm.dbg.value(metadata i16 %76, i64 0, metadata !7270, metadata !177), !dbg !7352
  call void @qpr.implicit.conversion.overflow.s16.s32(i32 426, i16 %73)
  %77 = sext i16 %73 to i32, !dbg !7353
  call void @qpr.implicit.conversion.overflow.s16.s32(i32 427, i16 %76)
  %78 = sext i16 %76 to i32, !dbg !7354
  %79 = or i32 %77, %78, !dbg !7355
  call void @qpr.implicit.conversion.overflow.s32.s16(i32 425, i32 %79)
  %80 = trunc i32 %79 to i16, !dbg !7353
  call void @llvm.dbg.value(metadata i16 %80, i64 0, metadata !7272, metadata !177), !dbg !7356
  call void @qpr.implicit.conversion.overflow.s16.s32(i32 431, i16 %80)
  %81 = sext i16 %80 to i32, !dbg !7357
  call void @qpr.arithmetic.overflow.div.i32(i32 429, i32 %81, i32 64)
  call void @qpr.divbyzero.i32(i32 430, i32 %81, i32 64)
  %82 = sdiv i32 %81, 64, !dbg !7358
  call void @qpr.explicit.conversion.overflow.s32.s16(i32 428, i32 %82)
  %83 = trunc i32 %82 to i16, !dbg !7359
  %84 = getelementptr inbounds %struct.bmi160_offsets, %struct.bmi160_offsets* %0, i32 0, i32 5, !dbg !7360
  store i16 %83, i16* %84, align 2, !dbg !7361
  br label %85

; <label>:85:                                     ; preds = %8, %7
  %86 = phi i8 [ -1, %7 ], [ %10, %8 ]
  call void @llvm.dbg.value(metadata i8 %86, i64 0, metadata !7262, metadata !177), !dbg !7263
  ret i8 %86, !dbg !7362
}

; Function Attrs: inaccessiblememonly nounwind
define weak_odr void @qpr.arrayindex.i32.i3(i32, i32, i3) #0 {
  %4 = zext i3 %2 to i32
  %5 = icmp ult i32 %1, %4
  call void @llbmc.assert(i1 %5, i32 %0)
  ret void
}

; Function Attrs: inaccessiblememonly nounwind
define weak_odr void @qpr.explicit.conversion.overflow.u8.s8(i32, i8) #0 {
  %3 = icmp ule i8 %1, 127
  call void @llbmc.assert(i1 %3, i32 %0)
  ret void
}

; Function Attrs: inaccessiblememonly nounwind
define weak_odr void @qpr.implicit.conversion.overflow.s32.s16(i32, i32) #0 {
  %3 = icmp sge i32 %1, -32768
  %4 = icmp sle i32 %1, 32767
  %5 = and i1 %3, %4
  call void @llbmc.assert(i1 %5, i32 %0)
  ret void
}

; Function Attrs: inaccessiblememonly nounwind
define weak_odr void @qpr.arithmetic.overflow.div.i32(i32, i32, i32) #0 {
  %4 = icmp ne i32 %1, -2147483648
  %5 = icmp ne i32 %2, -1
  %6 = or i1 %4, %5
  call void @llbmc.assert(i1 %6, i32 %0)
  ret void
}

; Function Attrs: inaccessiblememonly nounwind
define weak_odr void @qpr.divbyzero.i32(i32, i32, i32) #0 {
  %4 = icmp ne i32 %2, 0
  call void @llbmc.assert(i1 %4, i32 %0)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define signext i8 @bmi160_set_offsets(%struct.bmi160_foc_conf*, %struct.bmi160_offsets*, %struct.bmi160_dev*) #1 !dbg !7363 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !7368, metadata !177), !dbg !7369
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !7370, metadata !177), !dbg !7371
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !7372, metadata !177), !dbg !7373
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !7374, metadata !177), !dbg !7375
  %4 = alloca [7 x i8], align 1
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !7376, metadata !177), !dbg !7377
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !7378, metadata !177), !dbg !7379
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !7380, metadata !177), !dbg !7381
  call void @llvm.dbg.value(metadata %struct.bmi160_foc_conf* %0, i64 0, metadata !7368, metadata !177), !dbg !7369
  call void @llvm.dbg.value(metadata %struct.bmi160_offsets* %1, i64 0, metadata !7370, metadata !177), !dbg !7371
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %2, i64 0, metadata !7372, metadata !177), !dbg !7373
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !7382
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !7372, metadata !177), !dbg !7382
  call void @llvm.dbg.declare(metadata [7 x i8]* %4, metadata !7383, metadata !177), !dbg !7384
  %5 = call signext i8 @null_ptr_check(%struct.bmi160_dev* @configStub) #5, !dbg !7385
  call void @llvm.dbg.value(metadata i8 %5, i64 0, metadata !7374, metadata !177), !dbg !7386
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 432, i8 %5)
  %6 = sext i8 %5 to i32, !dbg !7387
  %7 = icmp ne i32 %6, 0, !dbg !7389
  br i1 %7, label %8, label %9, !dbg !7390

; <label>:8:                                      ; preds = %3
  call void @qpr.arithmetic.overflow.ssub.i32(i32 434, i32 0, i32 1)
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 433, i32 -1)
  call void @llvm.dbg.value(metadata i8 -1, i64 0, metadata !7374, metadata !177), !dbg !7391
  br label %90, !dbg !7393

; <label>:9:                                      ; preds = %3
  %10 = getelementptr inbounds %struct.bmi160_offsets, %struct.bmi160_offsets* %1, i32 0, i32 0, !dbg !7394
  %11 = load i8, i8* %10, align 2, !dbg !7394
  call void @qpr.explicit.conversion.overflow.s8.u8(i32 436, i8 %11)
  %12 = getelementptr inbounds [7 x i8], [7 x i8]* %4, i64 0, i64 0, !dbg !7396
  call void @qpr.arrayindex.i32.i3(i32 435, i32 0, i3 -1)
  store i8 %11, i8* %12, align 1, !dbg !7397
  %13 = getelementptr inbounds %struct.bmi160_offsets, %struct.bmi160_offsets* %1, i32 0, i32 1, !dbg !7398
  %14 = load i8, i8* %13, align 1, !dbg !7398
  call void @qpr.explicit.conversion.overflow.s8.u8(i32 438, i8 %14)
  %15 = getelementptr inbounds [7 x i8], [7 x i8]* %4, i64 0, i64 1, !dbg !7399
  call void @qpr.arrayindex.i32.i3(i32 437, i32 1, i3 -1)
  store i8 %14, i8* %15, align 1, !dbg !7400
  %16 = getelementptr inbounds %struct.bmi160_offsets, %struct.bmi160_offsets* %1, i32 0, i32 2, !dbg !7401
  %17 = load i8, i8* %16, align 2, !dbg !7401
  call void @qpr.explicit.conversion.overflow.s8.u8(i32 440, i8 %17)
  %18 = getelementptr inbounds [7 x i8], [7 x i8]* %4, i64 0, i64 2, !dbg !7402
  call void @qpr.arrayindex.i32.i3(i32 439, i32 2, i3 -1)
  store i8 %17, i8* %18, align 1, !dbg !7403
  %19 = getelementptr inbounds %struct.bmi160_offsets, %struct.bmi160_offsets* %1, i32 0, i32 3, !dbg !7404
  %20 = load i16, i16* %19, align 2, !dbg !7404
  call void @qpr.implicit.conversion.overflow.s16.u32(i32 443, i16 %20)
  %21 = sext i16 %20 to i32, !dbg !7404
  %22 = and i32 %21, 255, !dbg !7404
  call void @qpr.explicit.conversion.overflow.u32.u8(i32 442, i32 %22)
  %23 = trunc i32 %22 to i8, !dbg !7404
  %24 = getelementptr inbounds [7 x i8], [7 x i8]* %4, i64 0, i64 3, !dbg !7405
  call void @qpr.arrayindex.i32.i3(i32 441, i32 3, i3 -1)
  store i8 %23, i8* %24, align 1, !dbg !7406
  %25 = getelementptr inbounds %struct.bmi160_offsets, %struct.bmi160_offsets* %1, i32 0, i32 4, !dbg !7407
  %26 = load i16, i16* %25, align 2, !dbg !7407
  call void @qpr.implicit.conversion.overflow.s16.u32(i32 446, i16 %26)
  %27 = sext i16 %26 to i32, !dbg !7407
  %28 = and i32 %27, 255, !dbg !7407
  call void @qpr.explicit.conversion.overflow.u32.u8(i32 445, i32 %28)
  %29 = trunc i32 %28 to i8, !dbg !7407
  %30 = getelementptr inbounds [7 x i8], [7 x i8]* %4, i64 0, i64 4, !dbg !7408
  call void @qpr.arrayindex.i32.i3(i32 444, i32 4, i3 -1)
  store i8 %29, i8* %30, align 1, !dbg !7409
  %31 = getelementptr inbounds %struct.bmi160_offsets, %struct.bmi160_offsets* %1, i32 0, i32 5, !dbg !7410
  %32 = load i16, i16* %31, align 2, !dbg !7410
  call void @qpr.implicit.conversion.overflow.s16.u32(i32 449, i16 %32)
  %33 = sext i16 %32 to i32, !dbg !7410
  %34 = and i32 %33, 255, !dbg !7410
  call void @qpr.explicit.conversion.overflow.u32.u8(i32 448, i32 %34)
  %35 = trunc i32 %34 to i8, !dbg !7410
  %36 = getelementptr inbounds [7 x i8], [7 x i8]* %4, i64 0, i64 5, !dbg !7411
  call void @qpr.arrayindex.i32.i3(i32 447, i32 5, i3 -1)
  store i8 %35, i8* %36, align 1, !dbg !7412
  %37 = getelementptr inbounds %struct.bmi160_offsets, %struct.bmi160_offsets* %1, i32 0, i32 3, !dbg !7413
  %38 = load i16, i16* %37, align 2, !dbg !7413
  call void @qpr.implicit.conversion.overflow.s16.u32(i32 452, i16 %38)
  %39 = sext i16 %38 to i32, !dbg !7413
  %40 = and i32 %39, 768, !dbg !7413
  call void @qpr.shift.by.amount.i32(i32 451, i32 %40, i32 8)
  %41 = lshr i32 %40, 8, !dbg !7413
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 450, i32 %41)
  %42 = trunc i32 %41 to i8, !dbg !7413
  call void @llvm.dbg.value(metadata i8 %42, i64 0, metadata !7376, metadata !177), !dbg !7414
  %43 = getelementptr inbounds %struct.bmi160_offsets, %struct.bmi160_offsets* %1, i32 0, i32 4, !dbg !7415
  %44 = load i16, i16* %43, align 2, !dbg !7415
  call void @qpr.implicit.conversion.overflow.s16.u32(i32 455, i16 %44)
  %45 = sext i16 %44 to i32, !dbg !7415
  %46 = and i32 %45, 768, !dbg !7415
  call void @qpr.shift.by.amount.i32(i32 454, i32 %46, i32 8)
  %47 = lshr i32 %46, 8, !dbg !7415
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 453, i32 %47)
  %48 = trunc i32 %47 to i8, !dbg !7415
  call void @llvm.dbg.value(metadata i8 %48, i64 0, metadata !7378, metadata !177), !dbg !7416
  %49 = getelementptr inbounds %struct.bmi160_offsets, %struct.bmi160_offsets* %1, i32 0, i32 5, !dbg !7417
  %50 = load i16, i16* %49, align 2, !dbg !7417
  call void @qpr.implicit.conversion.overflow.s16.u32(i32 458, i16 %50)
  %51 = sext i16 %50 to i32, !dbg !7417
  %52 = and i32 %51, 768, !dbg !7417
  call void @qpr.shift.by.amount.i32(i32 457, i32 %52, i32 8)
  %53 = lshr i32 %52, 8, !dbg !7417
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 456, i32 %53)
  %54 = trunc i32 %53 to i8, !dbg !7417
  call void @llvm.dbg.value(metadata i8 %54, i64 0, metadata !7380, metadata !177), !dbg !7418
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 464, i8 %54)
  %55 = zext i8 %54 to i32, !dbg !7419
  call void @qpr.shift.by.amount.i32(i32 461, i32 %55, i32 4)
  call void @qpr.shift.by.negative.i32(i32 462, i32 %55, i32 4)
  call void @qpr.shift.of.negative.i32(i32 463, i32 %55, i32 4)
  %56 = shl i32 %55, 4, !dbg !7420
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 468, i8 %48)
  %57 = zext i8 %48 to i32, !dbg !7421
  call void @qpr.shift.by.amount.i32(i32 465, i32 %57, i32 2)
  call void @qpr.shift.by.negative.i32(i32 466, i32 %57, i32 2)
  call void @qpr.shift.of.negative.i32(i32 467, i32 %57, i32 2)
  %58 = shl i32 %57, 2, !dbg !7422
  %59 = or i32 %56, %58, !dbg !7423
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 469, i8 %42)
  %60 = zext i8 %42 to i32, !dbg !7424
  %61 = or i32 %59, %60, !dbg !7425
  call void @qpr.explicit.conversion.overflow.s32.u8(i32 460, i32 %61)
  %62 = trunc i32 %61 to i8, !dbg !7426
  %63 = getelementptr inbounds [7 x i8], [7 x i8]* %4, i64 0, i64 6, !dbg !7427
  call void @qpr.arrayindex.i32.i3(i32 459, i32 6, i3 -1)
  store i8 %62, i8* %63, align 1, !dbg !7428
  %64 = getelementptr inbounds [7 x i8], [7 x i8]* %4, i64 0, i64 6, !dbg !7429
  %65 = load i8, i8* %64, align 1, !dbg !7429
  call void @qpr.arrayindex.i32.i3(i32 473, i32 6, i3 -1)
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 472, i8 %65)
  %66 = zext i8 %65 to i32, !dbg !7429
  %67 = and i32 %66, -129, !dbg !7429
  %68 = getelementptr inbounds %struct.bmi160_foc_conf, %struct.bmi160_foc_conf* %0, i32 0, i32 5, !dbg !7429
  %69 = load i8, i8* %68, align 1, !dbg !7429
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 478, i8 %69)
  %70 = zext i8 %69 to i32, !dbg !7429
  call void @qpr.shift.by.amount.i32(i32 475, i32 %70, i32 7)
  call void @qpr.shift.by.negative.i32(i32 476, i32 %70, i32 7)
  call void @qpr.shift.of.negative.i32(i32 477, i32 %70, i32 7)
  %71 = shl i32 %70, 7, !dbg !7429
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 474, i32 %71)
  %72 = and i32 %71, 128, !dbg !7429
  %73 = or i32 %67, %72, !dbg !7429
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 471, i32 %73)
  %74 = trunc i32 %73 to i8, !dbg !7429
  %75 = getelementptr inbounds [7 x i8], [7 x i8]* %4, i64 0, i64 6, !dbg !7430
  call void @qpr.arrayindex.i32.i3(i32 470, i32 6, i3 -1)
  store i8 %74, i8* %75, align 1, !dbg !7431
  %76 = getelementptr inbounds [7 x i8], [7 x i8]* %4, i64 0, i64 6, !dbg !7432
  %77 = load i8, i8* %76, align 1, !dbg !7432
  call void @qpr.arrayindex.i32.i3(i32 482, i32 6, i3 -1)
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 481, i8 %77)
  %78 = zext i8 %77 to i32, !dbg !7432
  %79 = and i32 %78, -65, !dbg !7432
  %80 = getelementptr inbounds %struct.bmi160_foc_conf, %struct.bmi160_foc_conf* %0, i32 0, i32 4, !dbg !7432
  %81 = load i8, i8* %80, align 1, !dbg !7432
  call void @qpr.implicit.conversion.overflow.u8.s32(i32 487, i8 %81)
  %82 = zext i8 %81 to i32, !dbg !7432
  call void @qpr.shift.by.amount.i32(i32 484, i32 %82, i32 6)
  call void @qpr.shift.by.negative.i32(i32 485, i32 %82, i32 6)
  call void @qpr.shift.of.negative.i32(i32 486, i32 %82, i32 6)
  %83 = shl i32 %82, 6, !dbg !7432
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 483, i32 %83)
  %84 = and i32 %83, 64, !dbg !7432
  %85 = or i32 %79, %84, !dbg !7432
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 480, i32 %85)
  %86 = trunc i32 %85 to i8, !dbg !7432
  %87 = getelementptr inbounds [7 x i8], [7 x i8]* %4, i64 0, i64 6, !dbg !7433
  call void @qpr.arrayindex.i32.i3(i32 479, i32 6, i3 -1)
  store i8 %86, i8* %87, align 1, !dbg !7434
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 488, i32 113)
  %88 = getelementptr inbounds [7 x i8], [7 x i8]* %4, i32 0, i32 0, !dbg !7435
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 489, i32 7)
  %89 = call signext i8 @bmi160_set_regs(i8 zeroext 113, i8* %88, i16 zeroext 7, %struct.bmi160_dev* @configStub) #5, !dbg !7436
  call void @llvm.dbg.value(metadata i8 %89, i64 0, metadata !7374, metadata !177), !dbg !7437
  br label %90

; <label>:90:                                     ; preds = %9, %8
  %91 = phi i8 [ -1, %8 ], [ %89, %9 ]
  call void @llvm.dbg.value(metadata i8 %91, i64 0, metadata !7374, metadata !177), !dbg !7375
  ret i8 %91, !dbg !7438
}

; Function Attrs: inaccessiblememonly nounwind
define weak_odr void @qpr.explicit.conversion.overflow.s8.u8(i32, i8) #0 {
  %3 = icmp sge i8 %1, 0
  call void @llbmc.assert(i1 %3, i32 %0)
  ret void
}

; Function Attrs: inaccessiblememonly nounwind
define weak_odr void @qpr.implicit.conversion.overflow.s16.u32(i32, i16) #0 {
  call void @llbmc.assert(i1 true, i32 %0)
  ret void
}

; Function Attrs: inaccessiblememonly nounwind
define weak_odr void @qpr.explicit.conversion.overflow.u32.u8(i32, i32) #0 {
  %3 = icmp ule i32 %1, 255
  call void @llbmc.assert(i1 %3, i32 %0)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define signext i8 @bmi160_update_nvm(%struct.bmi160_dev*) #1 !dbg !7439 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !7440, metadata !177), !dbg !7441
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !7442, metadata !177), !dbg !7443
  %2 = alloca i8, align 1
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %0, i64 0, metadata !7440, metadata !177), !dbg !7441
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !7444
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !7440, metadata !177), !dbg !7444
  call void @llvm.dbg.declare(metadata i8* %2, metadata !7445, metadata !177), !dbg !7446
  call void @llvm.dbg.declare(metadata i8* %3, metadata !7447, metadata !177), !dbg !7448
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 490, i32 160)
  store i8 -96, i8* %3, align 1, !dbg !7448
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 491, i32 106)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 492, i32 1)
  %4 = call signext i8 @bmi160_get_regs(i8 zeroext 106, i8* %2, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !7449
  call void @llvm.dbg.value(metadata i8 %4, i64 0, metadata !7442, metadata !177), !dbg !7450
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 493, i8 %4)
  %5 = sext i8 %4 to i32, !dbg !7451
  %6 = icmp eq i32 %5, 0, !dbg !7453
  br i1 %6, label %7, label %42, !dbg !7454

; <label>:7:                                      ; preds = %1
  %8 = load i8, i8* %2, align 1, !dbg !7455
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 495, i8 %8)
  %9 = zext i8 %8 to i32, !dbg !7455
  %10 = and i32 %9, -3, !dbg !7455
  call void @qpr.shift.by.amount.i32(i32 497, i32 1, i32 1)
  call void @qpr.shift.by.negative.i32(i32 498, i32 1, i32 1)
  call void @qpr.shift.of.negative.i32(i32 499, i32 1, i32 1)
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 496, i32 2)
  %11 = or i32 %10, 2, !dbg !7455
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 494, i32 %11)
  %12 = trunc i32 %11 to i8, !dbg !7455
  store i8 %12, i8* %2, align 1, !dbg !7457
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 500, i32 106)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 501, i32 1)
  %13 = call signext i8 @bmi160_set_regs(i8 zeroext 106, i8* %2, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !7458
  call void @llvm.dbg.value(metadata i8 %13, i64 0, metadata !7442, metadata !177), !dbg !7459
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 502, i8 %13)
  %14 = sext i8 %13 to i32, !dbg !7460
  %15 = icmp eq i32 %14, 0, !dbg !7462
  br i1 %15, label %16, label %40, !dbg !7463

; <label>:16:                                     ; preds = %7
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 503, i32 126)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 504, i32 1)
  %17 = call signext i8 @bmi160_set_regs(i8 zeroext 126, i8* %3, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !7464
  call void @llvm.dbg.value(metadata i8 %17, i64 0, metadata !7442, metadata !177), !dbg !7466
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 505, i8 %17)
  %18 = sext i8 %17 to i32, !dbg !7467
  %19 = icmp eq i32 %18, 0, !dbg !7469
  br i1 %19, label %20, label %38, !dbg !7470

; <label>:20:                                     ; preds = %16
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 506, i32 27)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 507, i32 1)
  %21 = call signext i8 @bmi160_get_regs(i8 zeroext 27, i8* %2, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !7471
  call void @llvm.dbg.value(metadata i8 %21, i64 0, metadata !7442, metadata !177), !dbg !7473
  call void @qpr.implicit.conversion.overflow.s8.s32(i32 508, i8 %21)
  %22 = sext i8 %21 to i32, !dbg !7474
  %23 = icmp eq i32 %22, 0, !dbg !7476
  br i1 %23, label %24, label %37, !dbg !7477

; <label>:24:                                     ; preds = %20
  %25 = load i8, i8* %2, align 1, !dbg !7478
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 511, i8 %25)
  %26 = zext i8 %25 to i32, !dbg !7478
  %27 = and i32 %26, 16, !dbg !7478
  call void @qpr.shift.by.amount.i32(i32 510, i32 %27, i32 4)
  %28 = lshr i32 %27, 4, !dbg !7478
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 509, i32 %28)
  %29 = trunc i32 %28 to i8, !dbg !7478
  store i8 %29, i8* %2, align 1, !dbg !7480
  %30 = load i8, i8* %2, align 1, !dbg !7481
  call void @qpr.implicit.conversion.overflow.u8.u32(i32 512, i8 %30)
  %31 = zext i8 %30 to i32, !dbg !7481
  %32 = icmp ne i32 %31, 1, !dbg !7483
  br i1 %32, label %33, label %36, !dbg !7484

; <label>:33:                                     ; preds = %24
  %34 = getelementptr inbounds %struct.bmi160_dev, %struct.bmi160_dev* @configStub, i32 0, i32 13, !dbg !7485
  %35 = load void (i32)*, void (i32)** %34, align 8, !dbg !7485
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 513, i32 25)
  call void %35(i32 25) #5, !dbg !7487
  br label %36, !dbg !7488

; <label>:36:                                     ; preds = %33, %24
  br label %37, !dbg !7489

; <label>:37:                                     ; preds = %36, %20
  br label %38, !dbg !7490

; <label>:38:                                     ; preds = %37, %16
  %39 = phi i8 [ %21, %37 ], [ %17, %16 ]
  call void @llvm.dbg.value(metadata i8 %39, i64 0, metadata !7442, metadata !177), !dbg !7443
  br label %40, !dbg !7491

; <label>:40:                                     ; preds = %38, %7
  %41 = phi i8 [ %39, %38 ], [ %13, %7 ]
  call void @llvm.dbg.value(metadata i8 %41, i64 0, metadata !7442, metadata !177), !dbg !7443
  br label %42, !dbg !7492

; <label>:42:                                     ; preds = %40, %1
  %43 = phi i8 [ %41, %40 ], [ %4, %1 ]
  call void @llvm.dbg.value(metadata i8 %43, i64 0, metadata !7442, metadata !177), !dbg !7443
  ret i8 %43, !dbg !7493
}

; Function Attrs: noinline nounwind uwtable
define signext i8 @bmi160_get_int_status(i32, %union.bmi160_int_status*, %struct.bmi160_dev*) #1 !dbg !7494 {
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !7537, metadata !177), !dbg !7538
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !7539, metadata !177), !dbg !7540
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !7541, metadata !177), !dbg !7542
  call void @llvm.dbg.value(metadata !175, i64 0, metadata !7543, metadata !177), !dbg !7544
  call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !7537, metadata !177), !dbg !7538
  call void @llvm.dbg.value(metadata %union.bmi160_int_status* %1, i64 0, metadata !7539, metadata !177), !dbg !7540
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* %2, i64 0, metadata !7541, metadata !177), !dbg !7542
  call void (...) bitcast (void ()* @initStubs to void (...)*)() #5, !dbg !7545
  call void @llvm.dbg.value(metadata %struct.bmi160_dev* @configStub, i64 0, metadata !7541, metadata !177), !dbg !7545
  call void @qpr.implicit.conversion.overflow.s32.s8(i32 514, i32 0)
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !7543, metadata !177), !dbg !7544
  call void @qpr.implicit.conversion.overflow.u32.u32(i32 515, i32 %0)
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 516, i32 15)
  %4 = icmp eq i32 %0, 15, !dbg !7546
  br i1 %4, label %5, label %9, !dbg !7548

; <label>:5:                                      ; preds = %3
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 517, i32 28)
  %6 = bitcast %union.bmi160_int_status* %1 to [4 x i8]*, !dbg !7549
  %7 = getelementptr inbounds [4 x i8], [4 x i8]* %6, i64 0, i64 0, !dbg !7551
  call void @qpr.arrayindex.i32.i3(i32 518, i32 0, i3 -4)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 519, i32 4)
  %8 = call signext i8 @bmi160_get_regs(i8 zeroext 28, i8* %7, i16 zeroext 4, %struct.bmi160_dev* @configStub) #5, !dbg !7552
  call void @llvm.dbg.value(metadata i8 %8, i64 0, metadata !7543, metadata !177), !dbg !7553
  br label %42, !dbg !7554

; <label>:9:                                      ; preds = %3
  call void @qpr.implicit.conversion.overflow.u32.u32(i32 520, i32 %0)
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 521, i32 1)
  %10 = and i32 %0, 1, !dbg !7555
  %11 = icmp ne i32 %10, 0, !dbg !7555
  br i1 %11, label %12, label %16, !dbg !7558

; <label>:12:                                     ; preds = %9
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 522, i32 28)
  %13 = bitcast %union.bmi160_int_status* %1 to [4 x i8]*, !dbg !7559
  %14 = getelementptr inbounds [4 x i8], [4 x i8]* %13, i64 0, i64 0, !dbg !7560
  call void @qpr.arrayindex.i32.i3(i32 523, i32 0, i3 -4)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 524, i32 1)
  %15 = call signext i8 @bmi160_get_regs(i8 zeroext 28, i8* %14, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !7561
  call void @llvm.dbg.value(metadata i8 %15, i64 0, metadata !7543, metadata !177), !dbg !7562
  br label %16, !dbg !7563

; <label>:16:                                     ; preds = %12, %9
  %17 = phi i8 [ %15, %12 ], [ 0, %9 ]
  call void @llvm.dbg.value(metadata i8 %17, i64 0, metadata !7543, metadata !177), !dbg !7544
  call void @qpr.implicit.conversion.overflow.u32.u32(i32 525, i32 %0)
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 526, i32 2)
  %18 = and i32 %0, 2, !dbg !7564
  %19 = icmp ne i32 %18, 0, !dbg !7564
  br i1 %19, label %20, label %24, !dbg !7566

; <label>:20:                                     ; preds = %16
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 529, i32 1)
  call void @qpr.arithmetic.overflow.warning.uadd.i32(i32 528, i32 28, i32 1)
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 527, i32 29)
  %21 = bitcast %union.bmi160_int_status* %1 to [4 x i8]*, !dbg !7567
  %22 = getelementptr inbounds [4 x i8], [4 x i8]* %21, i64 0, i64 1, !dbg !7568
  call void @qpr.arrayindex.i32.i3(i32 530, i32 1, i3 -4)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 531, i32 1)
  %23 = call signext i8 @bmi160_get_regs(i8 zeroext 29, i8* %22, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !7569
  call void @llvm.dbg.value(metadata i8 %23, i64 0, metadata !7543, metadata !177), !dbg !7570
  br label %24, !dbg !7571

; <label>:24:                                     ; preds = %20, %16
  %25 = phi i8 [ %23, %20 ], [ %17, %16 ]
  call void @llvm.dbg.value(metadata i8 %25, i64 0, metadata !7543, metadata !177), !dbg !7544
  call void @qpr.implicit.conversion.overflow.u32.u32(i32 532, i32 %0)
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 533, i32 4)
  %26 = and i32 %0, 4, !dbg !7572
  %27 = icmp ne i32 %26, 0, !dbg !7572
  br i1 %27, label %28, label %32, !dbg !7574

; <label>:28:                                     ; preds = %24
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 536, i32 2)
  call void @qpr.arithmetic.overflow.warning.uadd.i32(i32 535, i32 28, i32 2)
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 534, i32 30)
  %29 = bitcast %union.bmi160_int_status* %1 to [4 x i8]*, !dbg !7575
  %30 = getelementptr inbounds [4 x i8], [4 x i8]* %29, i64 0, i64 2, !dbg !7576
  call void @qpr.arrayindex.i32.i3(i32 537, i32 2, i3 -4)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 538, i32 1)
  %31 = call signext i8 @bmi160_get_regs(i8 zeroext 30, i8* %30, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !7577
  call void @llvm.dbg.value(metadata i8 %31, i64 0, metadata !7543, metadata !177), !dbg !7578
  br label %32, !dbg !7579

; <label>:32:                                     ; preds = %28, %24
  %33 = phi i8 [ %31, %28 ], [ %25, %24 ]
  call void @llvm.dbg.value(metadata i8 %33, i64 0, metadata !7543, metadata !177), !dbg !7544
  call void @qpr.implicit.conversion.overflow.u32.u32(i32 539, i32 %0)
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 540, i32 8)
  %34 = and i32 %0, 8, !dbg !7580
  %35 = icmp ne i32 %34, 0, !dbg !7580
  br i1 %35, label %36, label %40, !dbg !7582

; <label>:36:                                     ; preds = %32
  call void @qpr.implicit.conversion.overflow.s32.u32(i32 543, i32 3)
  call void @qpr.arithmetic.overflow.warning.uadd.i32(i32 542, i32 28, i32 3)
  call void @qpr.implicit.conversion.overflow.u32.u8(i32 541, i32 31)
  %37 = bitcast %union.bmi160_int_status* %1 to [4 x i8]*, !dbg !7583
  %38 = getelementptr inbounds [4 x i8], [4 x i8]* %37, i64 0, i64 3, !dbg !7584
  call void @qpr.arrayindex.i32.i3(i32 544, i32 3, i3 -4)
  call void @qpr.implicit.conversion.overflow.s32.u16(i32 545, i32 1)
  %39 = call signext i8 @bmi160_get_regs(i8 zeroext 31, i8* %38, i16 zeroext 1, %struct.bmi160_dev* @configStub) #5, !dbg !7585
  call void @llvm.dbg.value(metadata i8 %39, i64 0, metadata !7543, metadata !177), !dbg !7586
  br label %40, !dbg !7587

; <label>:40:                                     ; preds = %36, %32
  %41 = phi i8 [ %39, %36 ], [ %33, %32 ]
  call void @llvm.dbg.value(metadata i8 %41, i64 0, metadata !7543, metadata !177), !dbg !7544
  br label %42

; <label>:42:                                     ; preds = %40, %5
  %43 = phi i8 [ %8, %5 ], [ %41, %40 ]
  call void @llvm.dbg.value(metadata i8 %43, i64 0, metadata !7543, metadata !177), !dbg !7544
  ret i8 %43, !dbg !7588
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.value(metadata, i64, metadata, metadata) #2

attributes #0 = { inaccessiblememonly nounwind }
attributes #1 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nobuiltin }

!llvm.dbg.cu = !{!2, !76}
!llvm.module.flags = !{!171, !172}
!llvm.ident = !{!173, !173}

!0 = !DIGlobalVariableExpression(var: !1)
!1 = distinct !DIGlobalVariable(name: "fifoFrameStub", scope: !2, file: !3, line: 18, type: !42, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 4.0.1 (ssh://git@qpr-hub.iti.kit.edu:11072/qpr/dev/forks/clang-fork.git 7c12b2ae41c10b86ffc52b9494c139709e379f67) (ssh://git@qpr-hub.iti.kit.edu:11072/qpr/dev/forks/llvm-fork.git bcc8a8d97a8adac2b1b23a361f1c4befc3a0b19d)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, globals: !11)
!3 = !DIFile(filename: "/home/i12/mbuening/100_Dissertation/BMI160/BMI160_driver/BMI160Stubs.c", directory: "/home/i12/mbuening/100_Dissertation/BMI160/BMI160_driver")
!4 = !{!5}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bmi160_any_sig_motion_active_interrupt_state", file: !6, line: 1005, size: 32, elements: !7)
!6 = !DIFile(filename: "/home/i12/mbuening/100_Dissertation/BMI160/BMI160_driver/bmi160_defs.h", directory: "/home/i12/mbuening/100_Dissertation/BMI160/BMI160_driver")
!7 = !{!8, !9, !10}
!8 = !DIEnumerator(name: "BMI160_BOTH_ANY_SIG_MOTION_DISABLED", value: -1)
!9 = !DIEnumerator(name: "BMI160_ANY_MOTION_ENABLED", value: 0)
!10 = !DIEnumerator(name: "BMI160_SIG_MOTION_ENABLED", value: 1)
!11 = !{!12, !69, !0}
!12 = !DIGlobalVariableExpression(var: !13)
!13 = distinct !DIGlobalVariable(name: "configStub", scope: !2, file: !3, line: 14, type: !14, isLocal: false, isDefinition: true)
!14 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bmi160_dev", file: !6, line: 1389, size: 512, elements: !15)
!15 = !{!16, !18, !19, !20, !21, !28, !29, !30, !31, !39, !40, !57, !63, !64}
!16 = !DIDerivedType(tag: DW_TAG_member, name: "chip_id", scope: !14, file: !6, line: 1391, baseType: !17, size: 8)
!17 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!18 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !14, file: !6, line: 1393, baseType: !17, size: 8, offset: 8)
!19 = !DIDerivedType(tag: DW_TAG_member, name: "interface", scope: !14, file: !6, line: 1395, baseType: !17, size: 8, offset: 16)
!20 = !DIDerivedType(tag: DW_TAG_member, name: "any_sig_sel", scope: !14, file: !6, line: 1399, baseType: !5, size: 32, offset: 32)
!21 = !DIDerivedType(tag: DW_TAG_member, name: "accel_cfg", scope: !14, file: !6, line: 1401, baseType: !22, size: 32, offset: 64)
!22 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bmi160_cfg", file: !6, line: 930, size: 32, elements: !23)
!23 = !{!24, !25, !26, !27}
!24 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !22, file: !6, line: 932, baseType: !17, size: 8)
!25 = !DIDerivedType(tag: DW_TAG_member, name: "odr", scope: !22, file: !6, line: 934, baseType: !17, size: 8, offset: 8)
!26 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !22, file: !6, line: 936, baseType: !17, size: 8, offset: 16)
!27 = !DIDerivedType(tag: DW_TAG_member, name: "bw", scope: !22, file: !6, line: 938, baseType: !17, size: 8, offset: 24)
!28 = !DIDerivedType(tag: DW_TAG_member, name: "prev_accel_cfg", scope: !14, file: !6, line: 1405, baseType: !22, size: 32, offset: 96)
!29 = !DIDerivedType(tag: DW_TAG_member, name: "gyro_cfg", scope: !14, file: !6, line: 1407, baseType: !22, size: 32, offset: 128)
!30 = !DIDerivedType(tag: DW_TAG_member, name: "prev_gyro_cfg", scope: !14, file: !6, line: 1411, baseType: !22, size: 32, offset: 160)
!31 = !DIDerivedType(tag: DW_TAG_member, name: "aux_cfg", scope: !14, file: !6, line: 1413, baseType: !32, size: 16, offset: 192)
!32 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bmi160_aux_cfg", file: !6, line: 944, size: 16, elements: !33)
!33 = !{!34, !35, !36, !37, !38}
!34 = !DIDerivedType(tag: DW_TAG_member, name: "aux_sensor_enable", scope: !32, file: !6, line: 946, baseType: !17, size: 1, flags: DIFlagBitField, extraData: i64 0)
!35 = !DIDerivedType(tag: DW_TAG_member, name: "manual_enable", scope: !32, file: !6, line: 948, baseType: !17, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!36 = !DIDerivedType(tag: DW_TAG_member, name: "aux_rd_burst_len", scope: !32, file: !6, line: 950, baseType: !17, size: 2, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!37 = !DIDerivedType(tag: DW_TAG_member, name: "aux_odr", scope: !32, file: !6, line: 952, baseType: !17, size: 4, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!38 = !DIDerivedType(tag: DW_TAG_member, name: "aux_i2c_addr", scope: !32, file: !6, line: 954, baseType: !17, size: 8, offset: 8)
!39 = !DIDerivedType(tag: DW_TAG_member, name: "prev_aux_cfg", scope: !14, file: !6, line: 1417, baseType: !32, size: 16, offset: 208)
!40 = !DIDerivedType(tag: DW_TAG_member, name: "fifo", scope: !14, file: !6, line: 1419, baseType: !41, size: 64, offset: 256)
!41 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !42, size: 64)
!42 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bmi160_fifo_frame", file: !6, line: 1361, size: 256, elements: !43)
!43 = !{!44, !46, !48, !49, !50, !51, !52, !53, !54, !56}
!44 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !42, file: !6, line: 1363, baseType: !45, size: 64)
!45 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 64)
!46 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !42, file: !6, line: 1369, baseType: !47, size: 16, offset: 64)
!47 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!48 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_time_enable", scope: !42, file: !6, line: 1371, baseType: !17, size: 8, offset: 80)
!49 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_header_enable", scope: !42, file: !6, line: 1373, baseType: !17, size: 8, offset: 88)
!50 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_data_enable", scope: !42, file: !6, line: 1376, baseType: !17, size: 8, offset: 96)
!51 = !DIDerivedType(tag: DW_TAG_member, name: "accel_byte_start_idx", scope: !42, file: !6, line: 1378, baseType: !47, size: 16, offset: 112)
!52 = !DIDerivedType(tag: DW_TAG_member, name: "gyro_byte_start_idx", scope: !42, file: !6, line: 1380, baseType: !47, size: 16, offset: 128)
!53 = !DIDerivedType(tag: DW_TAG_member, name: "aux_byte_start_idx", scope: !42, file: !6, line: 1382, baseType: !47, size: 16, offset: 144)
!54 = !DIDerivedType(tag: DW_TAG_member, name: "sensor_time", scope: !42, file: !6, line: 1384, baseType: !55, size: 32, offset: 160)
!55 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!56 = !DIDerivedType(tag: DW_TAG_member, name: "skipped_frame_count", scope: !42, file: !6, line: 1386, baseType: !17, size: 8, offset: 192)
!57 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !14, file: !6, line: 1421, baseType: !58, size: 64, offset: 320)
!58 = !DIDerivedType(tag: DW_TAG_typedef, name: "bmi160_com_fptr_t", file: !6, line: 703, baseType: !59)
!59 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !60, size: 64)
!60 = !DISubroutineType(types: !61)
!61 = !{!62, !17, !17, !45, !47}
!62 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!63 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !14, file: !6, line: 1423, baseType: !58, size: 64, offset: 384)
!64 = !DIDerivedType(tag: DW_TAG_member, name: "delay_ms", scope: !14, file: !6, line: 1425, baseType: !65, size: 64, offset: 448)
!65 = !DIDerivedType(tag: DW_TAG_typedef, name: "bmi160_delay_fptr_t", file: !6, line: 706, baseType: !66)
!66 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !67, size: 64)
!67 = !DISubroutineType(types: !68)
!68 = !{null, !55}
!69 = !DIGlobalVariableExpression(var: !70)
!70 = distinct !DIGlobalVariable(name: "fifoDataStub", scope: !2, file: !3, line: 17, type: !71, isLocal: false, isDefinition: true)
!71 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 64, elements: !72)
!72 = !{!73}
!73 = !DISubrange(count: 8)
!74 = !DIGlobalVariableExpression(var: !75)
!75 = distinct !DIGlobalVariable(name: "int_mask_lookup_table", scope: !76, file: !77, line: 67, type: !167, isLocal: false, isDefinition: true)
!76 = distinct !DICompileUnit(language: DW_LANG_C99, file: !77, producer: "clang version 4.0.1 (ssh://git@qpr-hub.iti.kit.edu:11072/qpr/dev/forks/clang-fork.git 7c12b2ae41c10b86ffc52b9494c139709e379f67) (ssh://git@qpr-hub.iti.kit.edu:11072/qpr/dev/forks/llvm-fork.git bcc8a8d97a8adac2b1b23a361f1c4befc3a0b19d)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !78, retainedTypes: !119, globals: !122)
!77 = !DIFile(filename: "/home/i12/mbuening/100_Dissertation/BMI160/BMI160_driver/bmi160.c", directory: "/home/i12/mbuening/100_Dissertation/BMI160/BMI160_driver")
!78 = !{!5, !79, !85, !101, !108, !114}
!79 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bmi160_int_channel", file: !6, line: 960, size: 32, elements: !80)
!80 = !{!81, !82, !83, !84}
!81 = !DIEnumerator(name: "BMI160_INT_CHANNEL_NONE", value: 0)
!82 = !DIEnumerator(name: "BMI160_INT_CHANNEL_1", value: 1)
!83 = !DIEnumerator(name: "BMI160_INT_CHANNEL_2", value: 2)
!84 = !DIEnumerator(name: "BMI160_INT_CHANNEL_BOTH", value: 3)
!85 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bmi160_int_types", file: !6, line: 971, size: 32, elements: !86)
!86 = !{!87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!87 = !DIEnumerator(name: "BMI160_ACC_ANY_MOTION_INT", value: 0)
!88 = !DIEnumerator(name: "BMI160_ACC_SIG_MOTION_INT", value: 1)
!89 = !DIEnumerator(name: "BMI160_STEP_DETECT_INT", value: 2)
!90 = !DIEnumerator(name: "BMI160_ACC_DOUBLE_TAP_INT", value: 3)
!91 = !DIEnumerator(name: "BMI160_ACC_SINGLE_TAP_INT", value: 4)
!92 = !DIEnumerator(name: "BMI160_ACC_ORIENT_INT", value: 5)
!93 = !DIEnumerator(name: "BMI160_ACC_FLAT_INT", value: 6)
!94 = !DIEnumerator(name: "BMI160_ACC_HIGH_G_INT", value: 7)
!95 = !DIEnumerator(name: "BMI160_ACC_LOW_G_INT", value: 8)
!96 = !DIEnumerator(name: "BMI160_ACC_SLOW_NO_MOTION_INT", value: 9)
!97 = !DIEnumerator(name: "BMI160_ACC_GYRO_DATA_RDY_INT", value: 10)
!98 = !DIEnumerator(name: "BMI160_ACC_GYRO_FIFO_FULL_INT", value: 11)
!99 = !DIEnumerator(name: "BMI160_ACC_GYRO_FIFO_WATERMARK_INT", value: 12)
!100 = !DIEnumerator(name: "BMI160_FIFO_TAG_INT_PIN", value: 13)
!101 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bmi160_int_status_sel", file: !6, line: 712, size: 32, elements: !102)
!102 = !{!103, !104, !105, !106, !107}
!103 = !DIEnumerator(name: "BMI160_INT_STATUS_0", value: 1)
!104 = !DIEnumerator(name: "BMI160_INT_STATUS_1", value: 2)
!105 = !DIEnumerator(name: "BMI160_INT_STATUS_2", value: 4)
!106 = !DIEnumerator(name: "BMI160_INT_STATUS_3", value: 8)
!107 = !DIEnumerator(name: "BMI160_INT_STATUS_ALL", value: 15)
!108 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bmi160_step_detect_mode", file: !6, line: 910, size: 32, elements: !109)
!109 = !{!110, !111, !112, !113}
!110 = !DIEnumerator(name: "BMI160_STEP_DETECT_NORMAL", value: 0)
!111 = !DIEnumerator(name: "BMI160_STEP_DETECT_SENSITIVE", value: 1)
!112 = !DIEnumerator(name: "BMI160_STEP_DETECT_ROBUST", value: 2)
!113 = !DIEnumerator(name: "BMI160_STEP_DETECT_USER_DEFINE", value: 3)
!114 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bmi160_select_sensor", file: !6, line: 901, size: 32, elements: !115)
!115 = !{!116, !117, !118}
!116 = !DIEnumerator(name: "BMI160_ACCEL_ONLY", value: 1)
!117 = !DIEnumerator(name: "BMI160_GYRO_ONLY", value: 2)
!118 = !DIEnumerator(name: "BMI160_BOTH_ACCEL_AND_GYRO", value: 3)
!119 = !{!120, !17, !62, !121, !47, !55}
!120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!121 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!122 = !{!74, !123}
!123 = !DIGlobalVariableExpression(var: !124)
!124 = distinct !DIGlobalVariable(name: "configStub", scope: !76, file: !77, line: 57, type: !125, isLocal: false, isDefinition: true)
!125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bmi160_dev", file: !6, line: 1389, size: 512, elements: !126)
!126 = !{!127, !128, !129, !130, !131, !138, !139, !140, !141, !149, !150, !164, !165, !166}
!127 = !DIDerivedType(tag: DW_TAG_member, name: "chip_id", scope: !125, file: !6, line: 1391, baseType: !17, size: 8)
!128 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !125, file: !6, line: 1393, baseType: !17, size: 8, offset: 8)
!129 = !DIDerivedType(tag: DW_TAG_member, name: "interface", scope: !125, file: !6, line: 1395, baseType: !17, size: 8, offset: 16)
!130 = !DIDerivedType(tag: DW_TAG_member, name: "any_sig_sel", scope: !125, file: !6, line: 1399, baseType: !5, size: 32, offset: 32)
!131 = !DIDerivedType(tag: DW_TAG_member, name: "accel_cfg", scope: !125, file: !6, line: 1401, baseType: !132, size: 32, offset: 64)
!132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bmi160_cfg", file: !6, line: 930, size: 32, elements: !133)
!133 = !{!134, !135, !136, !137}
!134 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !132, file: !6, line: 932, baseType: !17, size: 8)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "odr", scope: !132, file: !6, line: 934, baseType: !17, size: 8, offset: 8)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !132, file: !6, line: 936, baseType: !17, size: 8, offset: 16)
!137 = !DIDerivedType(tag: DW_TAG_member, name: "bw", scope: !132, file: !6, line: 938, baseType: !17, size: 8, offset: 24)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "prev_accel_cfg", scope: !125, file: !6, line: 1405, baseType: !132, size: 32, offset: 96)
!139 = !DIDerivedType(tag: DW_TAG_member, name: "gyro_cfg", scope: !125, file: !6, line: 1407, baseType: !132, size: 32, offset: 128)
!140 = !DIDerivedType(tag: DW_TAG_member, name: "prev_gyro_cfg", scope: !125, file: !6, line: 1411, baseType: !132, size: 32, offset: 160)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "aux_cfg", scope: !125, file: !6, line: 1413, baseType: !142, size: 16, offset: 192)
!142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bmi160_aux_cfg", file: !6, line: 944, size: 16, elements: !143)
!143 = !{!144, !145, !146, !147, !148}
!144 = !DIDerivedType(tag: DW_TAG_member, name: "aux_sensor_enable", scope: !142, file: !6, line: 946, baseType: !17, size: 1, flags: DIFlagBitField, extraData: i64 0)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "manual_enable", scope: !142, file: !6, line: 948, baseType: !17, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "aux_rd_burst_len", scope: !142, file: !6, line: 950, baseType: !17, size: 2, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "aux_odr", scope: !142, file: !6, line: 952, baseType: !17, size: 4, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "aux_i2c_addr", scope: !142, file: !6, line: 954, baseType: !17, size: 8, offset: 8)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "prev_aux_cfg", scope: !125, file: !6, line: 1417, baseType: !142, size: 16, offset: 208)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "fifo", scope: !125, file: !6, line: 1419, baseType: !151, size: 64, offset: 256)
!151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !152, size: 64)
!152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bmi160_fifo_frame", file: !6, line: 1361, size: 256, elements: !153)
!153 = !{!154, !155, !156, !157, !158, !159, !160, !161, !162, !163}
!154 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !152, file: !6, line: 1363, baseType: !45, size: 64)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !152, file: !6, line: 1369, baseType: !47, size: 16, offset: 64)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_time_enable", scope: !152, file: !6, line: 1371, baseType: !17, size: 8, offset: 80)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_header_enable", scope: !152, file: !6, line: 1373, baseType: !17, size: 8, offset: 88)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_data_enable", scope: !152, file: !6, line: 1376, baseType: !17, size: 8, offset: 96)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "accel_byte_start_idx", scope: !152, file: !6, line: 1378, baseType: !47, size: 16, offset: 112)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "gyro_byte_start_idx", scope: !152, file: !6, line: 1380, baseType: !47, size: 16, offset: 128)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "aux_byte_start_idx", scope: !152, file: !6, line: 1382, baseType: !47, size: 16, offset: 144)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "sensor_time", scope: !152, file: !6, line: 1384, baseType: !55, size: 32, offset: 160)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "skipped_frame_count", scope: !152, file: !6, line: 1386, baseType: !17, size: 8, offset: 192)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !125, file: !6, line: 1421, baseType: !58, size: 64, offset: 320)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !125, file: !6, line: 1423, baseType: !58, size: 64, offset: 384)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "delay_ms", scope: !125, file: !6, line: 1425, baseType: !65, size: 64, offset: 448)
!167 = !DICompositeType(tag: DW_TAG_array_type, baseType: !168, size: 104, elements: !169)
!168 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !17)
!169 = !{!170}
!170 = !DISubrange(count: 13)
!171 = !{i32 2, !"Dwarf Version", i32 4}
!172 = !{i32 2, !"Debug Info Version", i32 3}
!173 = !{!"clang version 4.0.1 (ssh://git@qpr-hub.iti.kit.edu:11072/qpr/dev/forks/clang-fork.git 7c12b2ae41c10b86ffc52b9494c139709e379f67) (ssh://git@qpr-hub.iti.kit.edu:11072/qpr/dev/forks/llvm-fork.git bcc8a8d97a8adac2b1b23a361f1c4befc3a0b19d)"}
!174 = distinct !DISubprogram(name: "stubDelay", scope: !3, file: !3, line: 20, type: !67, isLocal: false, isDefinition: true, scopeLine: 20, flags: DIFlagPrototyped, isOptimized: false, unit: !2, variables: !175)
!175 = !{}
!176 = !DILocalVariable(name: "unused", arg: 1, scope: !174, file: !3, line: 20, type: !55)
!177 = !DIExpression()
!178 = !DILocation(line: 20, column: 25, scope: !174)
!179 = !DILocation(line: 21, column: 1, scope: !174)
!180 = distinct !DISubprogram(name: "stubRead", scope: !3, file: !3, line: 23, type: !60, isLocal: false, isDefinition: true, scopeLine: 23, flags: DIFlagPrototyped, isOptimized: false, unit: !2, variables: !175)
!181 = !DILocalVariable(name: "unused1", arg: 1, scope: !180, file: !3, line: 23, type: !17)
!182 = !DILocation(line: 23, column: 25, scope: !180)
!183 = !DILocalVariable(name: "unused2", arg: 2, scope: !180, file: !3, line: 23, type: !17)
!184 = !DILocation(line: 23, column: 42, scope: !180)
!185 = !DILocalVariable(name: "data", arg: 3, scope: !180, file: !3, line: 23, type: !45)
!186 = !DILocation(line: 23, column: 60, scope: !180)
!187 = !DILocalVariable(name: "len", arg: 4, scope: !180, file: !3, line: 23, type: !47)
!188 = !DILocation(line: 23, column: 75, scope: !180)
!189 = !DILocalVariable(name: "i", scope: !180, file: !3, line: 24, type: !55)
!190 = !DILocation(line: 24, column: 16, scope: !180)
!191 = !DILocalVariable(name: "x", scope: !180, file: !3, line: 28, type: !62)
!192 = !DILocation(line: 28, column: 10, scope: !180)
!193 = !DILocation(line: 25, column: 3, scope: !180)
!194 = !DILocation(line: 25, column: 13, scope: !195)
!195 = !DILexicalBlockFile(scope: !196, file: !3, discriminator: 1)
!196 = distinct !DILexicalBlock(scope: !197, file: !3, line: 25, column: 3)
!197 = distinct !DILexicalBlock(scope: !180, file: !3, line: 25, column: 3)
!198 = !DILocation(line: 25, column: 11, scope: !195)
!199 = !DILocation(line: 25, column: 3, scope: !200)
!200 = !DILexicalBlockFile(scope: !197, file: !3, discriminator: 1)
!201 = !DILocation(line: 26, column: 15, scope: !202)
!202 = distinct !DILexicalBlock(scope: !196, file: !3, line: 25, column: 23)
!203 = !DILocation(line: 26, column: 5, scope: !202)
!204 = !DILocation(line: 26, column: 13, scope: !202)
!205 = !DILocation(line: 27, column: 3, scope: !202)
!206 = !DILocation(line: 25, column: 18, scope: !207)
!207 = !DILexicalBlockFile(scope: !196, file: !3, discriminator: 2)
!208 = !DILocation(line: 25, column: 3, scope: !207)
!209 = distinct !{!209, !210, !211}
!210 = !DILocation(line: 25, column: 3, scope: !197)
!211 = !DILocation(line: 27, column: 3, scope: !197)
!212 = !DILocation(line: 28, column: 14, scope: !180)
!213 = !DILocation(line: 29, column: 18, scope: !180)
!214 = !DILocation(line: 29, column: 20, scope: !180)
!215 = !DILocation(line: 29, column: 25, scope: !180)
!216 = !DILocation(line: 29, column: 28, scope: !217)
!217 = !DILexicalBlockFile(scope: !180, file: !3, discriminator: 1)
!218 = !DILocation(line: 29, column: 30, scope: !217)
!219 = !DILocation(line: 29, column: 25, scope: !217)
!220 = !DILocation(line: 29, column: 25, scope: !221)
!221 = !DILexicalBlockFile(scope: !180, file: !3, discriminator: 2)
!222 = !DILocation(line: 29, column: 3, scope: !221)
!223 = !DILocation(line: 30, column: 3, scope: !180)
!224 = distinct !DISubprogram(name: "stubWrite", scope: !3, file: !3, line: 33, type: !60, isLocal: false, isDefinition: true, scopeLine: 33, flags: DIFlagPrototyped, isOptimized: false, unit: !2, variables: !175)
!225 = !DILocalVariable(name: "unused1", arg: 1, scope: !224, file: !3, line: 33, type: !17)
!226 = !DILocation(line: 33, column: 26, scope: !224)
!227 = !DILocalVariable(name: "unused2", arg: 2, scope: !224, file: !3, line: 33, type: !17)
!228 = !DILocation(line: 33, column: 43, scope: !224)
!229 = !DILocalVariable(name: "unused3", arg: 3, scope: !224, file: !3, line: 33, type: !45)
!230 = !DILocation(line: 33, column: 61, scope: !224)
!231 = !DILocalVariable(name: "unused4", arg: 4, scope: !224, file: !3, line: 33, type: !47)
!232 = !DILocation(line: 33, column: 79, scope: !224)
!233 = !DILocation(line: 34, column: 10, scope: !224)
!234 = !DILocation(line: 34, column: 3, scope: !224)
!235 = distinct !DISubprogram(name: "initStubs", scope: !3, file: !3, line: 37, type: !236, isLocal: false, isDefinition: true, scopeLine: 37, flags: DIFlagPrototyped, isOptimized: false, unit: !2, variables: !175)
!236 = !DISubroutineType(types: !237)
!237 = !{null}
!238 = !DILocation(line: 40, column: 19, scope: !235)
!239 = !DILocation(line: 41, column: 14, scope: !235)
!240 = !DILocation(line: 41, column: 20, scope: !235)
!241 = !DILocation(line: 41, column: 25, scope: !235)
!242 = !DILocation(line: 42, column: 14, scope: !235)
!243 = !DILocation(line: 42, column: 20, scope: !235)
!244 = !DILocation(line: 42, column: 27, scope: !235)
!245 = !DILocation(line: 44, column: 19, scope: !235)
!246 = !DILocation(line: 45, column: 20, scope: !235)
!247 = !DILocation(line: 46, column: 23, scope: !235)
!248 = !DILocation(line: 47, column: 1, scope: !235)
!249 = distinct !DISubprogram(name: "bmi160_get_regs", scope: !77, file: !77, line: 1365, type: !250, isLocal: false, isDefinition: true, scopeLine: 1366, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!250 = !DISubroutineType(types: !251)
!251 = !{!62, !17, !45, !47, !252}
!252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !253, size: 64)
!253 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !125)
!254 = !DILocalVariable(name: "reg_addr", arg: 1, scope: !249, file: !77, line: 1365, type: !17)
!255 = !DILocation(line: 1365, column: 32, scope: !249)
!256 = !DILocalVariable(name: "data", arg: 2, scope: !249, file: !77, line: 1365, type: !45)
!257 = !DILocation(line: 1365, column: 51, scope: !249)
!258 = !DILocalVariable(name: "len", arg: 3, scope: !249, file: !77, line: 1365, type: !47)
!259 = !DILocation(line: 1365, column: 66, scope: !249)
!260 = !DILocalVariable(name: "dev", arg: 4, scope: !249, file: !77, line: 1365, type: !252)
!261 = !DILocation(line: 1365, column: 96, scope: !249)
!262 = !DILocalVariable(name: "rslt", scope: !249, file: !77, line: 1367, type: !62)
!263 = !DILocation(line: 1367, column: 9, scope: !249)
!264 = !DILocation(line: 1366, column: 3, scope: !249)
!265 = !DILocation(line: 1369, column: 11, scope: !266)
!266 = distinct !DILexicalBlock(scope: !249, file: !77, line: 1369, column: 6)
!267 = !DILocation(line: 1369, column: 20, scope: !266)
!268 = !DILocation(line: 1369, column: 29, scope: !269)
!269 = !DILexicalBlockFile(scope: !266, file: !77, discriminator: 1)
!270 = !DILocation(line: 1369, column: 34, scope: !269)
!271 = !DILocation(line: 1369, column: 6, scope: !272)
!272 = !DILexicalBlockFile(scope: !249, file: !77, discriminator: 1)
!273 = !DILocation(line: 1370, column: 8, scope: !274)
!274 = distinct !DILexicalBlock(scope: !266, file: !77, line: 1369, column: 44)
!275 = !DILocation(line: 1371, column: 2, scope: !274)
!276 = !DILocation(line: 1373, column: 12, scope: !277)
!277 = distinct !DILexicalBlock(scope: !278, file: !77, line: 1373, column: 7)
!278 = distinct !DILexicalBlock(scope: !266, file: !77, line: 1371, column: 9)
!279 = !DILocation(line: 1373, column: 7, scope: !277)
!280 = !DILocation(line: 1373, column: 22, scope: !277)
!281 = !DILocation(line: 1373, column: 7, scope: !278)
!282 = !DILocation(line: 1374, column: 16, scope: !277)
!283 = !DILocation(line: 1374, column: 25, scope: !277)
!284 = !DILocation(line: 1374, column: 15, scope: !277)
!285 = !DILocation(line: 1374, column: 13, scope: !277)
!286 = !DILocation(line: 1374, column: 4, scope: !277)
!287 = !DILocation(line: 1376, column: 15, scope: !278)
!288 = !DILocation(line: 1376, column: 25, scope: !278)
!289 = !DILocation(line: 1376, column: 10, scope: !278)
!290 = !DILocation(line: 1376, column: 8, scope: !278)
!291 = !DILocation(line: 1378, column: 8, scope: !278)
!292 = !DILocation(line: 1378, column: 3, scope: !278)
!293 = !DILocation(line: 1379, column: 7, scope: !294)
!294 = distinct !DILexicalBlock(scope: !278, file: !77, line: 1379, column: 7)
!295 = !DILocation(line: 1379, column: 12, scope: !294)
!296 = !DILocation(line: 1379, column: 7, scope: !278)
!297 = !DILocation(line: 1380, column: 9, scope: !294)
!298 = !DILocation(line: 1380, column: 4, scope: !294)
!299 = !DILocation(line: 1383, column: 2, scope: !249)
!300 = distinct !DISubprogram(name: "bmi160_set_regs", scope: !77, file: !77, line: 1391, type: !250, isLocal: false, isDefinition: true, scopeLine: 1392, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!301 = !DILocalVariable(name: "reg_addr", arg: 1, scope: !300, file: !77, line: 1391, type: !17)
!302 = !DILocation(line: 1391, column: 32, scope: !300)
!303 = !DILocalVariable(name: "data", arg: 2, scope: !300, file: !77, line: 1391, type: !45)
!304 = !DILocation(line: 1391, column: 51, scope: !300)
!305 = !DILocalVariable(name: "len", arg: 3, scope: !300, file: !77, line: 1391, type: !47)
!306 = !DILocation(line: 1391, column: 66, scope: !300)
!307 = !DILocalVariable(name: "dev", arg: 4, scope: !300, file: !77, line: 1391, type: !252)
!308 = !DILocation(line: 1391, column: 96, scope: !300)
!309 = !DILocalVariable(name: "rslt", scope: !300, file: !77, line: 1393, type: !62)
!310 = !DILocation(line: 1393, column: 9, scope: !300)
!311 = !DILocalVariable(name: "count", scope: !300, file: !77, line: 1394, type: !17)
!312 = !DILocation(line: 1394, column: 10, scope: !300)
!313 = !DILocation(line: 1392, column: 3, scope: !300)
!314 = !DILocation(line: 1412, column: 4, scope: !300)
!315 = !DILocation(line: 1412, column: 11, scope: !316)
!316 = !DILexicalBlockFile(scope: !317, file: !77, discriminator: 1)
!317 = distinct !DILexicalBlock(scope: !318, file: !77, line: 1412, column: 4)
!318 = distinct !DILexicalBlock(scope: !300, file: !77, line: 1412, column: 4)
!319 = !DILocation(line: 1412, column: 19, scope: !316)
!320 = !DILocation(line: 1412, column: 17, scope: !316)
!321 = !DILocation(line: 1412, column: 4, scope: !322)
!322 = !DILexicalBlockFile(scope: !318, file: !77, discriminator: 1)
!323 = !DILocation(line: 1413, column: 17, scope: !324)
!324 = distinct !DILexicalBlock(scope: !317, file: !77, line: 1412, column: 33)
!325 = !DILocation(line: 1413, column: 28, scope: !324)
!326 = !DILocation(line: 1413, column: 43, scope: !324)
!327 = !DILocation(line: 1413, column: 12, scope: !324)
!328 = !DILocation(line: 1413, column: 10, scope: !324)
!329 = !DILocation(line: 1414, column: 13, scope: !324)
!330 = !DILocation(line: 1417, column: 4, scope: !324)
!331 = !DILocation(line: 1412, column: 29, scope: !332)
!332 = !DILexicalBlockFile(scope: !317, file: !77, discriminator: 2)
!333 = !DILocation(line: 1412, column: 4, scope: !332)
!334 = distinct !{!334, !335, !336}
!335 = !DILocation(line: 1412, column: 4, scope: !318)
!336 = !DILocation(line: 1417, column: 4, scope: !318)
!337 = !DILocation(line: 1424, column: 2, scope: !300)
!338 = distinct !DISubprogram(name: "bmi160_init", scope: !77, file: !77, line: 1432, type: !339, isLocal: false, isDefinition: true, scopeLine: 1433, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!339 = !DISubroutineType(types: !340)
!340 = !{!62, !341}
!341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !125, size: 64)
!342 = !DILocalVariable(name: "dev", arg: 1, scope: !338, file: !77, line: 1432, type: !341)
!343 = !DILocation(line: 1432, column: 39, scope: !338)
!344 = !DILocalVariable(name: "rslt", scope: !338, file: !77, line: 1434, type: !62)
!345 = !DILocation(line: 1434, column: 9, scope: !338)
!346 = !DILocalVariable(name: "try", scope: !338, file: !77, line: 1436, type: !17)
!347 = !DILocation(line: 1436, column: 10, scope: !338)
!348 = !DILocation(line: 1433, column: 3, scope: !338)
!349 = !DILocalVariable(name: "data", scope: !338, file: !77, line: 1435, type: !17)
!350 = !DILocation(line: 1435, column: 10, scope: !338)
!351 = !DILocation(line: 1439, column: 7, scope: !338)
!352 = !DILocation(line: 1439, column: 15, scope: !338)
!353 = !DILocation(line: 1442, column: 9, scope: !338)
!354 = !DILocation(line: 1442, column: 7, scope: !338)
!355 = !DILocation(line: 1446, column: 7, scope: !356)
!356 = distinct !DILexicalBlock(scope: !338, file: !77, line: 1446, column: 6)
!357 = !DILocation(line: 1446, column: 12, scope: !356)
!358 = !DILocation(line: 1446, column: 26, scope: !356)
!359 = !DILocation(line: 1446, column: 35, scope: !360)
!360 = !DILexicalBlockFile(scope: !356, file: !77, discriminator: 1)
!361 = !DILocation(line: 1446, column: 30, scope: !360)
!362 = !DILocation(line: 1446, column: 45, scope: !360)
!363 = !DILocation(line: 1446, column: 6, scope: !364)
!364 = !DILexicalBlockFile(scope: !338, file: !77, discriminator: 1)
!365 = !DILocation(line: 1447, column: 10, scope: !356)
!366 = !DILocation(line: 1447, column: 8, scope: !356)
!367 = !DILocation(line: 1447, column: 3, scope: !356)
!368 = !DILocation(line: 1449, column: 6, scope: !369)
!369 = distinct !DILexicalBlock(scope: !338, file: !77, line: 1449, column: 6)
!370 = !DILocation(line: 1449, column: 11, scope: !369)
!371 = !DILocation(line: 1449, column: 6, scope: !338)
!372 = !DILocation(line: 1451, column: 3, scope: !373)
!373 = distinct !DILexicalBlock(scope: !369, file: !77, line: 1449, column: 25)
!374 = !DILocation(line: 1451, column: 14, scope: !375)
!375 = !DILexicalBlockFile(scope: !373, file: !77, discriminator: 1)
!376 = !DILocation(line: 1451, column: 10, scope: !375)
!377 = !DILocation(line: 1451, column: 18, scope: !375)
!378 = !DILocation(line: 1451, column: 27, scope: !379)
!379 = !DILexicalBlockFile(scope: !373, file: !77, discriminator: 2)
!380 = !DILocation(line: 1451, column: 22, scope: !379)
!381 = !DILocation(line: 1451, column: 35, scope: !379)
!382 = !DILocation(line: 1451, column: 3, scope: !383)
!383 = !DILexicalBlockFile(scope: !373, file: !77, discriminator: 3)
!384 = !DILocation(line: 1453, column: 54, scope: !385)
!385 = distinct !DILexicalBlock(scope: !373, file: !77, line: 1451, column: 55)
!386 = !DILocation(line: 1453, column: 11, scope: !385)
!387 = !DILocation(line: 1453, column: 9, scope: !385)
!388 = !DILocation(line: 1451, column: 3, scope: !389)
!389 = !DILexicalBlockFile(scope: !373, file: !77, discriminator: 4)
!390 = distinct !{!390, !372, !391}
!391 = !DILocation(line: 1454, column: 3, scope: !373)
!392 = !DILocation(line: 1456, column: 8, scope: !393)
!393 = distinct !DILexicalBlock(scope: !373, file: !77, line: 1456, column: 7)
!394 = !DILocation(line: 1456, column: 13, scope: !393)
!395 = !DILocation(line: 1456, column: 27, scope: !393)
!396 = !DILocation(line: 1456, column: 36, scope: !397)
!397 = !DILexicalBlockFile(scope: !393, file: !77, discriminator: 1)
!398 = !DILocation(line: 1456, column: 31, scope: !397)
!399 = !DILocation(line: 1456, column: 44, scope: !397)
!400 = !DILocation(line: 1456, column: 7, scope: !375)
!401 = !DILocation(line: 1457, column: 9, scope: !402)
!402 = distinct !DILexicalBlock(scope: !393, file: !77, line: 1456, column: 64)
!403 = !DILocation(line: 1457, column: 21, scope: !402)
!404 = !DILocation(line: 1459, column: 11, scope: !402)
!405 = !DILocation(line: 1459, column: 9, scope: !402)
!406 = !DILocation(line: 1460, column: 3, scope: !402)
!407 = !DILocation(line: 1461, column: 9, scope: !408)
!408 = distinct !DILexicalBlock(scope: !393, file: !77, line: 1460, column: 10)
!409 = !DILocation(line: 1463, column: 2, scope: !373)
!410 = !DILocation(line: 1465, column: 2, scope: !338)
!411 = distinct !DISubprogram(name: "null_ptr_check", scope: !77, file: !77, line: 2786, type: !412, isLocal: true, isDefinition: true, scopeLine: 2787, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!412 = !DISubroutineType(types: !413)
!413 = !{!62, !252}
!414 = !DILocalVariable(name: "dev", arg: 1, scope: !411, file: !77, line: 2786, type: !252)
!415 = !DILocation(line: 2786, column: 55, scope: !411)
!416 = !DILocalVariable(name: "rslt", scope: !411, file: !77, line: 2788, type: !62)
!417 = !DILocation(line: 2788, column: 9, scope: !411)
!418 = !DILocation(line: 2787, column: 3, scope: !411)
!419 = !DILocation(line: 2790, column: 11, scope: !420)
!420 = distinct !DILexicalBlock(scope: !411, file: !77, line: 2790, column: 6)
!421 = !DILocation(line: 2790, column: 20, scope: !420)
!422 = !DILocation(line: 2790, column: 29, scope: !423)
!423 = !DILexicalBlockFile(scope: !420, file: !77, discriminator: 1)
!424 = !DILocation(line: 2790, column: 34, scope: !423)
!425 = !DILocation(line: 2790, column: 43, scope: !423)
!426 = !DILocation(line: 2790, column: 52, scope: !427)
!427 = !DILexicalBlockFile(scope: !420, file: !77, discriminator: 2)
!428 = !DILocation(line: 2790, column: 58, scope: !427)
!429 = !DILocation(line: 2790, column: 67, scope: !427)
!430 = !DILocation(line: 2790, column: 76, scope: !431)
!431 = !DILexicalBlockFile(scope: !420, file: !77, discriminator: 3)
!432 = !DILocation(line: 2790, column: 85, scope: !431)
!433 = !DILocation(line: 2790, column: 6, scope: !434)
!434 = !DILexicalBlockFile(scope: !411, file: !77, discriminator: 3)
!435 = !DILocation(line: 2791, column: 8, scope: !436)
!436 = distinct !DILexicalBlock(scope: !420, file: !77, line: 2790, column: 95)
!437 = !DILocation(line: 2792, column: 2, scope: !436)
!438 = !DILocation(line: 2794, column: 8, scope: !439)
!439 = distinct !DILexicalBlock(scope: !420, file: !77, line: 2792, column: 9)
!440 = !DILocation(line: 2797, column: 2, scope: !411)
!441 = distinct !DISubprogram(name: "bmi160_soft_reset", scope: !77, file: !77, line: 1472, type: !339, isLocal: false, isDefinition: true, scopeLine: 1473, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!442 = !DILocalVariable(name: "dev", arg: 1, scope: !441, file: !77, line: 1472, type: !341)
!443 = !DILocation(line: 1472, column: 45, scope: !441)
!444 = !DILocalVariable(name: "rslt", scope: !441, file: !77, line: 1474, type: !62)
!445 = !DILocation(line: 1474, column: 9, scope: !441)
!446 = !DILocation(line: 1473, column: 3, scope: !441)
!447 = !DILocalVariable(name: "data", scope: !441, file: !77, line: 1475, type: !17)
!448 = !DILocation(line: 1475, column: 10, scope: !441)
!449 = !DILocation(line: 1478, column: 11, scope: !450)
!450 = distinct !DILexicalBlock(scope: !441, file: !77, line: 1478, column: 6)
!451 = !DILocation(line: 1478, column: 20, scope: !450)
!452 = !DILocation(line: 1478, column: 29, scope: !453)
!453 = !DILexicalBlockFile(scope: !450, file: !77, discriminator: 1)
!454 = !DILocation(line: 1478, column: 38, scope: !453)
!455 = !DILocation(line: 1478, column: 6, scope: !456)
!456 = !DILexicalBlockFile(scope: !441, file: !77, discriminator: 1)
!457 = !DILocation(line: 1479, column: 8, scope: !458)
!458 = distinct !DILexicalBlock(scope: !450, file: !77, line: 1478, column: 48)
!459 = !DILocation(line: 1480, column: 2, scope: !458)
!460 = !DILocation(line: 1482, column: 10, scope: !461)
!461 = distinct !DILexicalBlock(scope: !450, file: !77, line: 1480, column: 9)
!462 = !DILocation(line: 1482, column: 8, scope: !461)
!463 = !DILocation(line: 1483, column: 8, scope: !461)
!464 = !DILocation(line: 1483, column: 3, scope: !461)
!465 = !DILocation(line: 1484, column: 8, scope: !466)
!466 = distinct !DILexicalBlock(scope: !461, file: !77, line: 1484, column: 7)
!467 = !DILocation(line: 1484, column: 13, scope: !466)
!468 = !DILocation(line: 1484, column: 27, scope: !466)
!469 = !DILocation(line: 1484, column: 36, scope: !470)
!470 = !DILexicalBlockFile(scope: !466, file: !77, discriminator: 1)
!471 = !DILocation(line: 1484, column: 31, scope: !470)
!472 = !DILocation(line: 1484, column: 46, scope: !470)
!473 = !DILocation(line: 1484, column: 7, scope: !474)
!474 = !DILexicalBlockFile(scope: !461, file: !77, discriminator: 1)
!475 = !DILocation(line: 1487, column: 11, scope: !476)
!476 = distinct !DILexicalBlock(scope: !466, file: !77, line: 1484, column: 67)
!477 = !DILocation(line: 1487, column: 9, scope: !476)
!478 = !DILocation(line: 1488, column: 3, scope: !476)
!479 = !DILocation(line: 1489, column: 7, scope: !480)
!480 = distinct !DILexicalBlock(scope: !461, file: !77, line: 1489, column: 7)
!481 = !DILocation(line: 1489, column: 12, scope: !480)
!482 = !DILocation(line: 1489, column: 7, scope: !461)
!483 = !DILocation(line: 1491, column: 4, scope: !484)
!484 = distinct !DILexicalBlock(scope: !480, file: !77, line: 1489, column: 26)
!485 = !DILocation(line: 1492, column: 3, scope: !484)
!486 = !DILocation(line: 1495, column: 2, scope: !441)
!487 = distinct !DISubprogram(name: "default_param_settg", scope: !77, file: !77, line: 2804, type: !488, isLocal: true, isDefinition: true, scopeLine: 2805, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!488 = !DISubroutineType(types: !489)
!489 = !{null, !341}
!490 = !DILocalVariable(name: "dev", arg: 1, scope: !487, file: !77, line: 2804, type: !341)
!491 = !DILocation(line: 2804, column: 52, scope: !487)
!492 = !DILocation(line: 2805, column: 3, scope: !487)
!493 = !DILocation(line: 2808, column: 7, scope: !487)
!494 = !DILocation(line: 2808, column: 17, scope: !487)
!495 = !DILocation(line: 2808, column: 20, scope: !487)
!496 = !DILocation(line: 2809, column: 7, scope: !487)
!497 = !DILocation(line: 2809, column: 17, scope: !487)
!498 = !DILocation(line: 2809, column: 21, scope: !487)
!499 = !DILocation(line: 2810, column: 7, scope: !487)
!500 = !DILocation(line: 2810, column: 17, scope: !487)
!501 = !DILocation(line: 2810, column: 23, scope: !487)
!502 = !DILocation(line: 2811, column: 7, scope: !487)
!503 = !DILocation(line: 2811, column: 17, scope: !487)
!504 = !DILocation(line: 2811, column: 23, scope: !487)
!505 = !DILocation(line: 2812, column: 7, scope: !487)
!506 = !DILocation(line: 2812, column: 16, scope: !487)
!507 = !DILocation(line: 2812, column: 19, scope: !487)
!508 = !DILocation(line: 2813, column: 7, scope: !487)
!509 = !DILocation(line: 2813, column: 16, scope: !487)
!510 = !DILocation(line: 2813, column: 20, scope: !487)
!511 = !DILocation(line: 2814, column: 7, scope: !487)
!512 = !DILocation(line: 2814, column: 16, scope: !487)
!513 = !DILocation(line: 2814, column: 22, scope: !487)
!514 = !DILocation(line: 2815, column: 7, scope: !487)
!515 = !DILocation(line: 2815, column: 16, scope: !487)
!516 = !DILocation(line: 2815, column: 22, scope: !487)
!517 = !DILocation(line: 2818, column: 7, scope: !487)
!518 = !DILocation(line: 2818, column: 29, scope: !487)
!519 = !DILocation(line: 2820, column: 7, scope: !487)
!520 = !DILocation(line: 2820, column: 28, scope: !487)
!521 = !DILocation(line: 2821, column: 1, scope: !487)
!522 = distinct !DISubprogram(name: "bmi160_set_sens_conf", scope: !77, file: !77, line: 1502, type: !339, isLocal: false, isDefinition: true, scopeLine: 1503, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!523 = !DILocalVariable(name: "dev", arg: 1, scope: !522, file: !77, line: 1502, type: !341)
!524 = !DILocation(line: 1502, column: 48, scope: !522)
!525 = !DILocalVariable(name: "rslt", scope: !522, file: !77, line: 1504, type: !62)
!526 = !DILocation(line: 1504, column: 9, scope: !522)
!527 = !DILocation(line: 1503, column: 3, scope: !522)
!528 = !DILocation(line: 1507, column: 11, scope: !529)
!529 = distinct !DILexicalBlock(scope: !522, file: !77, line: 1507, column: 6)
!530 = !DILocation(line: 1507, column: 20, scope: !529)
!531 = !DILocation(line: 1507, column: 29, scope: !532)
!532 = !DILexicalBlockFile(scope: !529, file: !77, discriminator: 1)
!533 = !DILocation(line: 1507, column: 38, scope: !532)
!534 = !DILocation(line: 1507, column: 6, scope: !535)
!535 = !DILexicalBlockFile(scope: !522, file: !77, discriminator: 1)
!536 = !DILocation(line: 1508, column: 8, scope: !537)
!537 = distinct !DILexicalBlock(scope: !529, file: !77, line: 1507, column: 48)
!538 = !DILocation(line: 1509, column: 2, scope: !537)
!539 = !DILocation(line: 1510, column: 10, scope: !540)
!540 = distinct !DILexicalBlock(scope: !529, file: !77, line: 1509, column: 9)
!541 = !DILocation(line: 1510, column: 8, scope: !540)
!542 = !DILocation(line: 1511, column: 7, scope: !543)
!543 = distinct !DILexicalBlock(scope: !540, file: !77, line: 1511, column: 7)
!544 = !DILocation(line: 1511, column: 12, scope: !543)
!545 = !DILocation(line: 1511, column: 7, scope: !540)
!546 = !DILocation(line: 1512, column: 11, scope: !547)
!547 = distinct !DILexicalBlock(scope: !543, file: !77, line: 1511, column: 26)
!548 = !DILocation(line: 1512, column: 9, scope: !547)
!549 = !DILocation(line: 1513, column: 8, scope: !550)
!550 = distinct !DILexicalBlock(scope: !547, file: !77, line: 1513, column: 8)
!551 = !DILocation(line: 1513, column: 13, scope: !550)
!552 = !DILocation(line: 1513, column: 8, scope: !547)
!553 = !DILocation(line: 1515, column: 12, scope: !554)
!554 = distinct !DILexicalBlock(scope: !550, file: !77, line: 1513, column: 27)
!555 = !DILocation(line: 1515, column: 10, scope: !554)
!556 = !DILocation(line: 1516, column: 9, scope: !557)
!557 = distinct !DILexicalBlock(scope: !554, file: !77, line: 1516, column: 9)
!558 = !DILocation(line: 1516, column: 14, scope: !557)
!559 = !DILocation(line: 1516, column: 9, scope: !554)
!560 = !DILocation(line: 1517, column: 13, scope: !557)
!561 = !DILocation(line: 1517, column: 11, scope: !557)
!562 = !DILocation(line: 1517, column: 6, scope: !557)
!563 = !DILocation(line: 1518, column: 4, scope: !554)
!564 = !DILocation(line: 1519, column: 3, scope: !547)
!565 = !DILocation(line: 1522, column: 2, scope: !522)
!566 = distinct !DISubprogram(name: "set_accel_conf", scope: !77, file: !77, line: 2826, type: !339, isLocal: true, isDefinition: true, scopeLine: 2827, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!567 = !DILocalVariable(name: "dev", arg: 1, scope: !566, file: !77, line: 2826, type: !341)
!568 = !DILocation(line: 2826, column: 49, scope: !566)
!569 = !DILocalVariable(name: "rslt", scope: !566, file: !77, line: 2828, type: !62)
!570 = !DILocation(line: 2828, column: 9, scope: !566)
!571 = !DILocation(line: 2827, column: 3, scope: !566)
!572 = !DILocalVariable(name: "data", scope: !566, file: !77, line: 2829, type: !573)
!573 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 16, elements: !574)
!574 = !{!575}
!575 = !DISubrange(count: 2)
!576 = !DILocation(line: 2829, column: 10, scope: !566)
!577 = !DILocation(line: 2831, column: 28, scope: !566)
!578 = !DILocation(line: 2831, column: 9, scope: !566)
!579 = !DILocation(line: 2831, column: 7, scope: !566)
!580 = !DILocation(line: 2832, column: 6, scope: !581)
!581 = distinct !DILexicalBlock(scope: !566, file: !77, line: 2832, column: 6)
!582 = !DILocation(line: 2832, column: 11, scope: !581)
!583 = !DILocation(line: 2832, column: 6, scope: !566)
!584 = !DILocation(line: 2834, column: 53, scope: !585)
!585 = distinct !DILexicalBlock(scope: !581, file: !77, line: 2832, column: 25)
!586 = !DILocation(line: 2834, column: 10, scope: !585)
!587 = !DILocation(line: 2834, column: 8, scope: !585)
!588 = !DILocation(line: 2835, column: 7, scope: !589)
!589 = distinct !DILexicalBlock(scope: !585, file: !77, line: 2835, column: 7)
!590 = !DILocation(line: 2835, column: 12, scope: !589)
!591 = !DILocation(line: 2835, column: 7, scope: !585)
!592 = !DILocation(line: 2836, column: 35, scope: !593)
!593 = distinct !DILexicalBlock(scope: !589, file: !77, line: 2835, column: 26)
!594 = !DILocation(line: 2836, column: 45, scope: !593)
!595 = !DILocation(line: 2836, column: 9, scope: !593)
!596 = !DILocation(line: 2836, column: 24, scope: !593)
!597 = !DILocation(line: 2836, column: 28, scope: !593)
!598 = !DILocation(line: 2837, column: 34, scope: !593)
!599 = !DILocation(line: 2837, column: 44, scope: !593)
!600 = !DILocation(line: 2837, column: 9, scope: !593)
!601 = !DILocation(line: 2837, column: 24, scope: !593)
!602 = !DILocation(line: 2837, column: 27, scope: !593)
!603 = !DILocation(line: 2838, column: 9, scope: !593)
!604 = !DILocation(line: 2838, column: 4, scope: !593)
!605 = !DILocation(line: 2840, column: 53, scope: !593)
!606 = !DILocation(line: 2840, column: 11, scope: !593)
!607 = !DILocation(line: 2840, column: 9, scope: !593)
!608 = !DILocation(line: 2841, column: 8, scope: !609)
!609 = distinct !DILexicalBlock(scope: !593, file: !77, line: 2841, column: 8)
!610 = !DILocation(line: 2841, column: 13, scope: !609)
!611 = !DILocation(line: 2841, column: 8, scope: !593)
!612 = !DILocation(line: 2842, column: 38, scope: !609)
!613 = !DILocation(line: 2842, column: 48, scope: !609)
!614 = !DILocation(line: 2842, column: 10, scope: !609)
!615 = !DILocation(line: 2842, column: 25, scope: !609)
!616 = !DILocation(line: 2842, column: 31, scope: !609)
!617 = !DILocation(line: 2842, column: 5, scope: !609)
!618 = !DILocation(line: 2843, column: 3, scope: !593)
!619 = !DILocation(line: 2844, column: 2, scope: !585)
!620 = !DILocation(line: 2846, column: 2, scope: !566)
!621 = distinct !DISubprogram(name: "set_gyro_conf", scope: !77, file: !77, line: 2965, type: !339, isLocal: true, isDefinition: true, scopeLine: 2966, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!622 = !DILocalVariable(name: "dev", arg: 1, scope: !621, file: !77, line: 2965, type: !341)
!623 = !DILocation(line: 2965, column: 48, scope: !621)
!624 = !DILocalVariable(name: "rslt", scope: !621, file: !77, line: 2967, type: !62)
!625 = !DILocation(line: 2967, column: 9, scope: !621)
!626 = !DILocation(line: 2966, column: 3, scope: !621)
!627 = !DILocalVariable(name: "data", scope: !621, file: !77, line: 2968, type: !573)
!628 = !DILocation(line: 2968, column: 10, scope: !621)
!629 = !DILocation(line: 2970, column: 27, scope: !621)
!630 = !DILocation(line: 2970, column: 9, scope: !621)
!631 = !DILocation(line: 2970, column: 7, scope: !621)
!632 = !DILocation(line: 2971, column: 6, scope: !633)
!633 = distinct !DILexicalBlock(scope: !621, file: !77, line: 2971, column: 6)
!634 = !DILocation(line: 2971, column: 11, scope: !633)
!635 = !DILocation(line: 2971, column: 6, scope: !621)
!636 = !DILocation(line: 2973, column: 52, scope: !637)
!637 = distinct !DILexicalBlock(scope: !633, file: !77, line: 2971, column: 25)
!638 = !DILocation(line: 2973, column: 10, scope: !637)
!639 = !DILocation(line: 2973, column: 8, scope: !637)
!640 = !DILocation(line: 2974, column: 7, scope: !641)
!641 = distinct !DILexicalBlock(scope: !637, file: !77, line: 2974, column: 7)
!642 = !DILocation(line: 2974, column: 12, scope: !641)
!643 = !DILocation(line: 2974, column: 7, scope: !637)
!644 = !DILocation(line: 2975, column: 34, scope: !645)
!645 = distinct !DILexicalBlock(scope: !641, file: !77, line: 2974, column: 26)
!646 = !DILocation(line: 2975, column: 43, scope: !645)
!647 = !DILocation(line: 2975, column: 9, scope: !645)
!648 = !DILocation(line: 2975, column: 23, scope: !645)
!649 = !DILocation(line: 2975, column: 27, scope: !645)
!650 = !DILocation(line: 2976, column: 33, scope: !645)
!651 = !DILocation(line: 2976, column: 42, scope: !645)
!652 = !DILocation(line: 2976, column: 9, scope: !645)
!653 = !DILocation(line: 2976, column: 23, scope: !645)
!654 = !DILocation(line: 2976, column: 26, scope: !645)
!655 = !DILocation(line: 2977, column: 9, scope: !645)
!656 = !DILocation(line: 2977, column: 4, scope: !645)
!657 = !DILocation(line: 2979, column: 52, scope: !645)
!658 = !DILocation(line: 2979, column: 11, scope: !645)
!659 = !DILocation(line: 2979, column: 9, scope: !645)
!660 = !DILocation(line: 2980, column: 8, scope: !661)
!661 = distinct !DILexicalBlock(scope: !645, file: !77, line: 2980, column: 8)
!662 = !DILocation(line: 2980, column: 13, scope: !661)
!663 = !DILocation(line: 2980, column: 8, scope: !645)
!664 = !DILocation(line: 2981, column: 37, scope: !661)
!665 = !DILocation(line: 2981, column: 46, scope: !661)
!666 = !DILocation(line: 2981, column: 10, scope: !661)
!667 = !DILocation(line: 2981, column: 24, scope: !661)
!668 = !DILocation(line: 2981, column: 30, scope: !661)
!669 = !DILocation(line: 2981, column: 5, scope: !661)
!670 = !DILocation(line: 2982, column: 3, scope: !645)
!671 = !DILocation(line: 2983, column: 2, scope: !637)
!672 = !DILocation(line: 2985, column: 2, scope: !621)
!673 = distinct !DISubprogram(name: "bmi160_set_power_mode", scope: !77, file: !77, line: 1528, type: !339, isLocal: false, isDefinition: true, scopeLine: 1529, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!674 = !DILocalVariable(name: "dev", arg: 1, scope: !673, file: !77, line: 1528, type: !341)
!675 = !DILocation(line: 1528, column: 49, scope: !673)
!676 = !DILocalVariable(name: "rslt", scope: !673, file: !77, line: 1530, type: !62)
!677 = !DILocation(line: 1530, column: 9, scope: !673)
!678 = !DILocation(line: 1529, column: 3, scope: !673)
!679 = !DILocation(line: 1533, column: 11, scope: !680)
!680 = distinct !DILexicalBlock(scope: !673, file: !77, line: 1533, column: 6)
!681 = !DILocation(line: 1533, column: 20, scope: !680)
!682 = !DILocation(line: 1533, column: 29, scope: !683)
!683 = !DILexicalBlockFile(scope: !680, file: !77, discriminator: 1)
!684 = !DILocation(line: 1533, column: 38, scope: !683)
!685 = !DILocation(line: 1533, column: 6, scope: !686)
!686 = !DILexicalBlockFile(scope: !673, file: !77, discriminator: 1)
!687 = !DILocation(line: 1534, column: 8, scope: !688)
!688 = distinct !DILexicalBlock(scope: !680, file: !77, line: 1533, column: 48)
!689 = !DILocation(line: 1535, column: 2, scope: !688)
!690 = !DILocation(line: 1536, column: 10, scope: !691)
!691 = distinct !DILexicalBlock(scope: !680, file: !77, line: 1535, column: 9)
!692 = !DILocation(line: 1536, column: 8, scope: !691)
!693 = !DILocation(line: 1537, column: 7, scope: !694)
!694 = distinct !DILexicalBlock(scope: !691, file: !77, line: 1537, column: 7)
!695 = !DILocation(line: 1537, column: 12, scope: !694)
!696 = !DILocation(line: 1537, column: 7, scope: !691)
!697 = !DILocation(line: 1538, column: 11, scope: !694)
!698 = !DILocation(line: 1538, column: 9, scope: !694)
!699 = !DILocation(line: 1538, column: 4, scope: !694)
!700 = !DILocation(line: 1541, column: 2, scope: !673)
!701 = distinct !DISubprogram(name: "check_invalid_settg", scope: !77, file: !77, line: 2943, type: !412, isLocal: true, isDefinition: true, scopeLine: 2944, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!702 = !DILocalVariable(name: "dev", arg: 1, scope: !701, file: !77, line: 2943, type: !252)
!703 = !DILocation(line: 2943, column: 60, scope: !701)
!704 = !DILocalVariable(name: "rslt", scope: !701, file: !77, line: 2945, type: !62)
!705 = !DILocation(line: 2945, column: 9, scope: !701)
!706 = !DILocation(line: 2944, column: 3, scope: !701)
!707 = !DILocalVariable(name: "data", scope: !701, file: !77, line: 2946, type: !17)
!708 = !DILocation(line: 2946, column: 10, scope: !701)
!709 = !DILocation(line: 2949, column: 9, scope: !701)
!710 = !DILocation(line: 2949, column: 7, scope: !701)
!711 = !DILocation(line: 2951, column: 9, scope: !701)
!712 = !DILocation(line: 2951, column: 14, scope: !701)
!713 = !DILocation(line: 2951, column: 7, scope: !701)
!714 = !DILocation(line: 2952, column: 9, scope: !701)
!715 = !DILocation(line: 2952, column: 14, scope: !701)
!716 = !DILocation(line: 2952, column: 7, scope: !701)
!717 = !DILocation(line: 2953, column: 6, scope: !718)
!718 = distinct !DILexicalBlock(scope: !701, file: !77, line: 2953, column: 6)
!719 = !DILocation(line: 2953, column: 11, scope: !718)
!720 = !DILocation(line: 2953, column: 6, scope: !701)
!721 = !DILocation(line: 2954, column: 8, scope: !718)
!722 = !DILocation(line: 2954, column: 3, scope: !718)
!723 = !DILocation(line: 2955, column: 11, scope: !724)
!724 = distinct !DILexicalBlock(scope: !718, file: !77, line: 2955, column: 11)
!725 = !DILocation(line: 2955, column: 16, scope: !724)
!726 = !DILocation(line: 2955, column: 11, scope: !718)
!727 = !DILocation(line: 2956, column: 8, scope: !724)
!728 = !DILocation(line: 2956, column: 3, scope: !724)
!729 = !DILocation(line: 2957, column: 11, scope: !730)
!730 = distinct !DILexicalBlock(scope: !724, file: !77, line: 2957, column: 11)
!731 = !DILocation(line: 2957, column: 16, scope: !730)
!732 = !DILocation(line: 2957, column: 11, scope: !724)
!733 = !DILocation(line: 2958, column: 8, scope: !730)
!734 = !DILocation(line: 2958, column: 3, scope: !730)
!735 = !DILocation(line: 2959, column: 11, scope: !736)
!736 = distinct !DILexicalBlock(scope: !730, file: !77, line: 2959, column: 11)
!737 = !DILocation(line: 2959, column: 16, scope: !736)
!738 = !DILocation(line: 2959, column: 11, scope: !730)
!739 = !DILocation(line: 2960, column: 8, scope: !736)
!740 = !DILocation(line: 2960, column: 3, scope: !736)
!741 = !DILocation(line: 2962, column: 2, scope: !701)
!742 = distinct !DISubprogram(name: "set_accel_pwr", scope: !77, file: !77, line: 3080, type: !339, isLocal: true, isDefinition: true, scopeLine: 3081, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!743 = !DILocalVariable(name: "dev", arg: 1, scope: !742, file: !77, line: 3080, type: !341)
!744 = !DILocation(line: 3080, column: 48, scope: !742)
!745 = !DILocalVariable(name: "rslt", scope: !742, file: !77, line: 3082, type: !62)
!746 = !DILocation(line: 3082, column: 9, scope: !742)
!747 = !DILocation(line: 3081, column: 3, scope: !742)
!748 = !DILocalVariable(name: "data", scope: !742, file: !77, line: 3083, type: !17)
!749 = !DILocation(line: 3083, column: 10, scope: !742)
!750 = !DILocation(line: 3085, column: 12, scope: !751)
!751 = distinct !DILexicalBlock(scope: !742, file: !77, line: 3085, column: 6)
!752 = !DILocation(line: 3085, column: 22, scope: !751)
!753 = !DILocation(line: 3085, column: 7, scope: !751)
!754 = !DILocation(line: 3085, column: 28, scope: !751)
!755 = !DILocation(line: 3085, column: 58, scope: !751)
!756 = !DILocation(line: 3086, column: 9, scope: !751)
!757 = !DILocation(line: 3086, column: 19, scope: !751)
!758 = !DILocation(line: 3086, column: 4, scope: !751)
!759 = !DILocation(line: 3086, column: 25, scope: !751)
!760 = !DILocation(line: 3085, column: 6, scope: !761)
!761 = !DILexicalBlockFile(scope: !742, file: !77, discriminator: 1)
!762 = !DILocation(line: 3087, column: 12, scope: !763)
!763 = distinct !DILexicalBlock(scope: !764, file: !77, line: 3087, column: 7)
!764 = distinct !DILexicalBlock(scope: !751, file: !77, line: 3086, column: 57)
!765 = !DILocation(line: 3087, column: 22, scope: !763)
!766 = !DILocation(line: 3087, column: 7, scope: !763)
!767 = !DILocation(line: 3087, column: 36, scope: !763)
!768 = !DILocation(line: 3087, column: 51, scope: !763)
!769 = !DILocation(line: 3087, column: 31, scope: !763)
!770 = !DILocation(line: 3087, column: 28, scope: !763)
!771 = !DILocation(line: 3087, column: 7, scope: !764)
!772 = !DILocation(line: 3088, column: 11, scope: !773)
!773 = distinct !DILexicalBlock(scope: !763, file: !77, line: 3087, column: 58)
!774 = !DILocation(line: 3088, column: 9, scope: !773)
!775 = !DILocation(line: 3089, column: 8, scope: !776)
!776 = distinct !DILexicalBlock(scope: !773, file: !77, line: 3089, column: 8)
!777 = !DILocation(line: 3089, column: 13, scope: !776)
!778 = !DILocation(line: 3089, column: 8, scope: !773)
!779 = !DILocation(line: 3091, column: 59, scope: !780)
!780 = distinct !DILexicalBlock(scope: !776, file: !77, line: 3089, column: 27)
!781 = !DILocation(line: 3091, column: 69, scope: !780)
!782 = !DILocation(line: 3091, column: 12, scope: !780)
!783 = !DILocation(line: 3091, column: 10, scope: !780)
!784 = !DILocation(line: 3093, column: 14, scope: !785)
!785 = distinct !DILexicalBlock(scope: !780, file: !77, line: 3093, column: 9)
!786 = !DILocation(line: 3093, column: 29, scope: !785)
!787 = !DILocation(line: 3093, column: 9, scope: !785)
!788 = !DILocation(line: 3093, column: 35, scope: !785)
!789 = !DILocation(line: 3093, column: 9, scope: !780)
!790 = !DILocation(line: 3094, column: 11, scope: !785)
!791 = !DILocation(line: 3094, column: 6, scope: !785)
!792 = !DILocation(line: 3095, column: 38, scope: !780)
!793 = !DILocation(line: 3095, column: 48, scope: !780)
!794 = !DILocation(line: 3095, column: 10, scope: !780)
!795 = !DILocation(line: 3095, column: 25, scope: !780)
!796 = !DILocation(line: 3095, column: 31, scope: !780)
!797 = !DILocation(line: 3096, column: 4, scope: !780)
!798 = !DILocation(line: 3097, column: 3, scope: !773)
!799 = !DILocation(line: 3098, column: 2, scope: !764)
!800 = !DILocation(line: 3099, column: 8, scope: !801)
!801 = distinct !DILexicalBlock(scope: !751, file: !77, line: 3098, column: 9)
!802 = !DILocation(line: 3102, column: 2, scope: !742)
!803 = distinct !DISubprogram(name: "set_gyro_pwr", scope: !77, file: !77, line: 3146, type: !339, isLocal: true, isDefinition: true, scopeLine: 3147, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!804 = !DILocalVariable(name: "dev", arg: 1, scope: !803, file: !77, line: 3146, type: !341)
!805 = !DILocation(line: 3146, column: 47, scope: !803)
!806 = !DILocalVariable(name: "rslt", scope: !803, file: !77, line: 3148, type: !62)
!807 = !DILocation(line: 3148, column: 9, scope: !803)
!808 = !DILocation(line: 3147, column: 3, scope: !803)
!809 = !DILocation(line: 3150, column: 12, scope: !810)
!810 = distinct !DILexicalBlock(scope: !803, file: !77, line: 3150, column: 6)
!811 = !DILocation(line: 3150, column: 21, scope: !810)
!812 = !DILocation(line: 3150, column: 7, scope: !810)
!813 = !DILocation(line: 3150, column: 27, scope: !810)
!814 = !DILocation(line: 3150, column: 56, scope: !810)
!815 = !DILocation(line: 3150, column: 65, scope: !816)
!816 = !DILexicalBlockFile(scope: !810, file: !77, discriminator: 1)
!817 = !DILocation(line: 3150, column: 74, scope: !816)
!818 = !DILocation(line: 3150, column: 60, scope: !816)
!819 = !DILocation(line: 3150, column: 80, scope: !816)
!820 = !DILocation(line: 3151, column: 3, scope: !810)
!821 = !DILocation(line: 3151, column: 12, scope: !816)
!822 = !DILocation(line: 3151, column: 21, scope: !816)
!823 = !DILocation(line: 3151, column: 7, scope: !816)
!824 = !DILocation(line: 3151, column: 27, scope: !816)
!825 = !DILocation(line: 3150, column: 6, scope: !826)
!826 = !DILexicalBlockFile(scope: !803, file: !77, discriminator: 2)
!827 = !DILocation(line: 3153, column: 12, scope: !828)
!828 = distinct !DILexicalBlock(scope: !829, file: !77, line: 3153, column: 7)
!829 = distinct !DILexicalBlock(scope: !810, file: !77, line: 3151, column: 61)
!830 = !DILocation(line: 3153, column: 21, scope: !828)
!831 = !DILocation(line: 3153, column: 7, scope: !828)
!832 = !DILocation(line: 3153, column: 35, scope: !828)
!833 = !DILocation(line: 3153, column: 49, scope: !828)
!834 = !DILocation(line: 3153, column: 30, scope: !828)
!835 = !DILocation(line: 3153, column: 27, scope: !828)
!836 = !DILocation(line: 3153, column: 7, scope: !829)
!837 = !DILocation(line: 3156, column: 58, scope: !838)
!838 = distinct !DILexicalBlock(scope: !828, file: !77, line: 3153, column: 56)
!839 = !DILocation(line: 3156, column: 67, scope: !838)
!840 = !DILocation(line: 3156, column: 11, scope: !838)
!841 = !DILocation(line: 3156, column: 9, scope: !838)
!842 = !DILocation(line: 3157, column: 13, scope: !843)
!843 = distinct !DILexicalBlock(scope: !838, file: !77, line: 3157, column: 8)
!844 = !DILocation(line: 3157, column: 27, scope: !843)
!845 = !DILocation(line: 3157, column: 8, scope: !843)
!846 = !DILocation(line: 3157, column: 33, scope: !843)
!847 = !DILocation(line: 3157, column: 8, scope: !838)
!848 = !DILocation(line: 3160, column: 10, scope: !849)
!849 = distinct !DILexicalBlock(scope: !843, file: !77, line: 3158, column: 31)
!850 = !DILocation(line: 3160, column: 5, scope: !849)
!851 = !DILocation(line: 3161, column: 4, scope: !849)
!852 = !DILocation(line: 3161, column: 21, scope: !853)
!853 = !DILexicalBlockFile(scope: !854, file: !77, discriminator: 1)
!854 = distinct !DILexicalBlock(scope: !843, file: !77, line: 3161, column: 15)
!855 = !DILocation(line: 3161, column: 35, scope: !853)
!856 = !DILocation(line: 3161, column: 16, scope: !853)
!857 = !DILocation(line: 3161, column: 41, scope: !853)
!858 = !DILocation(line: 3162, column: 5, scope: !854)
!859 = !DILocation(line: 3162, column: 14, scope: !853)
!860 = !DILocation(line: 3162, column: 23, scope: !853)
!861 = !DILocation(line: 3162, column: 9, scope: !853)
!862 = !DILocation(line: 3162, column: 29, scope: !853)
!863 = !DILocation(line: 3161, column: 15, scope: !864)
!864 = !DILexicalBlockFile(scope: !843, file: !77, discriminator: 2)
!865 = !DILocation(line: 3165, column: 10, scope: !866)
!866 = distinct !DILexicalBlock(scope: !854, file: !77, line: 3162, column: 58)
!867 = !DILocation(line: 3165, column: 5, scope: !866)
!868 = !DILocation(line: 3166, column: 4, scope: !866)
!869 = !DILocation(line: 3169, column: 36, scope: !838)
!870 = !DILocation(line: 3169, column: 45, scope: !838)
!871 = !DILocation(line: 3169, column: 9, scope: !838)
!872 = !DILocation(line: 3169, column: 23, scope: !838)
!873 = !DILocation(line: 3169, column: 29, scope: !838)
!874 = !DILocation(line: 3170, column: 3, scope: !838)
!875 = !DILocation(line: 3171, column: 2, scope: !829)
!876 = !DILocation(line: 3172, column: 8, scope: !877)
!877 = distinct !DILexicalBlock(scope: !810, file: !77, line: 3171, column: 9)
!878 = !DILocation(line: 3175, column: 2, scope: !803)
!879 = distinct !DISubprogram(name: "process_under_sampling", scope: !77, file: !77, line: 3108, type: !880, isLocal: true, isDefinition: true, scopeLine: 3109, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!880 = !DISubroutineType(types: !881)
!881 = !{!62, !45, !252}
!882 = !DILocalVariable(name: "data", arg: 1, scope: !879, file: !77, line: 3108, type: !45)
!883 = !DILocation(line: 3108, column: 47, scope: !879)
!884 = !DILocalVariable(name: "dev", arg: 2, scope: !879, file: !77, line: 3108, type: !252)
!885 = !DILocation(line: 3108, column: 78, scope: !879)
!886 = !DILocalVariable(name: "rslt", scope: !879, file: !77, line: 3110, type: !62)
!887 = !DILocation(line: 3110, column: 9, scope: !879)
!888 = !DILocalVariable(name: "temp", scope: !879, file: !77, line: 3111, type: !17)
!889 = !DILocation(line: 3111, column: 10, scope: !879)
!890 = !DILocation(line: 3109, column: 3, scope: !879)
!891 = !DILocalVariable(name: "pre_filter", scope: !879, file: !77, line: 3112, type: !17)
!892 = !DILocation(line: 3112, column: 10, scope: !879)
!893 = !DILocation(line: 3114, column: 9, scope: !879)
!894 = !DILocation(line: 3114, column: 7, scope: !879)
!895 = !DILocation(line: 3115, column: 6, scope: !896)
!896 = distinct !DILexicalBlock(scope: !879, file: !77, line: 3115, column: 6)
!897 = !DILocation(line: 3115, column: 11, scope: !896)
!898 = !DILocation(line: 3115, column: 6, scope: !879)
!899 = !DILocation(line: 3116, column: 12, scope: !900)
!900 = distinct !DILexicalBlock(scope: !901, file: !77, line: 3116, column: 7)
!901 = distinct !DILexicalBlock(scope: !896, file: !77, line: 3115, column: 25)
!902 = !DILocation(line: 3116, column: 22, scope: !900)
!903 = !DILocation(line: 3116, column: 7, scope: !900)
!904 = !DILocation(line: 3116, column: 28, scope: !900)
!905 = !DILocation(line: 3116, column: 7, scope: !901)
!906 = !DILocation(line: 3117, column: 11, scope: !907)
!907 = distinct !DILexicalBlock(scope: !900, file: !77, line: 3116, column: 59)
!908 = !DILocation(line: 3117, column: 17, scope: !907)
!909 = !DILocation(line: 3117, column: 9, scope: !907)
!910 = !DILocation(line: 3119, column: 12, scope: !907)
!911 = !DILocation(line: 3119, column: 17, scope: !907)
!912 = !DILocation(line: 3119, column: 10, scope: !907)
!913 = !DILocation(line: 3121, column: 11, scope: !907)
!914 = !DILocation(line: 3121, column: 9, scope: !907)
!915 = !DILocation(line: 3124, column: 8, scope: !916)
!916 = distinct !DILexicalBlock(scope: !907, file: !77, line: 3124, column: 8)
!917 = !DILocation(line: 3124, column: 13, scope: !916)
!918 = !DILocation(line: 3124, column: 8, scope: !907)
!919 = !DILocation(line: 3126, column: 12, scope: !916)
!920 = !DILocation(line: 3126, column: 10, scope: !916)
!921 = !DILocation(line: 3126, column: 5, scope: !916)
!922 = !DILocation(line: 3127, column: 3, scope: !907)
!923 = !DILocation(line: 3128, column: 8, scope: !924)
!924 = distinct !DILexicalBlock(scope: !925, file: !77, line: 3128, column: 8)
!925 = distinct !DILexicalBlock(scope: !900, file: !77, line: 3127, column: 10)
!926 = !DILocation(line: 3128, column: 14, scope: !924)
!927 = !DILocation(line: 3128, column: 8, scope: !925)
!928 = !DILocation(line: 3130, column: 12, scope: !929)
!929 = distinct !DILexicalBlock(scope: !924, file: !77, line: 3128, column: 49)
!930 = !DILocation(line: 3130, column: 18, scope: !929)
!931 = !DILocation(line: 3130, column: 10, scope: !929)
!932 = !DILocation(line: 3133, column: 11, scope: !929)
!933 = !DILocation(line: 3135, column: 12, scope: !929)
!934 = !DILocation(line: 3135, column: 10, scope: !929)
!935 = !DILocation(line: 3136, column: 4, scope: !929)
!936 = !DILocation(line: 3138, column: 2, scope: !901)
!937 = !DILocation(line: 3140, column: 2, scope: !879)
!938 = distinct !DISubprogram(name: "check_gyro_config", scope: !77, file: !77, line: 2991, type: !880, isLocal: true, isDefinition: true, scopeLine: 2992, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!939 = !DILocalVariable(name: "data", arg: 1, scope: !938, file: !77, line: 2991, type: !45)
!940 = !DILocation(line: 2991, column: 42, scope: !938)
!941 = !DILocalVariable(name: "dev", arg: 2, scope: !938, file: !77, line: 2991, type: !252)
!942 = !DILocation(line: 2991, column: 73, scope: !938)
!943 = !DILocalVariable(name: "rslt", scope: !938, file: !77, line: 2993, type: !62)
!944 = !DILocation(line: 2993, column: 9, scope: !938)
!945 = !DILocation(line: 2992, column: 3, scope: !938)
!946 = !DILocation(line: 2996, column: 9, scope: !938)
!947 = !DILocation(line: 2996, column: 7, scope: !938)
!948 = !DILocation(line: 2997, column: 6, scope: !949)
!949 = distinct !DILexicalBlock(scope: !938, file: !77, line: 2997, column: 6)
!950 = !DILocation(line: 2997, column: 11, scope: !949)
!951 = !DILocation(line: 2997, column: 6, scope: !938)
!952 = !DILocation(line: 2998, column: 28, scope: !953)
!953 = distinct !DILexicalBlock(scope: !949, file: !77, line: 2997, column: 25)
!954 = !DILocation(line: 2998, column: 10, scope: !953)
!955 = !DILocation(line: 2998, column: 8, scope: !953)
!956 = !DILocation(line: 2999, column: 7, scope: !957)
!957 = distinct !DILexicalBlock(scope: !953, file: !77, line: 2999, column: 7)
!958 = !DILocation(line: 2999, column: 12, scope: !957)
!959 = !DILocation(line: 2999, column: 7, scope: !953)
!960 = !DILocation(line: 3000, column: 28, scope: !961)
!961 = distinct !DILexicalBlock(scope: !957, file: !77, line: 2999, column: 26)
!962 = !DILocation(line: 3000, column: 11, scope: !961)
!963 = !DILocation(line: 3000, column: 9, scope: !961)
!964 = !DILocation(line: 3001, column: 8, scope: !965)
!965 = distinct !DILexicalBlock(scope: !961, file: !77, line: 3001, column: 8)
!966 = !DILocation(line: 3001, column: 13, scope: !965)
!967 = !DILocation(line: 3001, column: 8, scope: !961)
!968 = !DILocation(line: 3002, column: 32, scope: !965)
!969 = !DILocation(line: 3002, column: 12, scope: !965)
!970 = !DILocation(line: 3002, column: 10, scope: !965)
!971 = !DILocation(line: 3002, column: 5, scope: !965)
!972 = !DILocation(line: 3003, column: 3, scope: !961)
!973 = !DILocation(line: 3004, column: 2, scope: !953)
!974 = !DILocation(line: 3006, column: 2, scope: !938)
!975 = distinct !DISubprogram(name: "process_gyro_odr", scope: !77, file: !77, line: 3013, type: !880, isLocal: true, isDefinition: true, scopeLine: 3014, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!976 = !DILocalVariable(name: "data", arg: 1, scope: !975, file: !77, line: 3013, type: !45)
!977 = !DILocation(line: 3013, column: 41, scope: !975)
!978 = !DILocalVariable(name: "dev", arg: 2, scope: !975, file: !77, line: 3013, type: !252)
!979 = !DILocation(line: 3013, column: 72, scope: !975)
!980 = !DILocalVariable(name: "rslt", scope: !975, file: !77, line: 3015, type: !62)
!981 = !DILocation(line: 3015, column: 9, scope: !975)
!982 = !DILocalVariable(name: "temp", scope: !975, file: !77, line: 3016, type: !17)
!983 = !DILocation(line: 3016, column: 10, scope: !975)
!984 = !DILocalVariable(name: "odr", scope: !975, file: !77, line: 3017, type: !17)
!985 = !DILocation(line: 3017, column: 10, scope: !975)
!986 = !DILocation(line: 3014, column: 3, scope: !975)
!987 = !DILocation(line: 3019, column: 11, scope: !988)
!988 = distinct !DILexicalBlock(scope: !975, file: !77, line: 3019, column: 6)
!989 = !DILocation(line: 3019, column: 20, scope: !988)
!990 = !DILocation(line: 3019, column: 6, scope: !988)
!991 = !DILocation(line: 3019, column: 24, scope: !988)
!992 = !DILocation(line: 3019, column: 6, scope: !975)
!993 = !DILocation(line: 3020, column: 12, scope: !994)
!994 = distinct !DILexicalBlock(scope: !995, file: !77, line: 3020, column: 7)
!995 = distinct !DILexicalBlock(scope: !988, file: !77, line: 3019, column: 48)
!996 = !DILocation(line: 3020, column: 21, scope: !994)
!997 = !DILocation(line: 3020, column: 7, scope: !994)
!998 = !DILocation(line: 3020, column: 33, scope: !994)
!999 = !DILocation(line: 3020, column: 47, scope: !994)
!1000 = !DILocation(line: 3020, column: 28, scope: !994)
!1001 = !DILocation(line: 3020, column: 25, scope: !994)
!1002 = !DILocation(line: 3020, column: 7, scope: !995)
!1003 = !DILocation(line: 3021, column: 24, scope: !1004)
!1004 = distinct !DILexicalBlock(scope: !994, file: !77, line: 3020, column: 52)
!1005 = !DILocation(line: 3021, column: 33, scope: !1004)
!1006 = !DILocation(line: 3021, column: 8, scope: !1004)
!1007 = !DILocation(line: 3022, column: 12, scope: !1004)
!1008 = !DILocation(line: 3022, column: 18, scope: !1004)
!1009 = !DILocation(line: 3022, column: 11, scope: !1004)
!1010 = !DILocation(line: 3022, column: 9, scope: !1004)
!1011 = !DILocation(line: 3024, column: 12, scope: !1004)
!1012 = !DILocation(line: 3024, column: 20, scope: !1004)
!1013 = !DILocation(line: 3024, column: 24, scope: !1004)
!1014 = !DILocation(line: 3024, column: 17, scope: !1004)
!1015 = !DILocation(line: 3024, column: 10, scope: !1004)
!1016 = !DILocation(line: 3025, column: 3, scope: !1004)
!1017 = !DILocation(line: 3026, column: 2, scope: !995)
!1018 = !DILocation(line: 3027, column: 8, scope: !1019)
!1019 = distinct !DILexicalBlock(scope: !988, file: !77, line: 3026, column: 9)
!1020 = !DILocation(line: 3030, column: 2, scope: !975)
!1021 = distinct !DISubprogram(name: "process_gyro_bw", scope: !77, file: !77, line: 3036, type: !880, isLocal: true, isDefinition: true, scopeLine: 3037, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!1022 = !DILocalVariable(name: "data", arg: 1, scope: !1021, file: !77, line: 3036, type: !45)
!1023 = !DILocation(line: 3036, column: 40, scope: !1021)
!1024 = !DILocalVariable(name: "dev", arg: 2, scope: !1021, file: !77, line: 3036, type: !252)
!1025 = !DILocation(line: 3036, column: 71, scope: !1021)
!1026 = !DILocalVariable(name: "rslt", scope: !1021, file: !77, line: 3038, type: !62)
!1027 = !DILocation(line: 3038, column: 9, scope: !1021)
!1028 = !DILocalVariable(name: "temp", scope: !1021, file: !77, line: 3039, type: !17)
!1029 = !DILocation(line: 3039, column: 10, scope: !1021)
!1030 = !DILocalVariable(name: "bw", scope: !1021, file: !77, line: 3040, type: !17)
!1031 = !DILocation(line: 3040, column: 10, scope: !1021)
!1032 = !DILocation(line: 3037, column: 3, scope: !1021)
!1033 = !DILocation(line: 3042, column: 11, scope: !1034)
!1034 = distinct !DILexicalBlock(scope: !1021, file: !77, line: 3042, column: 6)
!1035 = !DILocation(line: 3042, column: 20, scope: !1034)
!1036 = !DILocation(line: 3042, column: 6, scope: !1034)
!1037 = !DILocation(line: 3042, column: 23, scope: !1034)
!1038 = !DILocation(line: 3042, column: 6, scope: !1021)
!1039 = !DILocation(line: 3043, column: 22, scope: !1040)
!1040 = distinct !DILexicalBlock(scope: !1034, file: !77, line: 3042, column: 46)
!1041 = !DILocation(line: 3043, column: 31, scope: !1040)
!1042 = !DILocation(line: 3043, column: 6, scope: !1040)
!1043 = !DILocation(line: 3044, column: 10, scope: !1040)
!1044 = !DILocation(line: 3044, column: 16, scope: !1040)
!1045 = !DILocation(line: 3044, column: 8, scope: !1040)
!1046 = !DILocation(line: 3046, column: 11, scope: !1040)
!1047 = !DILocation(line: 3046, column: 20, scope: !1040)
!1048 = !DILocation(line: 3046, column: 23, scope: !1040)
!1049 = !DILocation(line: 3046, column: 29, scope: !1040)
!1050 = !DILocation(line: 3046, column: 16, scope: !1040)
!1051 = !DILocation(line: 3046, column: 9, scope: !1040)
!1052 = !DILocation(line: 3047, column: 2, scope: !1040)
!1053 = !DILocation(line: 3048, column: 8, scope: !1054)
!1054 = distinct !DILexicalBlock(scope: !1034, file: !77, line: 3047, column: 9)
!1055 = !DILocation(line: 3051, column: 2, scope: !1021)
!1056 = distinct !DISubprogram(name: "process_gyro_range", scope: !77, file: !77, line: 3057, type: !880, isLocal: true, isDefinition: true, scopeLine: 3058, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!1057 = !DILocalVariable(name: "data", arg: 1, scope: !1056, file: !77, line: 3057, type: !45)
!1058 = !DILocation(line: 3057, column: 43, scope: !1056)
!1059 = !DILocalVariable(name: "dev", arg: 2, scope: !1056, file: !77, line: 3057, type: !252)
!1060 = !DILocation(line: 3057, column: 74, scope: !1056)
!1061 = !DILocalVariable(name: "rslt", scope: !1056, file: !77, line: 3059, type: !62)
!1062 = !DILocation(line: 3059, column: 9, scope: !1056)
!1063 = !DILocalVariable(name: "temp", scope: !1056, file: !77, line: 3060, type: !17)
!1064 = !DILocation(line: 3060, column: 10, scope: !1056)
!1065 = !DILocalVariable(name: "range", scope: !1056, file: !77, line: 3061, type: !17)
!1066 = !DILocation(line: 3061, column: 10, scope: !1056)
!1067 = !DILocation(line: 3058, column: 3, scope: !1056)
!1068 = !DILocation(line: 3063, column: 11, scope: !1069)
!1069 = distinct !DILexicalBlock(scope: !1056, file: !77, line: 3063, column: 6)
!1070 = !DILocation(line: 3063, column: 20, scope: !1069)
!1071 = !DILocation(line: 3063, column: 6, scope: !1069)
!1072 = !DILocation(line: 3063, column: 26, scope: !1069)
!1073 = !DILocation(line: 3063, column: 6, scope: !1056)
!1074 = !DILocation(line: 3064, column: 12, scope: !1075)
!1075 = distinct !DILexicalBlock(scope: !1076, file: !77, line: 3064, column: 7)
!1076 = distinct !DILexicalBlock(scope: !1069, file: !77, line: 3063, column: 52)
!1077 = !DILocation(line: 3064, column: 21, scope: !1075)
!1078 = !DILocation(line: 3064, column: 7, scope: !1075)
!1079 = !DILocation(line: 3064, column: 35, scope: !1075)
!1080 = !DILocation(line: 3064, column: 49, scope: !1075)
!1081 = !DILocation(line: 3064, column: 30, scope: !1075)
!1082 = !DILocation(line: 3064, column: 27, scope: !1075)
!1083 = !DILocation(line: 3064, column: 7, scope: !1076)
!1084 = !DILocation(line: 3065, column: 26, scope: !1085)
!1085 = distinct !DILexicalBlock(scope: !1075, file: !77, line: 3064, column: 56)
!1086 = !DILocation(line: 3065, column: 35, scope: !1085)
!1087 = !DILocation(line: 3065, column: 10, scope: !1085)
!1088 = !DILocation(line: 3066, column: 11, scope: !1085)
!1089 = !DILocation(line: 3066, column: 17, scope: !1085)
!1090 = !DILocation(line: 3066, column: 9, scope: !1085)
!1091 = !DILocation(line: 3068, column: 12, scope: !1085)
!1092 = !DILocation(line: 3068, column: 20, scope: !1085)
!1093 = !DILocation(line: 3068, column: 26, scope: !1085)
!1094 = !DILocation(line: 3068, column: 17, scope: !1085)
!1095 = !DILocation(line: 3068, column: 10, scope: !1085)
!1096 = !DILocation(line: 3069, column: 3, scope: !1085)
!1097 = !DILocation(line: 3070, column: 2, scope: !1076)
!1098 = !DILocation(line: 3071, column: 8, scope: !1099)
!1099 = distinct !DILexicalBlock(scope: !1069, file: !77, line: 3070, column: 9)
!1100 = !DILocation(line: 3074, column: 2, scope: !1056)
!1101 = distinct !DISubprogram(name: "check_accel_config", scope: !77, file: !77, line: 2852, type: !880, isLocal: true, isDefinition: true, scopeLine: 2853, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!1102 = !DILocalVariable(name: "data", arg: 1, scope: !1101, file: !77, line: 2852, type: !45)
!1103 = !DILocation(line: 2852, column: 43, scope: !1101)
!1104 = !DILocalVariable(name: "dev", arg: 2, scope: !1101, file: !77, line: 2852, type: !252)
!1105 = !DILocation(line: 2852, column: 74, scope: !1101)
!1106 = !DILocalVariable(name: "rslt", scope: !1101, file: !77, line: 2854, type: !62)
!1107 = !DILocation(line: 2854, column: 9, scope: !1101)
!1108 = !DILocation(line: 2853, column: 3, scope: !1101)
!1109 = !DILocation(line: 2857, column: 9, scope: !1101)
!1110 = !DILocation(line: 2857, column: 7, scope: !1101)
!1111 = !DILocation(line: 2858, column: 6, scope: !1112)
!1112 = distinct !DILexicalBlock(scope: !1101, file: !77, line: 2858, column: 6)
!1113 = !DILocation(line: 2858, column: 11, scope: !1112)
!1114 = !DILocation(line: 2858, column: 6, scope: !1101)
!1115 = !DILocation(line: 2859, column: 29, scope: !1116)
!1116 = distinct !DILexicalBlock(scope: !1112, file: !77, line: 2858, column: 25)
!1117 = !DILocation(line: 2859, column: 10, scope: !1116)
!1118 = !DILocation(line: 2859, column: 8, scope: !1116)
!1119 = !DILocation(line: 2860, column: 7, scope: !1120)
!1120 = distinct !DILexicalBlock(scope: !1116, file: !77, line: 2860, column: 7)
!1121 = !DILocation(line: 2860, column: 12, scope: !1120)
!1122 = !DILocation(line: 2860, column: 7, scope: !1116)
!1123 = !DILocation(line: 2861, column: 29, scope: !1124)
!1124 = distinct !DILexicalBlock(scope: !1120, file: !77, line: 2860, column: 26)
!1125 = !DILocation(line: 2861, column: 11, scope: !1124)
!1126 = !DILocation(line: 2861, column: 9, scope: !1124)
!1127 = !DILocation(line: 2862, column: 8, scope: !1128)
!1128 = distinct !DILexicalBlock(scope: !1124, file: !77, line: 2862, column: 8)
!1129 = !DILocation(line: 2862, column: 13, scope: !1128)
!1130 = !DILocation(line: 2862, column: 8, scope: !1124)
!1131 = !DILocation(line: 2863, column: 33, scope: !1128)
!1132 = !DILocation(line: 2863, column: 12, scope: !1128)
!1133 = !DILocation(line: 2863, column: 10, scope: !1128)
!1134 = !DILocation(line: 2863, column: 5, scope: !1128)
!1135 = !DILocation(line: 2864, column: 3, scope: !1124)
!1136 = !DILocation(line: 2865, column: 2, scope: !1116)
!1137 = !DILocation(line: 2867, column: 2, scope: !1101)
!1138 = distinct !DISubprogram(name: "process_accel_odr", scope: !77, file: !77, line: 2873, type: !880, isLocal: true, isDefinition: true, scopeLine: 2874, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!1139 = !DILocalVariable(name: "data", arg: 1, scope: !1138, file: !77, line: 2873, type: !45)
!1140 = !DILocation(line: 2873, column: 42, scope: !1138)
!1141 = !DILocalVariable(name: "dev", arg: 2, scope: !1138, file: !77, line: 2873, type: !252)
!1142 = !DILocation(line: 2873, column: 73, scope: !1138)
!1143 = !DILocalVariable(name: "rslt", scope: !1138, file: !77, line: 2875, type: !62)
!1144 = !DILocation(line: 2875, column: 9, scope: !1138)
!1145 = !DILocalVariable(name: "temp", scope: !1138, file: !77, line: 2876, type: !17)
!1146 = !DILocation(line: 2876, column: 10, scope: !1138)
!1147 = !DILocalVariable(name: "odr", scope: !1138, file: !77, line: 2877, type: !17)
!1148 = !DILocation(line: 2877, column: 10, scope: !1138)
!1149 = !DILocation(line: 2874, column: 3, scope: !1138)
!1150 = !DILocation(line: 2879, column: 11, scope: !1151)
!1151 = distinct !DILexicalBlock(scope: !1138, file: !77, line: 2879, column: 6)
!1152 = !DILocation(line: 2879, column: 21, scope: !1151)
!1153 = !DILocation(line: 2879, column: 6, scope: !1151)
!1154 = !DILocation(line: 2879, column: 25, scope: !1151)
!1155 = !DILocation(line: 2879, column: 6, scope: !1138)
!1156 = !DILocation(line: 2880, column: 12, scope: !1157)
!1157 = distinct !DILexicalBlock(scope: !1158, file: !77, line: 2880, column: 7)
!1158 = distinct !DILexicalBlock(scope: !1151, file: !77, line: 2879, column: 50)
!1159 = !DILocation(line: 2880, column: 22, scope: !1157)
!1160 = !DILocation(line: 2880, column: 7, scope: !1157)
!1161 = !DILocation(line: 2880, column: 34, scope: !1157)
!1162 = !DILocation(line: 2880, column: 49, scope: !1157)
!1163 = !DILocation(line: 2880, column: 29, scope: !1157)
!1164 = !DILocation(line: 2880, column: 26, scope: !1157)
!1165 = !DILocation(line: 2880, column: 7, scope: !1158)
!1166 = !DILocation(line: 2881, column: 24, scope: !1167)
!1167 = distinct !DILexicalBlock(scope: !1157, file: !77, line: 2880, column: 54)
!1168 = !DILocation(line: 2881, column: 34, scope: !1167)
!1169 = !DILocation(line: 2881, column: 8, scope: !1167)
!1170 = !DILocation(line: 2882, column: 11, scope: !1167)
!1171 = !DILocation(line: 2882, column: 17, scope: !1167)
!1172 = !DILocation(line: 2882, column: 9, scope: !1167)
!1173 = !DILocation(line: 2884, column: 12, scope: !1167)
!1174 = !DILocation(line: 2884, column: 20, scope: !1167)
!1175 = !DILocation(line: 2884, column: 24, scope: !1167)
!1176 = !DILocation(line: 2884, column: 17, scope: !1167)
!1177 = !DILocation(line: 2884, column: 10, scope: !1167)
!1178 = !DILocation(line: 2885, column: 3, scope: !1167)
!1179 = !DILocation(line: 2886, column: 2, scope: !1158)
!1180 = !DILocation(line: 2887, column: 8, scope: !1181)
!1181 = distinct !DILexicalBlock(scope: !1151, file: !77, line: 2886, column: 9)
!1182 = !DILocation(line: 2890, column: 2, scope: !1138)
!1183 = distinct !DISubprogram(name: "process_accel_bw", scope: !77, file: !77, line: 2896, type: !880, isLocal: true, isDefinition: true, scopeLine: 2897, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!1184 = !DILocalVariable(name: "data", arg: 1, scope: !1183, file: !77, line: 2896, type: !45)
!1185 = !DILocation(line: 2896, column: 41, scope: !1183)
!1186 = !DILocalVariable(name: "dev", arg: 2, scope: !1183, file: !77, line: 2896, type: !252)
!1187 = !DILocation(line: 2896, column: 72, scope: !1183)
!1188 = !DILocalVariable(name: "rslt", scope: !1183, file: !77, line: 2898, type: !62)
!1189 = !DILocation(line: 2898, column: 9, scope: !1183)
!1190 = !DILocalVariable(name: "temp", scope: !1183, file: !77, line: 2899, type: !17)
!1191 = !DILocation(line: 2899, column: 10, scope: !1183)
!1192 = !DILocalVariable(name: "bw", scope: !1183, file: !77, line: 2900, type: !17)
!1193 = !DILocation(line: 2900, column: 10, scope: !1183)
!1194 = !DILocation(line: 2897, column: 3, scope: !1183)
!1195 = !DILocation(line: 2902, column: 11, scope: !1196)
!1196 = distinct !DILexicalBlock(scope: !1183, file: !77, line: 2902, column: 6)
!1197 = !DILocation(line: 2902, column: 21, scope: !1196)
!1198 = !DILocation(line: 2902, column: 6, scope: !1196)
!1199 = !DILocation(line: 2902, column: 24, scope: !1196)
!1200 = !DILocation(line: 2902, column: 6, scope: !1183)
!1201 = !DILocation(line: 2903, column: 12, scope: !1202)
!1202 = distinct !DILexicalBlock(scope: !1203, file: !77, line: 2903, column: 7)
!1203 = distinct !DILexicalBlock(scope: !1196, file: !77, line: 2902, column: 48)
!1204 = !DILocation(line: 2903, column: 22, scope: !1202)
!1205 = !DILocation(line: 2903, column: 7, scope: !1202)
!1206 = !DILocation(line: 2903, column: 33, scope: !1202)
!1207 = !DILocation(line: 2903, column: 48, scope: !1202)
!1208 = !DILocation(line: 2903, column: 28, scope: !1202)
!1209 = !DILocation(line: 2903, column: 25, scope: !1202)
!1210 = !DILocation(line: 2903, column: 7, scope: !1203)
!1211 = !DILocation(line: 2904, column: 23, scope: !1212)
!1212 = distinct !DILexicalBlock(scope: !1202, file: !77, line: 2903, column: 52)
!1213 = !DILocation(line: 2904, column: 33, scope: !1212)
!1214 = !DILocation(line: 2904, column: 7, scope: !1212)
!1215 = !DILocation(line: 2905, column: 11, scope: !1212)
!1216 = !DILocation(line: 2905, column: 17, scope: !1212)
!1217 = !DILocation(line: 2905, column: 9, scope: !1212)
!1218 = !DILocation(line: 2907, column: 12, scope: !1212)
!1219 = !DILocation(line: 2907, column: 21, scope: !1212)
!1220 = !DILocation(line: 2907, column: 24, scope: !1212)
!1221 = !DILocation(line: 2907, column: 30, scope: !1212)
!1222 = !DILocation(line: 2907, column: 17, scope: !1212)
!1223 = !DILocation(line: 2907, column: 10, scope: !1212)
!1224 = !DILocation(line: 2908, column: 3, scope: !1212)
!1225 = !DILocation(line: 2909, column: 2, scope: !1203)
!1226 = !DILocation(line: 2910, column: 8, scope: !1227)
!1227 = distinct !DILexicalBlock(scope: !1196, file: !77, line: 2909, column: 9)
!1228 = !DILocation(line: 2913, column: 2, scope: !1183)
!1229 = distinct !DISubprogram(name: "process_accel_range", scope: !77, file: !77, line: 2919, type: !880, isLocal: true, isDefinition: true, scopeLine: 2920, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!1230 = !DILocalVariable(name: "data", arg: 1, scope: !1229, file: !77, line: 2919, type: !45)
!1231 = !DILocation(line: 2919, column: 44, scope: !1229)
!1232 = !DILocalVariable(name: "dev", arg: 2, scope: !1229, file: !77, line: 2919, type: !252)
!1233 = !DILocation(line: 2919, column: 75, scope: !1229)
!1234 = !DILocalVariable(name: "rslt", scope: !1229, file: !77, line: 2921, type: !62)
!1235 = !DILocation(line: 2921, column: 9, scope: !1229)
!1236 = !DILocalVariable(name: "temp", scope: !1229, file: !77, line: 2922, type: !17)
!1237 = !DILocation(line: 2922, column: 10, scope: !1229)
!1238 = !DILocalVariable(name: "range", scope: !1229, file: !77, line: 2923, type: !17)
!1239 = !DILocation(line: 2923, column: 10, scope: !1229)
!1240 = !DILocation(line: 2920, column: 3, scope: !1229)
!1241 = !DILocation(line: 2925, column: 11, scope: !1242)
!1242 = distinct !DILexicalBlock(scope: !1229, file: !77, line: 2925, column: 6)
!1243 = !DILocation(line: 2925, column: 21, scope: !1242)
!1244 = !DILocation(line: 2925, column: 6, scope: !1242)
!1245 = !DILocation(line: 2925, column: 27, scope: !1242)
!1246 = !DILocation(line: 2925, column: 6, scope: !1229)
!1247 = !DILocation(line: 2926, column: 12, scope: !1248)
!1248 = distinct !DILexicalBlock(scope: !1249, file: !77, line: 2926, column: 7)
!1249 = distinct !DILexicalBlock(scope: !1242, file: !77, line: 2925, column: 54)
!1250 = !DILocation(line: 2926, column: 22, scope: !1248)
!1251 = !DILocation(line: 2926, column: 7, scope: !1248)
!1252 = !DILocation(line: 2926, column: 36, scope: !1248)
!1253 = !DILocation(line: 2926, column: 51, scope: !1248)
!1254 = !DILocation(line: 2926, column: 31, scope: !1248)
!1255 = !DILocation(line: 2926, column: 28, scope: !1248)
!1256 = !DILocation(line: 2926, column: 7, scope: !1249)
!1257 = !DILocation(line: 2927, column: 26, scope: !1258)
!1258 = distinct !DILexicalBlock(scope: !1248, file: !77, line: 2926, column: 58)
!1259 = !DILocation(line: 2927, column: 36, scope: !1258)
!1260 = !DILocation(line: 2927, column: 10, scope: !1258)
!1261 = !DILocation(line: 2928, column: 11, scope: !1258)
!1262 = !DILocation(line: 2928, column: 17, scope: !1258)
!1263 = !DILocation(line: 2928, column: 9, scope: !1258)
!1264 = !DILocation(line: 2930, column: 12, scope: !1258)
!1265 = !DILocation(line: 2930, column: 20, scope: !1258)
!1266 = !DILocation(line: 2930, column: 26, scope: !1258)
!1267 = !DILocation(line: 2930, column: 17, scope: !1258)
!1268 = !DILocation(line: 2930, column: 10, scope: !1258)
!1269 = !DILocation(line: 2931, column: 3, scope: !1258)
!1270 = !DILocation(line: 2932, column: 2, scope: !1249)
!1271 = !DILocation(line: 2933, column: 8, scope: !1272)
!1272 = distinct !DILexicalBlock(scope: !1242, file: !77, line: 2932, column: 9)
!1273 = !DILocation(line: 2936, column: 2, scope: !1229)
!1274 = distinct !DISubprogram(name: "bmi160_get_sensor_data", scope: !77, file: !77, line: 1549, type: !1275, isLocal: false, isDefinition: true, scopeLine: 1551, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!1275 = !DISubroutineType(types: !1276)
!1276 = !{!62, !17, !1277, !1277, !252}
!1277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1278, size: 64)
!1278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bmi160_sensor_data", file: !6, line: 802, size: 96, elements: !1279)
!1279 = !{!1280, !1281, !1282, !1283}
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1278, file: !6, line: 804, baseType: !121, size: 16)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1278, file: !6, line: 806, baseType: !121, size: 16, offset: 16)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "z", scope: !1278, file: !6, line: 808, baseType: !121, size: 16, offset: 32)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "sensortime", scope: !1278, file: !6, line: 810, baseType: !55, size: 32, offset: 64)
!1284 = !DILocalVariable(name: "select_sensor", arg: 1, scope: !1274, file: !77, line: 1549, type: !17)
!1285 = !DILocation(line: 1549, column: 39, scope: !1274)
!1286 = !DILocalVariable(name: "accel", arg: 2, scope: !1274, file: !77, line: 1549, type: !1277)
!1287 = !DILocation(line: 1549, column: 81, scope: !1274)
!1288 = !DILocalVariable(name: "gyro", arg: 3, scope: !1274, file: !77, line: 1549, type: !1277)
!1289 = !DILocation(line: 1549, column: 115, scope: !1274)
!1290 = !DILocalVariable(name: "dev", arg: 4, scope: !1274, file: !77, line: 1550, type: !252)
!1291 = !DILocation(line: 1550, column: 30, scope: !1274)
!1292 = !DILocalVariable(name: "rslt", scope: !1274, file: !77, line: 1552, type: !62)
!1293 = !DILocation(line: 1552, column: 9, scope: !1274)
!1294 = !DILocalVariable(name: "time_sel", scope: !1274, file: !77, line: 1553, type: !17)
!1295 = !DILocation(line: 1553, column: 10, scope: !1274)
!1296 = !DILocalVariable(name: "sen_sel", scope: !1274, file: !77, line: 1554, type: !17)
!1297 = !DILocation(line: 1554, column: 10, scope: !1274)
!1298 = !DILocalVariable(name: "len", scope: !1274, file: !77, line: 1555, type: !17)
!1299 = !DILocation(line: 1555, column: 10, scope: !1274)
!1300 = !DILocation(line: 1551, column: 3, scope: !1274)
!1301 = !DILocation(line: 1558, column: 12, scope: !1274)
!1302 = !DILocation(line: 1558, column: 26, scope: !1274)
!1303 = !DILocation(line: 1558, column: 10, scope: !1274)
!1304 = !DILocation(line: 1559, column: 15, scope: !1274)
!1305 = !DILocation(line: 1559, column: 23, scope: !1274)
!1306 = !DILocation(line: 1559, column: 42, scope: !1274)
!1307 = !DILocation(line: 1559, column: 13, scope: !1274)
!1308 = !DILocation(line: 1559, column: 11, scope: !1274)
!1309 = !DILocation(line: 1560, column: 12, scope: !1274)
!1310 = !DILocation(line: 1560, column: 20, scope: !1274)
!1311 = !DILocation(line: 1560, column: 10, scope: !1274)
!1312 = !DILocation(line: 1561, column: 6, scope: !1313)
!1313 = distinct !DILexicalBlock(scope: !1274, file: !77, line: 1561, column: 6)
!1314 = !DILocation(line: 1561, column: 15, scope: !1313)
!1315 = !DILocation(line: 1561, column: 6, scope: !1274)
!1316 = !DILocation(line: 1562, column: 7, scope: !1313)
!1317 = !DILocation(line: 1562, column: 3, scope: !1313)
!1318 = !DILocation(line: 1565, column: 10, scope: !1319)
!1319 = distinct !DILexicalBlock(scope: !1274, file: !77, line: 1565, column: 6)
!1320 = !DILocation(line: 1565, column: 6, scope: !1274)
!1321 = !DILocation(line: 1566, column: 11, scope: !1322)
!1322 = distinct !DILexicalBlock(scope: !1319, file: !77, line: 1565, column: 19)
!1323 = !DILocation(line: 1566, column: 3, scope: !1322)
!1324 = !DILocation(line: 1569, column: 14, scope: !1325)
!1325 = distinct !DILexicalBlock(scope: !1326, file: !77, line: 1569, column: 8)
!1326 = distinct !DILexicalBlock(scope: !1322, file: !77, line: 1566, column: 20)
!1327 = !DILocation(line: 1569, column: 8, scope: !1326)
!1328 = !DILocation(line: 1570, column: 10, scope: !1325)
!1329 = !DILocation(line: 1570, column: 5, scope: !1325)
!1330 = !DILocation(line: 1572, column: 12, scope: !1325)
!1331 = !DILocation(line: 1572, column: 10, scope: !1325)
!1332 = !DILocation(line: 1573, column: 4, scope: !1326)
!1333 = !DILocation(line: 1576, column: 13, scope: !1334)
!1334 = distinct !DILexicalBlock(scope: !1326, file: !77, line: 1576, column: 8)
!1335 = !DILocation(line: 1576, column: 8, scope: !1326)
!1336 = !DILocation(line: 1577, column: 10, scope: !1334)
!1337 = !DILocation(line: 1577, column: 5, scope: !1334)
!1338 = !DILocation(line: 1579, column: 12, scope: !1334)
!1339 = !DILocation(line: 1579, column: 10, scope: !1334)
!1340 = !DILocation(line: 1580, column: 4, scope: !1326)
!1341 = !DILocation(line: 1583, column: 14, scope: !1342)
!1342 = distinct !DILexicalBlock(scope: !1326, file: !77, line: 1583, column: 8)
!1343 = !DILocation(line: 1583, column: 23, scope: !1342)
!1344 = !DILocation(line: 1583, column: 33, scope: !1345)
!1345 = !DILexicalBlockFile(scope: !1342, file: !77, discriminator: 1)
!1346 = !DILocation(line: 1583, column: 8, scope: !1347)
!1347 = !DILexicalBlockFile(scope: !1326, file: !77, discriminator: 1)
!1348 = !DILocation(line: 1584, column: 10, scope: !1342)
!1349 = !DILocation(line: 1584, column: 5, scope: !1342)
!1350 = !DILocation(line: 1586, column: 12, scope: !1342)
!1351 = !DILocation(line: 1586, column: 10, scope: !1342)
!1352 = !DILocation(line: 1587, column: 4, scope: !1326)
!1353 = !DILocation(line: 1589, column: 9, scope: !1326)
!1354 = !DILocation(line: 1590, column: 4, scope: !1326)
!1355 = !DILocation(line: 1592, column: 2, scope: !1322)
!1356 = !DILocation(line: 1593, column: 8, scope: !1357)
!1357 = distinct !DILexicalBlock(scope: !1319, file: !77, line: 1592, column: 9)
!1358 = !DILocation(line: 1596, column: 2, scope: !1274)
!1359 = distinct !DISubprogram(name: "get_accel_data", scope: !77, file: !77, line: 3183, type: !1360, isLocal: true, isDefinition: true, scopeLine: 3184, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!1360 = !DISubroutineType(types: !1361)
!1361 = !{!62, !17, !1277, !252}
!1362 = !DILocalVariable(name: "len", arg: 1, scope: !1359, file: !77, line: 3183, type: !17)
!1363 = !DILocation(line: 3183, column: 38, scope: !1359)
!1364 = !DILocalVariable(name: "accel", arg: 2, scope: !1359, file: !77, line: 3183, type: !1277)
!1365 = !DILocation(line: 3183, column: 70, scope: !1359)
!1366 = !DILocalVariable(name: "dev", arg: 3, scope: !1359, file: !77, line: 3183, type: !252)
!1367 = !DILocation(line: 3183, column: 102, scope: !1359)
!1368 = !DILocalVariable(name: "rslt", scope: !1359, file: !77, line: 3185, type: !62)
!1369 = !DILocation(line: 3185, column: 9, scope: !1359)
!1370 = !DILocalVariable(name: "idx", scope: !1359, file: !77, line: 3186, type: !17)
!1371 = !DILocation(line: 3186, column: 10, scope: !1359)
!1372 = !DILocalVariable(name: "time_0", scope: !1359, file: !77, line: 3188, type: !17)
!1373 = !DILocation(line: 3188, column: 10, scope: !1359)
!1374 = !DILocalVariable(name: "time_1", scope: !1359, file: !77, line: 3189, type: !47)
!1375 = !DILocation(line: 3189, column: 11, scope: !1359)
!1376 = !DILocalVariable(name: "time_2", scope: !1359, file: !77, line: 3190, type: !55)
!1377 = !DILocation(line: 3190, column: 11, scope: !1359)
!1378 = !DILocalVariable(name: "lsb", scope: !1359, file: !77, line: 3191, type: !17)
!1379 = !DILocation(line: 3191, column: 10, scope: !1359)
!1380 = !DILocalVariable(name: "msb", scope: !1359, file: !77, line: 3192, type: !17)
!1381 = !DILocation(line: 3192, column: 10, scope: !1359)
!1382 = !DILocalVariable(name: "msblsb", scope: !1359, file: !77, line: 3193, type: !121)
!1383 = !DILocation(line: 3193, column: 10, scope: !1359)
!1384 = !DILocation(line: 3184, column: 3, scope: !1359)
!1385 = !DILocalVariable(name: "data_array", scope: !1359, file: !77, line: 3187, type: !1386)
!1386 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 72, elements: !1387)
!1387 = !{!1388}
!1388 = !DISubrange(count: 9)
!1389 = !DILocation(line: 3187, column: 10, scope: !1359)
!1390 = !DILocation(line: 3196, column: 49, scope: !1359)
!1391 = !DILocation(line: 3196, column: 65, scope: !1359)
!1392 = !DILocation(line: 3196, column: 63, scope: !1359)
!1393 = !DILocation(line: 3196, column: 61, scope: !1359)
!1394 = !DILocation(line: 3196, column: 9, scope: !1359)
!1395 = !DILocation(line: 3196, column: 7, scope: !1359)
!1396 = !DILocation(line: 3197, column: 6, scope: !1397)
!1397 = distinct !DILexicalBlock(scope: !1359, file: !77, line: 3197, column: 6)
!1398 = !DILocation(line: 3197, column: 11, scope: !1397)
!1399 = !DILocation(line: 3197, column: 6, scope: !1359)
!1400 = !DILocation(line: 3200, column: 23, scope: !1401)
!1401 = distinct !DILexicalBlock(scope: !1397, file: !77, line: 3197, column: 25)
!1402 = !DILocation(line: 3200, column: 9, scope: !1401)
!1403 = !DILocation(line: 3200, column: 7, scope: !1401)
!1404 = !DILocation(line: 3201, column: 23, scope: !1401)
!1405 = !DILocation(line: 3201, column: 9, scope: !1401)
!1406 = !DILocation(line: 3201, column: 7, scope: !1401)
!1407 = !DILocation(line: 3202, column: 23, scope: !1401)
!1408 = !DILocation(line: 3202, column: 27, scope: !1401)
!1409 = !DILocation(line: 3202, column: 35, scope: !1401)
!1410 = !DILocation(line: 3202, column: 33, scope: !1401)
!1411 = !DILocation(line: 3202, column: 12, scope: !1401)
!1412 = !DILocation(line: 3202, column: 10, scope: !1401)
!1413 = !DILocation(line: 3203, column: 10, scope: !1401)
!1414 = !DILocation(line: 3203, column: 12, scope: !1401)
!1415 = !DILocation(line: 3205, column: 23, scope: !1401)
!1416 = !DILocation(line: 3205, column: 9, scope: !1401)
!1417 = !DILocation(line: 3205, column: 7, scope: !1401)
!1418 = !DILocation(line: 3206, column: 23, scope: !1401)
!1419 = !DILocation(line: 3206, column: 9, scope: !1401)
!1420 = !DILocation(line: 3206, column: 7, scope: !1401)
!1421 = !DILocation(line: 3207, column: 23, scope: !1401)
!1422 = !DILocation(line: 3207, column: 27, scope: !1401)
!1423 = !DILocation(line: 3207, column: 35, scope: !1401)
!1424 = !DILocation(line: 3207, column: 33, scope: !1401)
!1425 = !DILocation(line: 3207, column: 12, scope: !1401)
!1426 = !DILocation(line: 3207, column: 10, scope: !1401)
!1427 = !DILocation(line: 3208, column: 10, scope: !1401)
!1428 = !DILocation(line: 3208, column: 12, scope: !1401)
!1429 = !DILocation(line: 3210, column: 23, scope: !1401)
!1430 = !DILocation(line: 3210, column: 9, scope: !1401)
!1431 = !DILocation(line: 3210, column: 7, scope: !1401)
!1432 = !DILocation(line: 3211, column: 23, scope: !1401)
!1433 = !DILocation(line: 3211, column: 9, scope: !1401)
!1434 = !DILocation(line: 3211, column: 7, scope: !1401)
!1435 = !DILocation(line: 3212, column: 23, scope: !1401)
!1436 = !DILocation(line: 3212, column: 27, scope: !1401)
!1437 = !DILocation(line: 3212, column: 35, scope: !1401)
!1438 = !DILocation(line: 3212, column: 33, scope: !1401)
!1439 = !DILocation(line: 3212, column: 12, scope: !1401)
!1440 = !DILocation(line: 3212, column: 10, scope: !1401)
!1441 = !DILocation(line: 3213, column: 10, scope: !1401)
!1442 = !DILocation(line: 3213, column: 12, scope: !1401)
!1443 = !DILocation(line: 3215, column: 7, scope: !1444)
!1444 = distinct !DILexicalBlock(scope: !1401, file: !77, line: 3215, column: 7)
!1445 = !DILocation(line: 3215, column: 11, scope: !1444)
!1446 = !DILocation(line: 3215, column: 7, scope: !1401)
!1447 = !DILocation(line: 3216, column: 27, scope: !1448)
!1448 = distinct !DILexicalBlock(scope: !1444, file: !77, line: 3215, column: 17)
!1449 = !DILocation(line: 3216, column: 13, scope: !1448)
!1450 = !DILocation(line: 3216, column: 11, scope: !1448)
!1451 = !DILocation(line: 3217, column: 38, scope: !1448)
!1452 = !DILocation(line: 3217, column: 24, scope: !1448)
!1453 = !DILocation(line: 3217, column: 42, scope: !1448)
!1454 = !DILocation(line: 3217, column: 13, scope: !1448)
!1455 = !DILocation(line: 3217, column: 11, scope: !1448)
!1456 = !DILocation(line: 3218, column: 38, scope: !1448)
!1457 = !DILocation(line: 3218, column: 24, scope: !1448)
!1458 = !DILocation(line: 3218, column: 42, scope: !1448)
!1459 = !DILocation(line: 3218, column: 11, scope: !1448)
!1460 = !DILocation(line: 3219, column: 44, scope: !1448)
!1461 = !DILocation(line: 3219, column: 42, scope: !1448)
!1462 = !DILocation(line: 3219, column: 53, scope: !1448)
!1463 = !DILocation(line: 3219, column: 51, scope: !1448)
!1464 = !DILocation(line: 3219, column: 11, scope: !1448)
!1465 = !DILocation(line: 3219, column: 22, scope: !1448)
!1466 = !DILocation(line: 3220, column: 3, scope: !1448)
!1467 = !DILocation(line: 3221, column: 11, scope: !1468)
!1468 = distinct !DILexicalBlock(scope: !1444, file: !77, line: 3220, column: 10)
!1469 = !DILocation(line: 3221, column: 22, scope: !1468)
!1470 = !DILocation(line: 3223, column: 2, scope: !1401)
!1471 = !DILocation(line: 3224, column: 8, scope: !1472)
!1472 = distinct !DILexicalBlock(scope: !1397, file: !77, line: 3223, column: 9)
!1473 = !DILocation(line: 3227, column: 2, scope: !1359)
!1474 = distinct !DISubprogram(name: "get_gyro_data", scope: !77, file: !77, line: 3234, type: !1360, isLocal: true, isDefinition: true, scopeLine: 3235, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!1475 = !DILocalVariable(name: "len", arg: 1, scope: !1474, file: !77, line: 3234, type: !17)
!1476 = !DILocation(line: 3234, column: 37, scope: !1474)
!1477 = !DILocalVariable(name: "gyro", arg: 2, scope: !1474, file: !77, line: 3234, type: !1277)
!1478 = !DILocation(line: 3234, column: 69, scope: !1474)
!1479 = !DILocalVariable(name: "dev", arg: 3, scope: !1474, file: !77, line: 3234, type: !252)
!1480 = !DILocation(line: 3234, column: 100, scope: !1474)
!1481 = !DILocalVariable(name: "rslt", scope: !1474, file: !77, line: 3236, type: !62)
!1482 = !DILocation(line: 3236, column: 9, scope: !1474)
!1483 = !DILocalVariable(name: "idx", scope: !1474, file: !77, line: 3237, type: !17)
!1484 = !DILocation(line: 3237, column: 10, scope: !1474)
!1485 = !DILocalVariable(name: "time_0", scope: !1474, file: !77, line: 3239, type: !17)
!1486 = !DILocation(line: 3239, column: 10, scope: !1474)
!1487 = !DILocalVariable(name: "time_1", scope: !1474, file: !77, line: 3240, type: !47)
!1488 = !DILocation(line: 3240, column: 11, scope: !1474)
!1489 = !DILocalVariable(name: "time_2", scope: !1474, file: !77, line: 3241, type: !55)
!1490 = !DILocation(line: 3241, column: 11, scope: !1474)
!1491 = !DILocalVariable(name: "lsb", scope: !1474, file: !77, line: 3242, type: !17)
!1492 = !DILocation(line: 3242, column: 10, scope: !1474)
!1493 = !DILocalVariable(name: "msb", scope: !1474, file: !77, line: 3243, type: !17)
!1494 = !DILocation(line: 3243, column: 10, scope: !1474)
!1495 = !DILocalVariable(name: "msblsb", scope: !1474, file: !77, line: 3244, type: !121)
!1496 = !DILocation(line: 3244, column: 10, scope: !1474)
!1497 = !DILocation(line: 3235, column: 3, scope: !1474)
!1498 = !DILocalVariable(name: "data_array", scope: !1474, file: !77, line: 3238, type: !1499)
!1499 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 120, elements: !1500)
!1500 = !{!1501}
!1501 = !DISubrange(count: 15)
!1502 = !DILocation(line: 3238, column: 10, scope: !1474)
!1503 = !DILocation(line: 3246, column: 6, scope: !1504)
!1504 = distinct !DILexicalBlock(scope: !1474, file: !77, line: 3246, column: 6)
!1505 = !DILocation(line: 3246, column: 10, scope: !1504)
!1506 = !DILocation(line: 3246, column: 6, scope: !1474)
!1507 = !DILocation(line: 3248, column: 49, scope: !1508)
!1508 = distinct !DILexicalBlock(scope: !1504, file: !77, line: 3246, column: 16)
!1509 = !DILocation(line: 3248, column: 10, scope: !1508)
!1510 = !DILocation(line: 3248, column: 8, scope: !1508)
!1511 = !DILocation(line: 3249, column: 7, scope: !1512)
!1512 = distinct !DILexicalBlock(scope: !1508, file: !77, line: 3249, column: 7)
!1513 = !DILocation(line: 3249, column: 12, scope: !1512)
!1514 = !DILocation(line: 3249, column: 7, scope: !1508)
!1515 = !DILocation(line: 3251, column: 24, scope: !1516)
!1516 = distinct !DILexicalBlock(scope: !1512, file: !77, line: 3249, column: 26)
!1517 = !DILocation(line: 3251, column: 10, scope: !1516)
!1518 = !DILocation(line: 3251, column: 8, scope: !1516)
!1519 = !DILocation(line: 3252, column: 24, scope: !1516)
!1520 = !DILocation(line: 3252, column: 10, scope: !1516)
!1521 = !DILocation(line: 3252, column: 8, scope: !1516)
!1522 = !DILocation(line: 3253, column: 24, scope: !1516)
!1523 = !DILocation(line: 3253, column: 28, scope: !1516)
!1524 = !DILocation(line: 3253, column: 36, scope: !1516)
!1525 = !DILocation(line: 3253, column: 34, scope: !1516)
!1526 = !DILocation(line: 3253, column: 13, scope: !1516)
!1527 = !DILocation(line: 3253, column: 11, scope: !1516)
!1528 = !DILocation(line: 3254, column: 10, scope: !1516)
!1529 = !DILocation(line: 3254, column: 12, scope: !1516)
!1530 = !DILocation(line: 3256, column: 24, scope: !1516)
!1531 = !DILocation(line: 3256, column: 10, scope: !1516)
!1532 = !DILocation(line: 3256, column: 8, scope: !1516)
!1533 = !DILocation(line: 3257, column: 24, scope: !1516)
!1534 = !DILocation(line: 3257, column: 10, scope: !1516)
!1535 = !DILocation(line: 3257, column: 8, scope: !1516)
!1536 = !DILocation(line: 3258, column: 24, scope: !1516)
!1537 = !DILocation(line: 3258, column: 28, scope: !1516)
!1538 = !DILocation(line: 3258, column: 36, scope: !1516)
!1539 = !DILocation(line: 3258, column: 34, scope: !1516)
!1540 = !DILocation(line: 3258, column: 13, scope: !1516)
!1541 = !DILocation(line: 3258, column: 11, scope: !1516)
!1542 = !DILocation(line: 3259, column: 10, scope: !1516)
!1543 = !DILocation(line: 3259, column: 12, scope: !1516)
!1544 = !DILocation(line: 3261, column: 24, scope: !1516)
!1545 = !DILocation(line: 3261, column: 10, scope: !1516)
!1546 = !DILocation(line: 3261, column: 8, scope: !1516)
!1547 = !DILocation(line: 3262, column: 24, scope: !1516)
!1548 = !DILocation(line: 3262, column: 10, scope: !1516)
!1549 = !DILocation(line: 3262, column: 8, scope: !1516)
!1550 = !DILocation(line: 3263, column: 24, scope: !1516)
!1551 = !DILocation(line: 3263, column: 28, scope: !1516)
!1552 = !DILocation(line: 3263, column: 36, scope: !1516)
!1553 = !DILocation(line: 3263, column: 34, scope: !1516)
!1554 = !DILocation(line: 3263, column: 13, scope: !1516)
!1555 = !DILocation(line: 3263, column: 11, scope: !1516)
!1556 = !DILocation(line: 3264, column: 10, scope: !1516)
!1557 = !DILocation(line: 3264, column: 12, scope: !1516)
!1558 = !DILocation(line: 3265, column: 10, scope: !1516)
!1559 = !DILocation(line: 3265, column: 21, scope: !1516)
!1560 = !DILocation(line: 3267, column: 3, scope: !1516)
!1561 = !DILocation(line: 3268, column: 9, scope: !1562)
!1562 = distinct !DILexicalBlock(scope: !1512, file: !77, line: 3267, column: 10)
!1563 = !DILocation(line: 3270, column: 2, scope: !1508)
!1564 = !DILocation(line: 3272, column: 49, scope: !1565)
!1565 = distinct !DILexicalBlock(scope: !1504, file: !77, line: 3270, column: 9)
!1566 = !DILocation(line: 3272, column: 66, scope: !1565)
!1567 = !DILocation(line: 3272, column: 64, scope: !1565)
!1568 = !DILocation(line: 3272, column: 61, scope: !1565)
!1569 = !DILocation(line: 3272, column: 10, scope: !1565)
!1570 = !DILocation(line: 3272, column: 8, scope: !1565)
!1571 = !DILocation(line: 3273, column: 7, scope: !1572)
!1572 = distinct !DILexicalBlock(scope: !1565, file: !77, line: 3273, column: 7)
!1573 = !DILocation(line: 3273, column: 12, scope: !1572)
!1574 = !DILocation(line: 3273, column: 7, scope: !1565)
!1575 = !DILocation(line: 3275, column: 24, scope: !1576)
!1576 = distinct !DILexicalBlock(scope: !1572, file: !77, line: 3273, column: 26)
!1577 = !DILocation(line: 3275, column: 10, scope: !1576)
!1578 = !DILocation(line: 3275, column: 8, scope: !1576)
!1579 = !DILocation(line: 3276, column: 24, scope: !1576)
!1580 = !DILocation(line: 3276, column: 10, scope: !1576)
!1581 = !DILocation(line: 3276, column: 8, scope: !1576)
!1582 = !DILocation(line: 3277, column: 24, scope: !1576)
!1583 = !DILocation(line: 3277, column: 28, scope: !1576)
!1584 = !DILocation(line: 3277, column: 36, scope: !1576)
!1585 = !DILocation(line: 3277, column: 34, scope: !1576)
!1586 = !DILocation(line: 3277, column: 13, scope: !1576)
!1587 = !DILocation(line: 3277, column: 11, scope: !1576)
!1588 = !DILocation(line: 3278, column: 10, scope: !1576)
!1589 = !DILocation(line: 3278, column: 12, scope: !1576)
!1590 = !DILocation(line: 3280, column: 24, scope: !1576)
!1591 = !DILocation(line: 3280, column: 10, scope: !1576)
!1592 = !DILocation(line: 3280, column: 8, scope: !1576)
!1593 = !DILocation(line: 3281, column: 24, scope: !1576)
!1594 = !DILocation(line: 3281, column: 10, scope: !1576)
!1595 = !DILocation(line: 3281, column: 8, scope: !1576)
!1596 = !DILocation(line: 3282, column: 24, scope: !1576)
!1597 = !DILocation(line: 3282, column: 28, scope: !1576)
!1598 = !DILocation(line: 3282, column: 36, scope: !1576)
!1599 = !DILocation(line: 3282, column: 34, scope: !1576)
!1600 = !DILocation(line: 3282, column: 13, scope: !1576)
!1601 = !DILocation(line: 3282, column: 11, scope: !1576)
!1602 = !DILocation(line: 3283, column: 10, scope: !1576)
!1603 = !DILocation(line: 3283, column: 12, scope: !1576)
!1604 = !DILocation(line: 3285, column: 24, scope: !1576)
!1605 = !DILocation(line: 3285, column: 10, scope: !1576)
!1606 = !DILocation(line: 3285, column: 8, scope: !1576)
!1607 = !DILocation(line: 3286, column: 24, scope: !1576)
!1608 = !DILocation(line: 3286, column: 10, scope: !1576)
!1609 = !DILocation(line: 3286, column: 8, scope: !1576)
!1610 = !DILocation(line: 3287, column: 24, scope: !1576)
!1611 = !DILocation(line: 3287, column: 28, scope: !1576)
!1612 = !DILocation(line: 3287, column: 36, scope: !1576)
!1613 = !DILocation(line: 3287, column: 34, scope: !1576)
!1614 = !DILocation(line: 3287, column: 13, scope: !1576)
!1615 = !DILocation(line: 3287, column: 11, scope: !1576)
!1616 = !DILocation(line: 3288, column: 10, scope: !1576)
!1617 = !DILocation(line: 3288, column: 12, scope: !1576)
!1618 = !DILocation(line: 3290, column: 10, scope: !1576)
!1619 = !DILocation(line: 3290, column: 14, scope: !1576)
!1620 = !DILocation(line: 3290, column: 8, scope: !1576)
!1621 = !DILocation(line: 3291, column: 27, scope: !1576)
!1622 = !DILocation(line: 3291, column: 13, scope: !1576)
!1623 = !DILocation(line: 3291, column: 11, scope: !1576)
!1624 = !DILocation(line: 3292, column: 38, scope: !1576)
!1625 = !DILocation(line: 3292, column: 24, scope: !1576)
!1626 = !DILocation(line: 3292, column: 42, scope: !1576)
!1627 = !DILocation(line: 3292, column: 13, scope: !1576)
!1628 = !DILocation(line: 3292, column: 11, scope: !1576)
!1629 = !DILocation(line: 3293, column: 38, scope: !1576)
!1630 = !DILocation(line: 3293, column: 24, scope: !1576)
!1631 = !DILocation(line: 3293, column: 42, scope: !1576)
!1632 = !DILocation(line: 3293, column: 11, scope: !1576)
!1633 = !DILocation(line: 3294, column: 43, scope: !1576)
!1634 = !DILocation(line: 3294, column: 41, scope: !1576)
!1635 = !DILocation(line: 3294, column: 52, scope: !1576)
!1636 = !DILocation(line: 3294, column: 50, scope: !1576)
!1637 = !DILocation(line: 3294, column: 10, scope: !1576)
!1638 = !DILocation(line: 3294, column: 21, scope: !1576)
!1639 = !DILocation(line: 3296, column: 3, scope: !1576)
!1640 = !DILocation(line: 3297, column: 9, scope: !1641)
!1641 = distinct !DILexicalBlock(scope: !1572, file: !77, line: 3296, column: 10)
!1642 = !DILocation(line: 3301, column: 2, scope: !1474)
!1643 = distinct !DISubprogram(name: "get_accel_gyro_data", scope: !77, file: !77, line: 3309, type: !1275, isLocal: true, isDefinition: true, scopeLine: 3311, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!1644 = !DILocalVariable(name: "len", arg: 1, scope: !1643, file: !77, line: 3309, type: !17)
!1645 = !DILocation(line: 3309, column: 43, scope: !1643)
!1646 = !DILocalVariable(name: "accel", arg: 2, scope: !1643, file: !77, line: 3309, type: !1277)
!1647 = !DILocation(line: 3309, column: 75, scope: !1643)
!1648 = !DILocalVariable(name: "gyro", arg: 3, scope: !1643, file: !77, line: 3309, type: !1277)
!1649 = !DILocation(line: 3309, column: 109, scope: !1643)
!1650 = !DILocalVariable(name: "dev", arg: 4, scope: !1643, file: !77, line: 3310, type: !252)
!1651 = !DILocation(line: 3310, column: 31, scope: !1643)
!1652 = !DILocalVariable(name: "rslt", scope: !1643, file: !77, line: 3312, type: !62)
!1653 = !DILocation(line: 3312, column: 9, scope: !1643)
!1654 = !DILocalVariable(name: "idx", scope: !1643, file: !77, line: 3313, type: !17)
!1655 = !DILocation(line: 3313, column: 10, scope: !1643)
!1656 = !DILocalVariable(name: "time_0", scope: !1643, file: !77, line: 3315, type: !17)
!1657 = !DILocation(line: 3315, column: 10, scope: !1643)
!1658 = !DILocalVariable(name: "time_1", scope: !1643, file: !77, line: 3316, type: !47)
!1659 = !DILocation(line: 3316, column: 11, scope: !1643)
!1660 = !DILocalVariable(name: "time_2", scope: !1643, file: !77, line: 3317, type: !55)
!1661 = !DILocation(line: 3317, column: 11, scope: !1643)
!1662 = !DILocalVariable(name: "lsb", scope: !1643, file: !77, line: 3318, type: !17)
!1663 = !DILocation(line: 3318, column: 10, scope: !1643)
!1664 = !DILocalVariable(name: "msb", scope: !1643, file: !77, line: 3319, type: !17)
!1665 = !DILocation(line: 3319, column: 10, scope: !1643)
!1666 = !DILocalVariable(name: "msblsb", scope: !1643, file: !77, line: 3320, type: !121)
!1667 = !DILocation(line: 3320, column: 10, scope: !1643)
!1668 = !DILocation(line: 3311, column: 3, scope: !1643)
!1669 = !DILocalVariable(name: "data_array", scope: !1643, file: !77, line: 3314, type: !1499)
!1670 = !DILocation(line: 3314, column: 10, scope: !1643)
!1671 = !DILocation(line: 3324, column: 48, scope: !1643)
!1672 = !DILocation(line: 3324, column: 65, scope: !1643)
!1673 = !DILocation(line: 3324, column: 63, scope: !1643)
!1674 = !DILocation(line: 3324, column: 60, scope: !1643)
!1675 = !DILocation(line: 3324, column: 9, scope: !1643)
!1676 = !DILocation(line: 3324, column: 7, scope: !1643)
!1677 = !DILocation(line: 3325, column: 6, scope: !1678)
!1678 = distinct !DILexicalBlock(scope: !1643, file: !77, line: 3325, column: 6)
!1679 = !DILocation(line: 3325, column: 11, scope: !1678)
!1680 = !DILocation(line: 3325, column: 6, scope: !1643)
!1681 = !DILocation(line: 3327, column: 23, scope: !1682)
!1682 = distinct !DILexicalBlock(scope: !1678, file: !77, line: 3325, column: 25)
!1683 = !DILocation(line: 3327, column: 9, scope: !1682)
!1684 = !DILocation(line: 3327, column: 7, scope: !1682)
!1685 = !DILocation(line: 3328, column: 23, scope: !1682)
!1686 = !DILocation(line: 3328, column: 9, scope: !1682)
!1687 = !DILocation(line: 3328, column: 7, scope: !1682)
!1688 = !DILocation(line: 3329, column: 23, scope: !1682)
!1689 = !DILocation(line: 3329, column: 27, scope: !1682)
!1690 = !DILocation(line: 3329, column: 35, scope: !1682)
!1691 = !DILocation(line: 3329, column: 33, scope: !1682)
!1692 = !DILocation(line: 3329, column: 12, scope: !1682)
!1693 = !DILocation(line: 3329, column: 10, scope: !1682)
!1694 = !DILocation(line: 3330, column: 9, scope: !1682)
!1695 = !DILocation(line: 3330, column: 11, scope: !1682)
!1696 = !DILocation(line: 3332, column: 23, scope: !1682)
!1697 = !DILocation(line: 3332, column: 9, scope: !1682)
!1698 = !DILocation(line: 3332, column: 7, scope: !1682)
!1699 = !DILocation(line: 3333, column: 23, scope: !1682)
!1700 = !DILocation(line: 3333, column: 9, scope: !1682)
!1701 = !DILocation(line: 3333, column: 7, scope: !1682)
!1702 = !DILocation(line: 3334, column: 23, scope: !1682)
!1703 = !DILocation(line: 3334, column: 27, scope: !1682)
!1704 = !DILocation(line: 3334, column: 35, scope: !1682)
!1705 = !DILocation(line: 3334, column: 33, scope: !1682)
!1706 = !DILocation(line: 3334, column: 12, scope: !1682)
!1707 = !DILocation(line: 3334, column: 10, scope: !1682)
!1708 = !DILocation(line: 3335, column: 9, scope: !1682)
!1709 = !DILocation(line: 3335, column: 11, scope: !1682)
!1710 = !DILocation(line: 3337, column: 23, scope: !1682)
!1711 = !DILocation(line: 3337, column: 9, scope: !1682)
!1712 = !DILocation(line: 3337, column: 7, scope: !1682)
!1713 = !DILocation(line: 3338, column: 23, scope: !1682)
!1714 = !DILocation(line: 3338, column: 9, scope: !1682)
!1715 = !DILocation(line: 3338, column: 7, scope: !1682)
!1716 = !DILocation(line: 3339, column: 23, scope: !1682)
!1717 = !DILocation(line: 3339, column: 27, scope: !1682)
!1718 = !DILocation(line: 3339, column: 35, scope: !1682)
!1719 = !DILocation(line: 3339, column: 33, scope: !1682)
!1720 = !DILocation(line: 3339, column: 12, scope: !1682)
!1721 = !DILocation(line: 3339, column: 10, scope: !1682)
!1722 = !DILocation(line: 3340, column: 9, scope: !1682)
!1723 = !DILocation(line: 3340, column: 11, scope: !1682)
!1724 = !DILocation(line: 3343, column: 23, scope: !1682)
!1725 = !DILocation(line: 3343, column: 9, scope: !1682)
!1726 = !DILocation(line: 3343, column: 7, scope: !1682)
!1727 = !DILocation(line: 3344, column: 23, scope: !1682)
!1728 = !DILocation(line: 3344, column: 9, scope: !1682)
!1729 = !DILocation(line: 3344, column: 7, scope: !1682)
!1730 = !DILocation(line: 3345, column: 23, scope: !1682)
!1731 = !DILocation(line: 3345, column: 27, scope: !1682)
!1732 = !DILocation(line: 3345, column: 35, scope: !1682)
!1733 = !DILocation(line: 3345, column: 33, scope: !1682)
!1734 = !DILocation(line: 3345, column: 12, scope: !1682)
!1735 = !DILocation(line: 3345, column: 10, scope: !1682)
!1736 = !DILocation(line: 3346, column: 10, scope: !1682)
!1737 = !DILocation(line: 3346, column: 12, scope: !1682)
!1738 = !DILocation(line: 3348, column: 23, scope: !1682)
!1739 = !DILocation(line: 3348, column: 9, scope: !1682)
!1740 = !DILocation(line: 3348, column: 7, scope: !1682)
!1741 = !DILocation(line: 3349, column: 23, scope: !1682)
!1742 = !DILocation(line: 3349, column: 9, scope: !1682)
!1743 = !DILocation(line: 3349, column: 7, scope: !1682)
!1744 = !DILocation(line: 3350, column: 23, scope: !1682)
!1745 = !DILocation(line: 3350, column: 27, scope: !1682)
!1746 = !DILocation(line: 3350, column: 35, scope: !1682)
!1747 = !DILocation(line: 3350, column: 33, scope: !1682)
!1748 = !DILocation(line: 3350, column: 12, scope: !1682)
!1749 = !DILocation(line: 3350, column: 10, scope: !1682)
!1750 = !DILocation(line: 3351, column: 10, scope: !1682)
!1751 = !DILocation(line: 3351, column: 12, scope: !1682)
!1752 = !DILocation(line: 3353, column: 23, scope: !1682)
!1753 = !DILocation(line: 3353, column: 9, scope: !1682)
!1754 = !DILocation(line: 3353, column: 7, scope: !1682)
!1755 = !DILocation(line: 3354, column: 23, scope: !1682)
!1756 = !DILocation(line: 3354, column: 9, scope: !1682)
!1757 = !DILocation(line: 3354, column: 7, scope: !1682)
!1758 = !DILocation(line: 3355, column: 23, scope: !1682)
!1759 = !DILocation(line: 3355, column: 27, scope: !1682)
!1760 = !DILocation(line: 3355, column: 35, scope: !1682)
!1761 = !DILocation(line: 3355, column: 33, scope: !1682)
!1762 = !DILocation(line: 3355, column: 12, scope: !1682)
!1763 = !DILocation(line: 3355, column: 10, scope: !1682)
!1764 = !DILocation(line: 3356, column: 10, scope: !1682)
!1765 = !DILocation(line: 3356, column: 12, scope: !1682)
!1766 = !DILocation(line: 3358, column: 7, scope: !1767)
!1767 = distinct !DILexicalBlock(scope: !1682, file: !77, line: 3358, column: 7)
!1768 = !DILocation(line: 3358, column: 11, scope: !1767)
!1769 = !DILocation(line: 3358, column: 7, scope: !1682)
!1770 = !DILocation(line: 3359, column: 27, scope: !1771)
!1771 = distinct !DILexicalBlock(scope: !1767, file: !77, line: 3358, column: 17)
!1772 = !DILocation(line: 3359, column: 13, scope: !1771)
!1773 = !DILocation(line: 3359, column: 11, scope: !1771)
!1774 = !DILocation(line: 3360, column: 38, scope: !1771)
!1775 = !DILocation(line: 3360, column: 24, scope: !1771)
!1776 = !DILocation(line: 3360, column: 42, scope: !1771)
!1777 = !DILocation(line: 3360, column: 13, scope: !1771)
!1778 = !DILocation(line: 3360, column: 11, scope: !1771)
!1779 = !DILocation(line: 3361, column: 38, scope: !1771)
!1780 = !DILocation(line: 3361, column: 24, scope: !1771)
!1781 = !DILocation(line: 3361, column: 42, scope: !1771)
!1782 = !DILocation(line: 3361, column: 11, scope: !1771)
!1783 = !DILocation(line: 3362, column: 44, scope: !1771)
!1784 = !DILocation(line: 3362, column: 42, scope: !1771)
!1785 = !DILocation(line: 3362, column: 53, scope: !1771)
!1786 = !DILocation(line: 3362, column: 51, scope: !1771)
!1787 = !DILocation(line: 3362, column: 11, scope: !1771)
!1788 = !DILocation(line: 3362, column: 22, scope: !1771)
!1789 = !DILocation(line: 3363, column: 43, scope: !1771)
!1790 = !DILocation(line: 3363, column: 41, scope: !1771)
!1791 = !DILocation(line: 3363, column: 52, scope: !1771)
!1792 = !DILocation(line: 3363, column: 50, scope: !1771)
!1793 = !DILocation(line: 3363, column: 10, scope: !1771)
!1794 = !DILocation(line: 3363, column: 21, scope: !1771)
!1795 = !DILocation(line: 3364, column: 3, scope: !1771)
!1796 = !DILocation(line: 3365, column: 11, scope: !1797)
!1797 = distinct !DILexicalBlock(scope: !1767, file: !77, line: 3364, column: 10)
!1798 = !DILocation(line: 3365, column: 22, scope: !1797)
!1799 = !DILocation(line: 3366, column: 10, scope: !1797)
!1800 = !DILocation(line: 3366, column: 21, scope: !1797)
!1801 = !DILocation(line: 3368, column: 2, scope: !1682)
!1802 = !DILocation(line: 3369, column: 8, scope: !1803)
!1803 = distinct !DILexicalBlock(scope: !1678, file: !77, line: 3368, column: 9)
!1804 = !DILocation(line: 3372, column: 2, scope: !1643)
!1805 = distinct !DISubprogram(name: "bmi160_set_int_config", scope: !77, file: !77, line: 1605, type: !1806, isLocal: false, isDefinition: true, scopeLine: 1606, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!1806 = !DISubroutineType(types: !1807)
!1807 = !{!62, !1808, !341}
!1808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1809, size: 64)
!1809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bmi160_int_settg", file: !6, line: 1342, size: 128, elements: !1810)
!1810 = !{!1811, !1812, !1813, !1822, !1906, !1907}
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "int_channel", scope: !1809, file: !6, line: 1344, baseType: !79, size: 32)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "int_type", scope: !1809, file: !6, line: 1346, baseType: !85, size: 32, offset: 32)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "int_pin_settg", scope: !1809, file: !6, line: 1348, baseType: !1814, size: 16, offset: 64)
!1814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bmi160_int_pin_settg", file: !6, line: 1286, size: 16, elements: !1815)
!1815 = !{!1816, !1817, !1818, !1819, !1820, !1821}
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "output_en", scope: !1814, file: !6, line: 1290, baseType: !47, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "output_mode", scope: !1814, file: !6, line: 1292, baseType: !47, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "output_type", scope: !1814, file: !6, line: 1295, baseType: !47, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "edge_ctrl", scope: !1814, file: !6, line: 1297, baseType: !47, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "input_en", scope: !1814, file: !6, line: 1300, baseType: !47, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "latch_dur", scope: !1814, file: !6, line: 1302, baseType: !47, size: 4, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "int_type_cfg", scope: !1809, file: !6, line: 1350, baseType: !1823, size: 32, offset: 80)
!1823 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "bmi160_int_type_cfg", file: !6, line: 1321, size: 32, elements: !1824)
!1824 = !{!1825, !1834, !1844, !1852, !1860, !1870, !1880, !1887, !1896}
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "acc_tap_int", scope: !1823, file: !6, line: 1323, baseType: !1826, size: 16)
!1826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bmi160_acc_tap_int_cfg", file: !6, line: 1014, size: 16, elements: !1827)
!1827 = !{!1828, !1829, !1830, !1831, !1832, !1833}
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "tap_thr", scope: !1826, file: !6, line: 1017, baseType: !47, size: 5, flags: DIFlagBitField, extraData: i64 0)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "tap_shock", scope: !1826, file: !6, line: 1019, baseType: !47, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "tap_quiet", scope: !1826, file: !6, line: 1021, baseType: !47, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "tap_dur", scope: !1826, file: !6, line: 1023, baseType: !47, size: 3, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "tap_data_src", scope: !1826, file: !6, line: 1025, baseType: !47, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "tap_en", scope: !1826, file: !6, line: 1027, baseType: !47, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "acc_any_motion_int", scope: !1823, file: !6, line: 1325, baseType: !1835, size: 16)
!1835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bmi160_acc_any_mot_int_cfg", file: !6, line: 1044, size: 16, elements: !1836)
!1836 = !{!1837, !1838, !1839, !1840, !1841, !1842, !1843}
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "anymotion_en", scope: !1835, file: !6, line: 1047, baseType: !17, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "anymotion_x", scope: !1835, file: !6, line: 1049, baseType: !17, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "anymotion_y", scope: !1835, file: !6, line: 1051, baseType: !17, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "anymotion_z", scope: !1835, file: !6, line: 1053, baseType: !17, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "anymotion_dur", scope: !1835, file: !6, line: 1055, baseType: !17, size: 2, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "anymotion_data_src", scope: !1835, file: !6, line: 1057, baseType: !17, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "anymotion_thr", scope: !1835, file: !6, line: 1059, baseType: !17, size: 8, offset: 8)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "acc_sig_motion_int", scope: !1823, file: !6, line: 1327, baseType: !1845, size: 16)
!1845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bmi160_acc_sig_mot_int_cfg", file: !6, line: 1078, size: 16, elements: !1846)
!1846 = !{!1847, !1848, !1849, !1850, !1851}
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "sig_mot_skip", scope: !1845, file: !6, line: 1081, baseType: !17, size: 2, flags: DIFlagBitField, extraData: i64 0)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "sig_mot_proof", scope: !1845, file: !6, line: 1083, baseType: !17, size: 2, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "sig_data_src", scope: !1845, file: !6, line: 1085, baseType: !17, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "sig_en", scope: !1845, file: !6, line: 1087, baseType: !17, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "sig_mot_thres", scope: !1845, file: !6, line: 1089, baseType: !17, size: 8, offset: 8)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "acc_step_detect_int", scope: !1823, file: !6, line: 1329, baseType: !1853, size: 16)
!1853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bmi160_acc_step_detect_int_cfg", file: !6, line: 1104, size: 16, elements: !1854)
!1854 = !{!1855, !1856, !1857, !1858, !1859}
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "step_detector_en", scope: !1853, file: !6, line: 1107, baseType: !47, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "min_threshold", scope: !1853, file: !6, line: 1109, baseType: !47, size: 2, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "steptime_min", scope: !1853, file: !6, line: 1111, baseType: !47, size: 3, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "step_detector_mode", scope: !1853, file: !6, line: 1113, baseType: !47, size: 2, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "step_min_buf", scope: !1853, file: !6, line: 1115, baseType: !47, size: 3, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "acc_no_motion_int", scope: !1823, file: !6, line: 1331, baseType: !1861, size: 32)
!1861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bmi160_acc_no_motion_int_cfg", file: !6, line: 1130, size: 32, elements: !1862)
!1862 = !{!1863, !1864, !1865, !1866, !1867, !1868, !1869}
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "no_motion_x", scope: !1861, file: !6, line: 1133, baseType: !47, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "no_motion_y", scope: !1861, file: !6, line: 1135, baseType: !47, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "no_motion_z", scope: !1861, file: !6, line: 1137, baseType: !47, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "no_motion_dur", scope: !1861, file: !6, line: 1139, baseType: !47, size: 6, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "no_motion_sel", scope: !1861, file: !6, line: 1141, baseType: !47, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "no_motion_src", scope: !1861, file: !6, line: 1143, baseType: !47, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "no_motion_thres", scope: !1861, file: !6, line: 1145, baseType: !17, size: 8, offset: 16)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "acc_orient_int", scope: !1823, file: !6, line: 1333, baseType: !1871, size: 32)
!1871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bmi160_acc_orient_int_cfg", file: !6, line: 1164, size: 32, elements: !1872)
!1872 = !{!1873, !1874, !1875, !1876, !1877, !1878, !1879}
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "orient_mode", scope: !1871, file: !6, line: 1167, baseType: !47, size: 2, flags: DIFlagBitField, extraData: i64 0)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "orient_blocking", scope: !1871, file: !6, line: 1169, baseType: !47, size: 2, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "orient_hyst", scope: !1871, file: !6, line: 1171, baseType: !47, size: 4, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "orient_theta", scope: !1871, file: !6, line: 1173, baseType: !47, size: 6, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "orient_ud_en", scope: !1871, file: !6, line: 1175, baseType: !47, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "axes_ex", scope: !1871, file: !6, line: 1177, baseType: !47, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "orient_en", scope: !1871, file: !6, line: 1179, baseType: !17, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "acc_flat_int", scope: !1823, file: !6, line: 1335, baseType: !1881, size: 16)
!1881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bmi160_acc_flat_detect_int_cfg", file: !6, line: 1198, size: 16, elements: !1882)
!1882 = !{!1883, !1884, !1885, !1886}
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "flat_theta", scope: !1881, file: !6, line: 1201, baseType: !47, size: 6, flags: DIFlagBitField, extraData: i64 0)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "flat_hy", scope: !1881, file: !6, line: 1203, baseType: !47, size: 3, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "flat_hold_time", scope: !1881, file: !6, line: 1206, baseType: !47, size: 2, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "flat_en", scope: !1881, file: !6, line: 1208, baseType: !47, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "acc_low_g_int", scope: !1823, file: !6, line: 1337, baseType: !1888, size: 24)
!1888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bmi160_acc_low_g_int_cfg", file: !6, line: 1222, size: 24, elements: !1889)
!1889 = !{!1890, !1891, !1892, !1893, !1894, !1895}
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "low_dur", scope: !1888, file: !6, line: 1225, baseType: !17, size: 8)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "low_thres", scope: !1888, file: !6, line: 1227, baseType: !17, size: 8, offset: 8)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "low_hyst", scope: !1888, file: !6, line: 1229, baseType: !17, size: 2, offset: 16, flags: DIFlagBitField, extraData: i64 16)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "low_mode", scope: !1888, file: !6, line: 1231, baseType: !17, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 16)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "low_data_src", scope: !1888, file: !6, line: 1233, baseType: !17, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 16)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "low_en", scope: !1888, file: !6, line: 1235, baseType: !17, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 16)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "acc_high_g_int", scope: !1823, file: !6, line: 1339, baseType: !1897, size: 24)
!1897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bmi160_acc_high_g_int_cfg", file: !6, line: 1252, size: 24, elements: !1898)
!1898 = !{!1899, !1900, !1901, !1902, !1903, !1904, !1905}
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "high_g_x", scope: !1897, file: !6, line: 1255, baseType: !17, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "high_g_y", scope: !1897, file: !6, line: 1257, baseType: !17, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "high_g_z", scope: !1897, file: !6, line: 1259, baseType: !17, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "high_hy", scope: !1897, file: !6, line: 1261, baseType: !17, size: 2, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "high_data_src", scope: !1897, file: !6, line: 1263, baseType: !17, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "high_thres", scope: !1897, file: !6, line: 1265, baseType: !17, size: 8, offset: 8)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "high_dur", scope: !1897, file: !6, line: 1267, baseType: !17, size: 8, offset: 16)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_full_int_en", scope: !1809, file: !6, line: 1352, baseType: !17, size: 1, offset: 112, flags: DIFlagBitField, extraData: i64 112)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_WTM_int_en", scope: !1809, file: !6, line: 1354, baseType: !17, size: 1, offset: 113, flags: DIFlagBitField, extraData: i64 112)
!1908 = !DILocalVariable(name: "int_config", arg: 1, scope: !1805, file: !77, line: 1605, type: !1808)
!1909 = !DILocation(line: 1605, column: 55, scope: !1805)
!1910 = !DILocalVariable(name: "dev", arg: 2, scope: !1805, file: !77, line: 1605, type: !341)
!1911 = !DILocation(line: 1605, column: 86, scope: !1805)
!1912 = !DILocalVariable(name: "rslt", scope: !1805, file: !77, line: 1607, type: !62)
!1913 = !DILocation(line: 1607, column: 9, scope: !1805)
!1914 = !DILocation(line: 1606, column: 3, scope: !1805)
!1915 = !DILocation(line: 1609, column: 22, scope: !1805)
!1916 = !DILocation(line: 1609, column: 2, scope: !1805)
!1917 = !DILocation(line: 1612, column: 10, scope: !1918)
!1918 = distinct !DILexicalBlock(scope: !1805, file: !77, line: 1609, column: 32)
!1919 = !DILocation(line: 1612, column: 8, scope: !1918)
!1920 = !DILocation(line: 1613, column: 3, scope: !1918)
!1921 = !DILocation(line: 1616, column: 10, scope: !1918)
!1922 = !DILocation(line: 1616, column: 8, scope: !1918)
!1923 = !DILocation(line: 1617, column: 3, scope: !1918)
!1924 = !DILocation(line: 1620, column: 10, scope: !1918)
!1925 = !DILocation(line: 1620, column: 8, scope: !1918)
!1926 = !DILocation(line: 1621, column: 3, scope: !1918)
!1927 = !DILocation(line: 1625, column: 10, scope: !1918)
!1928 = !DILocation(line: 1625, column: 8, scope: !1918)
!1929 = !DILocation(line: 1626, column: 3, scope: !1918)
!1930 = !DILocation(line: 1629, column: 10, scope: !1918)
!1931 = !DILocation(line: 1629, column: 8, scope: !1918)
!1932 = !DILocation(line: 1630, column: 3, scope: !1918)
!1933 = !DILocation(line: 1633, column: 10, scope: !1918)
!1934 = !DILocation(line: 1633, column: 8, scope: !1918)
!1935 = !DILocation(line: 1634, column: 3, scope: !1918)
!1936 = !DILocation(line: 1637, column: 10, scope: !1918)
!1937 = !DILocation(line: 1637, column: 8, scope: !1918)
!1938 = !DILocation(line: 1638, column: 3, scope: !1918)
!1939 = !DILocation(line: 1641, column: 10, scope: !1918)
!1940 = !DILocation(line: 1641, column: 8, scope: !1918)
!1941 = !DILocation(line: 1642, column: 3, scope: !1918)
!1942 = !DILocation(line: 1645, column: 10, scope: !1918)
!1943 = !DILocation(line: 1645, column: 8, scope: !1918)
!1944 = !DILocation(line: 1646, column: 3, scope: !1918)
!1945 = !DILocation(line: 1649, column: 10, scope: !1918)
!1946 = !DILocation(line: 1649, column: 8, scope: !1918)
!1947 = !DILocation(line: 1650, column: 3, scope: !1918)
!1948 = !DILocation(line: 1653, column: 10, scope: !1918)
!1949 = !DILocation(line: 1653, column: 8, scope: !1918)
!1950 = !DILocation(line: 1654, column: 3, scope: !1918)
!1951 = !DILocation(line: 1657, column: 10, scope: !1918)
!1952 = !DILocation(line: 1657, column: 8, scope: !1918)
!1953 = !DILocation(line: 1658, column: 3, scope: !1918)
!1954 = !DILocation(line: 1662, column: 10, scope: !1918)
!1955 = !DILocation(line: 1662, column: 8, scope: !1918)
!1956 = !DILocation(line: 1663, column: 3, scope: !1918)
!1957 = !DILocation(line: 1665, column: 3, scope: !1918)
!1958 = !DILocation(line: 1667, column: 2, scope: !1805)
!1959 = distinct !DISubprogram(name: "set_accel_any_motion_int", scope: !77, file: !77, line: 2451, type: !1806, isLocal: true, isDefinition: true, scopeLine: 2452, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!1960 = !DILocalVariable(name: "int_config", arg: 1, scope: !1959, file: !77, line: 2451, type: !1808)
!1961 = !DILocation(line: 2451, column: 65, scope: !1959)
!1962 = !DILocalVariable(name: "dev", arg: 2, scope: !1959, file: !77, line: 2451, type: !341)
!1963 = !DILocation(line: 2451, column: 96, scope: !1959)
!1964 = !DILocalVariable(name: "rslt", scope: !1959, file: !77, line: 2453, type: !62)
!1965 = !DILocation(line: 2453, column: 9, scope: !1959)
!1966 = !DILocalVariable(name: "any_motion_int_cfg", scope: !1967, file: !77, line: 2462, type: !1969)
!1967 = distinct !DILexicalBlock(scope: !1968, file: !77, line: 2460, column: 9)
!1968 = distinct !DILexicalBlock(scope: !1959, file: !77, line: 2458, column: 6)
!1969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1835, size: 64)
!1970 = !DILocation(line: 2462, column: 38, scope: !1967)
!1971 = !DILocation(line: 2452, column: 3, scope: !1959)
!1972 = !DILocation(line: 2456, column: 9, scope: !1959)
!1973 = !DILocation(line: 2456, column: 7, scope: !1959)
!1974 = !DILocation(line: 2458, column: 7, scope: !1968)
!1975 = !DILocation(line: 2458, column: 12, scope: !1968)
!1976 = !DILocation(line: 2458, column: 26, scope: !1968)
!1977 = !DILocation(line: 2458, column: 41, scope: !1978)
!1978 = !DILexicalBlockFile(scope: !1968, file: !77, discriminator: 1)
!1979 = !DILocation(line: 2458, column: 6, scope: !1980)
!1980 = !DILexicalBlockFile(scope: !1959, file: !77, discriminator: 1)
!1981 = !DILocation(line: 2459, column: 8, scope: !1982)
!1982 = distinct !DILexicalBlock(scope: !1968, file: !77, line: 2458, column: 51)
!1983 = !DILocation(line: 2460, column: 2, scope: !1982)
!1984 = !DILocation(line: 2462, column: 73, scope: !1967)
!1985 = !DILocation(line: 2462, column: 86, scope: !1967)
!1986 = !DILocation(line: 2464, column: 10, scope: !1967)
!1987 = !DILocation(line: 2464, column: 8, scope: !1967)
!1988 = !DILocation(line: 2465, column: 7, scope: !1989)
!1989 = distinct !DILexicalBlock(scope: !1967, file: !77, line: 2465, column: 7)
!1990 = !DILocation(line: 2465, column: 12, scope: !1989)
!1991 = !DILocation(line: 2465, column: 7, scope: !1967)
!1992 = !DILocation(line: 2466, column: 11, scope: !1989)
!1993 = !DILocation(line: 2466, column: 9, scope: !1989)
!1994 = !DILocation(line: 2466, column: 4, scope: !1989)
!1995 = !DILocation(line: 2469, column: 2, scope: !1959)
!1996 = distinct !DISubprogram(name: "set_accel_sig_motion_int", scope: !77, file: !77, line: 2533, type: !1806, isLocal: true, isDefinition: true, scopeLine: 2534, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!1997 = !DILocalVariable(name: "int_config", arg: 1, scope: !1996, file: !77, line: 2533, type: !1808)
!1998 = !DILocation(line: 2533, column: 65, scope: !1996)
!1999 = !DILocalVariable(name: "dev", arg: 2, scope: !1996, file: !77, line: 2533, type: !341)
!2000 = !DILocation(line: 2533, column: 96, scope: !1996)
!2001 = !DILocalVariable(name: "rslt", scope: !1996, file: !77, line: 2535, type: !62)
!2002 = !DILocation(line: 2535, column: 9, scope: !1996)
!2003 = !DILocalVariable(name: "sig_mot_int_cfg", scope: !2004, file: !77, line: 2544, type: !2006)
!2004 = distinct !DILexicalBlock(scope: !2005, file: !77, line: 2542, column: 9)
!2005 = distinct !DILexicalBlock(scope: !1996, file: !77, line: 2540, column: 6)
!2006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1845, size: 64)
!2007 = !DILocation(line: 2544, column: 38, scope: !2004)
!2008 = !DILocation(line: 2534, column: 3, scope: !1996)
!2009 = !DILocation(line: 2538, column: 9, scope: !1996)
!2010 = !DILocation(line: 2538, column: 7, scope: !1996)
!2011 = !DILocation(line: 2540, column: 7, scope: !2005)
!2012 = !DILocation(line: 2540, column: 12, scope: !2005)
!2013 = !DILocation(line: 2540, column: 26, scope: !2005)
!2014 = !DILocation(line: 2540, column: 41, scope: !2015)
!2015 = !DILexicalBlockFile(scope: !2005, file: !77, discriminator: 1)
!2016 = !DILocation(line: 2540, column: 6, scope: !2017)
!2017 = !DILexicalBlockFile(scope: !1996, file: !77, discriminator: 1)
!2018 = !DILocation(line: 2541, column: 8, scope: !2019)
!2019 = distinct !DILexicalBlock(scope: !2005, file: !77, line: 2540, column: 51)
!2020 = !DILocation(line: 2542, column: 2, scope: !2019)
!2021 = !DILocation(line: 2544, column: 70, scope: !2004)
!2022 = !DILocation(line: 2544, column: 83, scope: !2004)
!2023 = !DILocation(line: 2546, column: 10, scope: !2004)
!2024 = !DILocation(line: 2546, column: 8, scope: !2004)
!2025 = !DILocation(line: 2547, column: 7, scope: !2026)
!2026 = distinct !DILexicalBlock(scope: !2004, file: !77, line: 2547, column: 7)
!2027 = !DILocation(line: 2547, column: 12, scope: !2026)
!2028 = !DILocation(line: 2547, column: 7, scope: !2004)
!2029 = !DILocation(line: 2548, column: 11, scope: !2026)
!2030 = !DILocation(line: 2548, column: 9, scope: !2026)
!2031 = !DILocation(line: 2548, column: 4, scope: !2026)
!2032 = !DILocation(line: 2551, column: 2, scope: !1996)
!2033 = distinct !DISubprogram(name: "set_accel_no_motion_int", scope: !77, file: !77, line: 2560, type: !2034, isLocal: true, isDefinition: true, scopeLine: 2561, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!2034 = !DISubroutineType(types: !2035)
!2035 = !{!62, !1808, !252}
!2036 = !DILocalVariable(name: "int_config", arg: 1, scope: !2033, file: !77, line: 2560, type: !1808)
!2037 = !DILocation(line: 2560, column: 64, scope: !2033)
!2038 = !DILocalVariable(name: "dev", arg: 2, scope: !2033, file: !77, line: 2560, type: !252)
!2039 = !DILocation(line: 2560, column: 101, scope: !2033)
!2040 = !DILocalVariable(name: "rslt", scope: !2033, file: !77, line: 2562, type: !62)
!2041 = !DILocation(line: 2562, column: 9, scope: !2033)
!2042 = !DILocalVariable(name: "no_mot_int_cfg", scope: !2043, file: !77, line: 2571, type: !2045)
!2043 = distinct !DILexicalBlock(scope: !2044, file: !77, line: 2569, column: 9)
!2044 = distinct !DILexicalBlock(scope: !2033, file: !77, line: 2567, column: 6)
!2045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1861, size: 64)
!2046 = !DILocation(line: 2571, column: 40, scope: !2043)
!2047 = !DILocation(line: 2561, column: 3, scope: !2033)
!2048 = !DILocation(line: 2565, column: 9, scope: !2033)
!2049 = !DILocation(line: 2565, column: 7, scope: !2033)
!2050 = !DILocation(line: 2567, column: 7, scope: !2044)
!2051 = !DILocation(line: 2567, column: 12, scope: !2044)
!2052 = !DILocation(line: 2567, column: 26, scope: !2044)
!2053 = !DILocation(line: 2567, column: 41, scope: !2054)
!2054 = !DILexicalBlockFile(scope: !2044, file: !77, discriminator: 1)
!2055 = !DILocation(line: 2567, column: 6, scope: !2056)
!2056 = !DILexicalBlockFile(scope: !2033, file: !77, discriminator: 1)
!2057 = !DILocation(line: 2568, column: 8, scope: !2058)
!2058 = distinct !DILexicalBlock(scope: !2044, file: !77, line: 2567, column: 51)
!2059 = !DILocation(line: 2569, column: 2, scope: !2058)
!2060 = !DILocation(line: 2571, column: 71, scope: !2043)
!2061 = !DILocation(line: 2571, column: 84, scope: !2043)
!2062 = !DILocation(line: 2573, column: 10, scope: !2043)
!2063 = !DILocation(line: 2573, column: 8, scope: !2043)
!2064 = !DILocation(line: 2574, column: 7, scope: !2065)
!2065 = distinct !DILexicalBlock(scope: !2043, file: !77, line: 2574, column: 7)
!2066 = !DILocation(line: 2574, column: 12, scope: !2065)
!2067 = !DILocation(line: 2574, column: 7, scope: !2043)
!2068 = !DILocation(line: 2576, column: 11, scope: !2065)
!2069 = !DILocation(line: 2576, column: 9, scope: !2065)
!2070 = !DILocation(line: 2576, column: 4, scope: !2065)
!2071 = !DILocation(line: 2579, column: 2, scope: !2033)
!2072 = distinct !DISubprogram(name: "set_accel_tap_int", scope: !77, file: !77, line: 2476, type: !2034, isLocal: true, isDefinition: true, scopeLine: 2477, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!2073 = !DILocalVariable(name: "int_config", arg: 1, scope: !2072, file: !77, line: 2476, type: !1808)
!2074 = !DILocation(line: 2476, column: 58, scope: !2072)
!2075 = !DILocalVariable(name: "dev", arg: 2, scope: !2072, file: !77, line: 2476, type: !252)
!2076 = !DILocation(line: 2476, column: 95, scope: !2072)
!2077 = !DILocalVariable(name: "rslt", scope: !2072, file: !77, line: 2478, type: !62)
!2078 = !DILocation(line: 2478, column: 9, scope: !2072)
!2079 = !DILocalVariable(name: "tap_int_cfg", scope: !2080, file: !77, line: 2488, type: !2082)
!2080 = distinct !DILexicalBlock(scope: !2081, file: !77, line: 2485, column: 9)
!2081 = distinct !DILexicalBlock(scope: !2072, file: !77, line: 2483, column: 6)
!2082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1826, size: 64)
!2083 = !DILocation(line: 2488, column: 34, scope: !2080)
!2084 = !DILocation(line: 2477, column: 3, scope: !2072)
!2085 = !DILocation(line: 2481, column: 9, scope: !2072)
!2086 = !DILocation(line: 2481, column: 7, scope: !2072)
!2087 = !DILocation(line: 2483, column: 7, scope: !2081)
!2088 = !DILocation(line: 2483, column: 12, scope: !2081)
!2089 = !DILocation(line: 2483, column: 26, scope: !2081)
!2090 = !DILocation(line: 2483, column: 41, scope: !2091)
!2091 = !DILexicalBlockFile(scope: !2081, file: !77, discriminator: 1)
!2092 = !DILocation(line: 2483, column: 6, scope: !2093)
!2093 = !DILexicalBlockFile(scope: !2072, file: !77, discriminator: 1)
!2094 = !DILocation(line: 2484, column: 8, scope: !2095)
!2095 = distinct !DILexicalBlock(scope: !2081, file: !77, line: 2483, column: 51)
!2096 = !DILocation(line: 2485, column: 2, scope: !2095)
!2097 = !DILocation(line: 2488, column: 62, scope: !2080)
!2098 = !DILocation(line: 2488, column: 75, scope: !2080)
!2099 = !DILocation(line: 2490, column: 10, scope: !2080)
!2100 = !DILocation(line: 2490, column: 8, scope: !2080)
!2101 = !DILocation(line: 2491, column: 7, scope: !2102)
!2102 = distinct !DILexicalBlock(scope: !2080, file: !77, line: 2491, column: 7)
!2103 = !DILocation(line: 2491, column: 12, scope: !2102)
!2104 = !DILocation(line: 2491, column: 7, scope: !2080)
!2105 = !DILocation(line: 2493, column: 11, scope: !2106)
!2106 = distinct !DILexicalBlock(scope: !2102, file: !77, line: 2491, column: 26)
!2107 = !DILocation(line: 2493, column: 9, scope: !2106)
!2108 = !DILocation(line: 2494, column: 8, scope: !2109)
!2109 = distinct !DILexicalBlock(scope: !2106, file: !77, line: 2494, column: 8)
!2110 = !DILocation(line: 2494, column: 13, scope: !2109)
!2111 = !DILocation(line: 2494, column: 8, scope: !2106)
!2112 = !DILocation(line: 2495, column: 12, scope: !2109)
!2113 = !DILocation(line: 2495, column: 10, scope: !2109)
!2114 = !DILocation(line: 2495, column: 5, scope: !2109)
!2115 = !DILocation(line: 2496, column: 3, scope: !2106)
!2116 = !DILocation(line: 2498, column: 2, scope: !2072)
!2117 = distinct !DISubprogram(name: "set_accel_step_detect_int", scope: !77, file: !77, line: 2587, type: !2034, isLocal: true, isDefinition: true, scopeLine: 2588, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!2118 = !DILocalVariable(name: "int_config", arg: 1, scope: !2117, file: !77, line: 2587, type: !1808)
!2119 = !DILocation(line: 2587, column: 66, scope: !2117)
!2120 = !DILocalVariable(name: "dev", arg: 2, scope: !2117, file: !77, line: 2587, type: !252)
!2121 = !DILocation(line: 2587, column: 103, scope: !2117)
!2122 = !DILocalVariable(name: "rslt", scope: !2117, file: !77, line: 2589, type: !62)
!2123 = !DILocation(line: 2589, column: 9, scope: !2117)
!2124 = !DILocalVariable(name: "step_detect_int_cfg", scope: !2125, file: !77, line: 2598, type: !2127)
!2125 = distinct !DILexicalBlock(scope: !2126, file: !77, line: 2596, column: 9)
!2126 = distinct !DILexicalBlock(scope: !2117, file: !77, line: 2594, column: 6)
!2127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1853, size: 64)
!2128 = !DILocation(line: 2598, column: 42, scope: !2125)
!2129 = !DILocation(line: 2588, column: 3, scope: !2117)
!2130 = !DILocation(line: 2592, column: 9, scope: !2117)
!2131 = !DILocation(line: 2592, column: 7, scope: !2117)
!2132 = !DILocation(line: 2594, column: 7, scope: !2126)
!2133 = !DILocation(line: 2594, column: 12, scope: !2126)
!2134 = !DILocation(line: 2594, column: 26, scope: !2126)
!2135 = !DILocation(line: 2594, column: 41, scope: !2136)
!2136 = !DILexicalBlockFile(scope: !2126, file: !77, discriminator: 1)
!2137 = !DILocation(line: 2594, column: 6, scope: !2138)
!2138 = !DILexicalBlockFile(scope: !2117, file: !77, discriminator: 1)
!2139 = !DILocation(line: 2595, column: 8, scope: !2140)
!2140 = distinct !DILexicalBlock(scope: !2126, file: !77, line: 2594, column: 51)
!2141 = !DILocation(line: 2596, column: 2, scope: !2140)
!2142 = !DILocation(line: 2599, column: 23, scope: !2125)
!2143 = !DILocation(line: 2599, column: 36, scope: !2125)
!2144 = !DILocation(line: 2601, column: 10, scope: !2125)
!2145 = !DILocation(line: 2601, column: 8, scope: !2125)
!2146 = !DILocation(line: 2602, column: 7, scope: !2147)
!2147 = distinct !DILexicalBlock(scope: !2125, file: !77, line: 2602, column: 7)
!2148 = !DILocation(line: 2602, column: 12, scope: !2147)
!2149 = !DILocation(line: 2602, column: 7, scope: !2125)
!2150 = !DILocation(line: 2604, column: 11, scope: !2151)
!2151 = distinct !DILexicalBlock(scope: !2147, file: !77, line: 2602, column: 26)
!2152 = !DILocation(line: 2604, column: 9, scope: !2151)
!2153 = !DILocation(line: 2605, column: 8, scope: !2154)
!2154 = distinct !DILexicalBlock(scope: !2151, file: !77, line: 2605, column: 8)
!2155 = !DILocation(line: 2605, column: 13, scope: !2154)
!2156 = !DILocation(line: 2605, column: 8, scope: !2151)
!2157 = !DILocation(line: 2606, column: 12, scope: !2158)
!2158 = distinct !DILexicalBlock(scope: !2154, file: !77, line: 2605, column: 27)
!2159 = !DILocation(line: 2606, column: 10, scope: !2158)
!2160 = !DILocation(line: 2607, column: 9, scope: !2161)
!2161 = distinct !DILexicalBlock(scope: !2158, file: !77, line: 2607, column: 9)
!2162 = !DILocation(line: 2607, column: 14, scope: !2161)
!2163 = !DILocation(line: 2607, column: 9, scope: !2158)
!2164 = !DILocation(line: 2608, column: 13, scope: !2161)
!2165 = !DILocation(line: 2608, column: 11, scope: !2161)
!2166 = !DILocation(line: 2608, column: 6, scope: !2161)
!2167 = !DILocation(line: 2609, column: 4, scope: !2158)
!2168 = !DILocation(line: 2610, column: 3, scope: !2151)
!2169 = !DILocation(line: 2612, column: 2, scope: !2117)
!2170 = distinct !DISubprogram(name: "set_accel_orientation_int", scope: !77, file: !77, line: 2620, type: !2034, isLocal: true, isDefinition: true, scopeLine: 2621, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!2171 = !DILocalVariable(name: "int_config", arg: 1, scope: !2170, file: !77, line: 2620, type: !1808)
!2172 = !DILocation(line: 2620, column: 66, scope: !2170)
!2173 = !DILocalVariable(name: "dev", arg: 2, scope: !2170, file: !77, line: 2620, type: !252)
!2174 = !DILocation(line: 2620, column: 103, scope: !2170)
!2175 = !DILocalVariable(name: "rslt", scope: !2170, file: !77, line: 2622, type: !62)
!2176 = !DILocation(line: 2622, column: 9, scope: !2170)
!2177 = !DILocalVariable(name: "orient_int_cfg", scope: !2178, file: !77, line: 2631, type: !2180)
!2178 = distinct !DILexicalBlock(scope: !2179, file: !77, line: 2629, column: 9)
!2179 = distinct !DILexicalBlock(scope: !2170, file: !77, line: 2627, column: 6)
!2180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1871, size: 64)
!2181 = !DILocation(line: 2631, column: 37, scope: !2178)
!2182 = !DILocation(line: 2621, column: 3, scope: !2170)
!2183 = !DILocation(line: 2625, column: 9, scope: !2170)
!2184 = !DILocation(line: 2625, column: 7, scope: !2170)
!2185 = !DILocation(line: 2627, column: 7, scope: !2179)
!2186 = !DILocation(line: 2627, column: 12, scope: !2179)
!2187 = !DILocation(line: 2627, column: 26, scope: !2179)
!2188 = !DILocation(line: 2627, column: 41, scope: !2189)
!2189 = !DILexicalBlockFile(scope: !2179, file: !77, discriminator: 1)
!2190 = !DILocation(line: 2627, column: 6, scope: !2191)
!2191 = !DILexicalBlockFile(scope: !2170, file: !77, discriminator: 1)
!2192 = !DILocation(line: 2628, column: 8, scope: !2193)
!2193 = distinct !DILexicalBlock(scope: !2179, file: !77, line: 2627, column: 51)
!2194 = !DILocation(line: 2629, column: 2, scope: !2193)
!2195 = !DILocation(line: 2631, column: 68, scope: !2178)
!2196 = !DILocation(line: 2631, column: 81, scope: !2178)
!2197 = !DILocation(line: 2633, column: 10, scope: !2178)
!2198 = !DILocation(line: 2633, column: 8, scope: !2178)
!2199 = !DILocation(line: 2634, column: 7, scope: !2200)
!2200 = distinct !DILexicalBlock(scope: !2178, file: !77, line: 2634, column: 7)
!2201 = !DILocation(line: 2634, column: 12, scope: !2200)
!2202 = !DILocation(line: 2634, column: 7, scope: !2178)
!2203 = !DILocation(line: 2636, column: 11, scope: !2204)
!2204 = distinct !DILexicalBlock(scope: !2200, file: !77, line: 2634, column: 26)
!2205 = !DILocation(line: 2636, column: 9, scope: !2204)
!2206 = !DILocation(line: 2637, column: 8, scope: !2207)
!2207 = distinct !DILexicalBlock(scope: !2204, file: !77, line: 2637, column: 8)
!2208 = !DILocation(line: 2637, column: 13, scope: !2207)
!2209 = !DILocation(line: 2637, column: 8, scope: !2204)
!2210 = !DILocation(line: 2639, column: 12, scope: !2211)
!2211 = distinct !DILexicalBlock(scope: !2207, file: !77, line: 2637, column: 27)
!2212 = !DILocation(line: 2639, column: 10, scope: !2211)
!2213 = !DILocation(line: 2640, column: 9, scope: !2214)
!2214 = distinct !DILexicalBlock(scope: !2211, file: !77, line: 2640, column: 9)
!2215 = !DILocation(line: 2640, column: 14, scope: !2214)
!2216 = !DILocation(line: 2640, column: 9, scope: !2211)
!2217 = !DILocation(line: 2643, column: 13, scope: !2214)
!2218 = !DILocation(line: 2643, column: 11, scope: !2214)
!2219 = !DILocation(line: 2643, column: 6, scope: !2214)
!2220 = !DILocation(line: 2644, column: 4, scope: !2211)
!2221 = !DILocation(line: 2645, column: 3, scope: !2204)
!2222 = !DILocation(line: 2648, column: 2, scope: !2170)
!2223 = distinct !DISubprogram(name: "set_accel_flat_detect_int", scope: !77, file: !77, line: 2655, type: !2034, isLocal: true, isDefinition: true, scopeLine: 2656, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!2224 = !DILocalVariable(name: "int_config", arg: 1, scope: !2223, file: !77, line: 2655, type: !1808)
!2225 = !DILocation(line: 2655, column: 66, scope: !2223)
!2226 = !DILocalVariable(name: "dev", arg: 2, scope: !2223, file: !77, line: 2655, type: !252)
!2227 = !DILocation(line: 2655, column: 103, scope: !2223)
!2228 = !DILocalVariable(name: "rslt", scope: !2223, file: !77, line: 2657, type: !62)
!2229 = !DILocation(line: 2657, column: 9, scope: !2223)
!2230 = !DILocalVariable(name: "flat_detect_int", scope: !2231, file: !77, line: 2666, type: !2233)
!2231 = distinct !DILexicalBlock(scope: !2232, file: !77, line: 2664, column: 9)
!2232 = distinct !DILexicalBlock(scope: !2223, file: !77, line: 2662, column: 6)
!2233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1881, size: 64)
!2234 = !DILocation(line: 2666, column: 42, scope: !2231)
!2235 = !DILocation(line: 2656, column: 3, scope: !2223)
!2236 = !DILocation(line: 2660, column: 9, scope: !2223)
!2237 = !DILocation(line: 2660, column: 7, scope: !2223)
!2238 = !DILocation(line: 2662, column: 7, scope: !2232)
!2239 = !DILocation(line: 2662, column: 12, scope: !2232)
!2240 = !DILocation(line: 2662, column: 26, scope: !2232)
!2241 = !DILocation(line: 2662, column: 41, scope: !2242)
!2242 = !DILexicalBlockFile(scope: !2232, file: !77, discriminator: 1)
!2243 = !DILocation(line: 2662, column: 6, scope: !2244)
!2244 = !DILexicalBlockFile(scope: !2223, file: !77, discriminator: 1)
!2245 = !DILocation(line: 2663, column: 8, scope: !2246)
!2246 = distinct !DILexicalBlock(scope: !2232, file: !77, line: 2662, column: 51)
!2247 = !DILocation(line: 2664, column: 2, scope: !2246)
!2248 = !DILocation(line: 2666, column: 74, scope: !2231)
!2249 = !DILocation(line: 2666, column: 87, scope: !2231)
!2250 = !DILocation(line: 2669, column: 10, scope: !2231)
!2251 = !DILocation(line: 2669, column: 8, scope: !2231)
!2252 = !DILocation(line: 2670, column: 7, scope: !2253)
!2253 = distinct !DILexicalBlock(scope: !2231, file: !77, line: 2670, column: 7)
!2254 = !DILocation(line: 2670, column: 12, scope: !2253)
!2255 = !DILocation(line: 2670, column: 7, scope: !2231)
!2256 = !DILocation(line: 2672, column: 11, scope: !2257)
!2257 = distinct !DILexicalBlock(scope: !2253, file: !77, line: 2670, column: 26)
!2258 = !DILocation(line: 2672, column: 9, scope: !2257)
!2259 = !DILocation(line: 2673, column: 8, scope: !2260)
!2260 = distinct !DILexicalBlock(scope: !2257, file: !77, line: 2673, column: 8)
!2261 = !DILocation(line: 2673, column: 13, scope: !2260)
!2262 = !DILocation(line: 2673, column: 8, scope: !2257)
!2263 = !DILocation(line: 2675, column: 12, scope: !2264)
!2264 = distinct !DILexicalBlock(scope: !2260, file: !77, line: 2673, column: 27)
!2265 = !DILocation(line: 2675, column: 10, scope: !2264)
!2266 = !DILocation(line: 2676, column: 9, scope: !2267)
!2267 = distinct !DILexicalBlock(scope: !2264, file: !77, line: 2676, column: 9)
!2268 = !DILocation(line: 2676, column: 14, scope: !2267)
!2269 = !DILocation(line: 2676, column: 9, scope: !2264)
!2270 = !DILocation(line: 2678, column: 13, scope: !2267)
!2271 = !DILocation(line: 2678, column: 11, scope: !2267)
!2272 = !DILocation(line: 2678, column: 6, scope: !2267)
!2273 = !DILocation(line: 2679, column: 4, scope: !2264)
!2274 = !DILocation(line: 2680, column: 3, scope: !2257)
!2275 = !DILocation(line: 2683, column: 2, scope: !2223)
!2276 = distinct !DISubprogram(name: "set_accel_low_g_int", scope: !77, file: !77, line: 2690, type: !2034, isLocal: true, isDefinition: true, scopeLine: 2691, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!2277 = !DILocalVariable(name: "int_config", arg: 1, scope: !2276, file: !77, line: 2690, type: !1808)
!2278 = !DILocation(line: 2690, column: 60, scope: !2276)
!2279 = !DILocalVariable(name: "dev", arg: 2, scope: !2276, file: !77, line: 2690, type: !252)
!2280 = !DILocation(line: 2690, column: 97, scope: !2276)
!2281 = !DILocalVariable(name: "rslt", scope: !2276, file: !77, line: 2692, type: !62)
!2282 = !DILocation(line: 2692, column: 9, scope: !2276)
!2283 = !DILocalVariable(name: "low_g_int", scope: !2284, file: !77, line: 2701, type: !2286)
!2284 = distinct !DILexicalBlock(scope: !2285, file: !77, line: 2699, column: 9)
!2285 = distinct !DILexicalBlock(scope: !2276, file: !77, line: 2697, column: 6)
!2286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1888, size: 64)
!2287 = !DILocation(line: 2701, column: 36, scope: !2284)
!2288 = !DILocation(line: 2691, column: 3, scope: !2276)
!2289 = !DILocation(line: 2695, column: 9, scope: !2276)
!2290 = !DILocation(line: 2695, column: 7, scope: !2276)
!2291 = !DILocation(line: 2697, column: 7, scope: !2285)
!2292 = !DILocation(line: 2697, column: 12, scope: !2285)
!2293 = !DILocation(line: 2697, column: 26, scope: !2285)
!2294 = !DILocation(line: 2697, column: 41, scope: !2295)
!2295 = !DILexicalBlockFile(scope: !2285, file: !77, discriminator: 1)
!2296 = !DILocation(line: 2697, column: 6, scope: !2297)
!2297 = !DILexicalBlockFile(scope: !2276, file: !77, discriminator: 1)
!2298 = !DILocation(line: 2698, column: 8, scope: !2299)
!2299 = distinct !DILexicalBlock(scope: !2285, file: !77, line: 2697, column: 51)
!2300 = !DILocation(line: 2699, column: 2, scope: !2299)
!2301 = !DILocation(line: 2701, column: 62, scope: !2284)
!2302 = !DILocation(line: 2701, column: 75, scope: !2284)
!2303 = !DILocation(line: 2704, column: 10, scope: !2284)
!2304 = !DILocation(line: 2704, column: 8, scope: !2284)
!2305 = !DILocation(line: 2705, column: 7, scope: !2306)
!2306 = distinct !DILexicalBlock(scope: !2284, file: !77, line: 2705, column: 7)
!2307 = !DILocation(line: 2705, column: 12, scope: !2306)
!2308 = !DILocation(line: 2705, column: 7, scope: !2284)
!2309 = !DILocation(line: 2707, column: 11, scope: !2310)
!2310 = distinct !DILexicalBlock(scope: !2306, file: !77, line: 2705, column: 26)
!2311 = !DILocation(line: 2707, column: 9, scope: !2310)
!2312 = !DILocation(line: 2708, column: 8, scope: !2313)
!2313 = distinct !DILexicalBlock(scope: !2310, file: !77, line: 2708, column: 8)
!2314 = !DILocation(line: 2708, column: 13, scope: !2313)
!2315 = !DILocation(line: 2708, column: 8, scope: !2310)
!2316 = !DILocation(line: 2710, column: 12, scope: !2317)
!2317 = distinct !DILexicalBlock(scope: !2313, file: !77, line: 2708, column: 27)
!2318 = !DILocation(line: 2710, column: 10, scope: !2317)
!2319 = !DILocation(line: 2711, column: 9, scope: !2320)
!2320 = distinct !DILexicalBlock(scope: !2317, file: !77, line: 2711, column: 9)
!2321 = !DILocation(line: 2711, column: 14, scope: !2320)
!2322 = !DILocation(line: 2711, column: 9, scope: !2317)
!2323 = !DILocation(line: 2714, column: 13, scope: !2324)
!2324 = distinct !DILexicalBlock(scope: !2320, file: !77, line: 2711, column: 28)
!2325 = !DILocation(line: 2714, column: 11, scope: !2324)
!2326 = !DILocation(line: 2715, column: 10, scope: !2327)
!2327 = distinct !DILexicalBlock(scope: !2324, file: !77, line: 2715, column: 10)
!2328 = !DILocation(line: 2715, column: 15, scope: !2327)
!2329 = !DILocation(line: 2715, column: 10, scope: !2324)
!2330 = !DILocation(line: 2716, column: 14, scope: !2327)
!2331 = !DILocation(line: 2716, column: 12, scope: !2327)
!2332 = !DILocation(line: 2716, column: 7, scope: !2327)
!2333 = !DILocation(line: 2717, column: 5, scope: !2324)
!2334 = !DILocation(line: 2718, column: 4, scope: !2317)
!2335 = !DILocation(line: 2719, column: 3, scope: !2310)
!2336 = !DILocation(line: 2722, column: 2, scope: !2276)
!2337 = distinct !DISubprogram(name: "set_accel_high_g_int", scope: !77, file: !77, line: 2731, type: !2034, isLocal: true, isDefinition: true, scopeLine: 2732, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!2338 = !DILocalVariable(name: "int_config", arg: 1, scope: !2337, file: !77, line: 2731, type: !1808)
!2339 = !DILocation(line: 2731, column: 61, scope: !2337)
!2340 = !DILocalVariable(name: "dev", arg: 2, scope: !2337, file: !77, line: 2731, type: !252)
!2341 = !DILocation(line: 2731, column: 98, scope: !2337)
!2342 = !DILocalVariable(name: "rslt", scope: !2337, file: !77, line: 2733, type: !62)
!2343 = !DILocation(line: 2733, column: 9, scope: !2337)
!2344 = !DILocalVariable(name: "high_g_int_cfg", scope: !2345, file: !77, line: 2742, type: !2347)
!2345 = distinct !DILexicalBlock(scope: !2346, file: !77, line: 2740, column: 9)
!2346 = distinct !DILexicalBlock(scope: !2337, file: !77, line: 2738, column: 6)
!2347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1897, size: 64)
!2348 = !DILocation(line: 2742, column: 37, scope: !2345)
!2349 = !DILocation(line: 2732, column: 3, scope: !2337)
!2350 = !DILocation(line: 2736, column: 9, scope: !2337)
!2351 = !DILocation(line: 2736, column: 7, scope: !2337)
!2352 = !DILocation(line: 2738, column: 7, scope: !2346)
!2353 = !DILocation(line: 2738, column: 12, scope: !2346)
!2354 = !DILocation(line: 2738, column: 26, scope: !2346)
!2355 = !DILocation(line: 2738, column: 41, scope: !2356)
!2356 = !DILexicalBlockFile(scope: !2346, file: !77, discriminator: 1)
!2357 = !DILocation(line: 2738, column: 6, scope: !2358)
!2358 = !DILexicalBlockFile(scope: !2337, file: !77, discriminator: 1)
!2359 = !DILocation(line: 2739, column: 8, scope: !2360)
!2360 = distinct !DILexicalBlock(scope: !2346, file: !77, line: 2738, column: 51)
!2361 = !DILocation(line: 2740, column: 2, scope: !2360)
!2362 = !DILocation(line: 2742, column: 68, scope: !2345)
!2363 = !DILocation(line: 2742, column: 81, scope: !2345)
!2364 = !DILocation(line: 2745, column: 10, scope: !2345)
!2365 = !DILocation(line: 2745, column: 8, scope: !2345)
!2366 = !DILocation(line: 2746, column: 7, scope: !2367)
!2367 = distinct !DILexicalBlock(scope: !2345, file: !77, line: 2746, column: 7)
!2368 = !DILocation(line: 2746, column: 12, scope: !2367)
!2369 = !DILocation(line: 2746, column: 7, scope: !2345)
!2370 = !DILocation(line: 2748, column: 11, scope: !2371)
!2371 = distinct !DILexicalBlock(scope: !2367, file: !77, line: 2746, column: 26)
!2372 = !DILocation(line: 2748, column: 9, scope: !2371)
!2373 = !DILocation(line: 2749, column: 8, scope: !2374)
!2374 = distinct !DILexicalBlock(scope: !2371, file: !77, line: 2749, column: 8)
!2375 = !DILocation(line: 2749, column: 13, scope: !2374)
!2376 = !DILocation(line: 2749, column: 8, scope: !2371)
!2377 = !DILocation(line: 2751, column: 12, scope: !2378)
!2378 = distinct !DILexicalBlock(scope: !2374, file: !77, line: 2749, column: 27)
!2379 = !DILocation(line: 2751, column: 10, scope: !2378)
!2380 = !DILocation(line: 2752, column: 9, scope: !2381)
!2381 = distinct !DILexicalBlock(scope: !2378, file: !77, line: 2752, column: 9)
!2382 = !DILocation(line: 2752, column: 14, scope: !2381)
!2383 = !DILocation(line: 2752, column: 9, scope: !2378)
!2384 = !DILocation(line: 2755, column: 13, scope: !2385)
!2385 = distinct !DILexicalBlock(scope: !2381, file: !77, line: 2752, column: 28)
!2386 = !DILocation(line: 2755, column: 11, scope: !2385)
!2387 = !DILocation(line: 2756, column: 10, scope: !2388)
!2388 = distinct !DILexicalBlock(scope: !2385, file: !77, line: 2756, column: 10)
!2389 = !DILocation(line: 2756, column: 15, scope: !2388)
!2390 = !DILocation(line: 2756, column: 10, scope: !2385)
!2391 = !DILocation(line: 2757, column: 14, scope: !2388)
!2392 = !DILocation(line: 2757, column: 12, scope: !2388)
!2393 = !DILocation(line: 2757, column: 7, scope: !2388)
!2394 = !DILocation(line: 2758, column: 5, scope: !2385)
!2395 = !DILocation(line: 2759, column: 4, scope: !2378)
!2396 = !DILocation(line: 2760, column: 3, scope: !2371)
!2397 = !DILocation(line: 2763, column: 2, scope: !2337)
!2398 = distinct !DISubprogram(name: "set_accel_gyro_data_ready_int", scope: !77, file: !77, line: 2505, type: !2399, isLocal: true, isDefinition: true, scopeLine: 2506, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!2399 = !DISubroutineType(types: !2400)
!2400 = !{!62, !2401, !252}
!2401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2402, size: 64)
!2402 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1809)
!2403 = !DILocalVariable(name: "int_config", arg: 1, scope: !2398, file: !77, line: 2505, type: !2401)
!2404 = !DILocation(line: 2505, column: 76, scope: !2398)
!2405 = !DILocalVariable(name: "dev", arg: 2, scope: !2398, file: !77, line: 2505, type: !252)
!2406 = !DILocation(line: 2505, column: 113, scope: !2398)
!2407 = !DILocalVariable(name: "rslt", scope: !2398, file: !77, line: 2507, type: !62)
!2408 = !DILocation(line: 2507, column: 9, scope: !2398)
!2409 = !DILocation(line: 2506, column: 3, scope: !2398)
!2410 = !DILocation(line: 2510, column: 9, scope: !2398)
!2411 = !DILocation(line: 2510, column: 7, scope: !2398)
!2412 = !DILocation(line: 2512, column: 7, scope: !2413)
!2413 = distinct !DILexicalBlock(scope: !2398, file: !77, line: 2512, column: 6)
!2414 = !DILocation(line: 2512, column: 12, scope: !2413)
!2415 = !DILocation(line: 2512, column: 26, scope: !2413)
!2416 = !DILocation(line: 2512, column: 41, scope: !2417)
!2417 = !DILexicalBlockFile(scope: !2413, file: !77, discriminator: 1)
!2418 = !DILocation(line: 2512, column: 6, scope: !2419)
!2419 = !DILexicalBlockFile(scope: !2398, file: !77, discriminator: 1)
!2420 = !DILocation(line: 2513, column: 8, scope: !2421)
!2421 = distinct !DILexicalBlock(scope: !2413, file: !77, line: 2512, column: 51)
!2422 = !DILocation(line: 2514, column: 2, scope: !2421)
!2423 = !DILocation(line: 2515, column: 10, scope: !2424)
!2424 = distinct !DILexicalBlock(scope: !2413, file: !77, line: 2514, column: 9)
!2425 = !DILocation(line: 2515, column: 8, scope: !2424)
!2426 = !DILocation(line: 2517, column: 7, scope: !2427)
!2427 = distinct !DILexicalBlock(scope: !2424, file: !77, line: 2517, column: 7)
!2428 = !DILocation(line: 2517, column: 12, scope: !2427)
!2429 = !DILocation(line: 2517, column: 7, scope: !2424)
!2430 = !DILocation(line: 2519, column: 11, scope: !2431)
!2431 = distinct !DILexicalBlock(scope: !2427, file: !77, line: 2517, column: 26)
!2432 = !DILocation(line: 2519, column: 9, scope: !2431)
!2433 = !DILocation(line: 2521, column: 8, scope: !2434)
!2434 = distinct !DILexicalBlock(scope: !2431, file: !77, line: 2521, column: 8)
!2435 = !DILocation(line: 2521, column: 13, scope: !2434)
!2436 = !DILocation(line: 2521, column: 8, scope: !2431)
!2437 = !DILocation(line: 2522, column: 12, scope: !2434)
!2438 = !DILocation(line: 2522, column: 10, scope: !2434)
!2439 = !DILocation(line: 2522, column: 5, scope: !2434)
!2440 = !DILocation(line: 2523, column: 3, scope: !2431)
!2441 = !DILocation(line: 2526, column: 2, scope: !2398)
!2442 = distinct !DISubprogram(name: "set_fifo_full_int", scope: !77, file: !77, line: 4763, type: !2399, isLocal: true, isDefinition: true, scopeLine: 4764, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!2443 = !DILocalVariable(name: "int_config", arg: 1, scope: !2442, file: !77, line: 4763, type: !2401)
!2444 = !DILocation(line: 4763, column: 64, scope: !2442)
!2445 = !DILocalVariable(name: "dev", arg: 2, scope: !2442, file: !77, line: 4763, type: !252)
!2446 = !DILocation(line: 4763, column: 101, scope: !2442)
!2447 = !DILocalVariable(name: "rslt", scope: !2442, file: !77, line: 4765, type: !62)
!2448 = !DILocation(line: 4765, column: 9, scope: !2442)
!2449 = !DILocation(line: 4764, column: 3, scope: !2442)
!2450 = !DILocation(line: 4768, column: 11, scope: !2451)
!2451 = distinct !DILexicalBlock(scope: !2442, file: !77, line: 4768, column: 6)
!2452 = !DILocation(line: 4768, column: 20, scope: !2451)
!2453 = !DILocation(line: 4768, column: 29, scope: !2454)
!2454 = !DILexicalBlockFile(scope: !2451, file: !77, discriminator: 1)
!2455 = !DILocation(line: 4768, column: 38, scope: !2454)
!2456 = !DILocation(line: 4768, column: 6, scope: !2457)
!2457 = !DILexicalBlockFile(scope: !2442, file: !77, discriminator: 1)
!2458 = !DILocation(line: 4769, column: 8, scope: !2459)
!2459 = distinct !DILexicalBlock(scope: !2451, file: !77, line: 4768, column: 48)
!2460 = !DILocation(line: 4770, column: 2, scope: !2459)
!2461 = !DILocation(line: 4772, column: 10, scope: !2462)
!2462 = distinct !DILexicalBlock(scope: !2451, file: !77, line: 4770, column: 9)
!2463 = !DILocation(line: 4772, column: 8, scope: !2462)
!2464 = !DILocation(line: 4773, column: 7, scope: !2465)
!2465 = distinct !DILexicalBlock(scope: !2462, file: !77, line: 4773, column: 7)
!2466 = !DILocation(line: 4773, column: 12, scope: !2465)
!2467 = !DILocation(line: 4773, column: 7, scope: !2462)
!2468 = !DILocation(line: 4775, column: 11, scope: !2469)
!2469 = distinct !DILexicalBlock(scope: !2465, file: !77, line: 4773, column: 26)
!2470 = !DILocation(line: 4775, column: 9, scope: !2469)
!2471 = !DILocation(line: 4776, column: 8, scope: !2472)
!2472 = distinct !DILexicalBlock(scope: !2469, file: !77, line: 4776, column: 8)
!2473 = !DILocation(line: 4776, column: 13, scope: !2472)
!2474 = !DILocation(line: 4776, column: 8, scope: !2469)
!2475 = !DILocation(line: 4777, column: 12, scope: !2472)
!2476 = !DILocation(line: 4777, column: 10, scope: !2472)
!2477 = !DILocation(line: 4777, column: 5, scope: !2472)
!2478 = !DILocation(line: 4778, column: 3, scope: !2469)
!2479 = !DILocation(line: 4780, column: 2, scope: !2442)
!2480 = distinct !DISubprogram(name: "set_fifo_watermark_int", scope: !77, file: !77, line: 4807, type: !2399, isLocal: true, isDefinition: true, scopeLine: 4808, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!2481 = !DILocalVariable(name: "int_config", arg: 1, scope: !2480, file: !77, line: 4807, type: !2401)
!2482 = !DILocation(line: 4807, column: 69, scope: !2480)
!2483 = !DILocalVariable(name: "dev", arg: 2, scope: !2480, file: !77, line: 4807, type: !252)
!2484 = !DILocation(line: 4807, column: 106, scope: !2480)
!2485 = !DILocalVariable(name: "rslt", scope: !2480, file: !77, line: 4809, type: !62)
!2486 = !DILocation(line: 4809, column: 9, scope: !2480)
!2487 = !DILocation(line: 4808, column: 3, scope: !2480)
!2488 = !DILocation(line: 4811, column: 11, scope: !2489)
!2489 = distinct !DILexicalBlock(scope: !2480, file: !77, line: 4811, column: 6)
!2490 = !DILocation(line: 4811, column: 20, scope: !2489)
!2491 = !DILocation(line: 4811, column: 29, scope: !2492)
!2492 = !DILexicalBlockFile(scope: !2489, file: !77, discriminator: 1)
!2493 = !DILocation(line: 4811, column: 38, scope: !2492)
!2494 = !DILocation(line: 4811, column: 6, scope: !2495)
!2495 = !DILexicalBlockFile(scope: !2480, file: !77, discriminator: 1)
!2496 = !DILocation(line: 4812, column: 8, scope: !2497)
!2497 = distinct !DILexicalBlock(scope: !2489, file: !77, line: 4811, column: 48)
!2498 = !DILocation(line: 4813, column: 2, scope: !2497)
!2499 = !DILocation(line: 4815, column: 10, scope: !2500)
!2500 = distinct !DILexicalBlock(scope: !2489, file: !77, line: 4813, column: 9)
!2501 = !DILocation(line: 4815, column: 8, scope: !2500)
!2502 = !DILocation(line: 4816, column: 7, scope: !2503)
!2503 = distinct !DILexicalBlock(scope: !2500, file: !77, line: 4816, column: 7)
!2504 = !DILocation(line: 4816, column: 12, scope: !2503)
!2505 = !DILocation(line: 4816, column: 7, scope: !2500)
!2506 = !DILocation(line: 4818, column: 11, scope: !2507)
!2507 = distinct !DILexicalBlock(scope: !2503, file: !77, line: 4816, column: 26)
!2508 = !DILocation(line: 4818, column: 9, scope: !2507)
!2509 = !DILocation(line: 4819, column: 8, scope: !2510)
!2510 = distinct !DILexicalBlock(scope: !2507, file: !77, line: 4819, column: 8)
!2511 = !DILocation(line: 4819, column: 13, scope: !2510)
!2512 = !DILocation(line: 4819, column: 8, scope: !2507)
!2513 = !DILocation(line: 4820, column: 12, scope: !2510)
!2514 = !DILocation(line: 4820, column: 10, scope: !2510)
!2515 = !DILocation(line: 4820, column: 5, scope: !2510)
!2516 = !DILocation(line: 4821, column: 3, scope: !2507)
!2517 = !DILocation(line: 4824, column: 2, scope: !2480)
!2518 = distinct !DISubprogram(name: "set_intr_pin_config", scope: !77, file: !77, line: 2770, type: !2399, isLocal: true, isDefinition: true, scopeLine: 2771, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!2519 = !DILocalVariable(name: "int_config", arg: 1, scope: !2518, file: !77, line: 2770, type: !2401)
!2520 = !DILocation(line: 2770, column: 66, scope: !2518)
!2521 = !DILocalVariable(name: "dev", arg: 2, scope: !2518, file: !77, line: 2770, type: !252)
!2522 = !DILocation(line: 2770, column: 103, scope: !2518)
!2523 = !DILocalVariable(name: "rslt", scope: !2518, file: !77, line: 2772, type: !62)
!2524 = !DILocation(line: 2772, column: 9, scope: !2518)
!2525 = !DILocation(line: 2771, column: 3, scope: !2518)
!2526 = !DILocation(line: 2775, column: 9, scope: !2518)
!2527 = !DILocation(line: 2775, column: 7, scope: !2518)
!2528 = !DILocation(line: 2776, column: 6, scope: !2529)
!2529 = distinct !DILexicalBlock(scope: !2518, file: !77, line: 2776, column: 6)
!2530 = !DILocation(line: 2776, column: 11, scope: !2529)
!2531 = !DILocation(line: 2776, column: 6, scope: !2518)
!2532 = !DILocation(line: 2777, column: 10, scope: !2529)
!2533 = !DILocation(line: 2777, column: 8, scope: !2529)
!2534 = !DILocation(line: 2777, column: 3, scope: !2529)
!2535 = !DILocation(line: 2779, column: 2, scope: !2518)
!2536 = distinct !DISubprogram(name: "config_int_out_ctrl", scope: !77, file: !77, line: 4483, type: !2399, isLocal: true, isDefinition: true, scopeLine: 4484, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!2537 = !DILocalVariable(name: "int_config", arg: 1, scope: !2536, file: !77, line: 4483, type: !2401)
!2538 = !DILocation(line: 4483, column: 66, scope: !2536)
!2539 = !DILocalVariable(name: "dev", arg: 2, scope: !2536, file: !77, line: 4483, type: !252)
!2540 = !DILocation(line: 4483, column: 103, scope: !2536)
!2541 = !DILocalVariable(name: "rslt", scope: !2536, file: !77, line: 4485, type: !62)
!2542 = !DILocation(line: 4485, column: 9, scope: !2536)
!2543 = !DILocalVariable(name: "temp", scope: !2536, file: !77, line: 4486, type: !17)
!2544 = !DILocation(line: 4486, column: 10, scope: !2536)
!2545 = !DILocalVariable(name: "intr_pin_sett", scope: !2546, file: !77, line: 4495, type: !2548)
!2546 = distinct !DILexicalBlock(scope: !2547, file: !77, line: 4493, column: 25)
!2547 = distinct !DILexicalBlock(scope: !2536, file: !77, line: 4493, column: 6)
!2548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2549, size: 64)
!2549 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1814)
!2550 = !DILocation(line: 4495, column: 38, scope: !2546)
!2551 = !DILocation(line: 4484, column: 3, scope: !2536)
!2552 = !DILocalVariable(name: "data", scope: !2536, file: !77, line: 4487, type: !17)
!2553 = !DILocation(line: 4487, column: 10, scope: !2536)
!2554 = !DILocation(line: 4491, column: 9, scope: !2536)
!2555 = !DILocation(line: 4491, column: 7, scope: !2536)
!2556 = !DILocation(line: 4493, column: 6, scope: !2547)
!2557 = !DILocation(line: 4493, column: 11, scope: !2547)
!2558 = !DILocation(line: 4493, column: 6, scope: !2536)
!2559 = !DILocation(line: 4495, column: 68, scope: !2546)
!2560 = !DILocation(line: 4498, column: 19, scope: !2561)
!2561 = distinct !DILexicalBlock(scope: !2546, file: !77, line: 4498, column: 7)
!2562 = !DILocation(line: 4498, column: 31, scope: !2561)
!2563 = !DILocation(line: 4498, column: 7, scope: !2546)
!2564 = !DILocation(line: 4501, column: 11, scope: !2565)
!2565 = distinct !DILexicalBlock(scope: !2561, file: !77, line: 4498, column: 56)
!2566 = !DILocation(line: 4501, column: 16, scope: !2565)
!2567 = !DILocation(line: 4501, column: 9, scope: !2565)
!2568 = !DILocation(line: 4502, column: 11, scope: !2565)
!2569 = !DILocation(line: 4502, column: 35, scope: !2565)
!2570 = !DILocation(line: 4502, column: 20, scope: !2565)
!2571 = !DILocation(line: 4502, column: 45, scope: !2565)
!2572 = !DILocation(line: 4502, column: 51, scope: !2565)
!2573 = !DILocation(line: 4502, column: 16, scope: !2565)
!2574 = !DILocation(line: 4502, column: 9, scope: !2565)
!2575 = !DILocation(line: 4505, column: 11, scope: !2565)
!2576 = !DILocation(line: 4505, column: 16, scope: !2565)
!2577 = !DILocation(line: 4505, column: 9, scope: !2565)
!2578 = !DILocation(line: 4506, column: 11, scope: !2565)
!2579 = !DILocation(line: 4506, column: 35, scope: !2565)
!2580 = !DILocation(line: 4506, column: 20, scope: !2565)
!2581 = !DILocation(line: 4506, column: 47, scope: !2565)
!2582 = !DILocation(line: 4506, column: 53, scope: !2565)
!2583 = !DILocation(line: 4506, column: 16, scope: !2565)
!2584 = !DILocation(line: 4506, column: 9, scope: !2565)
!2585 = !DILocation(line: 4509, column: 11, scope: !2565)
!2586 = !DILocation(line: 4509, column: 16, scope: !2565)
!2587 = !DILocation(line: 4509, column: 9, scope: !2565)
!2588 = !DILocation(line: 4510, column: 11, scope: !2565)
!2589 = !DILocation(line: 4510, column: 35, scope: !2565)
!2590 = !DILocation(line: 4510, column: 20, scope: !2565)
!2591 = !DILocation(line: 4510, column: 47, scope: !2565)
!2592 = !DILocation(line: 4510, column: 53, scope: !2565)
!2593 = !DILocation(line: 4510, column: 16, scope: !2565)
!2594 = !DILocation(line: 4510, column: 9, scope: !2565)
!2595 = !DILocation(line: 4513, column: 11, scope: !2565)
!2596 = !DILocation(line: 4513, column: 16, scope: !2565)
!2597 = !DILocation(line: 4513, column: 9, scope: !2565)
!2598 = !DILocation(line: 4514, column: 11, scope: !2565)
!2599 = !DILocation(line: 4514, column: 35, scope: !2565)
!2600 = !DILocation(line: 4514, column: 19, scope: !2565)
!2601 = !DILocation(line: 4514, column: 46, scope: !2565)
!2602 = !DILocation(line: 4514, column: 16, scope: !2565)
!2603 = !DILocation(line: 4514, column: 9, scope: !2565)
!2604 = !DILocation(line: 4516, column: 3, scope: !2565)
!2605 = !DILocation(line: 4519, column: 11, scope: !2606)
!2606 = distinct !DILexicalBlock(scope: !2561, file: !77, line: 4516, column: 10)
!2607 = !DILocation(line: 4519, column: 16, scope: !2606)
!2608 = !DILocation(line: 4519, column: 9, scope: !2606)
!2609 = !DILocation(line: 4520, column: 11, scope: !2606)
!2610 = !DILocation(line: 4520, column: 35, scope: !2606)
!2611 = !DILocation(line: 4520, column: 20, scope: !2606)
!2612 = !DILocation(line: 4520, column: 45, scope: !2606)
!2613 = !DILocation(line: 4520, column: 51, scope: !2606)
!2614 = !DILocation(line: 4520, column: 16, scope: !2606)
!2615 = !DILocation(line: 4520, column: 9, scope: !2606)
!2616 = !DILocation(line: 4523, column: 11, scope: !2606)
!2617 = !DILocation(line: 4523, column: 16, scope: !2606)
!2618 = !DILocation(line: 4523, column: 9, scope: !2606)
!2619 = !DILocation(line: 4524, column: 11, scope: !2606)
!2620 = !DILocation(line: 4524, column: 35, scope: !2606)
!2621 = !DILocation(line: 4524, column: 20, scope: !2606)
!2622 = !DILocation(line: 4524, column: 47, scope: !2606)
!2623 = !DILocation(line: 4524, column: 53, scope: !2606)
!2624 = !DILocation(line: 4524, column: 16, scope: !2606)
!2625 = !DILocation(line: 4524, column: 9, scope: !2606)
!2626 = !DILocation(line: 4527, column: 11, scope: !2606)
!2627 = !DILocation(line: 4527, column: 16, scope: !2606)
!2628 = !DILocation(line: 4527, column: 9, scope: !2606)
!2629 = !DILocation(line: 4528, column: 11, scope: !2606)
!2630 = !DILocation(line: 4528, column: 35, scope: !2606)
!2631 = !DILocation(line: 4528, column: 20, scope: !2606)
!2632 = !DILocation(line: 4528, column: 47, scope: !2606)
!2633 = !DILocation(line: 4528, column: 53, scope: !2606)
!2634 = !DILocation(line: 4528, column: 16, scope: !2606)
!2635 = !DILocation(line: 4528, column: 9, scope: !2606)
!2636 = !DILocation(line: 4531, column: 11, scope: !2606)
!2637 = !DILocation(line: 4531, column: 16, scope: !2606)
!2638 = !DILocation(line: 4531, column: 9, scope: !2606)
!2639 = !DILocation(line: 4532, column: 11, scope: !2606)
!2640 = !DILocation(line: 4532, column: 35, scope: !2606)
!2641 = !DILocation(line: 4532, column: 20, scope: !2606)
!2642 = !DILocation(line: 4532, column: 45, scope: !2606)
!2643 = !DILocation(line: 4532, column: 51, scope: !2606)
!2644 = !DILocation(line: 4532, column: 16, scope: !2606)
!2645 = !DILocation(line: 4532, column: 9, scope: !2606)
!2646 = !DILocation(line: 4535, column: 10, scope: !2546)
!2647 = !DILocation(line: 4535, column: 8, scope: !2546)
!2648 = !DILocation(line: 4536, column: 2, scope: !2546)
!2649 = !DILocation(line: 4538, column: 2, scope: !2536)
!2650 = distinct !DISubprogram(name: "config_int_latch", scope: !77, file: !77, line: 4544, type: !2399, isLocal: true, isDefinition: true, scopeLine: 4545, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!2651 = !DILocalVariable(name: "int_config", arg: 1, scope: !2650, file: !77, line: 4544, type: !2401)
!2652 = !DILocation(line: 4544, column: 63, scope: !2650)
!2653 = !DILocalVariable(name: "dev", arg: 2, scope: !2650, file: !77, line: 4544, type: !252)
!2654 = !DILocation(line: 4544, column: 100, scope: !2650)
!2655 = !DILocalVariable(name: "rslt", scope: !2650, file: !77, line: 4546, type: !62)
!2656 = !DILocation(line: 4546, column: 9, scope: !2650)
!2657 = !DILocalVariable(name: "temp", scope: !2650, file: !77, line: 4547, type: !17)
!2658 = !DILocation(line: 4547, column: 10, scope: !2650)
!2659 = !DILocalVariable(name: "intr_pin_sett", scope: !2660, file: !77, line: 4556, type: !2548)
!2660 = distinct !DILexicalBlock(scope: !2661, file: !77, line: 4554, column: 25)
!2661 = distinct !DILexicalBlock(scope: !2650, file: !77, line: 4554, column: 6)
!2662 = !DILocation(line: 4556, column: 38, scope: !2660)
!2663 = !DILocation(line: 4545, column: 3, scope: !2650)
!2664 = !DILocalVariable(name: "data", scope: !2650, file: !77, line: 4548, type: !17)
!2665 = !DILocation(line: 4548, column: 10, scope: !2650)
!2666 = !DILocation(line: 4552, column: 9, scope: !2650)
!2667 = !DILocation(line: 4552, column: 7, scope: !2650)
!2668 = !DILocation(line: 4554, column: 6, scope: !2661)
!2669 = !DILocation(line: 4554, column: 11, scope: !2661)
!2670 = !DILocation(line: 4554, column: 6, scope: !2650)
!2671 = !DILocation(line: 4556, column: 68, scope: !2660)
!2672 = !DILocation(line: 4558, column: 19, scope: !2673)
!2673 = distinct !DILexicalBlock(scope: !2660, file: !77, line: 4558, column: 7)
!2674 = !DILocation(line: 4558, column: 31, scope: !2673)
!2675 = !DILocation(line: 4558, column: 7, scope: !2660)
!2676 = !DILocation(line: 4561, column: 11, scope: !2677)
!2677 = distinct !DILexicalBlock(scope: !2673, file: !77, line: 4558, column: 56)
!2678 = !DILocation(line: 4561, column: 16, scope: !2677)
!2679 = !DILocation(line: 4561, column: 9, scope: !2677)
!2680 = !DILocation(line: 4562, column: 11, scope: !2677)
!2681 = !DILocation(line: 4562, column: 35, scope: !2677)
!2682 = !DILocation(line: 4562, column: 20, scope: !2677)
!2683 = !DILocation(line: 4562, column: 44, scope: !2677)
!2684 = !DILocation(line: 4562, column: 50, scope: !2677)
!2685 = !DILocation(line: 4562, column: 16, scope: !2677)
!2686 = !DILocation(line: 4562, column: 9, scope: !2677)
!2687 = !DILocation(line: 4563, column: 3, scope: !2677)
!2688 = !DILocation(line: 4566, column: 11, scope: !2689)
!2689 = distinct !DILexicalBlock(scope: !2673, file: !77, line: 4563, column: 10)
!2690 = !DILocation(line: 4566, column: 16, scope: !2689)
!2691 = !DILocation(line: 4566, column: 9, scope: !2689)
!2692 = !DILocation(line: 4567, column: 11, scope: !2689)
!2693 = !DILocation(line: 4567, column: 35, scope: !2689)
!2694 = !DILocation(line: 4567, column: 20, scope: !2689)
!2695 = !DILocation(line: 4567, column: 44, scope: !2689)
!2696 = !DILocation(line: 4567, column: 50, scope: !2689)
!2697 = !DILocation(line: 4567, column: 16, scope: !2689)
!2698 = !DILocation(line: 4567, column: 9, scope: !2689)
!2699 = !DILocation(line: 4573, column: 10, scope: !2660)
!2700 = !DILocation(line: 4573, column: 15, scope: !2660)
!2701 = !DILocation(line: 4573, column: 8, scope: !2660)
!2702 = !DILocation(line: 4574, column: 10, scope: !2660)
!2703 = !DILocation(line: 4574, column: 33, scope: !2660)
!2704 = !DILocation(line: 4574, column: 18, scope: !2660)
!2705 = !DILocation(line: 4574, column: 43, scope: !2660)
!2706 = !DILocation(line: 4574, column: 15, scope: !2660)
!2707 = !DILocation(line: 4574, column: 8, scope: !2660)
!2708 = !DILocation(line: 4578, column: 10, scope: !2660)
!2709 = !DILocation(line: 4578, column: 8, scope: !2660)
!2710 = !DILocation(line: 4579, column: 2, scope: !2660)
!2711 = !DILocation(line: 4580, column: 2, scope: !2650)
!2712 = distinct !DISubprogram(name: "enable_fifo_wtm_int", scope: !77, file: !77, line: 4830, type: !2399, isLocal: true, isDefinition: true, scopeLine: 4831, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!2713 = !DILocalVariable(name: "int_config", arg: 1, scope: !2712, file: !77, line: 4830, type: !2401)
!2714 = !DILocation(line: 4830, column: 66, scope: !2712)
!2715 = !DILocalVariable(name: "dev", arg: 2, scope: !2712, file: !77, line: 4830, type: !252)
!2716 = !DILocation(line: 4830, column: 103, scope: !2712)
!2717 = !DILocalVariable(name: "rslt", scope: !2712, file: !77, line: 4832, type: !62)
!2718 = !DILocation(line: 4832, column: 9, scope: !2712)
!2719 = !DILocation(line: 4831, column: 3, scope: !2712)
!2720 = !DILocalVariable(name: "data", scope: !2712, file: !77, line: 4833, type: !17)
!2721 = !DILocation(line: 4833, column: 10, scope: !2712)
!2722 = !DILocation(line: 4835, column: 9, scope: !2712)
!2723 = !DILocation(line: 4835, column: 7, scope: !2712)
!2724 = !DILocation(line: 4837, column: 6, scope: !2725)
!2725 = distinct !DILexicalBlock(scope: !2712, file: !77, line: 4837, column: 6)
!2726 = !DILocation(line: 4837, column: 11, scope: !2725)
!2727 = !DILocation(line: 4837, column: 6, scope: !2712)
!2728 = !DILocation(line: 4838, column: 10, scope: !2729)
!2729 = distinct !DILexicalBlock(scope: !2725, file: !77, line: 4837, column: 25)
!2730 = !DILocation(line: 4838, column: 8, scope: !2729)
!2731 = !DILocation(line: 4840, column: 10, scope: !2729)
!2732 = !DILocation(line: 4840, column: 8, scope: !2729)
!2733 = !DILocation(line: 4841, column: 2, scope: !2729)
!2734 = !DILocation(line: 4843, column: 2, scope: !2712)
!2735 = distinct !DISubprogram(name: "map_hardware_interrupt", scope: !77, file: !77, line: 3490, type: !2399, isLocal: true, isDefinition: true, scopeLine: 3491, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!2736 = !DILocalVariable(name: "int_config", arg: 1, scope: !2735, file: !77, line: 3490, type: !2401)
!2737 = !DILocation(line: 3490, column: 69, scope: !2735)
!2738 = !DILocalVariable(name: "dev", arg: 2, scope: !2735, file: !77, line: 3490, type: !252)
!2739 = !DILocation(line: 3490, column: 106, scope: !2735)
!2740 = !DILocalVariable(name: "rslt", scope: !2735, file: !77, line: 3492, type: !62)
!2741 = !DILocation(line: 3492, column: 9, scope: !2735)
!2742 = !DILocalVariable(name: "temp", scope: !2735, file: !77, line: 3494, type: !17)
!2743 = !DILocation(line: 3494, column: 10, scope: !2735)
!2744 = !DILocation(line: 3491, column: 3, scope: !2735)
!2745 = !DILocalVariable(name: "data", scope: !2735, file: !77, line: 3493, type: !17)
!2746 = !DILocation(line: 3493, column: 10, scope: !2735)
!2747 = !DILocation(line: 3496, column: 9, scope: !2735)
!2748 = !DILocation(line: 3496, column: 7, scope: !2735)
!2749 = !DILocation(line: 3498, column: 6, scope: !2750)
!2750 = distinct !DILexicalBlock(scope: !2735, file: !77, line: 3498, column: 6)
!2751 = !DILocation(line: 3498, column: 11, scope: !2750)
!2752 = !DILocation(line: 3498, column: 6, scope: !2735)
!2753 = !DILocation(line: 3499, column: 10, scope: !2754)
!2754 = distinct !DILexicalBlock(scope: !2750, file: !77, line: 3498, column: 25)
!2755 = !DILocation(line: 3499, column: 52, scope: !2754)
!2756 = !DILocation(line: 3499, column: 18, scope: !2754)
!2757 = !DILocation(line: 3499, column: 17, scope: !2754)
!2758 = !DILocation(line: 3499, column: 15, scope: !2754)
!2759 = !DILocation(line: 3499, column: 8, scope: !2754)
!2760 = !DILocation(line: 3500, column: 10, scope: !2754)
!2761 = !DILocation(line: 3500, column: 63, scope: !2754)
!2762 = !DILocation(line: 3500, column: 29, scope: !2754)
!2763 = !DILocation(line: 3500, column: 73, scope: !2754)
!2764 = !DILocation(line: 3500, column: 19, scope: !2754)
!2765 = !DILocation(line: 3500, column: 18, scope: !2754)
!2766 = !DILocation(line: 3500, column: 17, scope: !2754)
!2767 = !DILocation(line: 3500, column: 15, scope: !2754)
!2768 = !DILocation(line: 3500, column: 8, scope: !2754)
!2769 = !DILocation(line: 3501, column: 23, scope: !2754)
!2770 = !DILocation(line: 3501, column: 3, scope: !2754)
!2771 = !DILocation(line: 3503, column: 9, scope: !2772)
!2772 = distinct !DILexicalBlock(scope: !2754, file: !77, line: 3501, column: 36)
!2773 = !DILocation(line: 3504, column: 4, scope: !2772)
!2774 = !DILocation(line: 3506, column: 11, scope: !2772)
!2775 = !DILocation(line: 3506, column: 63, scope: !2772)
!2776 = !DILocation(line: 3506, column: 29, scope: !2772)
!2777 = !DILocation(line: 3506, column: 28, scope: !2772)
!2778 = !DILocation(line: 3506, column: 74, scope: !2772)
!2779 = !DILocation(line: 3506, column: 18, scope: !2772)
!2780 = !DILocation(line: 3506, column: 16, scope: !2772)
!2781 = !DILocation(line: 3506, column: 9, scope: !2772)
!2782 = !DILocation(line: 3507, column: 4, scope: !2772)
!2783 = !DILocation(line: 3509, column: 11, scope: !2772)
!2784 = !DILocation(line: 3509, column: 52, scope: !2772)
!2785 = !DILocation(line: 3509, column: 18, scope: !2772)
!2786 = !DILocation(line: 3509, column: 16, scope: !2772)
!2787 = !DILocation(line: 3509, column: 9, scope: !2772)
!2788 = !DILocation(line: 3510, column: 4, scope: !2772)
!2789 = !DILocation(line: 3512, column: 11, scope: !2772)
!2790 = !DILocation(line: 3512, column: 52, scope: !2772)
!2791 = !DILocation(line: 3512, column: 18, scope: !2772)
!2792 = !DILocation(line: 3512, column: 16, scope: !2772)
!2793 = !DILocation(line: 3512, column: 9, scope: !2772)
!2794 = !DILocation(line: 3513, column: 11, scope: !2772)
!2795 = !DILocation(line: 3513, column: 63, scope: !2772)
!2796 = !DILocation(line: 3513, column: 29, scope: !2772)
!2797 = !DILocation(line: 3513, column: 28, scope: !2772)
!2798 = !DILocation(line: 3513, column: 74, scope: !2772)
!2799 = !DILocation(line: 3513, column: 18, scope: !2772)
!2800 = !DILocation(line: 3513, column: 16, scope: !2772)
!2801 = !DILocation(line: 3513, column: 9, scope: !2772)
!2802 = !DILocation(line: 3514, column: 4, scope: !2772)
!2803 = !DILocation(line: 3516, column: 9, scope: !2772)
!2804 = !DILocation(line: 3517, column: 3, scope: !2772)
!2805 = !DILocation(line: 3518, column: 7, scope: !2806)
!2806 = distinct !DILexicalBlock(scope: !2754, file: !77, line: 3518, column: 7)
!2807 = !DILocation(line: 3518, column: 12, scope: !2806)
!2808 = !DILocation(line: 3518, column: 7, scope: !2754)
!2809 = !DILocation(line: 3519, column: 11, scope: !2806)
!2810 = !DILocation(line: 3519, column: 9, scope: !2806)
!2811 = !DILocation(line: 3519, column: 4, scope: !2806)
!2812 = !DILocation(line: 3520, column: 2, scope: !2754)
!2813 = !DILocation(line: 3522, column: 2, scope: !2735)
!2814 = distinct !DISubprogram(name: "enable_fifo_full_int", scope: !77, file: !77, line: 4786, type: !2399, isLocal: true, isDefinition: true, scopeLine: 4787, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!2815 = !DILocalVariable(name: "int_config", arg: 1, scope: !2814, file: !77, line: 4786, type: !2401)
!2816 = !DILocation(line: 4786, column: 67, scope: !2814)
!2817 = !DILocalVariable(name: "dev", arg: 2, scope: !2814, file: !77, line: 4786, type: !252)
!2818 = !DILocation(line: 4786, column: 104, scope: !2814)
!2819 = !DILocalVariable(name: "rslt", scope: !2814, file: !77, line: 4788, type: !62)
!2820 = !DILocation(line: 4788, column: 9, scope: !2814)
!2821 = !DILocation(line: 4787, column: 3, scope: !2814)
!2822 = !DILocalVariable(name: "data", scope: !2814, file: !77, line: 4789, type: !17)
!2823 = !DILocation(line: 4789, column: 10, scope: !2814)
!2824 = !DILocation(line: 4791, column: 9, scope: !2814)
!2825 = !DILocation(line: 4791, column: 7, scope: !2814)
!2826 = !DILocation(line: 4793, column: 6, scope: !2827)
!2827 = distinct !DILexicalBlock(scope: !2814, file: !77, line: 4793, column: 6)
!2828 = !DILocation(line: 4793, column: 11, scope: !2827)
!2829 = !DILocation(line: 4793, column: 6, scope: !2814)
!2830 = !DILocation(line: 4794, column: 10, scope: !2831)
!2831 = distinct !DILexicalBlock(scope: !2827, file: !77, line: 4793, column: 25)
!2832 = !DILocation(line: 4794, column: 8, scope: !2831)
!2833 = !DILocation(line: 4796, column: 10, scope: !2831)
!2834 = !DILocation(line: 4796, column: 8, scope: !2831)
!2835 = !DILocation(line: 4797, column: 2, scope: !2831)
!2836 = !DILocation(line: 4799, column: 2, scope: !2814)
!2837 = distinct !DISubprogram(name: "enable_data_ready_int", scope: !77, file: !77, line: 3610, type: !412, isLocal: true, isDefinition: true, scopeLine: 3611, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!2838 = !DILocalVariable(name: "dev", arg: 1, scope: !2837, file: !77, line: 3610, type: !252)
!2839 = !DILocation(line: 3610, column: 62, scope: !2837)
!2840 = !DILocalVariable(name: "rslt", scope: !2837, file: !77, line: 3612, type: !62)
!2841 = !DILocation(line: 3612, column: 9, scope: !2837)
!2842 = !DILocalVariable(name: "temp", scope: !2837, file: !77, line: 3614, type: !17)
!2843 = !DILocation(line: 3614, column: 10, scope: !2837)
!2844 = !DILocation(line: 3611, column: 3, scope: !2837)
!2845 = !DILocalVariable(name: "data", scope: !2837, file: !77, line: 3613, type: !17)
!2846 = !DILocation(line: 3613, column: 10, scope: !2837)
!2847 = !DILocation(line: 3617, column: 9, scope: !2837)
!2848 = !DILocation(line: 3617, column: 7, scope: !2837)
!2849 = !DILocation(line: 3618, column: 6, scope: !2850)
!2850 = distinct !DILexicalBlock(scope: !2837, file: !77, line: 3618, column: 6)
!2851 = !DILocation(line: 3618, column: 11, scope: !2850)
!2852 = !DILocation(line: 3618, column: 6, scope: !2837)
!2853 = !DILocation(line: 3619, column: 10, scope: !2854)
!2854 = distinct !DILexicalBlock(scope: !2850, file: !77, line: 3618, column: 25)
!2855 = !DILocation(line: 3619, column: 15, scope: !2854)
!2856 = !DILocation(line: 3619, column: 8, scope: !2854)
!2857 = !DILocation(line: 3620, column: 10, scope: !2854)
!2858 = !DILocation(line: 3620, column: 15, scope: !2854)
!2859 = !DILocation(line: 3620, column: 8, scope: !2854)
!2860 = !DILocation(line: 3622, column: 10, scope: !2854)
!2861 = !DILocation(line: 3622, column: 8, scope: !2854)
!2862 = !DILocation(line: 3623, column: 2, scope: !2854)
!2863 = !DILocation(line: 3625, column: 2, scope: !2837)
!2864 = distinct !DISubprogram(name: "enable_high_g_int", scope: !77, file: !77, line: 4402, type: !2865, isLocal: true, isDefinition: true, scopeLine: 4403, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!2865 = !DISubroutineType(types: !2866)
!2866 = !{!62, !2867, !252}
!2867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2868, size: 64)
!2868 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1897)
!2869 = !DILocalVariable(name: "high_g_int_cfg", arg: 1, scope: !2864, file: !77, line: 4402, type: !2867)
!2870 = !DILocation(line: 4402, column: 73, scope: !2864)
!2871 = !DILocalVariable(name: "dev", arg: 2, scope: !2864, file: !77, line: 4402, type: !252)
!2872 = !DILocation(line: 4402, column: 114, scope: !2864)
!2873 = !DILocalVariable(name: "rslt", scope: !2864, file: !77, line: 4404, type: !62)
!2874 = !DILocation(line: 4404, column: 9, scope: !2864)
!2875 = !DILocalVariable(name: "temp", scope: !2864, file: !77, line: 4406, type: !17)
!2876 = !DILocation(line: 4406, column: 10, scope: !2864)
!2877 = !DILocation(line: 4403, column: 3, scope: !2864)
!2878 = !DILocalVariable(name: "data", scope: !2864, file: !77, line: 4405, type: !17)
!2879 = !DILocation(line: 4405, column: 10, scope: !2864)
!2880 = !DILocation(line: 4409, column: 9, scope: !2864)
!2881 = !DILocation(line: 4409, column: 7, scope: !2864)
!2882 = !DILocation(line: 4411, column: 6, scope: !2883)
!2883 = distinct !DILexicalBlock(scope: !2864, file: !77, line: 4411, column: 6)
!2884 = !DILocation(line: 4411, column: 11, scope: !2883)
!2885 = !DILocation(line: 4411, column: 6, scope: !2864)
!2886 = !DILocation(line: 4414, column: 10, scope: !2887)
!2887 = distinct !DILexicalBlock(scope: !2883, file: !77, line: 4411, column: 25)
!2888 = !DILocation(line: 4414, column: 15, scope: !2887)
!2889 = !DILocation(line: 4414, column: 8, scope: !2887)
!2890 = !DILocation(line: 4415, column: 10, scope: !2887)
!2891 = !DILocation(line: 4415, column: 34, scope: !2887)
!2892 = !DILocation(line: 4415, column: 18, scope: !2887)
!2893 = !DILocation(line: 4415, column: 43, scope: !2887)
!2894 = !DILocation(line: 4415, column: 15, scope: !2887)
!2895 = !DILocation(line: 4415, column: 8, scope: !2887)
!2896 = !DILocation(line: 4418, column: 10, scope: !2887)
!2897 = !DILocation(line: 4418, column: 15, scope: !2887)
!2898 = !DILocation(line: 4418, column: 8, scope: !2887)
!2899 = !DILocation(line: 4419, column: 10, scope: !2887)
!2900 = !DILocation(line: 4419, column: 35, scope: !2887)
!2901 = !DILocation(line: 4419, column: 19, scope: !2887)
!2902 = !DILocation(line: 4419, column: 44, scope: !2887)
!2903 = !DILocation(line: 4419, column: 50, scope: !2887)
!2904 = !DILocation(line: 4419, column: 15, scope: !2887)
!2905 = !DILocation(line: 4419, column: 8, scope: !2887)
!2906 = !DILocation(line: 4422, column: 10, scope: !2887)
!2907 = !DILocation(line: 4422, column: 15, scope: !2887)
!2908 = !DILocation(line: 4422, column: 8, scope: !2887)
!2909 = !DILocation(line: 4423, column: 10, scope: !2887)
!2910 = !DILocation(line: 4423, column: 35, scope: !2887)
!2911 = !DILocation(line: 4423, column: 19, scope: !2887)
!2912 = !DILocation(line: 4423, column: 44, scope: !2887)
!2913 = !DILocation(line: 4423, column: 50, scope: !2887)
!2914 = !DILocation(line: 4423, column: 15, scope: !2887)
!2915 = !DILocation(line: 4423, column: 8, scope: !2887)
!2916 = !DILocation(line: 4426, column: 10, scope: !2887)
!2917 = !DILocation(line: 4426, column: 8, scope: !2887)
!2918 = !DILocation(line: 4427, column: 2, scope: !2887)
!2919 = !DILocation(line: 4429, column: 2, scope: !2864)
!2920 = distinct !DISubprogram(name: "map_feature_interrupt", scope: !77, file: !77, line: 3447, type: !2399, isLocal: true, isDefinition: true, scopeLine: 3448, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!2921 = !DILocalVariable(name: "int_config", arg: 1, scope: !2920, file: !77, line: 3447, type: !2401)
!2922 = !DILocation(line: 3447, column: 68, scope: !2920)
!2923 = !DILocalVariable(name: "dev", arg: 2, scope: !2920, file: !77, line: 3447, type: !252)
!2924 = !DILocation(line: 3447, column: 105, scope: !2920)
!2925 = !DILocalVariable(name: "rslt", scope: !2920, file: !77, line: 3449, type: !62)
!2926 = !DILocation(line: 3449, column: 9, scope: !2920)
!2927 = !DILocation(line: 3448, column: 3, scope: !2920)
!2928 = !DILocalVariable(name: "data", scope: !2920, file: !77, line: 3450, type: !2929)
!2929 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 24, elements: !2930)
!2930 = !{!2931}
!2931 = !DISubrange(count: 3)
!2932 = !DILocation(line: 3450, column: 10, scope: !2920)
!2933 = !DILocalVariable(name: "temp", scope: !2920, file: !77, line: 3451, type: !2929)
!2934 = !DILocation(line: 3451, column: 10, scope: !2920)
!2935 = !DILocation(line: 3453, column: 48, scope: !2920)
!2936 = !DILocation(line: 3453, column: 9, scope: !2920)
!2937 = !DILocation(line: 3453, column: 7, scope: !2920)
!2938 = !DILocation(line: 3455, column: 6, scope: !2939)
!2939 = distinct !DILexicalBlock(scope: !2920, file: !77, line: 3455, column: 6)
!2940 = !DILocation(line: 3455, column: 11, scope: !2939)
!2941 = !DILocation(line: 3455, column: 6, scope: !2920)
!2942 = !DILocation(line: 3456, column: 13, scope: !2943)
!2943 = distinct !DILexicalBlock(scope: !2939, file: !77, line: 3455, column: 25)
!2944 = !DILocation(line: 3456, column: 58, scope: !2943)
!2945 = !DILocation(line: 3456, column: 24, scope: !2943)
!2946 = !DILocation(line: 3456, column: 23, scope: !2943)
!2947 = !DILocation(line: 3456, column: 21, scope: !2943)
!2948 = !DILocation(line: 3456, column: 3, scope: !2943)
!2949 = !DILocation(line: 3456, column: 11, scope: !2943)
!2950 = !DILocation(line: 3457, column: 13, scope: !2943)
!2951 = !DILocation(line: 3457, column: 58, scope: !2943)
!2952 = !DILocation(line: 3457, column: 24, scope: !2943)
!2953 = !DILocation(line: 3457, column: 23, scope: !2943)
!2954 = !DILocation(line: 3457, column: 21, scope: !2943)
!2955 = !DILocation(line: 3457, column: 3, scope: !2943)
!2956 = !DILocation(line: 3457, column: 11, scope: !2943)
!2957 = !DILocation(line: 3459, column: 23, scope: !2943)
!2958 = !DILocation(line: 3459, column: 3, scope: !2943)
!2959 = !DILocation(line: 3461, column: 14, scope: !2960)
!2960 = distinct !DILexicalBlock(scope: !2943, file: !77, line: 3459, column: 36)
!2961 = !DILocation(line: 3461, column: 4, scope: !2960)
!2962 = !DILocation(line: 3461, column: 12, scope: !2960)
!2963 = !DILocation(line: 3462, column: 14, scope: !2960)
!2964 = !DILocation(line: 3462, column: 4, scope: !2960)
!2965 = !DILocation(line: 3462, column: 12, scope: !2960)
!2966 = !DILocation(line: 3463, column: 4, scope: !2960)
!2967 = !DILocation(line: 3465, column: 14, scope: !2960)
!2968 = !DILocation(line: 3465, column: 58, scope: !2960)
!2969 = !DILocation(line: 3465, column: 24, scope: !2960)
!2970 = !DILocation(line: 3465, column: 22, scope: !2960)
!2971 = !DILocation(line: 3465, column: 4, scope: !2960)
!2972 = !DILocation(line: 3465, column: 12, scope: !2960)
!2973 = !DILocation(line: 3466, column: 14, scope: !2960)
!2974 = !DILocation(line: 3466, column: 4, scope: !2960)
!2975 = !DILocation(line: 3466, column: 12, scope: !2960)
!2976 = !DILocation(line: 3467, column: 4, scope: !2960)
!2977 = !DILocation(line: 3469, column: 14, scope: !2960)
!2978 = !DILocation(line: 3469, column: 58, scope: !2960)
!2979 = !DILocation(line: 3469, column: 24, scope: !2960)
!2980 = !DILocation(line: 3469, column: 22, scope: !2960)
!2981 = !DILocation(line: 3469, column: 4, scope: !2960)
!2982 = !DILocation(line: 3469, column: 12, scope: !2960)
!2983 = !DILocation(line: 3470, column: 14, scope: !2960)
!2984 = !DILocation(line: 3470, column: 4, scope: !2960)
!2985 = !DILocation(line: 3470, column: 12, scope: !2960)
!2986 = !DILocation(line: 3471, column: 4, scope: !2960)
!2987 = !DILocation(line: 3473, column: 14, scope: !2960)
!2988 = !DILocation(line: 3473, column: 58, scope: !2960)
!2989 = !DILocation(line: 3473, column: 24, scope: !2960)
!2990 = !DILocation(line: 3473, column: 22, scope: !2960)
!2991 = !DILocation(line: 3473, column: 4, scope: !2960)
!2992 = !DILocation(line: 3473, column: 12, scope: !2960)
!2993 = !DILocation(line: 3474, column: 14, scope: !2960)
!2994 = !DILocation(line: 3474, column: 58, scope: !2960)
!2995 = !DILocation(line: 3474, column: 24, scope: !2960)
!2996 = !DILocation(line: 3474, column: 22, scope: !2960)
!2997 = !DILocation(line: 3474, column: 4, scope: !2960)
!2998 = !DILocation(line: 3474, column: 12, scope: !2960)
!2999 = !DILocation(line: 3475, column: 4, scope: !2960)
!3000 = !DILocation(line: 3477, column: 9, scope: !2960)
!3001 = !DILocation(line: 3478, column: 3, scope: !2960)
!3002 = !DILocation(line: 3479, column: 7, scope: !3003)
!3003 = distinct !DILexicalBlock(scope: !2943, file: !77, line: 3479, column: 7)
!3004 = !DILocation(line: 3479, column: 12, scope: !3003)
!3005 = !DILocation(line: 3479, column: 7, scope: !2943)
!3006 = !DILocation(line: 3480, column: 50, scope: !3003)
!3007 = !DILocation(line: 3480, column: 11, scope: !3003)
!3008 = !DILocation(line: 3480, column: 9, scope: !3003)
!3009 = !DILocation(line: 3480, column: 4, scope: !3003)
!3010 = !DILocation(line: 3481, column: 2, scope: !2943)
!3011 = !DILocation(line: 3483, column: 2, scope: !2920)
!3012 = distinct !DISubprogram(name: "config_high_g_data_src", scope: !77, file: !77, line: 4436, type: !2865, isLocal: true, isDefinition: true, scopeLine: 4438, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!3013 = !DILocalVariable(name: "high_g_int_cfg", arg: 1, scope: !3012, file: !77, line: 4436, type: !2867)
!3014 = !DILocation(line: 4436, column: 78, scope: !3012)
!3015 = !DILocalVariable(name: "dev", arg: 2, scope: !3012, file: !77, line: 4437, type: !252)
!3016 = !DILocation(line: 4437, column: 31, scope: !3012)
!3017 = !DILocalVariable(name: "rslt", scope: !3012, file: !77, line: 4439, type: !62)
!3018 = !DILocation(line: 4439, column: 9, scope: !3012)
!3019 = !DILocalVariable(name: "temp", scope: !3012, file: !77, line: 4441, type: !17)
!3020 = !DILocation(line: 4441, column: 10, scope: !3012)
!3021 = !DILocation(line: 4438, column: 3, scope: !3012)
!3022 = !DILocalVariable(name: "data", scope: !3012, file: !77, line: 4440, type: !17)
!3023 = !DILocation(line: 4440, column: 10, scope: !3012)
!3024 = !DILocation(line: 4444, column: 9, scope: !3012)
!3025 = !DILocation(line: 4444, column: 7, scope: !3012)
!3026 = !DILocation(line: 4445, column: 6, scope: !3027)
!3027 = distinct !DILexicalBlock(scope: !3012, file: !77, line: 4445, column: 6)
!3028 = !DILocation(line: 4445, column: 11, scope: !3027)
!3029 = !DILocation(line: 4445, column: 6, scope: !3012)
!3030 = !DILocation(line: 4446, column: 10, scope: !3031)
!3031 = distinct !DILexicalBlock(scope: !3027, file: !77, line: 4445, column: 25)
!3032 = !DILocation(line: 4446, column: 15, scope: !3031)
!3033 = !DILocation(line: 4446, column: 8, scope: !3031)
!3034 = !DILocation(line: 4447, column: 10, scope: !3031)
!3035 = !DILocation(line: 4447, column: 35, scope: !3031)
!3036 = !DILocation(line: 4447, column: 19, scope: !3031)
!3037 = !DILocation(line: 4447, column: 49, scope: !3031)
!3038 = !DILocation(line: 4447, column: 55, scope: !3031)
!3039 = !DILocation(line: 4447, column: 15, scope: !3031)
!3040 = !DILocation(line: 4447, column: 8, scope: !3031)
!3041 = !DILocation(line: 4449, column: 10, scope: !3031)
!3042 = !DILocation(line: 4449, column: 8, scope: !3031)
!3043 = !DILocation(line: 4450, column: 2, scope: !3031)
!3044 = !DILocation(line: 4452, column: 2, scope: !3012)
!3045 = distinct !DISubprogram(name: "config_high_g_int_settg", scope: !77, file: !77, line: 4458, type: !2865, isLocal: true, isDefinition: true, scopeLine: 4460, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!3046 = !DILocalVariable(name: "high_g_int_cfg", arg: 1, scope: !3045, file: !77, line: 4458, type: !2867)
!3047 = !DILocation(line: 4458, column: 79, scope: !3045)
!3048 = !DILocalVariable(name: "dev", arg: 2, scope: !3045, file: !77, line: 4459, type: !252)
!3049 = !DILocation(line: 4459, column: 31, scope: !3045)
!3050 = !DILocalVariable(name: "rslt", scope: !3045, file: !77, line: 4461, type: !62)
!3051 = !DILocation(line: 4461, column: 9, scope: !3045)
!3052 = !DILocalVariable(name: "temp", scope: !3045, file: !77, line: 4462, type: !17)
!3053 = !DILocation(line: 4462, column: 10, scope: !3045)
!3054 = !DILocation(line: 4460, column: 3, scope: !3045)
!3055 = !DILocalVariable(name: "data_array", scope: !3045, file: !77, line: 4463, type: !2929)
!3056 = !DILocation(line: 4463, column: 10, scope: !3045)
!3057 = !DILocation(line: 4465, column: 53, scope: !3045)
!3058 = !DILocation(line: 4465, column: 9, scope: !3045)
!3059 = !DILocation(line: 4465, column: 7, scope: !3045)
!3060 = !DILocation(line: 4466, column: 6, scope: !3061)
!3061 = distinct !DILexicalBlock(scope: !3045, file: !77, line: 4466, column: 6)
!3062 = !DILocation(line: 4466, column: 11, scope: !3061)
!3063 = !DILocation(line: 4466, column: 6, scope: !3045)
!3064 = !DILocation(line: 4467, column: 10, scope: !3065)
!3065 = distinct !DILexicalBlock(scope: !3061, file: !77, line: 4466, column: 25)
!3066 = !DILocation(line: 4467, column: 24, scope: !3065)
!3067 = !DILocation(line: 4467, column: 8, scope: !3065)
!3068 = !DILocation(line: 4469, column: 19, scope: !3065)
!3069 = !DILocation(line: 4469, column: 44, scope: !3065)
!3070 = !DILocation(line: 4469, column: 28, scope: !3065)
!3071 = !DILocation(line: 4469, column: 52, scope: !3065)
!3072 = !DILocation(line: 4469, column: 58, scope: !3065)
!3073 = !DILocation(line: 4469, column: 24, scope: !3065)
!3074 = !DILocation(line: 4469, column: 3, scope: !3065)
!3075 = !DILocation(line: 4469, column: 17, scope: !3065)
!3076 = !DILocation(line: 4471, column: 35, scope: !3065)
!3077 = !DILocation(line: 4471, column: 3, scope: !3065)
!3078 = !DILocation(line: 4471, column: 17, scope: !3065)
!3079 = !DILocation(line: 4473, column: 35, scope: !3065)
!3080 = !DILocation(line: 4473, column: 3, scope: !3065)
!3081 = !DILocation(line: 4473, column: 17, scope: !3065)
!3082 = !DILocation(line: 4474, column: 53, scope: !3065)
!3083 = !DILocation(line: 4474, column: 10, scope: !3065)
!3084 = !DILocation(line: 4474, column: 8, scope: !3065)
!3085 = !DILocation(line: 4475, column: 2, scope: !3065)
!3086 = !DILocation(line: 4477, column: 2, scope: !3045)
!3087 = distinct !DISubprogram(name: "enable_low_g_int", scope: !77, file: !77, line: 4328, type: !3088, isLocal: true, isDefinition: true, scopeLine: 4329, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!3088 = !DISubroutineType(types: !3089)
!3089 = !{!62, !3090, !252}
!3090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3091, size: 64)
!3091 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1888)
!3092 = !DILocalVariable(name: "low_g_int", arg: 1, scope: !3087, file: !77, line: 4328, type: !3090)
!3093 = !DILocation(line: 4328, column: 71, scope: !3087)
!3094 = !DILocalVariable(name: "dev", arg: 2, scope: !3087, file: !77, line: 4328, type: !252)
!3095 = !DILocation(line: 4328, column: 107, scope: !3087)
!3096 = !DILocalVariable(name: "rslt", scope: !3087, file: !77, line: 4330, type: !62)
!3097 = !DILocation(line: 4330, column: 9, scope: !3087)
!3098 = !DILocalVariable(name: "temp", scope: !3087, file: !77, line: 4332, type: !17)
!3099 = !DILocation(line: 4332, column: 10, scope: !3087)
!3100 = !DILocation(line: 4329, column: 3, scope: !3087)
!3101 = !DILocalVariable(name: "data", scope: !3087, file: !77, line: 4331, type: !17)
!3102 = !DILocation(line: 4331, column: 10, scope: !3087)
!3103 = !DILocation(line: 4335, column: 9, scope: !3087)
!3104 = !DILocation(line: 4335, column: 7, scope: !3087)
!3105 = !DILocation(line: 4336, column: 6, scope: !3106)
!3106 = distinct !DILexicalBlock(scope: !3087, file: !77, line: 4336, column: 6)
!3107 = !DILocation(line: 4336, column: 11, scope: !3106)
!3108 = !DILocation(line: 4336, column: 6, scope: !3087)
!3109 = !DILocation(line: 4337, column: 10, scope: !3110)
!3110 = distinct !DILexicalBlock(scope: !3106, file: !77, line: 4336, column: 25)
!3111 = !DILocation(line: 4337, column: 15, scope: !3110)
!3112 = !DILocation(line: 4337, column: 8, scope: !3110)
!3113 = !DILocation(line: 4338, column: 10, scope: !3110)
!3114 = !DILocation(line: 4338, column: 30, scope: !3110)
!3115 = !DILocation(line: 4338, column: 19, scope: !3110)
!3116 = !DILocation(line: 4338, column: 37, scope: !3110)
!3117 = !DILocation(line: 4338, column: 43, scope: !3110)
!3118 = !DILocation(line: 4338, column: 15, scope: !3110)
!3119 = !DILocation(line: 4338, column: 8, scope: !3110)
!3120 = !DILocation(line: 4340, column: 10, scope: !3110)
!3121 = !DILocation(line: 4340, column: 8, scope: !3110)
!3122 = !DILocation(line: 4341, column: 2, scope: !3110)
!3123 = !DILocation(line: 4343, column: 2, scope: !3087)
!3124 = distinct !DISubprogram(name: "config_low_g_data_src", scope: !77, file: !77, line: 4350, type: !3088, isLocal: true, isDefinition: true, scopeLine: 4351, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!3125 = !DILocalVariable(name: "low_g_int", arg: 1, scope: !3124, file: !77, line: 4350, type: !3090)
!3126 = !DILocation(line: 4350, column: 76, scope: !3124)
!3127 = !DILocalVariable(name: "dev", arg: 2, scope: !3124, file: !77, line: 4350, type: !252)
!3128 = !DILocation(line: 4350, column: 112, scope: !3124)
!3129 = !DILocalVariable(name: "rslt", scope: !3124, file: !77, line: 4352, type: !62)
!3130 = !DILocation(line: 4352, column: 9, scope: !3124)
!3131 = !DILocalVariable(name: "temp", scope: !3124, file: !77, line: 4354, type: !17)
!3132 = !DILocation(line: 4354, column: 10, scope: !3124)
!3133 = !DILocation(line: 4351, column: 3, scope: !3124)
!3134 = !DILocalVariable(name: "data", scope: !3124, file: !77, line: 4353, type: !17)
!3135 = !DILocation(line: 4353, column: 10, scope: !3124)
!3136 = !DILocation(line: 4357, column: 9, scope: !3124)
!3137 = !DILocation(line: 4357, column: 7, scope: !3124)
!3138 = !DILocation(line: 4358, column: 6, scope: !3139)
!3139 = distinct !DILexicalBlock(scope: !3124, file: !77, line: 4358, column: 6)
!3140 = !DILocation(line: 4358, column: 11, scope: !3139)
!3141 = !DILocation(line: 4358, column: 6, scope: !3124)
!3142 = !DILocation(line: 4359, column: 10, scope: !3143)
!3143 = distinct !DILexicalBlock(scope: !3139, file: !77, line: 4358, column: 25)
!3144 = !DILocation(line: 4359, column: 15, scope: !3143)
!3145 = !DILocation(line: 4359, column: 8, scope: !3143)
!3146 = !DILocation(line: 4360, column: 10, scope: !3143)
!3147 = !DILocation(line: 4360, column: 30, scope: !3143)
!3148 = !DILocation(line: 4360, column: 19, scope: !3143)
!3149 = !DILocation(line: 4360, column: 43, scope: !3143)
!3150 = !DILocation(line: 4360, column: 49, scope: !3143)
!3151 = !DILocation(line: 4360, column: 15, scope: !3143)
!3152 = !DILocation(line: 4360, column: 8, scope: !3143)
!3153 = !DILocation(line: 4362, column: 10, scope: !3143)
!3154 = !DILocation(line: 4362, column: 8, scope: !3143)
!3155 = !DILocation(line: 4363, column: 2, scope: !3143)
!3156 = !DILocation(line: 4365, column: 2, scope: !3124)
!3157 = distinct !DISubprogram(name: "config_low_g_int_settg", scope: !77, file: !77, line: 4371, type: !3088, isLocal: true, isDefinition: true, scopeLine: 4372, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!3158 = !DILocalVariable(name: "low_g_int", arg: 1, scope: !3157, file: !77, line: 4371, type: !3090)
!3159 = !DILocation(line: 4371, column: 77, scope: !3157)
!3160 = !DILocalVariable(name: "dev", arg: 2, scope: !3157, file: !77, line: 4371, type: !252)
!3161 = !DILocation(line: 4371, column: 114, scope: !3157)
!3162 = !DILocalVariable(name: "rslt", scope: !3157, file: !77, line: 4373, type: !62)
!3163 = !DILocation(line: 4373, column: 9, scope: !3157)
!3164 = !DILocalVariable(name: "temp", scope: !3157, file: !77, line: 4374, type: !17)
!3165 = !DILocation(line: 4374, column: 10, scope: !3157)
!3166 = !DILocation(line: 4372, column: 3, scope: !3157)
!3167 = !DILocalVariable(name: "data_array", scope: !3157, file: !77, line: 4375, type: !2929)
!3168 = !DILocation(line: 4375, column: 10, scope: !3157)
!3169 = !DILocation(line: 4378, column: 53, scope: !3157)
!3170 = !DILocation(line: 4378, column: 9, scope: !3157)
!3171 = !DILocation(line: 4378, column: 7, scope: !3157)
!3172 = !DILocation(line: 4380, column: 6, scope: !3173)
!3173 = distinct !DILexicalBlock(scope: !3157, file: !77, line: 4380, column: 6)
!3174 = !DILocation(line: 4380, column: 11, scope: !3173)
!3175 = !DILocation(line: 4380, column: 6, scope: !3157)
!3176 = !DILocation(line: 4381, column: 10, scope: !3177)
!3177 = distinct !DILexicalBlock(scope: !3173, file: !77, line: 4380, column: 25)
!3178 = !DILocation(line: 4381, column: 24, scope: !3177)
!3179 = !DILocation(line: 4381, column: 8, scope: !3177)
!3180 = !DILocation(line: 4383, column: 19, scope: !3177)
!3181 = !DILocation(line: 4383, column: 38, scope: !3177)
!3182 = !DILocation(line: 4383, column: 27, scope: !3177)
!3183 = !DILocation(line: 4383, column: 47, scope: !3177)
!3184 = !DILocation(line: 4383, column: 24, scope: !3177)
!3185 = !DILocation(line: 4383, column: 3, scope: !3177)
!3186 = !DILocation(line: 4383, column: 17, scope: !3177)
!3187 = !DILocation(line: 4384, column: 10, scope: !3177)
!3188 = !DILocation(line: 4384, column: 24, scope: !3177)
!3189 = !DILocation(line: 4384, column: 8, scope: !3177)
!3190 = !DILocation(line: 4386, column: 19, scope: !3177)
!3191 = !DILocation(line: 4386, column: 39, scope: !3177)
!3192 = !DILocation(line: 4386, column: 28, scope: !3177)
!3193 = !DILocation(line: 4386, column: 48, scope: !3177)
!3194 = !DILocation(line: 4386, column: 54, scope: !3177)
!3195 = !DILocation(line: 4386, column: 24, scope: !3177)
!3196 = !DILocation(line: 4386, column: 3, scope: !3177)
!3197 = !DILocation(line: 4386, column: 17, scope: !3177)
!3198 = !DILocation(line: 4389, column: 30, scope: !3177)
!3199 = !DILocation(line: 4389, column: 3, scope: !3177)
!3200 = !DILocation(line: 4389, column: 17, scope: !3177)
!3201 = !DILocation(line: 4391, column: 30, scope: !3177)
!3202 = !DILocation(line: 4391, column: 3, scope: !3177)
!3203 = !DILocation(line: 4391, column: 17, scope: !3177)
!3204 = !DILocation(line: 4393, column: 53, scope: !3177)
!3205 = !DILocation(line: 4393, column: 10, scope: !3177)
!3206 = !DILocation(line: 4393, column: 8, scope: !3177)
!3207 = !DILocation(line: 4394, column: 2, scope: !3177)
!3208 = !DILocation(line: 4396, column: 2, scope: !3157)
!3209 = distinct !DISubprogram(name: "enable_flat_int", scope: !77, file: !77, line: 4271, type: !3210, isLocal: true, isDefinition: true, scopeLine: 4272, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!3210 = !DISubroutineType(types: !3211)
!3211 = !{!62, !3212, !252}
!3212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3213, size: 64)
!3213 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1881)
!3214 = !DILocalVariable(name: "flat_int", arg: 1, scope: !3209, file: !77, line: 4271, type: !3212)
!3215 = !DILocation(line: 4271, column: 76, scope: !3209)
!3216 = !DILocalVariable(name: "dev", arg: 2, scope: !3209, file: !77, line: 4271, type: !252)
!3217 = !DILocation(line: 4271, column: 111, scope: !3209)
!3218 = !DILocalVariable(name: "rslt", scope: !3209, file: !77, line: 4273, type: !62)
!3219 = !DILocation(line: 4273, column: 9, scope: !3209)
!3220 = !DILocalVariable(name: "temp", scope: !3209, file: !77, line: 4275, type: !17)
!3221 = !DILocation(line: 4275, column: 10, scope: !3209)
!3222 = !DILocation(line: 4272, column: 3, scope: !3209)
!3223 = !DILocalVariable(name: "data", scope: !3209, file: !77, line: 4274, type: !17)
!3224 = !DILocation(line: 4274, column: 10, scope: !3209)
!3225 = !DILocation(line: 4278, column: 9, scope: !3209)
!3226 = !DILocation(line: 4278, column: 7, scope: !3209)
!3227 = !DILocation(line: 4279, column: 6, scope: !3228)
!3228 = distinct !DILexicalBlock(scope: !3209, file: !77, line: 4279, column: 6)
!3229 = !DILocation(line: 4279, column: 11, scope: !3228)
!3230 = !DILocation(line: 4279, column: 6, scope: !3209)
!3231 = !DILocation(line: 4280, column: 10, scope: !3232)
!3232 = distinct !DILexicalBlock(scope: !3228, file: !77, line: 4279, column: 25)
!3233 = !DILocation(line: 4280, column: 15, scope: !3232)
!3234 = !DILocation(line: 4280, column: 8, scope: !3232)
!3235 = !DILocation(line: 4281, column: 10, scope: !3232)
!3236 = !DILocation(line: 4281, column: 29, scope: !3232)
!3237 = !DILocation(line: 4281, column: 19, scope: !3232)
!3238 = !DILocation(line: 4281, column: 37, scope: !3232)
!3239 = !DILocation(line: 4281, column: 43, scope: !3232)
!3240 = !DILocation(line: 4281, column: 15, scope: !3232)
!3241 = !DILocation(line: 4281, column: 8, scope: !3232)
!3242 = !DILocation(line: 4283, column: 10, scope: !3232)
!3243 = !DILocation(line: 4283, column: 8, scope: !3232)
!3244 = !DILocation(line: 4284, column: 2, scope: !3232)
!3245 = !DILocation(line: 4286, column: 2, scope: !3209)
!3246 = distinct !DISubprogram(name: "config_flat_int_settg", scope: !77, file: !77, line: 4293, type: !3210, isLocal: true, isDefinition: true, scopeLine: 4294, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!3247 = !DILocalVariable(name: "flat_int", arg: 1, scope: !3246, file: !77, line: 4293, type: !3212)
!3248 = !DILocation(line: 4293, column: 82, scope: !3246)
!3249 = !DILocalVariable(name: "dev", arg: 2, scope: !3246, file: !77, line: 4293, type: !252)
!3250 = !DILocation(line: 4293, column: 117, scope: !3246)
!3251 = !DILocalVariable(name: "rslt", scope: !3246, file: !77, line: 4295, type: !62)
!3252 = !DILocation(line: 4295, column: 9, scope: !3246)
!3253 = !DILocalVariable(name: "data", scope: !3246, file: !77, line: 4296, type: !17)
!3254 = !DILocation(line: 4296, column: 10, scope: !3246)
!3255 = !DILocalVariable(name: "temp", scope: !3246, file: !77, line: 4297, type: !17)
!3256 = !DILocation(line: 4297, column: 10, scope: !3246)
!3257 = !DILocation(line: 4294, column: 3, scope: !3246)
!3258 = !DILocalVariable(name: "data_array", scope: !3246, file: !77, line: 4298, type: !573)
!3259 = !DILocation(line: 4298, column: 10, scope: !3246)
!3260 = !DILocation(line: 4301, column: 49, scope: !3246)
!3261 = !DILocation(line: 4301, column: 9, scope: !3246)
!3262 = !DILocation(line: 4301, column: 7, scope: !3246)
!3263 = !DILocation(line: 4302, column: 6, scope: !3264)
!3264 = distinct !DILexicalBlock(scope: !3246, file: !77, line: 4302, column: 6)
!3265 = !DILocation(line: 4302, column: 11, scope: !3264)
!3266 = !DILocation(line: 4302, column: 6, scope: !3246)
!3267 = !DILocation(line: 4303, column: 10, scope: !3268)
!3268 = distinct !DILexicalBlock(scope: !3264, file: !77, line: 4302, column: 25)
!3269 = !DILocation(line: 4303, column: 8, scope: !3268)
!3270 = !DILocation(line: 4304, column: 10, scope: !3268)
!3271 = !DILocation(line: 4304, column: 15, scope: !3268)
!3272 = !DILocation(line: 4304, column: 8, scope: !3268)
!3273 = !DILocation(line: 4306, column: 10, scope: !3268)
!3274 = !DILocation(line: 4306, column: 29, scope: !3268)
!3275 = !DILocation(line: 4306, column: 18, scope: !3268)
!3276 = !DILocation(line: 4306, column: 41, scope: !3268)
!3277 = !DILocation(line: 4306, column: 15, scope: !3268)
!3278 = !DILocation(line: 4306, column: 8, scope: !3268)
!3279 = !DILocation(line: 4307, column: 3, scope: !3268)
!3280 = !DILocation(line: 4307, column: 17, scope: !3268)
!3281 = !DILocation(line: 4309, column: 10, scope: !3268)
!3282 = !DILocation(line: 4309, column: 8, scope: !3268)
!3283 = !DILocation(line: 4310, column: 10, scope: !3268)
!3284 = !DILocation(line: 4310, column: 15, scope: !3268)
!3285 = !DILocation(line: 4310, column: 8, scope: !3268)
!3286 = !DILocation(line: 4312, column: 10, scope: !3268)
!3287 = !DILocation(line: 4312, column: 29, scope: !3268)
!3288 = !DILocation(line: 4312, column: 19, scope: !3268)
!3289 = !DILocation(line: 4312, column: 44, scope: !3268)
!3290 = !DILocation(line: 4312, column: 50, scope: !3268)
!3291 = !DILocation(line: 4312, column: 15, scope: !3268)
!3292 = !DILocation(line: 4312, column: 8, scope: !3268)
!3293 = !DILocation(line: 4313, column: 10, scope: !3268)
!3294 = !DILocation(line: 4313, column: 15, scope: !3268)
!3295 = !DILocation(line: 4313, column: 8, scope: !3268)
!3296 = !DILocation(line: 4315, column: 10, scope: !3268)
!3297 = !DILocation(line: 4315, column: 29, scope: !3268)
!3298 = !DILocation(line: 4315, column: 18, scope: !3268)
!3299 = !DILocation(line: 4315, column: 38, scope: !3268)
!3300 = !DILocation(line: 4315, column: 15, scope: !3268)
!3301 = !DILocation(line: 4315, column: 8, scope: !3268)
!3302 = !DILocation(line: 4316, column: 3, scope: !3268)
!3303 = !DILocation(line: 4316, column: 17, scope: !3268)
!3304 = !DILocation(line: 4319, column: 50, scope: !3268)
!3305 = !DILocation(line: 4319, column: 10, scope: !3268)
!3306 = !DILocation(line: 4319, column: 8, scope: !3268)
!3307 = !DILocation(line: 4320, column: 2, scope: !3268)
!3308 = !DILocation(line: 4322, column: 2, scope: !3246)
!3309 = distinct !DISubprogram(name: "enable_orient_int", scope: !77, file: !77, line: 4204, type: !3310, isLocal: true, isDefinition: true, scopeLine: 4205, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!3310 = !DISubroutineType(types: !3311)
!3311 = !{!62, !3312, !252}
!3312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3313, size: 64)
!3313 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1871)
!3314 = !DILocalVariable(name: "orient_int_cfg", arg: 1, scope: !3309, file: !77, line: 4204, type: !3312)
!3315 = !DILocation(line: 4204, column: 73, scope: !3309)
!3316 = !DILocalVariable(name: "dev", arg: 2, scope: !3309, file: !77, line: 4204, type: !252)
!3317 = !DILocation(line: 4204, column: 114, scope: !3309)
!3318 = !DILocalVariable(name: "rslt", scope: !3309, file: !77, line: 4206, type: !62)
!3319 = !DILocation(line: 4206, column: 9, scope: !3309)
!3320 = !DILocalVariable(name: "temp", scope: !3309, file: !77, line: 4208, type: !17)
!3321 = !DILocation(line: 4208, column: 10, scope: !3309)
!3322 = !DILocation(line: 4205, column: 3, scope: !3309)
!3323 = !DILocalVariable(name: "data", scope: !3309, file: !77, line: 4207, type: !17)
!3324 = !DILocation(line: 4207, column: 10, scope: !3309)
!3325 = !DILocation(line: 4211, column: 9, scope: !3309)
!3326 = !DILocation(line: 4211, column: 7, scope: !3309)
!3327 = !DILocation(line: 4212, column: 6, scope: !3328)
!3328 = distinct !DILexicalBlock(scope: !3309, file: !77, line: 4212, column: 6)
!3329 = !DILocation(line: 4212, column: 11, scope: !3328)
!3330 = !DILocation(line: 4212, column: 6, scope: !3309)
!3331 = !DILocation(line: 4213, column: 10, scope: !3332)
!3332 = distinct !DILexicalBlock(scope: !3328, file: !77, line: 4212, column: 25)
!3333 = !DILocation(line: 4213, column: 15, scope: !3332)
!3334 = !DILocation(line: 4213, column: 8, scope: !3332)
!3335 = !DILocation(line: 4214, column: 10, scope: !3332)
!3336 = !DILocation(line: 4214, column: 35, scope: !3332)
!3337 = !DILocation(line: 4214, column: 19, scope: !3332)
!3338 = !DILocation(line: 4214, column: 45, scope: !3332)
!3339 = !DILocation(line: 4214, column: 51, scope: !3332)
!3340 = !DILocation(line: 4214, column: 15, scope: !3332)
!3341 = !DILocation(line: 4214, column: 8, scope: !3332)
!3342 = !DILocation(line: 4216, column: 10, scope: !3332)
!3343 = !DILocation(line: 4216, column: 8, scope: !3332)
!3344 = !DILocation(line: 4217, column: 2, scope: !3332)
!3345 = !DILocation(line: 4219, column: 2, scope: !3309)
!3346 = distinct !DISubprogram(name: "config_orient_int_settg", scope: !77, file: !77, line: 4226, type: !3310, isLocal: true, isDefinition: true, scopeLine: 4228, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!3347 = !DILocalVariable(name: "orient_int_cfg", arg: 1, scope: !3346, file: !77, line: 4226, type: !3312)
!3348 = !DILocation(line: 4226, column: 79, scope: !3346)
!3349 = !DILocalVariable(name: "dev", arg: 2, scope: !3346, file: !77, line: 4227, type: !252)
!3350 = !DILocation(line: 4227, column: 31, scope: !3346)
!3351 = !DILocalVariable(name: "rslt", scope: !3346, file: !77, line: 4229, type: !62)
!3352 = !DILocation(line: 4229, column: 9, scope: !3346)
!3353 = !DILocalVariable(name: "data", scope: !3346, file: !77, line: 4230, type: !17)
!3354 = !DILocation(line: 4230, column: 10, scope: !3346)
!3355 = !DILocalVariable(name: "temp", scope: !3346, file: !77, line: 4231, type: !17)
!3356 = !DILocation(line: 4231, column: 10, scope: !3346)
!3357 = !DILocation(line: 4228, column: 3, scope: !3346)
!3358 = !DILocalVariable(name: "data_array", scope: !3346, file: !77, line: 4232, type: !573)
!3359 = !DILocation(line: 4232, column: 10, scope: !3346)
!3360 = !DILocation(line: 4235, column: 51, scope: !3346)
!3361 = !DILocation(line: 4235, column: 9, scope: !3346)
!3362 = !DILocation(line: 4235, column: 7, scope: !3346)
!3363 = !DILocation(line: 4236, column: 6, scope: !3364)
!3364 = distinct !DILexicalBlock(scope: !3346, file: !77, line: 4236, column: 6)
!3365 = !DILocation(line: 4236, column: 11, scope: !3364)
!3366 = !DILocation(line: 4236, column: 6, scope: !3346)
!3367 = !DILocation(line: 4237, column: 10, scope: !3368)
!3368 = distinct !DILexicalBlock(scope: !3364, file: !77, line: 4236, column: 25)
!3369 = !DILocation(line: 4237, column: 8, scope: !3368)
!3370 = !DILocation(line: 4238, column: 10, scope: !3368)
!3371 = !DILocation(line: 4238, column: 15, scope: !3368)
!3372 = !DILocation(line: 4238, column: 8, scope: !3368)
!3373 = !DILocation(line: 4240, column: 10, scope: !3368)
!3374 = !DILocation(line: 4240, column: 35, scope: !3368)
!3375 = !DILocation(line: 4240, column: 18, scope: !3368)
!3376 = !DILocation(line: 4240, column: 48, scope: !3368)
!3377 = !DILocation(line: 4240, column: 15, scope: !3368)
!3378 = !DILocation(line: 4240, column: 8, scope: !3368)
!3379 = !DILocation(line: 4241, column: 10, scope: !3368)
!3380 = !DILocation(line: 4241, column: 15, scope: !3368)
!3381 = !DILocation(line: 4241, column: 8, scope: !3368)
!3382 = !DILocation(line: 4243, column: 10, scope: !3368)
!3383 = !DILocation(line: 4243, column: 35, scope: !3368)
!3384 = !DILocation(line: 4243, column: 19, scope: !3368)
!3385 = !DILocation(line: 4243, column: 51, scope: !3368)
!3386 = !DILocation(line: 4243, column: 57, scope: !3368)
!3387 = !DILocation(line: 4243, column: 15, scope: !3368)
!3388 = !DILocation(line: 4243, column: 8, scope: !3368)
!3389 = !DILocation(line: 4244, column: 10, scope: !3368)
!3390 = !DILocation(line: 4244, column: 15, scope: !3368)
!3391 = !DILocation(line: 4244, column: 8, scope: !3368)
!3392 = !DILocation(line: 4246, column: 10, scope: !3368)
!3393 = !DILocation(line: 4246, column: 35, scope: !3368)
!3394 = !DILocation(line: 4246, column: 19, scope: !3368)
!3395 = !DILocation(line: 4246, column: 47, scope: !3368)
!3396 = !DILocation(line: 4246, column: 53, scope: !3368)
!3397 = !DILocation(line: 4246, column: 15, scope: !3368)
!3398 = !DILocation(line: 4246, column: 8, scope: !3368)
!3399 = !DILocation(line: 4247, column: 3, scope: !3368)
!3400 = !DILocation(line: 4247, column: 17, scope: !3368)
!3401 = !DILocation(line: 4249, column: 10, scope: !3368)
!3402 = !DILocation(line: 4249, column: 8, scope: !3368)
!3403 = !DILocation(line: 4250, column: 10, scope: !3368)
!3404 = !DILocation(line: 4250, column: 15, scope: !3368)
!3405 = !DILocation(line: 4250, column: 8, scope: !3368)
!3406 = !DILocation(line: 4252, column: 10, scope: !3368)
!3407 = !DILocation(line: 4252, column: 35, scope: !3368)
!3408 = !DILocation(line: 4252, column: 18, scope: !3368)
!3409 = !DILocation(line: 4252, column: 49, scope: !3368)
!3410 = !DILocation(line: 4252, column: 15, scope: !3368)
!3411 = !DILocation(line: 4252, column: 8, scope: !3368)
!3412 = !DILocation(line: 4253, column: 10, scope: !3368)
!3413 = !DILocation(line: 4253, column: 15, scope: !3368)
!3414 = !DILocation(line: 4253, column: 8, scope: !3368)
!3415 = !DILocation(line: 4255, column: 10, scope: !3368)
!3416 = !DILocation(line: 4255, column: 35, scope: !3368)
!3417 = !DILocation(line: 4255, column: 19, scope: !3368)
!3418 = !DILocation(line: 4255, column: 48, scope: !3368)
!3419 = !DILocation(line: 4255, column: 54, scope: !3368)
!3420 = !DILocation(line: 4255, column: 15, scope: !3368)
!3421 = !DILocation(line: 4255, column: 8, scope: !3368)
!3422 = !DILocation(line: 4256, column: 10, scope: !3368)
!3423 = !DILocation(line: 4256, column: 15, scope: !3368)
!3424 = !DILocation(line: 4256, column: 8, scope: !3368)
!3425 = !DILocation(line: 4258, column: 10, scope: !3368)
!3426 = !DILocation(line: 4258, column: 35, scope: !3368)
!3427 = !DILocation(line: 4258, column: 19, scope: !3368)
!3428 = !DILocation(line: 4258, column: 43, scope: !3368)
!3429 = !DILocation(line: 4258, column: 49, scope: !3368)
!3430 = !DILocation(line: 4258, column: 15, scope: !3368)
!3431 = !DILocation(line: 4258, column: 8, scope: !3368)
!3432 = !DILocation(line: 4259, column: 3, scope: !3368)
!3433 = !DILocation(line: 4259, column: 17, scope: !3368)
!3434 = !DILocation(line: 4262, column: 52, scope: !3368)
!3435 = !DILocation(line: 4262, column: 10, scope: !3368)
!3436 = !DILocation(line: 4262, column: 8, scope: !3368)
!3437 = !DILocation(line: 4263, column: 2, scope: !3368)
!3438 = !DILocation(line: 4265, column: 2, scope: !3346)
!3439 = distinct !DISubprogram(name: "enable_step_detect_int", scope: !77, file: !77, line: 3871, type: !3440, isLocal: true, isDefinition: true, scopeLine: 3873, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!3440 = !DISubroutineType(types: !3441)
!3441 = !{!62, !3442, !252}
!3442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3443, size: 64)
!3443 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1853)
!3444 = !DILocalVariable(name: "step_detect_int_cfg", arg: 1, scope: !3439, file: !77, line: 3871, type: !3442)
!3445 = !DILocation(line: 3871, column: 83, scope: !3439)
!3446 = !DILocalVariable(name: "dev", arg: 2, scope: !3439, file: !77, line: 3872, type: !252)
!3447 = !DILocation(line: 3872, column: 31, scope: !3439)
!3448 = !DILocalVariable(name: "rslt", scope: !3439, file: !77, line: 3874, type: !62)
!3449 = !DILocation(line: 3874, column: 9, scope: !3439)
!3450 = !DILocalVariable(name: "temp", scope: !3439, file: !77, line: 3876, type: !17)
!3451 = !DILocation(line: 3876, column: 10, scope: !3439)
!3452 = !DILocation(line: 3873, column: 3, scope: !3439)
!3453 = !DILocalVariable(name: "data", scope: !3439, file: !77, line: 3875, type: !17)
!3454 = !DILocation(line: 3875, column: 10, scope: !3439)
!3455 = !DILocation(line: 3879, column: 9, scope: !3439)
!3456 = !DILocation(line: 3879, column: 7, scope: !3439)
!3457 = !DILocation(line: 3880, column: 6, scope: !3458)
!3458 = distinct !DILexicalBlock(scope: !3439, file: !77, line: 3880, column: 6)
!3459 = !DILocation(line: 3880, column: 11, scope: !3458)
!3460 = !DILocation(line: 3880, column: 6, scope: !3439)
!3461 = !DILocation(line: 3881, column: 10, scope: !3462)
!3462 = distinct !DILexicalBlock(scope: !3458, file: !77, line: 3880, column: 25)
!3463 = !DILocation(line: 3881, column: 15, scope: !3462)
!3464 = !DILocation(line: 3881, column: 8, scope: !3462)
!3465 = !DILocation(line: 3882, column: 10, scope: !3462)
!3466 = !DILocation(line: 3882, column: 40, scope: !3462)
!3467 = !DILocation(line: 3882, column: 19, scope: !3462)
!3468 = !DILocation(line: 3882, column: 57, scope: !3462)
!3469 = !DILocation(line: 3882, column: 63, scope: !3462)
!3470 = !DILocation(line: 3882, column: 15, scope: !3462)
!3471 = !DILocation(line: 3882, column: 8, scope: !3462)
!3472 = !DILocation(line: 3884, column: 10, scope: !3462)
!3473 = !DILocation(line: 3884, column: 8, scope: !3462)
!3474 = !DILocation(line: 3885, column: 2, scope: !3462)
!3475 = !DILocation(line: 3886, column: 2, scope: !3439)
!3476 = distinct !DISubprogram(name: "config_step_detect", scope: !77, file: !77, line: 3892, type: !3440, isLocal: true, isDefinition: true, scopeLine: 3894, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!3477 = !DILocalVariable(name: "step_detect_int_cfg", arg: 1, scope: !3476, file: !77, line: 3892, type: !3442)
!3478 = !DILocation(line: 3892, column: 79, scope: !3476)
!3479 = !DILocalVariable(name: "dev", arg: 2, scope: !3476, file: !77, line: 3893, type: !252)
!3480 = !DILocation(line: 3893, column: 30, scope: !3476)
!3481 = !DILocalVariable(name: "rslt", scope: !3476, file: !77, line: 3895, type: !62)
!3482 = !DILocation(line: 3895, column: 9, scope: !3476)
!3483 = !DILocalVariable(name: "temp", scope: !3476, file: !77, line: 3896, type: !17)
!3484 = !DILocation(line: 3896, column: 10, scope: !3476)
!3485 = !DILocation(line: 3894, column: 3, scope: !3476)
!3486 = !DILocalVariable(name: "data_array", scope: !3476, file: !77, line: 3897, type: !573)
!3487 = !DILocation(line: 3897, column: 10, scope: !3476)
!3488 = !DILocation(line: 3900, column: 27, scope: !3489)
!3489 = distinct !DILexicalBlock(scope: !3476, file: !77, line: 3900, column: 6)
!3490 = !DILocation(line: 3900, column: 6, scope: !3489)
!3491 = !DILocation(line: 3900, column: 46, scope: !3489)
!3492 = !DILocation(line: 3900, column: 6, scope: !3476)
!3493 = !DILocation(line: 3902, column: 3, scope: !3494)
!3494 = distinct !DILexicalBlock(scope: !3489, file: !77, line: 3900, column: 76)
!3495 = !DILocation(line: 3902, column: 17, scope: !3494)
!3496 = !DILocation(line: 3903, column: 3, scope: !3494)
!3497 = !DILocation(line: 3903, column: 17, scope: !3494)
!3498 = !DILocation(line: 3904, column: 2, scope: !3494)
!3499 = !DILocation(line: 3904, column: 34, scope: !3500)
!3500 = !DILexicalBlockFile(scope: !3501, file: !77, discriminator: 1)
!3501 = distinct !DILexicalBlock(scope: !3489, file: !77, line: 3904, column: 13)
!3502 = !DILocation(line: 3904, column: 13, scope: !3500)
!3503 = !DILocation(line: 3904, column: 53, scope: !3500)
!3504 = !DILocation(line: 3904, column: 13, scope: !3505)
!3505 = !DILexicalBlockFile(scope: !3489, file: !77, discriminator: 1)
!3506 = !DILocation(line: 3906, column: 3, scope: !3507)
!3507 = distinct !DILexicalBlock(scope: !3501, file: !77, line: 3904, column: 86)
!3508 = !DILocation(line: 3906, column: 17, scope: !3507)
!3509 = !DILocation(line: 3907, column: 3, scope: !3507)
!3510 = !DILocation(line: 3907, column: 17, scope: !3507)
!3511 = !DILocation(line: 3908, column: 2, scope: !3507)
!3512 = !DILocation(line: 3908, column: 34, scope: !3513)
!3513 = !DILexicalBlockFile(scope: !3514, file: !77, discriminator: 1)
!3514 = distinct !DILexicalBlock(scope: !3501, file: !77, line: 3908, column: 13)
!3515 = !DILocation(line: 3908, column: 13, scope: !3513)
!3516 = !DILocation(line: 3908, column: 53, scope: !3513)
!3517 = !DILocation(line: 3908, column: 13, scope: !3500)
!3518 = !DILocation(line: 3910, column: 3, scope: !3519)
!3519 = distinct !DILexicalBlock(scope: !3514, file: !77, line: 3908, column: 83)
!3520 = !DILocation(line: 3910, column: 17, scope: !3519)
!3521 = !DILocation(line: 3911, column: 3, scope: !3519)
!3522 = !DILocation(line: 3911, column: 17, scope: !3519)
!3523 = !DILocation(line: 3912, column: 2, scope: !3519)
!3524 = !DILocation(line: 3912, column: 34, scope: !3525)
!3525 = !DILexicalBlockFile(scope: !3526, file: !77, discriminator: 1)
!3526 = distinct !DILexicalBlock(scope: !3514, file: !77, line: 3912, column: 13)
!3527 = !DILocation(line: 3912, column: 13, scope: !3525)
!3528 = !DILocation(line: 3912, column: 53, scope: !3525)
!3529 = !DILocation(line: 3912, column: 13, scope: !3513)
!3530 = !DILocation(line: 3915, column: 58, scope: !3531)
!3531 = distinct !DILexicalBlock(scope: !3526, file: !77, line: 3912, column: 88)
!3532 = !DILocation(line: 3915, column: 10, scope: !3531)
!3533 = !DILocation(line: 3915, column: 8, scope: !3531)
!3534 = !DILocation(line: 3917, column: 7, scope: !3535)
!3535 = distinct !DILexicalBlock(scope: !3531, file: !77, line: 3917, column: 7)
!3536 = !DILocation(line: 3917, column: 12, scope: !3535)
!3537 = !DILocation(line: 3917, column: 7, scope: !3531)
!3538 = !DILocation(line: 3918, column: 11, scope: !3539)
!3539 = distinct !DILexicalBlock(scope: !3535, file: !77, line: 3917, column: 26)
!3540 = !DILocation(line: 3918, column: 25, scope: !3539)
!3541 = !DILocation(line: 3918, column: 9, scope: !3539)
!3542 = !DILocation(line: 3920, column: 20, scope: !3539)
!3543 = !DILocation(line: 3920, column: 50, scope: !3539)
!3544 = !DILocation(line: 3920, column: 29, scope: !3539)
!3545 = !DILocation(line: 3920, column: 64, scope: !3539)
!3546 = !DILocation(line: 3921, column: 6, scope: !3539)
!3547 = !DILocation(line: 3920, column: 25, scope: !3539)
!3548 = !DILocation(line: 3920, column: 4, scope: !3539)
!3549 = !DILocation(line: 3920, column: 18, scope: !3539)
!3550 = !DILocation(line: 3923, column: 11, scope: !3539)
!3551 = !DILocation(line: 3923, column: 25, scope: !3539)
!3552 = !DILocation(line: 3923, column: 9, scope: !3539)
!3553 = !DILocation(line: 3925, column: 20, scope: !3539)
!3554 = !DILocation(line: 3925, column: 50, scope: !3539)
!3555 = !DILocation(line: 3925, column: 28, scope: !3539)
!3556 = !DILocation(line: 3926, column: 6, scope: !3539)
!3557 = !DILocation(line: 3925, column: 25, scope: !3539)
!3558 = !DILocation(line: 3925, column: 4, scope: !3539)
!3559 = !DILocation(line: 3925, column: 18, scope: !3539)
!3560 = !DILocation(line: 3928, column: 11, scope: !3539)
!3561 = !DILocation(line: 3928, column: 25, scope: !3539)
!3562 = !DILocation(line: 3928, column: 9, scope: !3539)
!3563 = !DILocation(line: 3930, column: 20, scope: !3539)
!3564 = !DILocation(line: 3930, column: 50, scope: !3539)
!3565 = !DILocation(line: 3930, column: 28, scope: !3539)
!3566 = !DILocation(line: 3930, column: 64, scope: !3539)
!3567 = !DILocation(line: 3930, column: 25, scope: !3539)
!3568 = !DILocation(line: 3930, column: 4, scope: !3539)
!3569 = !DILocation(line: 3930, column: 18, scope: !3539)
!3570 = !DILocation(line: 3932, column: 3, scope: !3539)
!3571 = !DILocation(line: 3933, column: 2, scope: !3531)
!3572 = !DILocation(line: 3936, column: 56, scope: !3476)
!3573 = !DILocation(line: 3936, column: 9, scope: !3476)
!3574 = !DILocation(line: 3936, column: 7, scope: !3476)
!3575 = !DILocation(line: 3938, column: 2, scope: !3476)
!3576 = distinct !DISubprogram(name: "enable_tap_int", scope: !77, file: !77, line: 3944, type: !3577, isLocal: true, isDefinition: true, scopeLine: 3947, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!3577 = !DISubroutineType(types: !3578)
!3578 = !{!62, !2401, !3579, !252}
!3579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3580, size: 64)
!3580 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1826)
!3581 = !DILocalVariable(name: "int_config", arg: 1, scope: !3576, file: !77, line: 3944, type: !2401)
!3582 = !DILocation(line: 3944, column: 61, scope: !3576)
!3583 = !DILocalVariable(name: "tap_int_cfg", arg: 2, scope: !3576, file: !77, line: 3945, type: !3579)
!3584 = !DILocation(line: 3945, column: 42, scope: !3576)
!3585 = !DILocalVariable(name: "dev", arg: 3, scope: !3576, file: !77, line: 3946, type: !252)
!3586 = !DILocation(line: 3946, column: 30, scope: !3576)
!3587 = !DILocalVariable(name: "rslt", scope: !3576, file: !77, line: 3948, type: !62)
!3588 = !DILocation(line: 3948, column: 9, scope: !3576)
!3589 = !DILocalVariable(name: "temp", scope: !3576, file: !77, line: 3950, type: !17)
!3590 = !DILocation(line: 3950, column: 10, scope: !3576)
!3591 = !DILocation(line: 3947, column: 3, scope: !3576)
!3592 = !DILocalVariable(name: "data", scope: !3576, file: !77, line: 3949, type: !17)
!3593 = !DILocation(line: 3949, column: 10, scope: !3576)
!3594 = !DILocation(line: 3953, column: 9, scope: !3576)
!3595 = !DILocation(line: 3953, column: 7, scope: !3576)
!3596 = !DILocation(line: 3954, column: 6, scope: !3597)
!3597 = distinct !DILexicalBlock(scope: !3576, file: !77, line: 3954, column: 6)
!3598 = !DILocation(line: 3954, column: 11, scope: !3597)
!3599 = !DILocation(line: 3954, column: 6, scope: !3576)
!3600 = !DILocation(line: 3955, column: 19, scope: !3601)
!3601 = distinct !DILexicalBlock(scope: !3602, file: !77, line: 3955, column: 7)
!3602 = distinct !DILexicalBlock(scope: !3597, file: !77, line: 3954, column: 25)
!3603 = !DILocation(line: 3955, column: 28, scope: !3601)
!3604 = !DILocation(line: 3955, column: 7, scope: !3602)
!3605 = !DILocation(line: 3956, column: 11, scope: !3606)
!3606 = distinct !DILexicalBlock(scope: !3601, file: !77, line: 3955, column: 58)
!3607 = !DILocation(line: 3956, column: 16, scope: !3606)
!3608 = !DILocation(line: 3956, column: 9, scope: !3606)
!3609 = !DILocation(line: 3957, column: 11, scope: !3606)
!3610 = !DILocation(line: 3957, column: 33, scope: !3606)
!3611 = !DILocation(line: 3957, column: 20, scope: !3606)
!3612 = !DILocation(line: 3957, column: 40, scope: !3606)
!3613 = !DILocation(line: 3957, column: 46, scope: !3606)
!3614 = !DILocation(line: 3957, column: 16, scope: !3606)
!3615 = !DILocation(line: 3957, column: 9, scope: !3606)
!3616 = !DILocation(line: 3958, column: 3, scope: !3606)
!3617 = !DILocation(line: 3959, column: 11, scope: !3618)
!3618 = distinct !DILexicalBlock(scope: !3601, file: !77, line: 3958, column: 10)
!3619 = !DILocation(line: 3959, column: 16, scope: !3618)
!3620 = !DILocation(line: 3959, column: 9, scope: !3618)
!3621 = !DILocation(line: 3960, column: 11, scope: !3618)
!3622 = !DILocation(line: 3960, column: 33, scope: !3618)
!3623 = !DILocation(line: 3960, column: 20, scope: !3618)
!3624 = !DILocation(line: 3960, column: 40, scope: !3618)
!3625 = !DILocation(line: 3960, column: 46, scope: !3618)
!3626 = !DILocation(line: 3960, column: 16, scope: !3618)
!3627 = !DILocation(line: 3960, column: 9, scope: !3618)
!3628 = !DILocation(line: 3963, column: 10, scope: !3602)
!3629 = !DILocation(line: 3963, column: 8, scope: !3602)
!3630 = !DILocation(line: 3964, column: 2, scope: !3602)
!3631 = !DILocation(line: 3965, column: 2, scope: !3576)
!3632 = distinct !DISubprogram(name: "config_tap_int_settg", scope: !77, file: !77, line: 3972, type: !3577, isLocal: true, isDefinition: true, scopeLine: 3975, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!3633 = !DILocalVariable(name: "int_config", arg: 1, scope: !3632, file: !77, line: 3972, type: !2401)
!3634 = !DILocation(line: 3972, column: 67, scope: !3632)
!3635 = !DILocalVariable(name: "tap_int_cfg", arg: 2, scope: !3632, file: !77, line: 3973, type: !3579)
!3636 = !DILocation(line: 3973, column: 43, scope: !3632)
!3637 = !DILocalVariable(name: "dev", arg: 3, scope: !3632, file: !77, line: 3974, type: !252)
!3638 = !DILocation(line: 3974, column: 31, scope: !3632)
!3639 = !DILocalVariable(name: "rslt", scope: !3632, file: !77, line: 3976, type: !62)
!3640 = !DILocation(line: 3976, column: 9, scope: !3632)
!3641 = !DILocation(line: 3975, column: 3, scope: !3632)
!3642 = !DILocation(line: 3979, column: 9, scope: !3632)
!3643 = !DILocation(line: 3979, column: 7, scope: !3632)
!3644 = !DILocation(line: 3980, column: 6, scope: !3645)
!3645 = distinct !DILexicalBlock(scope: !3632, file: !77, line: 3980, column: 6)
!3646 = !DILocation(line: 3980, column: 11, scope: !3645)
!3647 = !DILocation(line: 3980, column: 6, scope: !3632)
!3648 = !DILocation(line: 3981, column: 10, scope: !3649)
!3649 = distinct !DILexicalBlock(scope: !3645, file: !77, line: 3980, column: 25)
!3650 = !DILocation(line: 3981, column: 8, scope: !3649)
!3651 = !DILocation(line: 3982, column: 7, scope: !3652)
!3652 = distinct !DILexicalBlock(scope: !3649, file: !77, line: 3982, column: 7)
!3653 = !DILocation(line: 3982, column: 12, scope: !3652)
!3654 = !DILocation(line: 3982, column: 7, scope: !3649)
!3655 = !DILocation(line: 3983, column: 11, scope: !3656)
!3656 = distinct !DILexicalBlock(scope: !3652, file: !77, line: 3982, column: 26)
!3657 = !DILocation(line: 3983, column: 9, scope: !3656)
!3658 = !DILocation(line: 3984, column: 8, scope: !3659)
!3659 = distinct !DILexicalBlock(scope: !3656, file: !77, line: 3984, column: 8)
!3660 = !DILocation(line: 3984, column: 13, scope: !3659)
!3661 = !DILocation(line: 3984, column: 8, scope: !3656)
!3662 = !DILocation(line: 3985, column: 12, scope: !3659)
!3663 = !DILocation(line: 3985, column: 10, scope: !3659)
!3664 = !DILocation(line: 3985, column: 5, scope: !3659)
!3665 = !DILocation(line: 3986, column: 3, scope: !3656)
!3666 = !DILocation(line: 3987, column: 2, scope: !3649)
!3667 = !DILocation(line: 3989, column: 2, scope: !3632)
!3668 = distinct !DISubprogram(name: "config_tap_data_src", scope: !77, file: !77, line: 3996, type: !3669, isLocal: true, isDefinition: true, scopeLine: 3997, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!3669 = !DISubroutineType(types: !3670)
!3670 = !{!62, !3579, !252}
!3671 = !DILocalVariable(name: "tap_int_cfg", arg: 1, scope: !3668, file: !77, line: 3996, type: !3579)
!3672 = !DILocation(line: 3996, column: 72, scope: !3668)
!3673 = !DILocalVariable(name: "dev", arg: 2, scope: !3668, file: !77, line: 3996, type: !252)
!3674 = !DILocation(line: 3996, column: 110, scope: !3668)
!3675 = !DILocalVariable(name: "rslt", scope: !3668, file: !77, line: 3998, type: !62)
!3676 = !DILocation(line: 3998, column: 9, scope: !3668)
!3677 = !DILocalVariable(name: "temp", scope: !3668, file: !77, line: 4000, type: !17)
!3678 = !DILocation(line: 4000, column: 10, scope: !3668)
!3679 = !DILocation(line: 3997, column: 3, scope: !3668)
!3680 = !DILocalVariable(name: "data", scope: !3668, file: !77, line: 3999, type: !17)
!3681 = !DILocation(line: 3999, column: 10, scope: !3668)
!3682 = !DILocation(line: 4003, column: 9, scope: !3668)
!3683 = !DILocation(line: 4003, column: 7, scope: !3668)
!3684 = !DILocation(line: 4004, column: 6, scope: !3685)
!3685 = distinct !DILexicalBlock(scope: !3668, file: !77, line: 4004, column: 6)
!3686 = !DILocation(line: 4004, column: 11, scope: !3685)
!3687 = !DILocation(line: 4004, column: 6, scope: !3668)
!3688 = !DILocation(line: 4005, column: 10, scope: !3689)
!3689 = distinct !DILexicalBlock(scope: !3685, file: !77, line: 4004, column: 25)
!3690 = !DILocation(line: 4005, column: 15, scope: !3689)
!3691 = !DILocation(line: 4005, column: 8, scope: !3689)
!3692 = !DILocation(line: 4006, column: 10, scope: !3689)
!3693 = !DILocation(line: 4006, column: 32, scope: !3689)
!3694 = !DILocation(line: 4006, column: 19, scope: !3689)
!3695 = !DILocation(line: 4006, column: 45, scope: !3689)
!3696 = !DILocation(line: 4006, column: 51, scope: !3689)
!3697 = !DILocation(line: 4006, column: 15, scope: !3689)
!3698 = !DILocation(line: 4006, column: 8, scope: !3689)
!3699 = !DILocation(line: 4008, column: 10, scope: !3689)
!3700 = !DILocation(line: 4008, column: 8, scope: !3689)
!3701 = !DILocation(line: 4009, column: 2, scope: !3689)
!3702 = !DILocation(line: 4011, column: 2, scope: !3668)
!3703 = distinct !DISubprogram(name: "config_tap_param", scope: !77, file: !77, line: 4018, type: !3577, isLocal: true, isDefinition: true, scopeLine: 4021, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!3704 = !DILocalVariable(name: "int_config", arg: 1, scope: !3703, file: !77, line: 4018, type: !2401)
!3705 = !DILocation(line: 4018, column: 63, scope: !3703)
!3706 = !DILocalVariable(name: "tap_int_cfg", arg: 2, scope: !3703, file: !77, line: 4019, type: !3579)
!3707 = !DILocation(line: 4019, column: 42, scope: !3703)
!3708 = !DILocalVariable(name: "dev", arg: 3, scope: !3703, file: !77, line: 4020, type: !252)
!3709 = !DILocation(line: 4020, column: 30, scope: !3703)
!3710 = !DILocalVariable(name: "rslt", scope: !3703, file: !77, line: 4022, type: !62)
!3711 = !DILocation(line: 4022, column: 9, scope: !3703)
!3712 = !DILocalVariable(name: "temp", scope: !3703, file: !77, line: 4023, type: !17)
!3713 = !DILocation(line: 4023, column: 10, scope: !3703)
!3714 = !DILocalVariable(name: "data", scope: !3703, file: !77, line: 4024, type: !17)
!3715 = !DILocation(line: 4024, column: 10, scope: !3703)
!3716 = !DILocalVariable(name: "count", scope: !3703, file: !77, line: 4026, type: !17)
!3717 = !DILocation(line: 4026, column: 10, scope: !3703)
!3718 = !DILocalVariable(name: "dur", scope: !3703, file: !77, line: 4027, type: !17)
!3719 = !DILocation(line: 4027, column: 10, scope: !3703)
!3720 = !DILocalVariable(name: "shock", scope: !3703, file: !77, line: 4027, type: !17)
!3721 = !DILocation(line: 4027, column: 15, scope: !3703)
!3722 = !DILocalVariable(name: "quiet", scope: !3703, file: !77, line: 4027, type: !17)
!3723 = !DILocation(line: 4027, column: 22, scope: !3703)
!3724 = !DILocalVariable(name: "thres", scope: !3703, file: !77, line: 4027, type: !17)
!3725 = !DILocation(line: 4027, column: 29, scope: !3703)
!3726 = !DILocation(line: 4021, column: 3, scope: !3703)
!3727 = !DILocalVariable(name: "data_array", scope: !3703, file: !77, line: 4025, type: !573)
!3728 = !DILocation(line: 4025, column: 10, scope: !3703)
!3729 = !DILocation(line: 4031, column: 48, scope: !3703)
!3730 = !DILocation(line: 4031, column: 9, scope: !3703)
!3731 = !DILocation(line: 4031, column: 7, scope: !3703)
!3732 = !DILocation(line: 4032, column: 6, scope: !3733)
!3733 = distinct !DILexicalBlock(scope: !3703, file: !77, line: 4032, column: 6)
!3734 = !DILocation(line: 4032, column: 11, scope: !3733)
!3735 = !DILocation(line: 4032, column: 6, scope: !3703)
!3736 = !DILocation(line: 4033, column: 10, scope: !3737)
!3737 = distinct !DILexicalBlock(scope: !3733, file: !77, line: 4032, column: 25)
!3738 = !DILocation(line: 4033, column: 8, scope: !3737)
!3739 = !DILocation(line: 4035, column: 19, scope: !3740)
!3740 = distinct !DILexicalBlock(scope: !3737, file: !77, line: 4035, column: 7)
!3741 = !DILocation(line: 4035, column: 28, scope: !3740)
!3742 = !DILocation(line: 4035, column: 7, scope: !3737)
!3743 = !DILocation(line: 4036, column: 33, scope: !3744)
!3744 = distinct !DILexicalBlock(scope: !3740, file: !77, line: 4035, column: 58)
!3745 = !DILocation(line: 4036, column: 11, scope: !3744)
!3746 = !DILocation(line: 4036, column: 9, scope: !3744)
!3747 = !DILocation(line: 4037, column: 12, scope: !3744)
!3748 = !DILocation(line: 4037, column: 17, scope: !3744)
!3749 = !DILocation(line: 4037, column: 11, scope: !3744)
!3750 = !DILocation(line: 4037, column: 9, scope: !3744)
!3751 = !DILocation(line: 4040, column: 11, scope: !3744)
!3752 = !DILocation(line: 4040, column: 19, scope: !3744)
!3753 = !DILocation(line: 4040, column: 23, scope: !3744)
!3754 = !DILocation(line: 4040, column: 16, scope: !3744)
!3755 = !DILocation(line: 4040, column: 9, scope: !3744)
!3756 = !DILocation(line: 4041, column: 3, scope: !3744)
!3757 = !DILocation(line: 4043, column: 33, scope: !3737)
!3758 = !DILocation(line: 4043, column: 11, scope: !3737)
!3759 = !DILocation(line: 4043, column: 9, scope: !3737)
!3760 = !DILocation(line: 4044, column: 10, scope: !3737)
!3761 = !DILocation(line: 4044, column: 15, scope: !3737)
!3762 = !DILocation(line: 4044, column: 8, scope: !3737)
!3763 = !DILocation(line: 4045, column: 10, scope: !3737)
!3764 = !DILocation(line: 4045, column: 19, scope: !3737)
!3765 = !DILocation(line: 4045, column: 25, scope: !3737)
!3766 = !DILocation(line: 4045, column: 31, scope: !3737)
!3767 = !DILocation(line: 4045, column: 15, scope: !3737)
!3768 = !DILocation(line: 4045, column: 8, scope: !3737)
!3769 = !DILocation(line: 4047, column: 33, scope: !3737)
!3770 = !DILocation(line: 4047, column: 11, scope: !3737)
!3771 = !DILocation(line: 4047, column: 9, scope: !3737)
!3772 = !DILocation(line: 4048, column: 10, scope: !3737)
!3773 = !DILocation(line: 4048, column: 15, scope: !3737)
!3774 = !DILocation(line: 4048, column: 8, scope: !3737)
!3775 = !DILocation(line: 4049, column: 10, scope: !3737)
!3776 = !DILocation(line: 4049, column: 19, scope: !3737)
!3777 = !DILocation(line: 4049, column: 25, scope: !3737)
!3778 = !DILocation(line: 4049, column: 31, scope: !3737)
!3779 = !DILocation(line: 4049, column: 15, scope: !3737)
!3780 = !DILocation(line: 4049, column: 8, scope: !3737)
!3781 = !DILocation(line: 4051, column: 19, scope: !3737)
!3782 = !DILocation(line: 4051, column: 3, scope: !3737)
!3783 = !DILocation(line: 4051, column: 23, scope: !3737)
!3784 = !DILocation(line: 4053, column: 10, scope: !3737)
!3785 = !DILocation(line: 4053, column: 8, scope: !3737)
!3786 = !DILocation(line: 4054, column: 33, scope: !3737)
!3787 = !DILocation(line: 4054, column: 11, scope: !3737)
!3788 = !DILocation(line: 4054, column: 9, scope: !3737)
!3789 = !DILocation(line: 4055, column: 10, scope: !3737)
!3790 = !DILocation(line: 4055, column: 15, scope: !3737)
!3791 = !DILocation(line: 4055, column: 8, scope: !3737)
!3792 = !DILocation(line: 4056, column: 10, scope: !3737)
!3793 = !DILocation(line: 4056, column: 18, scope: !3737)
!3794 = !DILocation(line: 4056, column: 24, scope: !3737)
!3795 = !DILocation(line: 4056, column: 15, scope: !3737)
!3796 = !DILocation(line: 4056, column: 8, scope: !3737)
!3797 = !DILocation(line: 4058, column: 19, scope: !3737)
!3798 = !DILocation(line: 4058, column: 3, scope: !3737)
!3799 = !DILocation(line: 4058, column: 23, scope: !3737)
!3800 = !DILocation(line: 4062, column: 49, scope: !3737)
!3801 = !DILocation(line: 4062, column: 61, scope: !3737)
!3802 = !DILocation(line: 4062, column: 10, scope: !3737)
!3803 = !DILocation(line: 4062, column: 8, scope: !3737)
!3804 = !DILocation(line: 4063, column: 2, scope: !3737)
!3805 = !DILocation(line: 4065, column: 2, scope: !3703)
!3806 = distinct !DISubprogram(name: "enable_no_motion_int", scope: !77, file: !77, line: 3631, type: !3807, isLocal: true, isDefinition: true, scopeLine: 3633, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!3807 = !DISubroutineType(types: !3808)
!3808 = !{!62, !3809, !252}
!3809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3810, size: 64)
!3810 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1861)
!3811 = !DILocalVariable(name: "no_mot_int_cfg", arg: 1, scope: !3806, file: !77, line: 3631, type: !3809)
!3812 = !DILocation(line: 3631, column: 79, scope: !3806)
!3813 = !DILocalVariable(name: "dev", arg: 2, scope: !3806, file: !77, line: 3632, type: !252)
!3814 = !DILocation(line: 3632, column: 31, scope: !3806)
!3815 = !DILocalVariable(name: "rslt", scope: !3806, file: !77, line: 3634, type: !62)
!3816 = !DILocation(line: 3634, column: 9, scope: !3806)
!3817 = !DILocalVariable(name: "temp", scope: !3806, file: !77, line: 3636, type: !17)
!3818 = !DILocation(line: 3636, column: 10, scope: !3806)
!3819 = !DILocation(line: 3633, column: 3, scope: !3806)
!3820 = !DILocalVariable(name: "data", scope: !3806, file: !77, line: 3635, type: !17)
!3821 = !DILocation(line: 3635, column: 10, scope: !3806)
!3822 = !DILocation(line: 3639, column: 9, scope: !3806)
!3823 = !DILocation(line: 3639, column: 7, scope: !3806)
!3824 = !DILocation(line: 3640, column: 6, scope: !3825)
!3825 = distinct !DILexicalBlock(scope: !3806, file: !77, line: 3640, column: 6)
!3826 = !DILocation(line: 3640, column: 11, scope: !3825)
!3827 = !DILocation(line: 3640, column: 6, scope: !3806)
!3828 = !DILocation(line: 3641, column: 23, scope: !3829)
!3829 = distinct !DILexicalBlock(scope: !3830, file: !77, line: 3641, column: 7)
!3830 = distinct !DILexicalBlock(scope: !3825, file: !77, line: 3640, column: 25)
!3831 = !DILocation(line: 3641, column: 7, scope: !3829)
!3832 = !DILocation(line: 3641, column: 35, scope: !3829)
!3833 = !DILocation(line: 3641, column: 7, scope: !3830)
!3834 = !DILocation(line: 3642, column: 11, scope: !3835)
!3835 = distinct !DILexicalBlock(scope: !3829, file: !77, line: 3641, column: 41)
!3836 = !DILocation(line: 3642, column: 16, scope: !3835)
!3837 = !DILocation(line: 3642, column: 9, scope: !3835)
!3838 = !DILocation(line: 3644, column: 11, scope: !3835)
!3839 = !DILocation(line: 3644, column: 16, scope: !3835)
!3840 = !DILocation(line: 3644, column: 9, scope: !3835)
!3841 = !DILocation(line: 3645, column: 3, scope: !3835)
!3842 = !DILocation(line: 3646, column: 23, scope: !3843)
!3843 = distinct !DILexicalBlock(scope: !3830, file: !77, line: 3646, column: 7)
!3844 = !DILocation(line: 3646, column: 7, scope: !3843)
!3845 = !DILocation(line: 3646, column: 35, scope: !3843)
!3846 = !DILocation(line: 3646, column: 7, scope: !3830)
!3847 = !DILocation(line: 3647, column: 11, scope: !3848)
!3848 = distinct !DILexicalBlock(scope: !3843, file: !77, line: 3646, column: 41)
!3849 = !DILocation(line: 3647, column: 16, scope: !3848)
!3850 = !DILocation(line: 3647, column: 9, scope: !3848)
!3851 = !DILocation(line: 3649, column: 11, scope: !3848)
!3852 = !DILocation(line: 3649, column: 16, scope: !3848)
!3853 = !DILocation(line: 3649, column: 9, scope: !3848)
!3854 = !DILocation(line: 3650, column: 3, scope: !3848)
!3855 = !DILocation(line: 3651, column: 23, scope: !3856)
!3856 = distinct !DILexicalBlock(scope: !3830, file: !77, line: 3651, column: 7)
!3857 = !DILocation(line: 3651, column: 7, scope: !3856)
!3858 = !DILocation(line: 3651, column: 35, scope: !3856)
!3859 = !DILocation(line: 3651, column: 7, scope: !3830)
!3860 = !DILocation(line: 3652, column: 11, scope: !3861)
!3861 = distinct !DILexicalBlock(scope: !3856, file: !77, line: 3651, column: 41)
!3862 = !DILocation(line: 3652, column: 16, scope: !3861)
!3863 = !DILocation(line: 3652, column: 9, scope: !3861)
!3864 = !DILocation(line: 3654, column: 11, scope: !3861)
!3865 = !DILocation(line: 3654, column: 16, scope: !3861)
!3866 = !DILocation(line: 3654, column: 9, scope: !3861)
!3867 = !DILocation(line: 3655, column: 3, scope: !3861)
!3868 = !DILocation(line: 3657, column: 10, scope: !3830)
!3869 = !DILocation(line: 3657, column: 8, scope: !3830)
!3870 = !DILocation(line: 3658, column: 2, scope: !3830)
!3871 = !DILocation(line: 3660, column: 2, scope: !3806)
!3872 = distinct !DISubprogram(name: "config_no_motion_int_settg", scope: !77, file: !77, line: 3667, type: !3873, isLocal: true, isDefinition: true, scopeLine: 3670, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!3873 = !DISubroutineType(types: !3874)
!3874 = !{!62, !2401, !3809, !252}
!3875 = !DILocalVariable(name: "int_config", arg: 1, scope: !3872, file: !77, line: 3667, type: !2401)
!3876 = !DILocation(line: 3667, column: 73, scope: !3872)
!3877 = !DILocalVariable(name: "no_mot_int_cfg", arg: 2, scope: !3872, file: !77, line: 3668, type: !3809)
!3878 = !DILocation(line: 3668, column: 49, scope: !3872)
!3879 = !DILocalVariable(name: "dev", arg: 3, scope: !3872, file: !77, line: 3669, type: !252)
!3880 = !DILocation(line: 3669, column: 31, scope: !3872)
!3881 = !DILocalVariable(name: "rslt", scope: !3872, file: !77, line: 3671, type: !62)
!3882 = !DILocation(line: 3671, column: 9, scope: !3872)
!3883 = !DILocation(line: 3670, column: 3, scope: !3872)
!3884 = !DILocation(line: 3674, column: 9, scope: !3872)
!3885 = !DILocation(line: 3674, column: 7, scope: !3872)
!3886 = !DILocation(line: 3675, column: 6, scope: !3887)
!3887 = distinct !DILexicalBlock(scope: !3872, file: !77, line: 3675, column: 6)
!3888 = !DILocation(line: 3675, column: 11, scope: !3887)
!3889 = !DILocation(line: 3675, column: 6, scope: !3872)
!3890 = !DILocation(line: 3676, column: 10, scope: !3891)
!3891 = distinct !DILexicalBlock(scope: !3887, file: !77, line: 3675, column: 25)
!3892 = !DILocation(line: 3676, column: 8, scope: !3891)
!3893 = !DILocation(line: 3677, column: 7, scope: !3894)
!3894 = distinct !DILexicalBlock(scope: !3891, file: !77, line: 3677, column: 7)
!3895 = !DILocation(line: 3677, column: 12, scope: !3894)
!3896 = !DILocation(line: 3677, column: 7, scope: !3891)
!3897 = !DILocation(line: 3678, column: 11, scope: !3898)
!3898 = distinct !DILexicalBlock(scope: !3894, file: !77, line: 3677, column: 26)
!3899 = !DILocation(line: 3678, column: 9, scope: !3898)
!3900 = !DILocation(line: 3679, column: 8, scope: !3901)
!3901 = distinct !DILexicalBlock(scope: !3898, file: !77, line: 3679, column: 8)
!3902 = !DILocation(line: 3679, column: 13, scope: !3901)
!3903 = !DILocation(line: 3679, column: 8, scope: !3898)
!3904 = !DILocation(line: 3680, column: 12, scope: !3901)
!3905 = !DILocation(line: 3680, column: 10, scope: !3901)
!3906 = !DILocation(line: 3680, column: 5, scope: !3901)
!3907 = !DILocation(line: 3681, column: 3, scope: !3898)
!3908 = !DILocation(line: 3682, column: 2, scope: !3891)
!3909 = !DILocation(line: 3684, column: 2, scope: !3872)
!3910 = distinct !DISubprogram(name: "config_no_motion_data_src", scope: !77, file: !77, line: 3691, type: !3807, isLocal: true, isDefinition: true, scopeLine: 3693, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!3911 = !DILocalVariable(name: "no_mot_int_cfg", arg: 1, scope: !3910, file: !77, line: 3691, type: !3809)
!3912 = !DILocation(line: 3691, column: 84, scope: !3910)
!3913 = !DILocalVariable(name: "dev", arg: 2, scope: !3910, file: !77, line: 3692, type: !252)
!3914 = !DILocation(line: 3692, column: 31, scope: !3910)
!3915 = !DILocalVariable(name: "rslt", scope: !3910, file: !77, line: 3694, type: !62)
!3916 = !DILocation(line: 3694, column: 9, scope: !3910)
!3917 = !DILocalVariable(name: "temp", scope: !3910, file: !77, line: 3696, type: !17)
!3918 = !DILocation(line: 3696, column: 10, scope: !3910)
!3919 = !DILocation(line: 3693, column: 3, scope: !3910)
!3920 = !DILocalVariable(name: "data", scope: !3910, file: !77, line: 3695, type: !17)
!3921 = !DILocation(line: 3695, column: 10, scope: !3910)
!3922 = !DILocation(line: 3699, column: 9, scope: !3910)
!3923 = !DILocation(line: 3699, column: 7, scope: !3910)
!3924 = !DILocation(line: 3700, column: 6, scope: !3925)
!3925 = distinct !DILexicalBlock(scope: !3910, file: !77, line: 3700, column: 6)
!3926 = !DILocation(line: 3700, column: 11, scope: !3925)
!3927 = !DILocation(line: 3700, column: 6, scope: !3910)
!3928 = !DILocation(line: 3701, column: 10, scope: !3929)
!3929 = distinct !DILexicalBlock(scope: !3925, file: !77, line: 3700, column: 25)
!3930 = !DILocation(line: 3701, column: 15, scope: !3929)
!3931 = !DILocation(line: 3701, column: 8, scope: !3929)
!3932 = !DILocation(line: 3702, column: 10, scope: !3929)
!3933 = !DILocation(line: 3702, column: 35, scope: !3929)
!3934 = !DILocation(line: 3702, column: 19, scope: !3929)
!3935 = !DILocation(line: 3702, column: 49, scope: !3929)
!3936 = !DILocation(line: 3702, column: 55, scope: !3929)
!3937 = !DILocation(line: 3702, column: 15, scope: !3929)
!3938 = !DILocation(line: 3702, column: 8, scope: !3929)
!3939 = !DILocation(line: 3704, column: 10, scope: !3929)
!3940 = !DILocation(line: 3704, column: 8, scope: !3929)
!3941 = !DILocation(line: 3705, column: 2, scope: !3929)
!3942 = !DILocation(line: 3707, column: 2, scope: !3910)
!3943 = distinct !DISubprogram(name: "config_no_motion_dur_thr", scope: !77, file: !77, line: 3714, type: !3807, isLocal: true, isDefinition: true, scopeLine: 3716, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!3944 = !DILocalVariable(name: "no_mot_int_cfg", arg: 1, scope: !3943, file: !77, line: 3714, type: !3809)
!3945 = !DILocation(line: 3714, column: 83, scope: !3943)
!3946 = !DILocalVariable(name: "dev", arg: 2, scope: !3943, file: !77, line: 3715, type: !252)
!3947 = !DILocation(line: 3715, column: 31, scope: !3943)
!3948 = !DILocalVariable(name: "rslt", scope: !3943, file: !77, line: 3717, type: !62)
!3949 = !DILocation(line: 3717, column: 9, scope: !3943)
!3950 = !DILocalVariable(name: "temp", scope: !3943, file: !77, line: 3719, type: !17)
!3951 = !DILocation(line: 3719, column: 10, scope: !3943)
!3952 = !DILocalVariable(name: "temp_1", scope: !3943, file: !77, line: 3720, type: !17)
!3953 = !DILocation(line: 3720, column: 10, scope: !3943)
!3954 = !DILocalVariable(name: "reg_addr", scope: !3943, file: !77, line: 3721, type: !17)
!3955 = !DILocation(line: 3721, column: 10, scope: !3943)
!3956 = !DILocation(line: 3716, column: 3, scope: !3943)
!3957 = !DILocalVariable(name: "data", scope: !3943, file: !77, line: 3718, type: !17)
!3958 = !DILocation(line: 3718, column: 10, scope: !3943)
!3959 = !DILocalVariable(name: "data_array", scope: !3943, file: !77, line: 3722, type: !573)
!3960 = !DILocation(line: 3722, column: 10, scope: !3943)
!3961 = !DILocation(line: 3725, column: 11, scope: !3943)
!3962 = !DILocation(line: 3726, column: 9, scope: !3943)
!3963 = !DILocation(line: 3726, column: 7, scope: !3943)
!3964 = !DILocation(line: 3727, column: 6, scope: !3965)
!3965 = distinct !DILexicalBlock(scope: !3943, file: !77, line: 3727, column: 6)
!3966 = !DILocation(line: 3727, column: 11, scope: !3965)
!3967 = !DILocation(line: 3727, column: 6, scope: !3943)
!3968 = !DILocation(line: 3728, column: 10, scope: !3969)
!3969 = distinct !DILexicalBlock(scope: !3965, file: !77, line: 3727, column: 25)
!3970 = !DILocation(line: 3728, column: 15, scope: !3969)
!3971 = !DILocation(line: 3728, column: 8, scope: !3969)
!3972 = !DILocation(line: 3730, column: 10, scope: !3969)
!3973 = !DILocation(line: 3730, column: 35, scope: !3969)
!3974 = !DILocation(line: 3730, column: 19, scope: !3969)
!3975 = !DILocation(line: 3730, column: 49, scope: !3969)
!3976 = !DILocation(line: 3730, column: 55, scope: !3969)
!3977 = !DILocation(line: 3730, column: 15, scope: !3969)
!3978 = !DILocation(line: 3730, column: 8, scope: !3969)
!3979 = !DILocation(line: 3732, column: 10, scope: !3969)
!3980 = !DILocation(line: 3732, column: 8, scope: !3969)
!3981 = !DILocation(line: 3733, column: 7, scope: !3982)
!3982 = distinct !DILexicalBlock(scope: !3969, file: !77, line: 3733, column: 7)
!3983 = !DILocation(line: 3733, column: 12, scope: !3982)
!3984 = !DILocation(line: 3733, column: 7, scope: !3969)
!3985 = !DILocation(line: 3734, column: 13, scope: !3986)
!3986 = distinct !DILexicalBlock(scope: !3982, file: !77, line: 3733, column: 26)
!3987 = !DILocation(line: 3735, column: 11, scope: !3986)
!3988 = !DILocation(line: 3735, column: 9, scope: !3986)
!3989 = !DILocation(line: 3736, column: 8, scope: !3990)
!3990 = distinct !DILexicalBlock(scope: !3986, file: !77, line: 3736, column: 8)
!3991 = !DILocation(line: 3736, column: 13, scope: !3990)
!3992 = !DILocation(line: 3736, column: 8, scope: !3986)
!3993 = !DILocation(line: 3737, column: 12, scope: !3994)
!3994 = distinct !DILexicalBlock(scope: !3990, file: !77, line: 3736, column: 27)
!3995 = !DILocation(line: 3737, column: 17, scope: !3994)
!3996 = !DILocation(line: 3737, column: 10, scope: !3994)
!3997 = !DILocation(line: 3739, column: 31, scope: !3994)
!3998 = !DILocation(line: 3739, column: 15, scope: !3994)
!3999 = !DILocation(line: 3739, column: 45, scope: !3994)
!4000 = !DILocation(line: 3739, column: 14, scope: !3994)
!4001 = !DILocation(line: 3739, column: 12, scope: !3994)
!4002 = !DILocation(line: 3740, column: 13, scope: !3994)
!4003 = !DILocation(line: 3740, column: 20, scope: !3994)
!4004 = !DILocation(line: 3740, column: 18, scope: !3994)
!4005 = !DILocation(line: 3740, column: 12, scope: !3994)
!4006 = !DILocation(line: 3740, column: 10, scope: !3994)
!4007 = !DILocation(line: 3741, column: 21, scope: !3994)
!4008 = !DILocation(line: 3741, column: 5, scope: !3994)
!4009 = !DILocation(line: 3741, column: 19, scope: !3994)
!4010 = !DILocation(line: 3743, column: 37, scope: !3994)
!4011 = !DILocation(line: 3743, column: 5, scope: !3994)
!4012 = !DILocation(line: 3743, column: 19, scope: !3994)
!4013 = !DILocation(line: 3744, column: 14, scope: !3994)
!4014 = !DILocation(line: 3747, column: 38, scope: !3994)
!4015 = !DILocation(line: 3747, column: 12, scope: !3994)
!4016 = !DILocation(line: 3747, column: 10, scope: !3994)
!4017 = !DILocation(line: 3748, column: 4, scope: !3994)
!4018 = !DILocation(line: 3749, column: 3, scope: !3986)
!4019 = !DILocation(line: 3750, column: 2, scope: !3969)
!4020 = !DILocation(line: 3752, column: 2, scope: !3943)
!4021 = distinct !DISubprogram(name: "enable_sig_motion_int", scope: !77, file: !77, line: 3758, type: !4022, isLocal: true, isDefinition: true, scopeLine: 3759, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!4022 = !DISubroutineType(types: !4023)
!4023 = !{!62, !4024, !341}
!4024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4025, size: 64)
!4025 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1845)
!4026 = !DILocalVariable(name: "sig_mot_int_cfg", arg: 1, scope: !4021, file: !77, line: 3758, type: !4024)
!4027 = !DILocation(line: 3758, column: 78, scope: !4021)
!4028 = !DILocalVariable(name: "dev", arg: 2, scope: !4021, file: !77, line: 3758, type: !341)
!4029 = !DILocation(line: 3758, column: 114, scope: !4021)
!4030 = !DILocalVariable(name: "rslt", scope: !4021, file: !77, line: 3760, type: !62)
!4031 = !DILocation(line: 3760, column: 9, scope: !4021)
!4032 = !DILocalVariable(name: "temp", scope: !4021, file: !77, line: 3762, type: !17)
!4033 = !DILocation(line: 3762, column: 10, scope: !4021)
!4034 = !DILocation(line: 3759, column: 3, scope: !4021)
!4035 = !DILocalVariable(name: "data", scope: !4021, file: !77, line: 3761, type: !17)
!4036 = !DILocation(line: 3761, column: 10, scope: !4021)
!4037 = !DILocation(line: 3766, column: 9, scope: !4021)
!4038 = !DILocation(line: 3766, column: 7, scope: !4021)
!4039 = !DILocation(line: 3767, column: 6, scope: !4040)
!4040 = distinct !DILexicalBlock(scope: !4021, file: !77, line: 3767, column: 6)
!4041 = !DILocation(line: 3767, column: 11, scope: !4040)
!4042 = !DILocation(line: 3767, column: 6, scope: !4021)
!4043 = !DILocation(line: 3768, column: 24, scope: !4044)
!4044 = distinct !DILexicalBlock(scope: !4045, file: !77, line: 3768, column: 7)
!4045 = distinct !DILexicalBlock(scope: !4040, file: !77, line: 3767, column: 25)
!4046 = !DILocation(line: 3768, column: 7, scope: !4044)
!4047 = !DILocation(line: 3768, column: 31, scope: !4044)
!4048 = !DILocation(line: 3768, column: 7, scope: !4045)
!4049 = !DILocation(line: 3769, column: 11, scope: !4050)
!4050 = distinct !DILexicalBlock(scope: !4044, file: !77, line: 3768, column: 49)
!4051 = !DILocation(line: 3769, column: 16, scope: !4050)
!4052 = !DILocation(line: 3769, column: 9, scope: !4050)
!4053 = !DILocation(line: 3770, column: 11, scope: !4050)
!4054 = !DILocation(line: 3770, column: 16, scope: !4050)
!4055 = !DILocation(line: 3770, column: 9, scope: !4050)
!4056 = !DILocation(line: 3772, column: 9, scope: !4050)
!4057 = !DILocation(line: 3772, column: 21, scope: !4050)
!4058 = !DILocation(line: 3773, column: 3, scope: !4050)
!4059 = !DILocation(line: 3774, column: 11, scope: !4060)
!4060 = distinct !DILexicalBlock(scope: !4044, file: !77, line: 3773, column: 10)
!4061 = !DILocation(line: 3774, column: 16, scope: !4060)
!4062 = !DILocation(line: 3774, column: 9, scope: !4060)
!4063 = !DILocation(line: 3776, column: 9, scope: !4060)
!4064 = !DILocation(line: 3776, column: 21, scope: !4060)
!4065 = !DILocation(line: 3779, column: 10, scope: !4045)
!4066 = !DILocation(line: 3779, column: 8, scope: !4045)
!4067 = !DILocation(line: 3780, column: 2, scope: !4045)
!4068 = !DILocation(line: 3781, column: 2, scope: !4021)
!4069 = distinct !DISubprogram(name: "config_sig_motion_int_settg", scope: !77, file: !77, line: 3788, type: !4070, isLocal: true, isDefinition: true, scopeLine: 3791, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!4070 = !DISubroutineType(types: !4071)
!4071 = !{!62, !2401, !4024, !252}
!4072 = !DILocalVariable(name: "int_config", arg: 1, scope: !4069, file: !77, line: 3788, type: !2401)
!4073 = !DILocation(line: 3788, column: 74, scope: !4069)
!4074 = !DILocalVariable(name: "sig_mot_int_cfg", arg: 2, scope: !4069, file: !77, line: 3789, type: !4024)
!4075 = !DILocation(line: 3789, column: 47, scope: !4069)
!4076 = !DILocalVariable(name: "dev", arg: 3, scope: !4069, file: !77, line: 3790, type: !252)
!4077 = !DILocation(line: 3790, column: 31, scope: !4069)
!4078 = !DILocalVariable(name: "rslt", scope: !4069, file: !77, line: 3792, type: !62)
!4079 = !DILocation(line: 3792, column: 9, scope: !4069)
!4080 = !DILocation(line: 3791, column: 3, scope: !4069)
!4081 = !DILocation(line: 3795, column: 9, scope: !4069)
!4082 = !DILocation(line: 3795, column: 7, scope: !4069)
!4083 = !DILocation(line: 3796, column: 6, scope: !4084)
!4084 = distinct !DILexicalBlock(scope: !4069, file: !77, line: 3796, column: 6)
!4085 = !DILocation(line: 3796, column: 11, scope: !4084)
!4086 = !DILocation(line: 3796, column: 6, scope: !4069)
!4087 = !DILocation(line: 3797, column: 10, scope: !4088)
!4088 = distinct !DILexicalBlock(scope: !4084, file: !77, line: 3796, column: 25)
!4089 = !DILocation(line: 3797, column: 8, scope: !4088)
!4090 = !DILocation(line: 3798, column: 7, scope: !4091)
!4091 = distinct !DILexicalBlock(scope: !4088, file: !77, line: 3798, column: 7)
!4092 = !DILocation(line: 3798, column: 12, scope: !4091)
!4093 = !DILocation(line: 3798, column: 7, scope: !4088)
!4094 = !DILocation(line: 3799, column: 11, scope: !4095)
!4095 = distinct !DILexicalBlock(scope: !4091, file: !77, line: 3798, column: 26)
!4096 = !DILocation(line: 3799, column: 9, scope: !4095)
!4097 = !DILocation(line: 3800, column: 8, scope: !4098)
!4098 = distinct !DILexicalBlock(scope: !4095, file: !77, line: 3800, column: 8)
!4099 = !DILocation(line: 3800, column: 13, scope: !4098)
!4100 = !DILocation(line: 3800, column: 8, scope: !4095)
!4101 = !DILocation(line: 3801, column: 12, scope: !4098)
!4102 = !DILocation(line: 3801, column: 10, scope: !4098)
!4103 = !DILocation(line: 3801, column: 5, scope: !4098)
!4104 = !DILocation(line: 3802, column: 3, scope: !4095)
!4105 = !DILocation(line: 3803, column: 2, scope: !4088)
!4106 = !DILocation(line: 3805, column: 2, scope: !4069)
!4107 = distinct !DISubprogram(name: "config_sig_motion_data_src", scope: !77, file: !77, line: 3812, type: !4108, isLocal: true, isDefinition: true, scopeLine: 3814, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!4108 = !DISubroutineType(types: !4109)
!4109 = !{!62, !4024, !252}
!4110 = !DILocalVariable(name: "sig_mot_int_cfg", arg: 1, scope: !4107, file: !77, line: 3812, type: !4024)
!4111 = !DILocation(line: 3812, column: 83, scope: !4107)
!4112 = !DILocalVariable(name: "dev", arg: 2, scope: !4107, file: !77, line: 3813, type: !252)
!4113 = !DILocation(line: 3813, column: 31, scope: !4107)
!4114 = !DILocalVariable(name: "rslt", scope: !4107, file: !77, line: 3815, type: !62)
!4115 = !DILocation(line: 3815, column: 9, scope: !4107)
!4116 = !DILocalVariable(name: "temp", scope: !4107, file: !77, line: 3817, type: !17)
!4117 = !DILocation(line: 3817, column: 10, scope: !4107)
!4118 = !DILocation(line: 3814, column: 3, scope: !4107)
!4119 = !DILocalVariable(name: "data", scope: !4107, file: !77, line: 3816, type: !17)
!4120 = !DILocation(line: 3816, column: 10, scope: !4107)
!4121 = !DILocation(line: 3820, column: 9, scope: !4107)
!4122 = !DILocation(line: 3820, column: 7, scope: !4107)
!4123 = !DILocation(line: 3821, column: 6, scope: !4124)
!4124 = distinct !DILexicalBlock(scope: !4107, file: !77, line: 3821, column: 6)
!4125 = !DILocation(line: 3821, column: 11, scope: !4124)
!4126 = !DILocation(line: 3821, column: 6, scope: !4107)
!4127 = !DILocation(line: 3822, column: 10, scope: !4128)
!4128 = distinct !DILexicalBlock(scope: !4124, file: !77, line: 3821, column: 25)
!4129 = !DILocation(line: 3822, column: 15, scope: !4128)
!4130 = !DILocation(line: 3822, column: 8, scope: !4128)
!4131 = !DILocation(line: 3823, column: 10, scope: !4128)
!4132 = !DILocation(line: 3823, column: 36, scope: !4128)
!4133 = !DILocation(line: 3823, column: 19, scope: !4128)
!4134 = !DILocation(line: 3823, column: 49, scope: !4128)
!4135 = !DILocation(line: 3823, column: 55, scope: !4128)
!4136 = !DILocation(line: 3823, column: 15, scope: !4128)
!4137 = !DILocation(line: 3823, column: 8, scope: !4128)
!4138 = !DILocation(line: 3825, column: 10, scope: !4128)
!4139 = !DILocation(line: 3825, column: 8, scope: !4128)
!4140 = !DILocation(line: 3826, column: 2, scope: !4128)
!4141 = !DILocation(line: 3828, column: 2, scope: !4107)
!4142 = distinct !DISubprogram(name: "config_sig_dur_threshold", scope: !77, file: !77, line: 3835, type: !4108, isLocal: true, isDefinition: true, scopeLine: 3837, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!4143 = !DILocalVariable(name: "sig_mot_int_cfg", arg: 1, scope: !4142, file: !77, line: 3835, type: !4024)
!4144 = !DILocation(line: 3835, column: 81, scope: !4142)
!4145 = !DILocalVariable(name: "dev", arg: 2, scope: !4142, file: !77, line: 3836, type: !252)
!4146 = !DILocation(line: 3836, column: 31, scope: !4142)
!4147 = !DILocalVariable(name: "rslt", scope: !4142, file: !77, line: 3838, type: !62)
!4148 = !DILocation(line: 3838, column: 9, scope: !4142)
!4149 = !DILocalVariable(name: "temp", scope: !4142, file: !77, line: 3840, type: !17)
!4150 = !DILocation(line: 3840, column: 10, scope: !4142)
!4151 = !DILocation(line: 3837, column: 3, scope: !4142)
!4152 = !DILocalVariable(name: "data", scope: !4142, file: !77, line: 3839, type: !17)
!4153 = !DILocation(line: 3839, column: 10, scope: !4142)
!4154 = !DILocation(line: 3845, column: 26, scope: !4142)
!4155 = !DILocation(line: 3845, column: 7, scope: !4142)
!4156 = !DILocation(line: 3847, column: 9, scope: !4142)
!4157 = !DILocation(line: 3847, column: 7, scope: !4142)
!4158 = !DILocation(line: 3848, column: 6, scope: !4159)
!4159 = distinct !DILexicalBlock(scope: !4142, file: !77, line: 3848, column: 6)
!4160 = !DILocation(line: 3848, column: 11, scope: !4159)
!4161 = !DILocation(line: 3848, column: 6, scope: !4142)
!4162 = !DILocation(line: 3849, column: 10, scope: !4163)
!4163 = distinct !DILexicalBlock(scope: !4159, file: !77, line: 3848, column: 25)
!4164 = !DILocation(line: 3849, column: 8, scope: !4163)
!4165 = !DILocation(line: 3850, column: 7, scope: !4166)
!4166 = distinct !DILexicalBlock(scope: !4163, file: !77, line: 3850, column: 7)
!4167 = !DILocation(line: 3850, column: 12, scope: !4166)
!4168 = !DILocation(line: 3850, column: 7, scope: !4163)
!4169 = !DILocation(line: 3851, column: 11, scope: !4170)
!4170 = distinct !DILexicalBlock(scope: !4166, file: !77, line: 3850, column: 26)
!4171 = !DILocation(line: 3851, column: 16, scope: !4170)
!4172 = !DILocation(line: 3851, column: 9, scope: !4170)
!4173 = !DILocation(line: 3853, column: 11, scope: !4170)
!4174 = !DILocation(line: 3853, column: 37, scope: !4170)
!4175 = !DILocation(line: 3853, column: 20, scope: !4170)
!4176 = !DILocation(line: 3853, column: 50, scope: !4170)
!4177 = !DILocation(line: 3853, column: 56, scope: !4170)
!4178 = !DILocation(line: 3853, column: 16, scope: !4170)
!4179 = !DILocation(line: 3853, column: 9, scope: !4170)
!4180 = !DILocation(line: 3854, column: 11, scope: !4170)
!4181 = !DILocation(line: 3854, column: 16, scope: !4170)
!4182 = !DILocation(line: 3854, column: 9, scope: !4170)
!4183 = !DILocation(line: 3856, column: 11, scope: !4170)
!4184 = !DILocation(line: 3856, column: 37, scope: !4170)
!4185 = !DILocation(line: 3856, column: 20, scope: !4170)
!4186 = !DILocation(line: 3856, column: 51, scope: !4170)
!4187 = !DILocation(line: 3856, column: 57, scope: !4170)
!4188 = !DILocation(line: 3856, column: 16, scope: !4170)
!4189 = !DILocation(line: 3856, column: 9, scope: !4170)
!4190 = !DILocation(line: 3859, column: 11, scope: !4170)
!4191 = !DILocation(line: 3859, column: 16, scope: !4170)
!4192 = !DILocation(line: 3859, column: 9, scope: !4170)
!4193 = !DILocation(line: 3860, column: 11, scope: !4170)
!4194 = !DILocation(line: 3860, column: 37, scope: !4170)
!4195 = !DILocation(line: 3860, column: 20, scope: !4170)
!4196 = !DILocation(line: 3860, column: 44, scope: !4170)
!4197 = !DILocation(line: 3860, column: 50, scope: !4170)
!4198 = !DILocation(line: 3860, column: 16, scope: !4170)
!4199 = !DILocation(line: 3860, column: 9, scope: !4170)
!4200 = !DILocation(line: 3862, column: 11, scope: !4170)
!4201 = !DILocation(line: 3862, column: 9, scope: !4170)
!4202 = !DILocation(line: 3863, column: 3, scope: !4170)
!4203 = !DILocation(line: 3864, column: 2, scope: !4163)
!4204 = !DILocation(line: 3865, column: 2, scope: !4142)
!4205 = distinct !DISubprogram(name: "enable_accel_any_motion_int", scope: !77, file: !77, line: 3378, type: !4206, isLocal: true, isDefinition: true, scopeLine: 3380, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!4206 = !DISubroutineType(types: !4207)
!4207 = !{!62, !4208, !341}
!4208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4209, size: 64)
!4209 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1835)
!4210 = !DILocalVariable(name: "any_motion_int_cfg", arg: 1, scope: !4205, file: !77, line: 3378, type: !4208)
!4211 = !DILocation(line: 3378, column: 84, scope: !4205)
!4212 = !DILocalVariable(name: "dev", arg: 2, scope: !4205, file: !77, line: 3379, type: !341)
!4213 = !DILocation(line: 3379, column: 26, scope: !4205)
!4214 = !DILocalVariable(name: "rslt", scope: !4205, file: !77, line: 3381, type: !62)
!4215 = !DILocation(line: 3381, column: 9, scope: !4205)
!4216 = !DILocalVariable(name: "temp", scope: !4205, file: !77, line: 3383, type: !17)
!4217 = !DILocation(line: 3383, column: 10, scope: !4205)
!4218 = !DILocation(line: 3380, column: 3, scope: !4205)
!4219 = !DILocalVariable(name: "data", scope: !4205, file: !77, line: 3382, type: !17)
!4220 = !DILocation(line: 3382, column: 10, scope: !4205)
!4221 = !DILocation(line: 3387, column: 9, scope: !4205)
!4222 = !DILocation(line: 3387, column: 7, scope: !4205)
!4223 = !DILocation(line: 3388, column: 6, scope: !4224)
!4224 = distinct !DILexicalBlock(scope: !4205, file: !77, line: 3388, column: 6)
!4225 = !DILocation(line: 3388, column: 11, scope: !4224)
!4226 = !DILocation(line: 3388, column: 6, scope: !4205)
!4227 = !DILocation(line: 3390, column: 27, scope: !4228)
!4228 = distinct !DILexicalBlock(scope: !4229, file: !77, line: 3390, column: 7)
!4229 = distinct !DILexicalBlock(scope: !4224, file: !77, line: 3388, column: 25)
!4230 = !DILocation(line: 3390, column: 7, scope: !4228)
!4231 = !DILocation(line: 3390, column: 40, scope: !4228)
!4232 = !DILocation(line: 3390, column: 7, scope: !4229)
!4233 = !DILocation(line: 3391, column: 11, scope: !4234)
!4234 = distinct !DILexicalBlock(scope: !4228, file: !77, line: 3390, column: 58)
!4235 = !DILocation(line: 3391, column: 16, scope: !4234)
!4236 = !DILocation(line: 3391, column: 9, scope: !4234)
!4237 = !DILocation(line: 3393, column: 11, scope: !4234)
!4238 = !DILocation(line: 3393, column: 39, scope: !4234)
!4239 = !DILocation(line: 3393, column: 19, scope: !4234)
!4240 = !DILocation(line: 3393, column: 51, scope: !4234)
!4241 = !DILocation(line: 3393, column: 16, scope: !4234)
!4242 = !DILocation(line: 3393, column: 9, scope: !4234)
!4243 = !DILocation(line: 3396, column: 11, scope: !4234)
!4244 = !DILocation(line: 3396, column: 16, scope: !4234)
!4245 = !DILocation(line: 3396, column: 9, scope: !4234)
!4246 = !DILocation(line: 3398, column: 11, scope: !4234)
!4247 = !DILocation(line: 3398, column: 40, scope: !4234)
!4248 = !DILocation(line: 3398, column: 20, scope: !4234)
!4249 = !DILocation(line: 3398, column: 52, scope: !4234)
!4250 = !DILocation(line: 3398, column: 58, scope: !4234)
!4251 = !DILocation(line: 3398, column: 16, scope: !4234)
!4252 = !DILocation(line: 3398, column: 9, scope: !4234)
!4253 = !DILocation(line: 3401, column: 11, scope: !4234)
!4254 = !DILocation(line: 3401, column: 16, scope: !4234)
!4255 = !DILocation(line: 3401, column: 9, scope: !4234)
!4256 = !DILocation(line: 3403, column: 11, scope: !4234)
!4257 = !DILocation(line: 3403, column: 40, scope: !4234)
!4258 = !DILocation(line: 3403, column: 20, scope: !4234)
!4259 = !DILocation(line: 3403, column: 52, scope: !4234)
!4260 = !DILocation(line: 3403, column: 58, scope: !4234)
!4261 = !DILocation(line: 3403, column: 16, scope: !4234)
!4262 = !DILocation(line: 3403, column: 9, scope: !4234)
!4263 = !DILocation(line: 3406, column: 9, scope: !4234)
!4264 = !DILocation(line: 3406, column: 21, scope: !4234)
!4265 = !DILocation(line: 3407, column: 3, scope: !4234)
!4266 = !DILocation(line: 3408, column: 11, scope: !4267)
!4267 = distinct !DILexicalBlock(scope: !4228, file: !77, line: 3407, column: 10)
!4268 = !DILocation(line: 3408, column: 16, scope: !4267)
!4269 = !DILocation(line: 3408, column: 9, scope: !4267)
!4270 = !DILocation(line: 3410, column: 9, scope: !4267)
!4271 = !DILocation(line: 3410, column: 21, scope: !4267)
!4272 = !DILocation(line: 3414, column: 10, scope: !4229)
!4273 = !DILocation(line: 3414, column: 8, scope: !4229)
!4274 = !DILocation(line: 3415, column: 2, scope: !4229)
!4275 = !DILocation(line: 3417, column: 2, scope: !4205)
!4276 = distinct !DISubprogram(name: "config_any_motion_int_settg", scope: !77, file: !77, line: 3585, type: !4277, isLocal: true, isDefinition: true, scopeLine: 3588, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!4277 = !DISubroutineType(types: !4278)
!4278 = !{!62, !2401, !4208, !252}
!4279 = !DILocalVariable(name: "int_config", arg: 1, scope: !4276, file: !77, line: 3585, type: !2401)
!4280 = !DILocation(line: 3585, column: 74, scope: !4276)
!4281 = !DILocalVariable(name: "any_motion_int_cfg", arg: 2, scope: !4276, file: !77, line: 3586, type: !4208)
!4282 = !DILocation(line: 3586, column: 47, scope: !4276)
!4283 = !DILocalVariable(name: "dev", arg: 3, scope: !4276, file: !77, line: 3587, type: !252)
!4284 = !DILocation(line: 3587, column: 31, scope: !4276)
!4285 = !DILocalVariable(name: "rslt", scope: !4276, file: !77, line: 3589, type: !62)
!4286 = !DILocation(line: 3589, column: 9, scope: !4276)
!4287 = !DILocation(line: 3588, column: 3, scope: !4276)
!4288 = !DILocation(line: 3591, column: 9, scope: !4276)
!4289 = !DILocation(line: 3591, column: 7, scope: !4276)
!4290 = !DILocation(line: 3592, column: 6, scope: !4291)
!4291 = distinct !DILexicalBlock(scope: !4276, file: !77, line: 3592, column: 6)
!4292 = !DILocation(line: 3592, column: 11, scope: !4291)
!4293 = !DILocation(line: 3592, column: 6, scope: !4276)
!4294 = !DILocation(line: 3593, column: 10, scope: !4295)
!4295 = distinct !DILexicalBlock(scope: !4291, file: !77, line: 3592, column: 25)
!4296 = !DILocation(line: 3593, column: 8, scope: !4295)
!4297 = !DILocation(line: 3594, column: 7, scope: !4298)
!4298 = distinct !DILexicalBlock(scope: !4295, file: !77, line: 3594, column: 7)
!4299 = !DILocation(line: 3594, column: 12, scope: !4298)
!4300 = !DILocation(line: 3594, column: 7, scope: !4295)
!4301 = !DILocation(line: 3595, column: 11, scope: !4302)
!4302 = distinct !DILexicalBlock(scope: !4298, file: !77, line: 3594, column: 26)
!4303 = !DILocation(line: 3595, column: 9, scope: !4302)
!4304 = !DILocation(line: 3596, column: 8, scope: !4305)
!4305 = distinct !DILexicalBlock(scope: !4302, file: !77, line: 3596, column: 8)
!4306 = !DILocation(line: 3596, column: 13, scope: !4305)
!4307 = !DILocation(line: 3596, column: 8, scope: !4302)
!4308 = !DILocation(line: 3597, column: 12, scope: !4309)
!4309 = distinct !DILexicalBlock(scope: !4305, file: !77, line: 3596, column: 27)
!4310 = !DILocation(line: 3597, column: 10, scope: !4309)
!4311 = !DILocation(line: 3598, column: 9, scope: !4312)
!4312 = distinct !DILexicalBlock(scope: !4309, file: !77, line: 3598, column: 9)
!4313 = !DILocation(line: 3598, column: 14, scope: !4312)
!4314 = !DILocation(line: 3598, column: 9, scope: !4309)
!4315 = !DILocation(line: 3599, column: 13, scope: !4312)
!4316 = !DILocation(line: 3599, column: 11, scope: !4312)
!4317 = !DILocation(line: 3599, column: 6, scope: !4312)
!4318 = !DILocation(line: 3600, column: 4, scope: !4309)
!4319 = !DILocation(line: 3601, column: 3, scope: !4302)
!4320 = !DILocation(line: 3602, column: 2, scope: !4295)
!4321 = !DILocation(line: 3604, column: 2, scope: !4276)
!4322 = distinct !DISubprogram(name: "disable_sig_motion_int", scope: !77, file: !77, line: 3423, type: !412, isLocal: true, isDefinition: true, scopeLine: 3424, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!4323 = !DILocalVariable(name: "dev", arg: 1, scope: !4322, file: !77, line: 3423, type: !252)
!4324 = !DILocation(line: 3423, column: 63, scope: !4322)
!4325 = !DILocalVariable(name: "rslt", scope: !4322, file: !77, line: 3425, type: !62)
!4326 = !DILocation(line: 3425, column: 9, scope: !4322)
!4327 = !DILocalVariable(name: "temp", scope: !4322, file: !77, line: 3427, type: !17)
!4328 = !DILocation(line: 3427, column: 10, scope: !4322)
!4329 = !DILocation(line: 3424, column: 3, scope: !4322)
!4330 = !DILocalVariable(name: "data", scope: !4322, file: !77, line: 3426, type: !17)
!4331 = !DILocation(line: 3426, column: 10, scope: !4322)
!4332 = !DILocation(line: 3430, column: 9, scope: !4322)
!4333 = !DILocation(line: 3430, column: 7, scope: !4322)
!4334 = !DILocation(line: 3431, column: 6, scope: !4335)
!4335 = distinct !DILexicalBlock(scope: !4322, file: !77, line: 3431, column: 6)
!4336 = !DILocation(line: 3431, column: 11, scope: !4335)
!4337 = !DILocation(line: 3431, column: 6, scope: !4322)
!4338 = !DILocation(line: 3432, column: 11, scope: !4339)
!4339 = distinct !DILexicalBlock(scope: !4335, file: !77, line: 3431, column: 25)
!4340 = !DILocation(line: 3432, column: 16, scope: !4339)
!4341 = !DILocation(line: 3432, column: 10, scope: !4339)
!4342 = !DILocation(line: 3432, column: 8, scope: !4339)
!4343 = !DILocation(line: 3433, column: 7, scope: !4344)
!4344 = distinct !DILexicalBlock(scope: !4339, file: !77, line: 3433, column: 7)
!4345 = !DILocation(line: 3433, column: 7, scope: !4339)
!4346 = !DILocation(line: 3434, column: 11, scope: !4347)
!4347 = distinct !DILexicalBlock(scope: !4344, file: !77, line: 3433, column: 13)
!4348 = !DILocation(line: 3434, column: 16, scope: !4347)
!4349 = !DILocation(line: 3434, column: 9, scope: !4347)
!4350 = !DILocation(line: 3435, column: 9, scope: !4347)
!4351 = !DILocation(line: 3437, column: 11, scope: !4347)
!4352 = !DILocation(line: 3437, column: 9, scope: !4347)
!4353 = !DILocation(line: 3438, column: 3, scope: !4347)
!4354 = !DILocation(line: 3439, column: 2, scope: !4339)
!4355 = !DILocation(line: 3440, column: 2, scope: !4322)
!4356 = distinct !DISubprogram(name: "config_any_motion_src", scope: !77, file: !77, line: 3529, type: !4357, isLocal: true, isDefinition: true, scopeLine: 3531, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!4357 = !DISubroutineType(types: !4358)
!4358 = !{!62, !4208, !252}
!4359 = !DILocalVariable(name: "any_motion_int_cfg", arg: 1, scope: !4356, file: !77, line: 3529, type: !4208)
!4360 = !DILocation(line: 3529, column: 78, scope: !4356)
!4361 = !DILocalVariable(name: "dev", arg: 2, scope: !4356, file: !77, line: 3530, type: !252)
!4362 = !DILocation(line: 3530, column: 31, scope: !4356)
!4363 = !DILocalVariable(name: "rslt", scope: !4356, file: !77, line: 3532, type: !62)
!4364 = !DILocation(line: 3532, column: 9, scope: !4356)
!4365 = !DILocalVariable(name: "temp", scope: !4356, file: !77, line: 3534, type: !17)
!4366 = !DILocation(line: 3534, column: 10, scope: !4356)
!4367 = !DILocation(line: 3531, column: 3, scope: !4356)
!4368 = !DILocalVariable(name: "data", scope: !4356, file: !77, line: 3533, type: !17)
!4369 = !DILocation(line: 3533, column: 10, scope: !4356)
!4370 = !DILocation(line: 3537, column: 9, scope: !4356)
!4371 = !DILocation(line: 3537, column: 7, scope: !4356)
!4372 = !DILocation(line: 3538, column: 6, scope: !4373)
!4373 = distinct !DILexicalBlock(scope: !4356, file: !77, line: 3538, column: 6)
!4374 = !DILocation(line: 3538, column: 11, scope: !4373)
!4375 = !DILocation(line: 3538, column: 6, scope: !4356)
!4376 = !DILocation(line: 3539, column: 10, scope: !4377)
!4377 = distinct !DILexicalBlock(scope: !4373, file: !77, line: 3538, column: 25)
!4378 = !DILocation(line: 3539, column: 15, scope: !4377)
!4379 = !DILocation(line: 3539, column: 8, scope: !4377)
!4380 = !DILocation(line: 3540, column: 10, scope: !4377)
!4381 = !DILocation(line: 3540, column: 39, scope: !4377)
!4382 = !DILocation(line: 3540, column: 19, scope: !4377)
!4383 = !DILocation(line: 3540, column: 58, scope: !4377)
!4384 = !DILocation(line: 3540, column: 64, scope: !4377)
!4385 = !DILocation(line: 3540, column: 15, scope: !4377)
!4386 = !DILocation(line: 3540, column: 8, scope: !4377)
!4387 = !DILocation(line: 3542, column: 10, scope: !4377)
!4388 = !DILocation(line: 3542, column: 8, scope: !4377)
!4389 = !DILocation(line: 3543, column: 2, scope: !4377)
!4390 = !DILocation(line: 3545, column: 2, scope: !4356)
!4391 = distinct !DISubprogram(name: "config_any_dur_threshold", scope: !77, file: !77, line: 3552, type: !4357, isLocal: true, isDefinition: true, scopeLine: 3554, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!4392 = !DILocalVariable(name: "any_motion_int_cfg", arg: 1, scope: !4391, file: !77, line: 3552, type: !4208)
!4393 = !DILocation(line: 3552, column: 81, scope: !4391)
!4394 = !DILocalVariable(name: "dev", arg: 2, scope: !4391, file: !77, line: 3553, type: !252)
!4395 = !DILocation(line: 3553, column: 31, scope: !4391)
!4396 = !DILocalVariable(name: "rslt", scope: !4391, file: !77, line: 3555, type: !62)
!4397 = !DILocation(line: 3555, column: 9, scope: !4391)
!4398 = !DILocalVariable(name: "temp", scope: !4391, file: !77, line: 3557, type: !17)
!4399 = !DILocation(line: 3557, column: 10, scope: !4391)
!4400 = !DILocalVariable(name: "dur", scope: !4391, file: !77, line: 3559, type: !17)
!4401 = !DILocation(line: 3559, column: 10, scope: !4391)
!4402 = !DILocation(line: 3554, column: 3, scope: !4391)
!4403 = !DILocalVariable(name: "data", scope: !4391, file: !77, line: 3556, type: !17)
!4404 = !DILocation(line: 3556, column: 10, scope: !4391)
!4405 = !DILocalVariable(name: "data_array", scope: !4391, file: !77, line: 3558, type: !573)
!4406 = !DILocation(line: 3558, column: 10, scope: !4391)
!4407 = !DILocation(line: 3562, column: 9, scope: !4391)
!4408 = !DILocation(line: 3562, column: 7, scope: !4391)
!4409 = !DILocation(line: 3563, column: 6, scope: !4410)
!4410 = distinct !DILexicalBlock(scope: !4391, file: !77, line: 3563, column: 6)
!4411 = !DILocation(line: 3563, column: 11, scope: !4410)
!4412 = !DILocation(line: 3563, column: 6, scope: !4391)
!4413 = !DILocation(line: 3565, column: 38, scope: !4414)
!4414 = distinct !DILexicalBlock(scope: !4410, file: !77, line: 3563, column: 25)
!4415 = !DILocation(line: 3565, column: 7, scope: !4414)
!4416 = !DILocation(line: 3566, column: 10, scope: !4414)
!4417 = !DILocation(line: 3566, column: 15, scope: !4414)
!4418 = !DILocation(line: 3566, column: 8, scope: !4414)
!4419 = !DILocation(line: 3567, column: 10, scope: !4414)
!4420 = !DILocation(line: 3567, column: 18, scope: !4414)
!4421 = !DILocation(line: 3567, column: 22, scope: !4414)
!4422 = !DILocation(line: 3567, column: 15, scope: !4414)
!4423 = !DILocation(line: 3567, column: 8, scope: !4414)
!4424 = !DILocation(line: 3568, column: 19, scope: !4414)
!4425 = !DILocation(line: 3568, column: 3, scope: !4414)
!4426 = !DILocation(line: 3568, column: 17, scope: !4414)
!4427 = !DILocation(line: 3570, column: 39, scope: !4414)
!4428 = !DILocation(line: 3570, column: 3, scope: !4414)
!4429 = !DILocation(line: 3570, column: 17, scope: !4414)
!4430 = !DILocation(line: 3576, column: 52, scope: !4414)
!4431 = !DILocation(line: 3576, column: 10, scope: !4414)
!4432 = !DILocation(line: 3576, column: 8, scope: !4414)
!4433 = !DILocation(line: 3577, column: 2, scope: !4414)
!4434 = !DILocation(line: 3579, column: 2, scope: !4391)
!4435 = distinct !DISubprogram(name: "bmi160_set_step_counter", scope: !77, file: !77, line: 1674, type: !4436, isLocal: false, isDefinition: true, scopeLine: 1675, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!4436 = !DISubroutineType(types: !4437)
!4437 = !{!62, !17, !252}
!4438 = !DILocalVariable(name: "step_cnt_enable", arg: 1, scope: !4435, file: !77, line: 1674, type: !17)
!4439 = !DILocation(line: 1674, column: 40, scope: !4435)
!4440 = !DILocalVariable(name: "dev", arg: 2, scope: !4435, file: !77, line: 1674, type: !252)
!4441 = !DILocation(line: 1674, column: 82, scope: !4435)
!4442 = !DILocalVariable(name: "rslt", scope: !4435, file: !77, line: 1676, type: !62)
!4443 = !DILocation(line: 1676, column: 9, scope: !4435)
!4444 = !DILocation(line: 1675, column: 3, scope: !4435)
!4445 = !DILocalVariable(name: "data", scope: !4435, file: !77, line: 1677, type: !17)
!4446 = !DILocation(line: 1677, column: 10, scope: !4435)
!4447 = !DILocation(line: 1680, column: 9, scope: !4435)
!4448 = !DILocation(line: 1680, column: 7, scope: !4435)
!4449 = !DILocation(line: 1682, column: 6, scope: !4450)
!4450 = distinct !DILexicalBlock(scope: !4435, file: !77, line: 1682, column: 6)
!4451 = !DILocation(line: 1682, column: 11, scope: !4450)
!4452 = !DILocation(line: 1682, column: 6, scope: !4435)
!4453 = !DILocation(line: 1683, column: 8, scope: !4454)
!4454 = distinct !DILexicalBlock(scope: !4450, file: !77, line: 1682, column: 25)
!4455 = !DILocation(line: 1684, column: 2, scope: !4454)
!4456 = !DILocation(line: 1686, column: 10, scope: !4457)
!4457 = distinct !DILexicalBlock(scope: !4450, file: !77, line: 1684, column: 9)
!4458 = !DILocation(line: 1686, column: 8, scope: !4457)
!4459 = !DILocation(line: 1687, column: 7, scope: !4460)
!4460 = distinct !DILexicalBlock(scope: !4457, file: !77, line: 1687, column: 7)
!4461 = !DILocation(line: 1687, column: 12, scope: !4460)
!4462 = !DILocation(line: 1687, column: 7, scope: !4457)
!4463 = !DILocation(line: 1688, column: 8, scope: !4464)
!4464 = distinct !DILexicalBlock(scope: !4465, file: !77, line: 1688, column: 8)
!4465 = distinct !DILexicalBlock(scope: !4460, file: !77, line: 1687, column: 26)
!4466 = !DILocation(line: 1688, column: 24, scope: !4464)
!4467 = !DILocation(line: 1688, column: 8, scope: !4465)
!4468 = !DILocation(line: 1689, column: 23, scope: !4464)
!4469 = !DILocation(line: 1689, column: 39, scope: !4464)
!4470 = !DILocation(line: 1689, column: 13, scope: !4464)
!4471 = !DILocation(line: 1689, column: 10, scope: !4464)
!4472 = !DILocation(line: 1689, column: 5, scope: !4464)
!4473 = !DILocation(line: 1691, column: 10, scope: !4464)
!4474 = !DILocation(line: 1692, column: 11, scope: !4465)
!4475 = !DILocation(line: 1692, column: 9, scope: !4465)
!4476 = !DILocation(line: 1693, column: 3, scope: !4465)
!4477 = !DILocation(line: 1696, column: 2, scope: !4435)
!4478 = distinct !DISubprogram(name: "bmi160_read_step_counter", scope: !77, file: !77, line: 1702, type: !4479, isLocal: false, isDefinition: true, scopeLine: 1703, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!4479 = !DISubroutineType(types: !4480)
!4480 = !{!62, !4481, !252}
!4481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !47, size: 64)
!4482 = !DILocalVariable(name: "step_val", arg: 1, scope: !4478, file: !77, line: 1702, type: !4481)
!4483 = !DILocation(line: 1702, column: 43, scope: !4478)
!4484 = !DILocalVariable(name: "dev", arg: 2, scope: !4478, file: !77, line: 1702, type: !252)
!4485 = !DILocation(line: 1702, column: 78, scope: !4478)
!4486 = !DILocalVariable(name: "rslt", scope: !4478, file: !77, line: 1704, type: !62)
!4487 = !DILocation(line: 1704, column: 9, scope: !4478)
!4488 = !DILocalVariable(name: "msb", scope: !4478, file: !77, line: 1706, type: !47)
!4489 = !DILocation(line: 1706, column: 11, scope: !4478)
!4490 = !DILocalVariable(name: "lsb", scope: !4478, file: !77, line: 1707, type: !17)
!4491 = !DILocation(line: 1707, column: 10, scope: !4478)
!4492 = !DILocation(line: 1703, column: 3, scope: !4478)
!4493 = !DILocalVariable(name: "data", scope: !4478, file: !77, line: 1705, type: !573)
!4494 = !DILocation(line: 1705, column: 10, scope: !4478)
!4495 = !DILocation(line: 1710, column: 9, scope: !4478)
!4496 = !DILocation(line: 1710, column: 7, scope: !4478)
!4497 = !DILocation(line: 1712, column: 6, scope: !4498)
!4498 = distinct !DILexicalBlock(scope: !4478, file: !77, line: 1712, column: 6)
!4499 = !DILocation(line: 1712, column: 11, scope: !4498)
!4500 = !DILocation(line: 1712, column: 6, scope: !4478)
!4501 = !DILocation(line: 1713, column: 8, scope: !4502)
!4502 = distinct !DILexicalBlock(scope: !4498, file: !77, line: 1712, column: 25)
!4503 = !DILocation(line: 1714, column: 2, scope: !4502)
!4504 = !DILocation(line: 1715, column: 54, scope: !4505)
!4505 = distinct !DILexicalBlock(scope: !4498, file: !77, line: 1714, column: 9)
!4506 = !DILocation(line: 1715, column: 10, scope: !4505)
!4507 = !DILocation(line: 1715, column: 8, scope: !4505)
!4508 = !DILocation(line: 1716, column: 7, scope: !4509)
!4509 = distinct !DILexicalBlock(scope: !4505, file: !77, line: 1716, column: 7)
!4510 = !DILocation(line: 1716, column: 12, scope: !4509)
!4511 = !DILocation(line: 1716, column: 7, scope: !4505)
!4512 = !DILocation(line: 1717, column: 10, scope: !4513)
!4513 = distinct !DILexicalBlock(scope: !4509, file: !77, line: 1716, column: 26)
!4514 = !DILocation(line: 1717, column: 8, scope: !4513)
!4515 = !DILocation(line: 1718, column: 10, scope: !4513)
!4516 = !DILocation(line: 1718, column: 18, scope: !4513)
!4517 = !DILocation(line: 1718, column: 8, scope: !4513)
!4518 = !DILocation(line: 1719, column: 16, scope: !4513)
!4519 = !DILocation(line: 1719, column: 22, scope: !4513)
!4520 = !DILocation(line: 1719, column: 20, scope: !4513)
!4521 = !DILocation(line: 1719, column: 14, scope: !4513)
!4522 = !DILocation(line: 1720, column: 3, scope: !4513)
!4523 = !DILocation(line: 1723, column: 2, scope: !4478)
!4524 = distinct !DISubprogram(name: "bmi160_aux_read", scope: !77, file: !77, line: 1730, type: !250, isLocal: false, isDefinition: true, scopeLine: 1731, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!4525 = !DILocalVariable(name: "reg_addr", arg: 1, scope: !4524, file: !77, line: 1730, type: !17)
!4526 = !DILocation(line: 1730, column: 32, scope: !4524)
!4527 = !DILocalVariable(name: "aux_data", arg: 2, scope: !4524, file: !77, line: 1730, type: !45)
!4528 = !DILocation(line: 1730, column: 51, scope: !4524)
!4529 = !DILocalVariable(name: "len", arg: 3, scope: !4524, file: !77, line: 1730, type: !47)
!4530 = !DILocation(line: 1730, column: 70, scope: !4524)
!4531 = !DILocalVariable(name: "dev", arg: 4, scope: !4524, file: !77, line: 1730, type: !252)
!4532 = !DILocation(line: 1730, column: 100, scope: !4524)
!4533 = !DILocalVariable(name: "rslt", scope: !4524, file: !77, line: 1732, type: !62)
!4534 = !DILocation(line: 1732, column: 9, scope: !4524)
!4535 = !DILocation(line: 1731, column: 3, scope: !4524)
!4536 = !DILocalVariable(name: "map_len", scope: !4524, file: !77, line: 1733, type: !47)
!4537 = !DILocation(line: 1733, column: 11, scope: !4524)
!4538 = !DILocation(line: 1736, column: 11, scope: !4539)
!4539 = distinct !DILexicalBlock(scope: !4524, file: !77, line: 1736, column: 6)
!4540 = !DILocation(line: 1736, column: 20, scope: !4539)
!4541 = !DILocation(line: 1736, column: 29, scope: !4542)
!4542 = !DILexicalBlockFile(scope: !4539, file: !77, discriminator: 1)
!4543 = !DILocation(line: 1736, column: 34, scope: !4542)
!4544 = !DILocation(line: 1736, column: 6, scope: !4545)
!4545 = !DILexicalBlockFile(scope: !4524, file: !77, discriminator: 1)
!4546 = !DILocation(line: 1737, column: 8, scope: !4547)
!4547 = distinct !DILexicalBlock(scope: !4539, file: !77, line: 1736, column: 44)
!4548 = !DILocation(line: 1738, column: 2, scope: !4547)
!4549 = !DILocation(line: 1739, column: 12, scope: !4550)
!4550 = distinct !DILexicalBlock(scope: !4551, file: !77, line: 1739, column: 7)
!4551 = distinct !DILexicalBlock(scope: !4539, file: !77, line: 1738, column: 9)
!4552 = !DILocation(line: 1739, column: 20, scope: !4550)
!4553 = !DILocation(line: 1739, column: 7, scope: !4550)
!4554 = !DILocation(line: 1739, column: 38, scope: !4550)
!4555 = !DILocation(line: 1739, column: 7, scope: !4551)
!4556 = !DILocation(line: 1740, column: 11, scope: !4557)
!4557 = distinct !DILexicalBlock(scope: !4550, file: !77, line: 1739, column: 56)
!4558 = !DILocation(line: 1740, column: 9, scope: !4557)
!4559 = !DILocation(line: 1741, column: 8, scope: !4560)
!4560 = distinct !DILexicalBlock(scope: !4557, file: !77, line: 1741, column: 8)
!4561 = !DILocation(line: 1741, column: 13, scope: !4560)
!4562 = !DILocation(line: 1741, column: 8, scope: !4557)
!4563 = !DILocation(line: 1742, column: 29, scope: !4560)
!4564 = !DILocation(line: 1742, column: 12, scope: !4560)
!4565 = !DILocation(line: 1742, column: 10, scope: !4560)
!4566 = !DILocation(line: 1742, column: 5, scope: !4560)
!4567 = !DILocation(line: 1743, column: 3, scope: !4557)
!4568 = !DILocation(line: 1744, column: 9, scope: !4569)
!4569 = distinct !DILexicalBlock(scope: !4550, file: !77, line: 1743, column: 10)
!4570 = !DILocation(line: 1748, column: 2, scope: !4524)
!4571 = distinct !DISubprogram(name: "map_read_len", scope: !77, file: !77, line: 4114, type: !4479, isLocal: true, isDefinition: true, scopeLine: 4115, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!4572 = !DILocalVariable(name: "len", arg: 1, scope: !4571, file: !77, line: 4114, type: !4481)
!4573 = !DILocation(line: 4114, column: 38, scope: !4571)
!4574 = !DILocalVariable(name: "dev", arg: 2, scope: !4571, file: !77, line: 4114, type: !252)
!4575 = !DILocation(line: 4114, column: 68, scope: !4571)
!4576 = !DILocalVariable(name: "rslt", scope: !4571, file: !77, line: 4116, type: !62)
!4577 = !DILocation(line: 4116, column: 9, scope: !4571)
!4578 = !DILocation(line: 4115, column: 3, scope: !4571)
!4579 = !DILocation(line: 4118, column: 15, scope: !4571)
!4580 = !DILocation(line: 4118, column: 23, scope: !4571)
!4581 = !DILocation(line: 4118, column: 10, scope: !4571)
!4582 = !DILocation(line: 4118, column: 2, scope: !4571)
!4583 = !DILocation(line: 4121, column: 8, scope: !4584)
!4584 = distinct !DILexicalBlock(scope: !4571, file: !77, line: 4118, column: 41)
!4585 = !DILocation(line: 4122, column: 3, scope: !4584)
!4586 = !DILocation(line: 4124, column: 8, scope: !4584)
!4587 = !DILocation(line: 4125, column: 3, scope: !4584)
!4588 = !DILocation(line: 4127, column: 8, scope: !4584)
!4589 = !DILocation(line: 4128, column: 3, scope: !4584)
!4590 = !DILocation(line: 4130, column: 8, scope: !4584)
!4591 = !DILocation(line: 4131, column: 3, scope: !4584)
!4592 = !DILocation(line: 4133, column: 8, scope: !4584)
!4593 = !DILocation(line: 4134, column: 3, scope: !4584)
!4594 = !DILocation(line: 4137, column: 2, scope: !4571)
!4595 = distinct !DISubprogram(name: "extract_aux_read", scope: !77, file: !77, line: 4159, type: !4596, isLocal: true, isDefinition: true, scopeLine: 4161, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!4596 = !DISubroutineType(types: !4597)
!4597 = !{!62, !47, !17, !45, !47, !252}
!4598 = !DILocalVariable(name: "map_len", arg: 1, scope: !4595, file: !77, line: 4159, type: !47)
!4599 = !DILocation(line: 4159, column: 41, scope: !4595)
!4600 = !DILocalVariable(name: "aux_data", arg: 3, scope: !4595, file: !77, line: 4159, type: !45)
!4601 = !DILocation(line: 4159, column: 77, scope: !4595)
!4602 = !DILocalVariable(name: "len", arg: 4, scope: !4595, file: !77, line: 4159, type: !47)
!4603 = !DILocation(line: 4159, column: 96, scope: !4595)
!4604 = !DILocalVariable(name: "dev", arg: 5, scope: !4595, file: !77, line: 4160, type: !252)
!4605 = !DILocation(line: 4160, column: 37, scope: !4595)
!4606 = !DILocalVariable(name: "rslt", scope: !4595, file: !77, line: 4162, type: !62)
!4607 = !DILocation(line: 4162, column: 9, scope: !4595)
!4608 = !DILocalVariable(name: "read_addr", scope: !4595, file: !77, line: 4164, type: !17)
!4609 = !DILocation(line: 4164, column: 10, scope: !4595)
!4610 = !DILocalVariable(name: "count", scope: !4595, file: !77, line: 4165, type: !17)
!4611 = !DILocation(line: 4165, column: 10, scope: !4595)
!4612 = !DILocalVariable(name: "read_count", scope: !4595, file: !77, line: 4166, type: !17)
!4613 = !DILocation(line: 4166, column: 10, scope: !4595)
!4614 = !DILocalVariable(name: "read_len", scope: !4595, file: !77, line: 4167, type: !17)
!4615 = !DILocation(line: 4167, column: 10, scope: !4595)
!4616 = !DILocalVariable(name: "reg_addr", arg: 2, scope: !4595, file: !77, line: 4159, type: !17)
!4617 = !DILocation(line: 4159, column: 58, scope: !4595)
!4618 = !DILocation(line: 4161, column: 3, scope: !4595)
!4619 = !DILocalVariable(name: "data", scope: !4595, file: !77, line: 4163, type: !71)
!4620 = !DILocation(line: 4163, column: 10, scope: !4595)
!4621 = !DILocation(line: 4167, column: 21, scope: !4595)
!4622 = !DILocation(line: 4169, column: 2, scope: !4595)
!4623 = !DILocation(line: 4169, column: 9, scope: !4624)
!4624 = !DILexicalBlockFile(scope: !4625, file: !77, discriminator: 1)
!4625 = distinct !DILexicalBlock(scope: !4626, file: !77, line: 4169, column: 2)
!4626 = distinct !DILexicalBlock(scope: !4595, file: !77, line: 4169, column: 2)
!4627 = !DILocation(line: 4169, column: 17, scope: !4624)
!4628 = !DILocation(line: 4169, column: 15, scope: !4624)
!4629 = !DILocation(line: 4169, column: 2, scope: !4630)
!4630 = !DILexicalBlockFile(scope: !4626, file: !77, discriminator: 1)
!4631 = !DILocation(line: 4171, column: 10, scope: !4632)
!4632 = distinct !DILexicalBlock(scope: !4625, file: !77, line: 4169, column: 23)
!4633 = !DILocation(line: 4171, column: 8, scope: !4632)
!4634 = !DILocation(line: 4172, column: 8, scope: !4632)
!4635 = !DILocation(line: 4172, column: 3, scope: !4632)
!4636 = !DILocation(line: 4173, column: 7, scope: !4637)
!4637 = distinct !DILexicalBlock(scope: !4632, file: !77, line: 4173, column: 7)
!4638 = !DILocation(line: 4173, column: 12, scope: !4637)
!4639 = !DILocation(line: 4173, column: 7, scope: !4632)
!4640 = !DILocation(line: 4174, column: 38, scope: !4641)
!4641 = distinct !DILexicalBlock(scope: !4637, file: !77, line: 4173, column: 26)
!4642 = !DILocation(line: 4174, column: 11, scope: !4641)
!4643 = !DILocation(line: 4174, column: 9, scope: !4641)
!4644 = !DILocation(line: 4175, column: 8, scope: !4645)
!4645 = distinct !DILexicalBlock(scope: !4641, file: !77, line: 4175, column: 8)
!4646 = !DILocation(line: 4175, column: 13, scope: !4645)
!4647 = !DILocation(line: 4175, column: 8, scope: !4641)
!4648 = !DILocation(line: 4176, column: 16, scope: !4649)
!4649 = distinct !DILexicalBlock(scope: !4645, file: !77, line: 4175, column: 27)
!4650 = !DILocation(line: 4179, column: 9, scope: !4651)
!4651 = distinct !DILexicalBlock(scope: !4649, file: !77, line: 4179, column: 9)
!4652 = !DILocation(line: 4179, column: 15, scope: !4651)
!4653 = !DILocation(line: 4179, column: 13, scope: !4651)
!4654 = !DILocation(line: 4179, column: 9, scope: !4649)
!4655 = !DILocation(line: 4180, column: 17, scope: !4656)
!4656 = distinct !DILexicalBlock(scope: !4651, file: !77, line: 4179, column: 24)
!4657 = !DILocation(line: 4180, column: 15, scope: !4656)
!4658 = !DILocation(line: 4181, column: 5, scope: !4656)
!4659 = !DILocation(line: 4182, column: 11, scope: !4660)
!4660 = distinct !DILexicalBlock(scope: !4661, file: !77, line: 4182, column: 10)
!4661 = distinct !DILexicalBlock(scope: !4651, file: !77, line: 4181, column: 12)
!4662 = !DILocation(line: 4182, column: 17, scope: !4660)
!4663 = !DILocation(line: 4182, column: 15, scope: !4660)
!4664 = !DILocation(line: 4182, column: 26, scope: !4660)
!4665 = !DILocation(line: 4182, column: 24, scope: !4660)
!4666 = !DILocation(line: 4182, column: 10, scope: !4661)
!4667 = !DILocation(line: 4183, column: 28, scope: !4660)
!4668 = !DILocation(line: 4183, column: 34, scope: !4660)
!4669 = !DILocation(line: 4183, column: 32, scope: !4660)
!4670 = !DILocation(line: 4183, column: 18, scope: !4660)
!4671 = !DILocation(line: 4183, column: 16, scope: !4660)
!4672 = !DILocation(line: 4183, column: 7, scope: !4660)
!4673 = !DILocation(line: 4186, column: 5, scope: !4649)
!4674 = !DILocation(line: 4186, column: 12, scope: !4675)
!4675 = !DILexicalBlockFile(scope: !4676, file: !77, discriminator: 1)
!4676 = distinct !DILexicalBlock(scope: !4677, file: !77, line: 4186, column: 5)
!4677 = distinct !DILexicalBlock(scope: !4649, file: !77, line: 4186, column: 5)
!4678 = !DILocation(line: 4186, column: 25, scope: !4675)
!4679 = !DILocation(line: 4186, column: 23, scope: !4675)
!4680 = !DILocation(line: 4186, column: 5, scope: !4681)
!4681 = !DILexicalBlockFile(scope: !4677, file: !77, discriminator: 1)
!4682 = !DILocation(line: 4187, column: 37, scope: !4676)
!4683 = !DILocation(line: 4187, column: 15, scope: !4676)
!4684 = !DILocation(line: 4187, column: 23, scope: !4676)
!4685 = !DILocation(line: 4187, column: 21, scope: !4676)
!4686 = !DILocation(line: 4187, column: 6, scope: !4676)
!4687 = !DILocation(line: 4187, column: 35, scope: !4676)
!4688 = !DILocation(line: 4186, column: 45, scope: !4689)
!4689 = !DILexicalBlockFile(scope: !4676, file: !77, discriminator: 2)
!4690 = !DILocation(line: 4186, column: 5, scope: !4689)
!4691 = distinct !{!4691, !4692, !4693}
!4692 = !DILocation(line: 4186, column: 5, scope: !4677)
!4693 = !DILocation(line: 4187, column: 52, scope: !4677)
!4694 = !DILocation(line: 4189, column: 17, scope: !4649)
!4695 = !DILocation(line: 4189, column: 14, scope: !4649)
!4696 = !DILocation(line: 4190, column: 14, scope: !4649)
!4697 = !DILocation(line: 4190, column: 11, scope: !4649)
!4698 = !DILocation(line: 4191, column: 4, scope: !4649)
!4699 = !DILocation(line: 4192, column: 10, scope: !4700)
!4700 = distinct !DILexicalBlock(scope: !4645, file: !77, line: 4191, column: 11)
!4701 = !DILocation(line: 4193, column: 5, scope: !4700)
!4702 = !DILocation(line: 4195, column: 3, scope: !4641)
!4703 = !DILocation(line: 4169, column: 2, scope: !4704)
!4704 = !DILexicalBlockFile(scope: !4625, file: !77, discriminator: 2)
!4705 = distinct !{!4705, !4706, !4707}
!4706 = !DILocation(line: 4169, column: 2, scope: !4626)
!4707 = !DILocation(line: 4196, column: 2, scope: !4626)
!4708 = !DILocation(line: 4198, column: 2, scope: !4595)
!4709 = distinct !DISubprogram(name: "bmi160_aux_write", scope: !77, file: !77, line: 1755, type: !250, isLocal: false, isDefinition: true, scopeLine: 1756, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!4710 = !DILocalVariable(name: "aux_data", arg: 2, scope: !4709, file: !77, line: 1755, type: !45)
!4711 = !DILocation(line: 1755, column: 52, scope: !4709)
!4712 = !DILocalVariable(name: "len", arg: 3, scope: !4709, file: !77, line: 1755, type: !47)
!4713 = !DILocation(line: 1755, column: 71, scope: !4709)
!4714 = !DILocalVariable(name: "dev", arg: 4, scope: !4709, file: !77, line: 1755, type: !252)
!4715 = !DILocation(line: 1755, column: 101, scope: !4709)
!4716 = !DILocalVariable(name: "rslt", scope: !4709, file: !77, line: 1757, type: !62)
!4717 = !DILocation(line: 1757, column: 9, scope: !4709)
!4718 = !DILocalVariable(name: "count", scope: !4709, file: !77, line: 1758, type: !17)
!4719 = !DILocation(line: 1758, column: 10, scope: !4709)
!4720 = !DILocalVariable(name: "reg_addr", arg: 1, scope: !4709, file: !77, line: 1755, type: !17)
!4721 = !DILocation(line: 1755, column: 33, scope: !4709)
!4722 = !DILocation(line: 1756, column: 3, scope: !4709)
!4723 = !DILocation(line: 1761, column: 11, scope: !4724)
!4724 = distinct !DILexicalBlock(scope: !4709, file: !77, line: 1761, column: 6)
!4725 = !DILocation(line: 1761, column: 20, scope: !4724)
!4726 = !DILocation(line: 1761, column: 29, scope: !4727)
!4727 = !DILexicalBlockFile(scope: !4724, file: !77, discriminator: 1)
!4728 = !DILocation(line: 1761, column: 35, scope: !4727)
!4729 = !DILocation(line: 1761, column: 6, scope: !4730)
!4730 = !DILexicalBlockFile(scope: !4709, file: !77, discriminator: 1)
!4731 = !DILocation(line: 1762, column: 8, scope: !4732)
!4732 = distinct !DILexicalBlock(scope: !4724, file: !77, line: 1761, column: 45)
!4733 = !DILocation(line: 1763, column: 2, scope: !4732)
!4734 = !DILocation(line: 1764, column: 3, scope: !4735)
!4735 = distinct !DILexicalBlock(scope: !4724, file: !77, line: 1763, column: 9)
!4736 = !DILocation(line: 1764, column: 10, scope: !4737)
!4737 = !DILexicalBlockFile(scope: !4738, file: !77, discriminator: 1)
!4738 = distinct !DILexicalBlock(scope: !4739, file: !77, line: 1764, column: 3)
!4739 = distinct !DILexicalBlock(scope: !4735, file: !77, line: 1764, column: 3)
!4740 = !DILocation(line: 1764, column: 18, scope: !4737)
!4741 = !DILocation(line: 1764, column: 16, scope: !4737)
!4742 = !DILocation(line: 1764, column: 3, scope: !4743)
!4743 = !DILexicalBlockFile(scope: !4739, file: !77, discriminator: 1)
!4744 = !DILocation(line: 1766, column: 11, scope: !4745)
!4745 = distinct !DILexicalBlock(scope: !4738, file: !77, line: 1764, column: 32)
!4746 = !DILocation(line: 1766, column: 9, scope: !4745)
!4747 = !DILocation(line: 1767, column: 9, scope: !4745)
!4748 = !DILocation(line: 1767, column: 4, scope: !4745)
!4749 = !DILocation(line: 1768, column: 8, scope: !4750)
!4750 = distinct !DILexicalBlock(scope: !4745, file: !77, line: 1768, column: 8)
!4751 = !DILocation(line: 1768, column: 13, scope: !4750)
!4752 = !DILocation(line: 1768, column: 8, scope: !4745)
!4753 = !DILocation(line: 1770, column: 12, scope: !4754)
!4754 = distinct !DILexicalBlock(scope: !4750, file: !77, line: 1768, column: 27)
!4755 = !DILocation(line: 1770, column: 10, scope: !4754)
!4756 = !DILocation(line: 1771, column: 10, scope: !4754)
!4757 = !DILocation(line: 1771, column: 5, scope: !4754)
!4758 = !DILocation(line: 1772, column: 9, scope: !4759)
!4759 = distinct !DILexicalBlock(scope: !4754, file: !77, line: 1772, column: 9)
!4760 = !DILocation(line: 1772, column: 14, scope: !4759)
!4761 = !DILocation(line: 1772, column: 27, scope: !4759)
!4762 = !DILocation(line: 1772, column: 31, scope: !4763)
!4763 = !DILexicalBlockFile(scope: !4759, file: !77, discriminator: 1)
!4764 = !DILocation(line: 1772, column: 39, scope: !4763)
!4765 = !DILocation(line: 1772, column: 43, scope: !4763)
!4766 = !DILocation(line: 1772, column: 37, scope: !4763)
!4767 = !DILocation(line: 1772, column: 9, scope: !4768)
!4768 = !DILexicalBlockFile(scope: !4754, file: !77, discriminator: 1)
!4769 = !DILocation(line: 1773, column: 14, scope: !4770)
!4770 = distinct !DILexicalBlock(scope: !4759, file: !77, line: 1772, column: 49)
!4771 = !DILocation(line: 1774, column: 14, scope: !4770)
!4772 = !DILocation(line: 1775, column: 5, scope: !4770)
!4773 = !DILocation(line: 1776, column: 4, scope: !4754)
!4774 = !DILocation(line: 1777, column: 3, scope: !4745)
!4775 = !DILocation(line: 1764, column: 28, scope: !4776)
!4776 = !DILexicalBlockFile(scope: !4738, file: !77, discriminator: 2)
!4777 = !DILocation(line: 1764, column: 3, scope: !4776)
!4778 = distinct !{!4778, !4779, !4780}
!4779 = !DILocation(line: 1764, column: 3, scope: !4739)
!4780 = !DILocation(line: 1777, column: 3, scope: !4739)
!4781 = !DILocation(line: 1780, column: 2, scope: !4709)
!4782 = distinct !DISubprogram(name: "bmi160_aux_init", scope: !77, file: !77, line: 1787, type: !412, isLocal: false, isDefinition: true, scopeLine: 1788, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!4783 = !DILocalVariable(name: "dev", arg: 1, scope: !4782, file: !77, line: 1787, type: !252)
!4784 = !DILocation(line: 1787, column: 49, scope: !4782)
!4785 = !DILocalVariable(name: "rslt", scope: !4782, file: !77, line: 1789, type: !62)
!4786 = !DILocation(line: 1789, column: 9, scope: !4782)
!4787 = !DILocation(line: 1788, column: 3, scope: !4782)
!4788 = !DILocation(line: 1792, column: 9, scope: !4782)
!4789 = !DILocation(line: 1792, column: 7, scope: !4782)
!4790 = !DILocation(line: 1794, column: 6, scope: !4791)
!4791 = distinct !DILexicalBlock(scope: !4782, file: !77, line: 1794, column: 6)
!4792 = !DILocation(line: 1794, column: 11, scope: !4791)
!4793 = !DILocation(line: 1794, column: 6, scope: !4782)
!4794 = !DILocation(line: 1795, column: 8, scope: !4795)
!4795 = distinct !DILexicalBlock(scope: !4791, file: !77, line: 1794, column: 25)
!4796 = !DILocation(line: 1796, column: 2, scope: !4795)
!4797 = !DILocation(line: 1797, column: 12, scope: !4798)
!4798 = distinct !DILexicalBlock(scope: !4799, file: !77, line: 1797, column: 7)
!4799 = distinct !DILexicalBlock(scope: !4791, file: !77, line: 1796, column: 9)
!4800 = !DILocation(line: 1797, column: 20, scope: !4798)
!4801 = !DILocation(line: 1797, column: 7, scope: !4798)
!4802 = !DILocation(line: 1797, column: 38, scope: !4798)
!4803 = !DILocation(line: 1797, column: 7, scope: !4799)
!4804 = !DILocation(line: 1799, column: 11, scope: !4805)
!4805 = distinct !DILexicalBlock(scope: !4798, file: !77, line: 1797, column: 56)
!4806 = !DILocation(line: 1799, column: 9, scope: !4805)
!4807 = !DILocation(line: 1800, column: 3, scope: !4805)
!4808 = !DILocation(line: 1801, column: 9, scope: !4809)
!4809 = distinct !DILexicalBlock(scope: !4798, file: !77, line: 1800, column: 10)
!4810 = !DILocation(line: 1805, column: 2, scope: !4782)
!4811 = distinct !DISubprogram(name: "config_aux_settg", scope: !77, file: !77, line: 4143, type: !412, isLocal: true, isDefinition: true, scopeLine: 4144, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!4812 = !DILocalVariable(name: "dev", arg: 1, scope: !4811, file: !77, line: 4143, type: !252)
!4813 = !DILocation(line: 4143, column: 57, scope: !4811)
!4814 = !DILocalVariable(name: "rslt", scope: !4811, file: !77, line: 4145, type: !62)
!4815 = !DILocation(line: 4145, column: 9, scope: !4811)
!4816 = !DILocation(line: 4144, column: 3, scope: !4811)
!4817 = !DILocation(line: 4147, column: 9, scope: !4811)
!4818 = !DILocation(line: 4147, column: 7, scope: !4811)
!4819 = !DILocation(line: 4148, column: 6, scope: !4820)
!4820 = distinct !DILexicalBlock(scope: !4811, file: !77, line: 4148, column: 6)
!4821 = !DILocation(line: 4148, column: 11, scope: !4820)
!4822 = !DILocation(line: 4148, column: 6, scope: !4811)
!4823 = !DILocation(line: 4150, column: 10, scope: !4824)
!4824 = distinct !DILexicalBlock(scope: !4820, file: !77, line: 4148, column: 25)
!4825 = !DILocation(line: 4150, column: 8, scope: !4824)
!4826 = !DILocation(line: 4151, column: 2, scope: !4824)
!4827 = !DILocation(line: 4153, column: 2, scope: !4811)
!4828 = distinct !DISubprogram(name: "config_sec_if", scope: !77, file: !77, line: 4071, type: !412, isLocal: true, isDefinition: true, scopeLine: 4072, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!4829 = !DILocalVariable(name: "dev", arg: 1, scope: !4828, file: !77, line: 4071, type: !252)
!4830 = !DILocation(line: 4071, column: 54, scope: !4828)
!4831 = !DILocalVariable(name: "rslt", scope: !4828, file: !77, line: 4073, type: !62)
!4832 = !DILocation(line: 4073, column: 9, scope: !4828)
!4833 = !DILocation(line: 4072, column: 3, scope: !4828)
!4834 = !DILocalVariable(name: "if_conf", scope: !4828, file: !77, line: 4074, type: !17)
!4835 = !DILocation(line: 4074, column: 10, scope: !4828)
!4836 = !DILocalVariable(name: "cmd", scope: !4828, file: !77, line: 4075, type: !17)
!4837 = !DILocation(line: 4075, column: 10, scope: !4828)
!4838 = !DILocation(line: 4078, column: 9, scope: !4828)
!4839 = !DILocation(line: 4078, column: 7, scope: !4828)
!4840 = !DILocation(line: 4079, column: 6, scope: !4841)
!4841 = distinct !DILexicalBlock(scope: !4828, file: !77, line: 4079, column: 6)
!4842 = !DILocation(line: 4079, column: 11, scope: !4841)
!4843 = !DILocation(line: 4079, column: 6, scope: !4828)
!4844 = !DILocation(line: 4080, column: 8, scope: !4845)
!4845 = distinct !DILexicalBlock(scope: !4841, file: !77, line: 4079, column: 25)
!4846 = !DILocation(line: 4080, column: 3, scope: !4845)
!4847 = !DILocation(line: 4081, column: 10, scope: !4845)
!4848 = !DILocation(line: 4081, column: 8, scope: !4845)
!4849 = !DILocation(line: 4082, column: 11, scope: !4845)
!4850 = !DILocation(line: 4083, column: 7, scope: !4851)
!4851 = distinct !DILexicalBlock(scope: !4845, file: !77, line: 4083, column: 7)
!4852 = !DILocation(line: 4083, column: 12, scope: !4851)
!4853 = !DILocation(line: 4083, column: 7, scope: !4845)
!4854 = !DILocation(line: 4085, column: 11, scope: !4851)
!4855 = !DILocation(line: 4085, column: 9, scope: !4851)
!4856 = !DILocation(line: 4085, column: 4, scope: !4851)
!4857 = !DILocation(line: 4086, column: 2, scope: !4845)
!4858 = !DILocation(line: 4088, column: 2, scope: !4828)
!4859 = distinct !DISubprogram(name: "bmi160_config_aux_mode", scope: !77, file: !77, line: 1854, type: !412, isLocal: false, isDefinition: true, scopeLine: 1855, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!4860 = !DILocalVariable(name: "dev", arg: 1, scope: !4859, file: !77, line: 1854, type: !252)
!4861 = !DILocation(line: 1854, column: 56, scope: !4859)
!4862 = !DILocalVariable(name: "rslt", scope: !4859, file: !77, line: 1856, type: !62)
!4863 = !DILocation(line: 1856, column: 9, scope: !4859)
!4864 = !DILocation(line: 1855, column: 3, scope: !4859)
!4865 = !DILocalVariable(name: "aux_if", scope: !4859, file: !77, line: 1857, type: !573)
!4866 = !DILocation(line: 1857, column: 10, scope: !4859)
!4867 = !DILocation(line: 1857, column: 22, scope: !4859)
!4868 = !DILocation(line: 1857, column: 38, scope: !4859)
!4869 = !DILocation(line: 1857, column: 46, scope: !4859)
!4870 = !DILocation(line: 1857, column: 33, scope: !4859)
!4871 = !DILocation(line: 1857, column: 59, scope: !4859)
!4872 = !DILocation(line: 1857, column: 23, scope: !4859)
!4873 = !DILocation(line: 1859, column: 48, scope: !4859)
!4874 = !DILocation(line: 1859, column: 9, scope: !4859)
!4875 = !DILocation(line: 1859, column: 7, scope: !4859)
!4876 = !DILocation(line: 1860, column: 6, scope: !4877)
!4877 = distinct !DILexicalBlock(scope: !4859, file: !77, line: 1860, column: 6)
!4878 = !DILocation(line: 1860, column: 11, scope: !4877)
!4879 = !DILocation(line: 1860, column: 6, scope: !4859)
!4880 = !DILocation(line: 1862, column: 15, scope: !4881)
!4881 = distinct !DILexicalBlock(scope: !4877, file: !77, line: 1860, column: 25)
!4882 = !DILocation(line: 1862, column: 3, scope: !4881)
!4883 = !DILocation(line: 1862, column: 13, scope: !4881)
!4884 = !DILocation(line: 1864, column: 15, scope: !4881)
!4885 = !DILocation(line: 1864, column: 3, scope: !4881)
!4886 = !DILocation(line: 1864, column: 13, scope: !4881)
!4887 = !DILocation(line: 1867, column: 49, scope: !4881)
!4888 = !DILocation(line: 1867, column: 10, scope: !4881)
!4889 = !DILocation(line: 1867, column: 8, scope: !4881)
!4890 = !DILocation(line: 1868, column: 8, scope: !4881)
!4891 = !DILocation(line: 1868, column: 3, scope: !4881)
!4892 = !DILocation(line: 1869, column: 2, scope: !4881)
!4893 = !DILocation(line: 1871, column: 2, scope: !4859)
!4894 = distinct !DISubprogram(name: "bmi160_set_aux_auto_mode", scope: !77, file: !77, line: 1813, type: !4895, isLocal: false, isDefinition: true, scopeLine: 1814, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!4895 = !DISubroutineType(types: !4896)
!4896 = !{!62, !45, !341}
!4897 = !DILocalVariable(name: "data_addr", arg: 1, scope: !4894, file: !77, line: 1813, type: !45)
!4898 = !DILocation(line: 1813, column: 42, scope: !4894)
!4899 = !DILocalVariable(name: "dev", arg: 2, scope: !4894, file: !77, line: 1813, type: !341)
!4900 = !DILocation(line: 1813, column: 72, scope: !4894)
!4901 = !DILocalVariable(name: "rslt", scope: !4894, file: !77, line: 1815, type: !62)
!4902 = !DILocation(line: 1815, column: 9, scope: !4894)
!4903 = !DILocation(line: 1814, column: 3, scope: !4894)
!4904 = !DILocation(line: 1817, column: 9, scope: !4894)
!4905 = !DILocation(line: 1817, column: 7, scope: !4894)
!4906 = !DILocation(line: 1819, column: 6, scope: !4907)
!4907 = distinct !DILexicalBlock(scope: !4894, file: !77, line: 1819, column: 6)
!4908 = !DILocation(line: 1819, column: 11, scope: !4907)
!4909 = !DILocation(line: 1819, column: 6, scope: !4894)
!4910 = !DILocation(line: 1820, column: 8, scope: !4911)
!4911 = distinct !DILexicalBlock(scope: !4907, file: !77, line: 1819, column: 25)
!4912 = !DILocation(line: 1821, column: 2, scope: !4911)
!4913 = !DILocation(line: 1822, column: 12, scope: !4914)
!4914 = distinct !DILexicalBlock(scope: !4915, file: !77, line: 1822, column: 7)
!4915 = distinct !DILexicalBlock(scope: !4907, file: !77, line: 1821, column: 9)
!4916 = !DILocation(line: 1822, column: 20, scope: !4914)
!4917 = !DILocation(line: 1822, column: 7, scope: !4914)
!4918 = !DILocation(line: 1822, column: 38, scope: !4914)
!4919 = !DILocation(line: 1822, column: 7, scope: !4915)
!4920 = !DILocation(line: 1824, column: 11, scope: !4921)
!4921 = distinct !DILexicalBlock(scope: !4914, file: !77, line: 1822, column: 56)
!4922 = !DILocation(line: 1824, column: 9, scope: !4921)
!4923 = !DILocation(line: 1825, column: 9, scope: !4921)
!4924 = !DILocation(line: 1825, column: 4, scope: !4921)
!4925 = !DILocation(line: 1826, column: 8, scope: !4926)
!4926 = distinct !DILexicalBlock(scope: !4921, file: !77, line: 1826, column: 8)
!4927 = !DILocation(line: 1826, column: 13, scope: !4926)
!4928 = !DILocation(line: 1826, column: 8, scope: !4921)
!4929 = !DILocation(line: 1829, column: 13, scope: !4930)
!4930 = distinct !DILexicalBlock(scope: !4926, file: !77, line: 1826, column: 27)
!4931 = !DILocation(line: 1829, column: 11, scope: !4930)
!4932 = !DILocation(line: 1831, column: 9, scope: !4933)
!4933 = distinct !DILexicalBlock(scope: !4930, file: !77, line: 1831, column: 9)
!4934 = !DILocation(line: 1831, column: 14, scope: !4933)
!4935 = !DILocation(line: 1831, column: 9, scope: !4930)
!4936 = !DILocation(line: 1834, column: 11, scope: !4937)
!4937 = distinct !DILexicalBlock(scope: !4933, file: !77, line: 1831, column: 28)
!4938 = !DILocation(line: 1834, column: 19, scope: !4937)
!4939 = !DILocation(line: 1834, column: 33, scope: !4937)
!4940 = !DILocation(line: 1835, column: 13, scope: !4937)
!4941 = !DILocation(line: 1835, column: 11, scope: !4937)
!4942 = !DILocation(line: 1839, column: 5, scope: !4937)
!4943 = !DILocation(line: 1840, column: 4, scope: !4930)
!4944 = !DILocation(line: 1841, column: 3, scope: !4921)
!4945 = !DILocation(line: 1842, column: 9, scope: !4946)
!4946 = distinct !DILexicalBlock(scope: !4914, file: !77, line: 1841, column: 10)
!4947 = !DILocation(line: 1846, column: 2, scope: !4894)
!4948 = distinct !DISubprogram(name: "config_aux_odr", scope: !77, file: !77, line: 4094, type: !412, isLocal: true, isDefinition: true, scopeLine: 4095, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!4949 = !DILocalVariable(name: "dev", arg: 1, scope: !4948, file: !77, line: 4094, type: !252)
!4950 = !DILocation(line: 4094, column: 55, scope: !4948)
!4951 = !DILocalVariable(name: "rslt", scope: !4948, file: !77, line: 4096, type: !62)
!4952 = !DILocation(line: 4096, column: 9, scope: !4948)
!4953 = !DILocation(line: 4095, column: 3, scope: !4948)
!4954 = !DILocalVariable(name: "aux_odr", scope: !4948, file: !77, line: 4097, type: !17)
!4955 = !DILocation(line: 4097, column: 10, scope: !4948)
!4956 = !DILocation(line: 4099, column: 9, scope: !4948)
!4957 = !DILocation(line: 4099, column: 7, scope: !4948)
!4958 = !DILocation(line: 4100, column: 6, scope: !4959)
!4959 = distinct !DILexicalBlock(scope: !4948, file: !77, line: 4100, column: 6)
!4960 = !DILocation(line: 4100, column: 11, scope: !4959)
!4961 = !DILocation(line: 4100, column: 6, scope: !4948)
!4962 = !DILocation(line: 4101, column: 28, scope: !4963)
!4963 = distinct !DILexicalBlock(scope: !4959, file: !77, line: 4100, column: 25)
!4964 = !DILocation(line: 4101, column: 36, scope: !4963)
!4965 = !DILocation(line: 4101, column: 11, scope: !4963)
!4966 = !DILocation(line: 4104, column: 10, scope: !4963)
!4967 = !DILocation(line: 4104, column: 8, scope: !4963)
!4968 = !DILocation(line: 4105, column: 8, scope: !4963)
!4969 = !DILocation(line: 4105, column: 3, scope: !4963)
!4970 = !DILocation(line: 4106, column: 2, scope: !4963)
!4971 = !DILocation(line: 4108, column: 2, scope: !4948)
!4972 = distinct !DISubprogram(name: "bmi160_read_aux_data_auto_mode", scope: !77, file: !77, line: 1878, type: !880, isLocal: false, isDefinition: true, scopeLine: 1879, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!4973 = !DILocalVariable(name: "aux_data", arg: 1, scope: !4972, file: !77, line: 1878, type: !45)
!4974 = !DILocation(line: 1878, column: 48, scope: !4972)
!4975 = !DILocalVariable(name: "dev", arg: 2, scope: !4972, file: !77, line: 1878, type: !252)
!4976 = !DILocation(line: 1878, column: 83, scope: !4972)
!4977 = !DILocalVariable(name: "rslt", scope: !4972, file: !77, line: 1880, type: !62)
!4978 = !DILocation(line: 1880, column: 9, scope: !4972)
!4979 = !DILocation(line: 1879, column: 3, scope: !4972)
!4980 = !DILocation(line: 1883, column: 9, scope: !4972)
!4981 = !DILocation(line: 1883, column: 7, scope: !4972)
!4982 = !DILocation(line: 1885, column: 6, scope: !4983)
!4983 = distinct !DILexicalBlock(scope: !4972, file: !77, line: 1885, column: 6)
!4984 = !DILocation(line: 1885, column: 11, scope: !4983)
!4985 = !DILocation(line: 1885, column: 6, scope: !4972)
!4986 = !DILocation(line: 1886, column: 8, scope: !4987)
!4987 = distinct !DILexicalBlock(scope: !4983, file: !77, line: 1885, column: 25)
!4988 = !DILocation(line: 1887, column: 2, scope: !4987)
!4989 = !DILocation(line: 1888, column: 13, scope: !4990)
!4990 = distinct !DILexicalBlock(scope: !4991, file: !77, line: 1888, column: 7)
!4991 = distinct !DILexicalBlock(scope: !4983, file: !77, line: 1887, column: 9)
!4992 = !DILocation(line: 1888, column: 21, scope: !4990)
!4993 = !DILocation(line: 1888, column: 8, scope: !4990)
!4994 = !DILocation(line: 1888, column: 39, scope: !4990)
!4995 = !DILocation(line: 1888, column: 57, scope: !4990)
!4996 = !DILocation(line: 1889, column: 10, scope: !4990)
!4997 = !DILocation(line: 1889, column: 18, scope: !4990)
!4998 = !DILocation(line: 1889, column: 5, scope: !4990)
!4999 = !DILocation(line: 1889, column: 32, scope: !4990)
!5000 = !DILocation(line: 1888, column: 7, scope: !5001)
!5001 = !DILexicalBlockFile(scope: !4991, file: !77, discriminator: 1)
!5002 = !DILocation(line: 1891, column: 11, scope: !5003)
!5003 = distinct !DILexicalBlock(scope: !4990, file: !77, line: 1889, column: 52)
!5004 = !DILocation(line: 1891, column: 9, scope: !5003)
!5005 = !DILocation(line: 1892, column: 3, scope: !5003)
!5006 = !DILocation(line: 1893, column: 9, scope: !5007)
!5007 = distinct !DILexicalBlock(scope: !4990, file: !77, line: 1892, column: 10)
!5008 = !DILocation(line: 1897, column: 2, scope: !4972)
!5009 = distinct !DISubprogram(name: "bmi160_perform_self_test", scope: !77, file: !77, line: 1903, type: !5010, isLocal: false, isDefinition: true, scopeLine: 1904, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!5010 = !DISubroutineType(types: !5011)
!5011 = !{!62, !17, !341}
!5012 = !DILocalVariable(name: "select_sensor", arg: 1, scope: !5009, file: !77, line: 1903, type: !17)
!5013 = !DILocation(line: 1903, column: 41, scope: !5009)
!5014 = !DILocalVariable(name: "dev", arg: 2, scope: !5009, file: !77, line: 1903, type: !341)
!5015 = !DILocation(line: 1903, column: 75, scope: !5009)
!5016 = !DILocalVariable(name: "rslt", scope: !5009, file: !77, line: 1905, type: !62)
!5017 = !DILocation(line: 1905, column: 9, scope: !5009)
!5018 = !DILocalVariable(name: "self_test_rslt", scope: !5009, file: !77, line: 1906, type: !62)
!5019 = !DILocation(line: 1906, column: 9, scope: !5009)
!5020 = !DILocation(line: 1904, column: 3, scope: !5009)
!5021 = !DILocation(line: 1909, column: 9, scope: !5009)
!5022 = !DILocation(line: 1909, column: 7, scope: !5009)
!5023 = !DILocation(line: 1911, column: 6, scope: !5024)
!5024 = distinct !DILexicalBlock(scope: !5009, file: !77, line: 1911, column: 6)
!5025 = !DILocation(line: 1911, column: 11, scope: !5024)
!5026 = !DILocation(line: 1911, column: 6, scope: !5009)
!5027 = !DILocation(line: 1912, column: 8, scope: !5028)
!5028 = distinct !DILexicalBlock(scope: !5024, file: !77, line: 1911, column: 25)
!5029 = !DILocation(line: 1913, column: 2, scope: !5028)
!5030 = !DILocation(line: 1915, column: 11, scope: !5031)
!5031 = distinct !DILexicalBlock(scope: !5024, file: !77, line: 1913, column: 9)
!5032 = !DILocation(line: 1915, column: 3, scope: !5031)
!5033 = !DILocation(line: 1917, column: 11, scope: !5034)
!5034 = distinct !DILexicalBlock(scope: !5031, file: !77, line: 1915, column: 26)
!5035 = !DILocation(line: 1917, column: 9, scope: !5034)
!5036 = !DILocation(line: 1918, column: 4, scope: !5034)
!5037 = !DILocation(line: 1922, column: 9, scope: !5034)
!5038 = !DILocation(line: 1922, column: 18, scope: !5034)
!5039 = !DILocation(line: 1922, column: 24, scope: !5034)
!5040 = !DILocation(line: 1923, column: 11, scope: !5034)
!5041 = !DILocation(line: 1923, column: 9, scope: !5034)
!5042 = !DILocation(line: 1925, column: 8, scope: !5043)
!5043 = distinct !DILexicalBlock(scope: !5034, file: !77, line: 1925, column: 8)
!5044 = !DILocation(line: 1925, column: 13, scope: !5043)
!5045 = !DILocation(line: 1925, column: 8, scope: !5034)
!5046 = !DILocation(line: 1927, column: 12, scope: !5047)
!5047 = distinct !DILexicalBlock(scope: !5043, file: !77, line: 1925, column: 27)
!5048 = !DILocation(line: 1927, column: 10, scope: !5047)
!5049 = !DILocation(line: 1928, column: 4, scope: !5047)
!5050 = !DILocation(line: 1929, column: 4, scope: !5034)
!5051 = !DILocation(line: 1932, column: 9, scope: !5034)
!5052 = !DILocation(line: 1933, column: 4, scope: !5034)
!5053 = !DILocation(line: 1937, column: 7, scope: !5054)
!5054 = distinct !DILexicalBlock(scope: !5031, file: !77, line: 1937, column: 7)
!5055 = !DILocation(line: 1937, column: 12, scope: !5054)
!5056 = !DILocation(line: 1937, column: 7, scope: !5031)
!5057 = !DILocation(line: 1939, column: 19, scope: !5058)
!5058 = distinct !DILexicalBlock(scope: !5054, file: !77, line: 1937, column: 26)
!5059 = !DILocation(line: 1941, column: 11, scope: !5058)
!5060 = !DILocation(line: 1941, column: 9, scope: !5058)
!5061 = !DILocation(line: 1942, column: 3, scope: !5058)
!5062 = !DILocation(line: 1944, column: 7, scope: !5063)
!5063 = distinct !DILexicalBlock(scope: !5031, file: !77, line: 1944, column: 7)
!5064 = !DILocation(line: 1944, column: 12, scope: !5063)
!5065 = !DILocation(line: 1944, column: 7, scope: !5031)
!5066 = !DILocation(line: 1946, column: 9, scope: !5067)
!5067 = distinct !DILexicalBlock(scope: !5063, file: !77, line: 1944, column: 26)
!5068 = !DILocation(line: 1947, column: 3, scope: !5067)
!5069 = !DILocation(line: 1951, column: 2, scope: !5009)
!5070 = distinct !DISubprogram(name: "perform_accel_self_test", scope: !77, file: !77, line: 4586, type: !339, isLocal: true, isDefinition: true, scopeLine: 4587, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!5071 = !DILocalVariable(name: "dev", arg: 1, scope: !5070, file: !77, line: 4586, type: !341)
!5072 = !DILocation(line: 4586, column: 58, scope: !5070)
!5073 = !DILocalVariable(name: "rslt", scope: !5070, file: !77, line: 4588, type: !62)
!5074 = !DILocation(line: 4588, column: 9, scope: !5070)
!5075 = !DILocation(line: 4587, column: 3, scope: !5070)
!5076 = !DILocalVariable(name: "accel_pos", scope: !5070, file: !77, line: 4589, type: !1278)
!5077 = !DILocation(line: 4589, column: 28, scope: !5070)
!5078 = !DILocalVariable(name: "accel_neg", scope: !5070, file: !77, line: 4589, type: !1278)
!5079 = !DILocation(line: 4589, column: 39, scope: !5070)
!5080 = !DILocation(line: 4592, column: 9, scope: !5070)
!5081 = !DILocation(line: 4592, column: 7, scope: !5070)
!5082 = !DILocation(line: 4593, column: 6, scope: !5083)
!5083 = distinct !DILexicalBlock(scope: !5070, file: !77, line: 4593, column: 6)
!5084 = !DILocation(line: 4593, column: 11, scope: !5083)
!5085 = !DILocation(line: 4593, column: 6, scope: !5070)
!5086 = !DILocation(line: 4595, column: 10, scope: !5087)
!5087 = distinct !DILexicalBlock(scope: !5083, file: !77, line: 4593, column: 25)
!5088 = !DILocation(line: 4595, column: 8, scope: !5087)
!5089 = !DILocation(line: 4596, column: 7, scope: !5090)
!5090 = distinct !DILexicalBlock(scope: !5087, file: !77, line: 4596, column: 7)
!5091 = !DILocation(line: 4596, column: 12, scope: !5090)
!5092 = !DILocation(line: 4596, column: 7, scope: !5087)
!5093 = !DILocation(line: 4598, column: 11, scope: !5094)
!5094 = distinct !DILexicalBlock(scope: !5090, file: !77, line: 4596, column: 26)
!5095 = !DILocation(line: 4598, column: 9, scope: !5094)
!5096 = !DILocation(line: 4599, column: 8, scope: !5097)
!5097 = distinct !DILexicalBlock(scope: !5094, file: !77, line: 4599, column: 8)
!5098 = !DILocation(line: 4599, column: 13, scope: !5097)
!5099 = !DILocation(line: 4599, column: 8, scope: !5094)
!5100 = !DILocation(line: 4601, column: 12, scope: !5101)
!5101 = distinct !DILexicalBlock(scope: !5097, file: !77, line: 4599, column: 27)
!5102 = !DILocation(line: 4601, column: 10, scope: !5101)
!5103 = !DILocation(line: 4602, column: 4, scope: !5101)
!5104 = !DILocation(line: 4603, column: 3, scope: !5094)
!5105 = !DILocation(line: 4604, column: 2, scope: !5087)
!5106 = !DILocation(line: 4606, column: 2, scope: !5070)
!5107 = distinct !DISubprogram(name: "perform_gyro_self_test", scope: !77, file: !77, line: 4699, type: !412, isLocal: true, isDefinition: true, scopeLine: 4700, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!5108 = !DILocalVariable(name: "dev", arg: 1, scope: !5107, file: !77, line: 4699, type: !252)
!5109 = !DILocation(line: 4699, column: 63, scope: !5107)
!5110 = !DILocalVariable(name: "rslt", scope: !5107, file: !77, line: 4701, type: !62)
!5111 = !DILocation(line: 4701, column: 9, scope: !5107)
!5112 = !DILocation(line: 4700, column: 3, scope: !5107)
!5113 = !DILocation(line: 4704, column: 9, scope: !5107)
!5114 = !DILocation(line: 4704, column: 7, scope: !5107)
!5115 = !DILocation(line: 4705, column: 6, scope: !5116)
!5116 = distinct !DILexicalBlock(scope: !5107, file: !77, line: 4705, column: 6)
!5117 = !DILocation(line: 4705, column: 11, scope: !5116)
!5118 = !DILocation(line: 4705, column: 6, scope: !5107)
!5119 = !DILocation(line: 4707, column: 10, scope: !5120)
!5120 = distinct !DILexicalBlock(scope: !5116, file: !77, line: 4705, column: 25)
!5121 = !DILocation(line: 4707, column: 8, scope: !5120)
!5122 = !DILocation(line: 4708, column: 2, scope: !5120)
!5123 = !DILocation(line: 4710, column: 2, scope: !5107)
!5124 = distinct !DISubprogram(name: "enable_gyro_self_test", scope: !77, file: !77, line: 4716, type: !412, isLocal: true, isDefinition: true, scopeLine: 4717, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!5125 = !DILocalVariable(name: "dev", arg: 1, scope: !5124, file: !77, line: 4716, type: !252)
!5126 = !DILocation(line: 4716, column: 62, scope: !5124)
!5127 = !DILocalVariable(name: "rslt", scope: !5124, file: !77, line: 4718, type: !62)
!5128 = !DILocation(line: 4718, column: 9, scope: !5124)
!5129 = !DILocation(line: 4717, column: 3, scope: !5124)
!5130 = !DILocalVariable(name: "reg_data", scope: !5124, file: !77, line: 4719, type: !17)
!5131 = !DILocation(line: 4719, column: 10, scope: !5124)
!5132 = !DILocation(line: 4722, column: 9, scope: !5124)
!5133 = !DILocation(line: 4722, column: 7, scope: !5124)
!5134 = !DILocation(line: 4723, column: 6, scope: !5135)
!5135 = distinct !DILexicalBlock(scope: !5124, file: !77, line: 4723, column: 6)
!5136 = !DILocation(line: 4723, column: 11, scope: !5135)
!5137 = !DILocation(line: 4723, column: 6, scope: !5124)
!5138 = !DILocation(line: 4724, column: 14, scope: !5139)
!5139 = distinct !DILexicalBlock(scope: !5135, file: !77, line: 4723, column: 25)
!5140 = !DILocation(line: 4724, column: 12, scope: !5139)
!5141 = !DILocation(line: 4725, column: 10, scope: !5139)
!5142 = !DILocation(line: 4725, column: 8, scope: !5139)
!5143 = !DILocation(line: 4726, column: 7, scope: !5144)
!5144 = distinct !DILexicalBlock(scope: !5139, file: !77, line: 4726, column: 7)
!5145 = !DILocation(line: 4726, column: 12, scope: !5144)
!5146 = !DILocation(line: 4726, column: 7, scope: !5139)
!5147 = !DILocation(line: 4728, column: 9, scope: !5148)
!5148 = distinct !DILexicalBlock(scope: !5144, file: !77, line: 4726, column: 26)
!5149 = !DILocation(line: 4728, column: 4, scope: !5148)
!5150 = !DILocation(line: 4729, column: 3, scope: !5148)
!5151 = !DILocation(line: 4730, column: 2, scope: !5139)
!5152 = !DILocation(line: 4732, column: 2, scope: !5124)
!5153 = distinct !DISubprogram(name: "validate_gyro_self_test", scope: !77, file: !77, line: 4738, type: !412, isLocal: true, isDefinition: true, scopeLine: 4739, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!5154 = !DILocalVariable(name: "dev", arg: 1, scope: !5153, file: !77, line: 4738, type: !252)
!5155 = !DILocation(line: 4738, column: 64, scope: !5153)
!5156 = !DILocalVariable(name: "rslt", scope: !5153, file: !77, line: 4740, type: !62)
!5157 = !DILocation(line: 4740, column: 9, scope: !5153)
!5158 = !DILocation(line: 4739, column: 3, scope: !5153)
!5159 = !DILocalVariable(name: "reg_data", scope: !5153, file: !77, line: 4741, type: !17)
!5160 = !DILocation(line: 4741, column: 10, scope: !5153)
!5161 = !DILocation(line: 4744, column: 9, scope: !5153)
!5162 = !DILocation(line: 4744, column: 7, scope: !5153)
!5163 = !DILocation(line: 4745, column: 6, scope: !5164)
!5164 = distinct !DILexicalBlock(scope: !5153, file: !77, line: 4745, column: 6)
!5165 = !DILocation(line: 4745, column: 11, scope: !5164)
!5166 = !DILocation(line: 4745, column: 6, scope: !5153)
!5167 = !DILocation(line: 4746, column: 14, scope: !5168)
!5168 = distinct !DILexicalBlock(scope: !5164, file: !77, line: 4745, column: 25)
!5169 = !DILocation(line: 4746, column: 12, scope: !5168)
!5170 = !DILocation(line: 4747, column: 7, scope: !5171)
!5171 = distinct !DILexicalBlock(scope: !5168, file: !77, line: 4747, column: 7)
!5172 = !DILocation(line: 4747, column: 16, scope: !5171)
!5173 = !DILocation(line: 4747, column: 7, scope: !5168)
!5174 = !DILocation(line: 4749, column: 9, scope: !5175)
!5175 = distinct !DILexicalBlock(scope: !5171, file: !77, line: 4747, column: 34)
!5176 = !DILocation(line: 4750, column: 3, scope: !5175)
!5177 = !DILocation(line: 4751, column: 9, scope: !5178)
!5178 = distinct !DILexicalBlock(scope: !5171, file: !77, line: 4750, column: 10)
!5179 = !DILocation(line: 4753, column: 2, scope: !5168)
!5180 = !DILocation(line: 4755, column: 2, scope: !5153)
!5181 = distinct !DISubprogram(name: "enable_accel_self_test", scope: !77, file: !77, line: 4613, type: !339, isLocal: true, isDefinition: true, scopeLine: 4614, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!5182 = !DILocalVariable(name: "dev", arg: 1, scope: !5181, file: !77, line: 4613, type: !341)
!5183 = !DILocation(line: 4613, column: 57, scope: !5181)
!5184 = !DILocalVariable(name: "rslt", scope: !5181, file: !77, line: 4615, type: !62)
!5185 = !DILocation(line: 4615, column: 9, scope: !5181)
!5186 = !DILocation(line: 4614, column: 3, scope: !5181)
!5187 = !DILocalVariable(name: "reg_data", scope: !5181, file: !77, line: 4616, type: !17)
!5188 = !DILocation(line: 4616, column: 10, scope: !5181)
!5189 = !DILocation(line: 4619, column: 7, scope: !5181)
!5190 = !DILocation(line: 4619, column: 17, scope: !5181)
!5191 = !DILocation(line: 4619, column: 23, scope: !5181)
!5192 = !DILocation(line: 4621, column: 7, scope: !5181)
!5193 = !DILocation(line: 4621, column: 17, scope: !5181)
!5194 = !DILocation(line: 4621, column: 23, scope: !5181)
!5195 = !DILocation(line: 4622, column: 9, scope: !5181)
!5196 = !DILocation(line: 4622, column: 7, scope: !5181)
!5197 = !DILocation(line: 4623, column: 6, scope: !5198)
!5198 = distinct !DILexicalBlock(scope: !5181, file: !77, line: 4623, column: 6)
!5199 = !DILocation(line: 4623, column: 11, scope: !5198)
!5200 = !DILocation(line: 4623, column: 6, scope: !5181)
!5201 = !DILocation(line: 4626, column: 12, scope: !5202)
!5202 = distinct !DILexicalBlock(scope: !5198, file: !77, line: 4623, column: 25)
!5203 = !DILocation(line: 4627, column: 10, scope: !5202)
!5204 = !DILocation(line: 4627, column: 8, scope: !5202)
!5205 = !DILocation(line: 4628, column: 2, scope: !5202)
!5206 = !DILocation(line: 4630, column: 2, scope: !5181)
!5207 = distinct !DISubprogram(name: "accel_self_test_positive_excitation", scope: !77, file: !77, line: 4636, type: !5208, isLocal: true, isDefinition: true, scopeLine: 4637, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!5208 = !DISubroutineType(types: !5209)
!5209 = !{!62, !1277, !252}
!5210 = !DILocalVariable(name: "accel_pos", arg: 1, scope: !5207, file: !77, line: 4636, type: !1277)
!5211 = !DILocation(line: 4636, column: 78, scope: !5207)
!5212 = !DILocalVariable(name: "dev", arg: 2, scope: !5207, file: !77, line: 4636, type: !252)
!5213 = !DILocation(line: 4636, column: 114, scope: !5207)
!5214 = !DILocalVariable(name: "rslt", scope: !5207, file: !77, line: 4638, type: !62)
!5215 = !DILocation(line: 4638, column: 9, scope: !5207)
!5216 = !DILocation(line: 4637, column: 3, scope: !5207)
!5217 = !DILocalVariable(name: "reg_data", scope: !5207, file: !77, line: 4639, type: !17)
!5218 = !DILocation(line: 4639, column: 10, scope: !5207)
!5219 = !DILocation(line: 4643, column: 11, scope: !5207)
!5220 = !DILocation(line: 4644, column: 9, scope: !5207)
!5221 = !DILocation(line: 4644, column: 7, scope: !5207)
!5222 = !DILocation(line: 4645, column: 6, scope: !5223)
!5223 = distinct !DILexicalBlock(scope: !5207, file: !77, line: 4645, column: 6)
!5224 = !DILocation(line: 4645, column: 11, scope: !5223)
!5225 = !DILocation(line: 4645, column: 6, scope: !5207)
!5226 = !DILocation(line: 4647, column: 8, scope: !5227)
!5227 = distinct !DILexicalBlock(scope: !5223, file: !77, line: 4645, column: 25)
!5228 = !DILocation(line: 4647, column: 3, scope: !5227)
!5229 = !DILocation(line: 4648, column: 10, scope: !5227)
!5230 = !DILocation(line: 4648, column: 8, scope: !5227)
!5231 = !DILocation(line: 4649, column: 2, scope: !5227)
!5232 = !DILocation(line: 4651, column: 2, scope: !5207)
!5233 = distinct !DISubprogram(name: "accel_self_test_negative_excitation", scope: !77, file: !77, line: 4657, type: !5208, isLocal: true, isDefinition: true, scopeLine: 4658, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!5234 = !DILocalVariable(name: "accel_neg", arg: 1, scope: !5233, file: !77, line: 4657, type: !1277)
!5235 = !DILocation(line: 4657, column: 78, scope: !5233)
!5236 = !DILocalVariable(name: "dev", arg: 2, scope: !5233, file: !77, line: 4657, type: !252)
!5237 = !DILocation(line: 4657, column: 114, scope: !5233)
!5238 = !DILocalVariable(name: "rslt", scope: !5233, file: !77, line: 4659, type: !62)
!5239 = !DILocation(line: 4659, column: 9, scope: !5233)
!5240 = !DILocation(line: 4658, column: 3, scope: !5233)
!5241 = !DILocalVariable(name: "reg_data", scope: !5233, file: !77, line: 4660, type: !17)
!5242 = !DILocation(line: 4660, column: 10, scope: !5233)
!5243 = !DILocation(line: 4664, column: 11, scope: !5233)
!5244 = !DILocation(line: 4665, column: 9, scope: !5233)
!5245 = !DILocation(line: 4665, column: 7, scope: !5233)
!5246 = !DILocation(line: 4666, column: 6, scope: !5247)
!5247 = distinct !DILexicalBlock(scope: !5233, file: !77, line: 4666, column: 6)
!5248 = !DILocation(line: 4666, column: 11, scope: !5247)
!5249 = !DILocation(line: 4666, column: 6, scope: !5233)
!5250 = !DILocation(line: 4668, column: 8, scope: !5251)
!5251 = distinct !DILexicalBlock(scope: !5247, file: !77, line: 4666, column: 25)
!5252 = !DILocation(line: 4668, column: 3, scope: !5251)
!5253 = !DILocation(line: 4669, column: 10, scope: !5251)
!5254 = !DILocation(line: 4669, column: 8, scope: !5251)
!5255 = !DILocation(line: 4670, column: 2, scope: !5251)
!5256 = !DILocation(line: 4672, column: 2, scope: !5233)
!5257 = distinct !DISubprogram(name: "validate_accel_self_test", scope: !77, file: !77, line: 4678, type: !5258, isLocal: true, isDefinition: true, scopeLine: 4680, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!5258 = !DISubroutineType(types: !5259)
!5259 = !{!62, !5260, !5260}
!5260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5261, size: 64)
!5261 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1278)
!5262 = !DILocalVariable(name: "accel_pos", arg: 1, scope: !5257, file: !77, line: 4678, type: !5260)
!5263 = !DILocation(line: 4678, column: 73, scope: !5257)
!5264 = !DILocalVariable(name: "accel_neg", arg: 2, scope: !5257, file: !77, line: 4679, type: !5260)
!5265 = !DILocation(line: 4679, column: 39, scope: !5257)
!5266 = !DILocalVariable(name: "rslt", scope: !5257, file: !77, line: 4681, type: !62)
!5267 = !DILocation(line: 4681, column: 9, scope: !5257)
!5268 = !DILocation(line: 4684, column: 19, scope: !5269)
!5269 = distinct !DILexicalBlock(scope: !5257, file: !77, line: 4684, column: 6)
!5270 = !DILocation(line: 4684, column: 8, scope: !5269)
!5271 = !DILocation(line: 4684, column: 34, scope: !5269)
!5272 = !DILocation(line: 4684, column: 23, scope: !5269)
!5273 = !DILocation(line: 4684, column: 21, scope: !5269)
!5274 = !DILocation(line: 4684, column: 37, scope: !5269)
!5275 = !DILocation(line: 4685, column: 3, scope: !5269)
!5276 = !DILocation(line: 4685, column: 19, scope: !5277)
!5277 = !DILexicalBlockFile(scope: !5269, file: !77, discriminator: 1)
!5278 = !DILocation(line: 4685, column: 8, scope: !5277)
!5279 = !DILocation(line: 4685, column: 34, scope: !5277)
!5280 = !DILocation(line: 4685, column: 23, scope: !5277)
!5281 = !DILocation(line: 4685, column: 21, scope: !5277)
!5282 = !DILocation(line: 4685, column: 37, scope: !5277)
!5283 = !DILocation(line: 4686, column: 3, scope: !5269)
!5284 = !DILocation(line: 4686, column: 19, scope: !5277)
!5285 = !DILocation(line: 4686, column: 8, scope: !5277)
!5286 = !DILocation(line: 4686, column: 34, scope: !5277)
!5287 = !DILocation(line: 4686, column: 23, scope: !5277)
!5288 = !DILocation(line: 4686, column: 21, scope: !5277)
!5289 = !DILocation(line: 4686, column: 37, scope: !5277)
!5290 = !DILocation(line: 4684, column: 6, scope: !5291)
!5291 = !DILexicalBlockFile(scope: !5257, file: !77, discriminator: 1)
!5292 = !DILocation(line: 4688, column: 8, scope: !5293)
!5293 = distinct !DILexicalBlock(scope: !5269, file: !77, line: 4686, column: 70)
!5294 = !DILocation(line: 4689, column: 2, scope: !5293)
!5295 = !DILocation(line: 4690, column: 8, scope: !5296)
!5296 = distinct !DILexicalBlock(scope: !5269, file: !77, line: 4689, column: 9)
!5297 = !DILocation(line: 4693, column: 2, scope: !5257)
!5298 = distinct !DISubprogram(name: "bmi160_get_fifo_data", scope: !77, file: !77, line: 1959, type: !412, isLocal: false, isDefinition: true, scopeLine: 1960, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!5299 = !DILocalVariable(name: "dev", arg: 1, scope: !5298, file: !77, line: 1959, type: !252)
!5300 = !DILocation(line: 1959, column: 54, scope: !5298)
!5301 = !DILocalVariable(name: "rslt", scope: !5298, file: !77, line: 1961, type: !62)
!5302 = !DILocation(line: 1961, column: 9, scope: !5298)
!5303 = !DILocalVariable(name: "user_fifo_len", scope: !5298, file: !77, line: 1963, type: !47)
!5304 = !DILocation(line: 1963, column: 11, scope: !5298)
!5305 = !DILocalVariable(name: "addr", scope: !5298, file: !77, line: 1964, type: !17)
!5306 = !DILocation(line: 1964, column: 10, scope: !5298)
!5307 = !DILocation(line: 1960, column: 3, scope: !5298)
!5308 = !DILocalVariable(name: "bytes_to_read", scope: !5298, file: !77, line: 1962, type: !47)
!5309 = !DILocation(line: 1962, column: 11, scope: !5298)
!5310 = !DILocation(line: 1967, column: 11, scope: !5311)
!5311 = distinct !DILexicalBlock(scope: !5298, file: !77, line: 1967, column: 6)
!5312 = !DILocation(line: 1967, column: 20, scope: !5311)
!5313 = !DILocation(line: 1967, column: 29, scope: !5314)
!5314 = !DILexicalBlockFile(scope: !5311, file: !77, discriminator: 1)
!5315 = !DILocation(line: 1967, column: 35, scope: !5314)
!5316 = !DILocation(line: 1967, column: 40, scope: !5314)
!5317 = !DILocation(line: 1967, column: 6, scope: !5318)
!5318 = !DILexicalBlockFile(scope: !5298, file: !77, discriminator: 1)
!5319 = !DILocation(line: 1968, column: 8, scope: !5320)
!5320 = distinct !DILexicalBlock(scope: !5311, file: !77, line: 1967, column: 50)
!5321 = !DILocation(line: 1969, column: 2, scope: !5320)
!5322 = !DILocation(line: 1970, column: 3, scope: !5323)
!5323 = distinct !DILexicalBlock(scope: !5311, file: !77, line: 1969, column: 9)
!5324 = !DILocation(line: 1972, column: 10, scope: !5323)
!5325 = !DILocation(line: 1972, column: 8, scope: !5323)
!5326 = !DILocation(line: 1973, column: 7, scope: !5327)
!5327 = distinct !DILexicalBlock(scope: !5323, file: !77, line: 1973, column: 7)
!5328 = !DILocation(line: 1973, column: 12, scope: !5327)
!5329 = !DILocation(line: 1973, column: 7, scope: !5323)
!5330 = !DILocation(line: 1974, column: 25, scope: !5331)
!5331 = distinct !DILexicalBlock(scope: !5327, file: !77, line: 1973, column: 26)
!5332 = !DILocation(line: 1974, column: 31, scope: !5331)
!5333 = !DILocation(line: 1974, column: 18, scope: !5331)
!5334 = !DILocation(line: 1976, column: 13, scope: !5335)
!5335 = distinct !DILexicalBlock(scope: !5331, file: !77, line: 1976, column: 8)
!5336 = !DILocation(line: 1976, column: 19, scope: !5335)
!5337 = !DILocation(line: 1976, column: 8, scope: !5335)
!5338 = !DILocation(line: 1976, column: 28, scope: !5335)
!5339 = !DILocation(line: 1976, column: 26, scope: !5335)
!5340 = !DILocation(line: 1976, column: 8, scope: !5331)
!5341 = !DILocation(line: 1979, column: 25, scope: !5342)
!5342 = distinct !DILexicalBlock(scope: !5335, file: !77, line: 1976, column: 43)
!5343 = !DILocation(line: 1979, column: 10, scope: !5342)
!5344 = !DILocation(line: 1979, column: 16, scope: !5342)
!5345 = !DILocation(line: 1979, column: 23, scope: !5342)
!5346 = !DILocation(line: 1980, column: 4, scope: !5342)
!5347 = !DILocation(line: 1982, column: 14, scope: !5348)
!5348 = distinct !DILexicalBlock(scope: !5331, file: !77, line: 1982, column: 8)
!5349 = !DILocation(line: 1982, column: 20, scope: !5348)
!5350 = !DILocation(line: 1982, column: 9, scope: !5348)
!5351 = !DILocation(line: 1982, column: 37, scope: !5348)
!5352 = !DILocation(line: 1983, column: 5, scope: !5348)
!5353 = !DILocation(line: 1983, column: 9, scope: !5354)
!5354 = !DILexicalBlockFile(scope: !5348, file: !77, discriminator: 1)
!5355 = !DILocation(line: 1983, column: 23, scope: !5354)
!5356 = !DILocation(line: 1983, column: 55, scope: !5354)
!5357 = !DILocation(line: 1983, column: 52, scope: !5354)
!5358 = !DILocation(line: 1982, column: 8, scope: !5359)
!5359 = !DILexicalBlockFile(scope: !5331, file: !77, discriminator: 1)
!5360 = !DILocation(line: 1985, column: 30, scope: !5361)
!5361 = distinct !DILexicalBlock(scope: !5348, file: !77, line: 1983, column: 71)
!5362 = !DILocation(line: 1985, column: 36, scope: !5361)
!5363 = !DILocation(line: 1985, column: 25, scope: !5361)
!5364 = !DILocation(line: 1985, column: 43, scope: !5361)
!5365 = !DILocation(line: 1985, column: 10, scope: !5361)
!5366 = !DILocation(line: 1985, column: 16, scope: !5361)
!5367 = !DILocation(line: 1985, column: 23, scope: !5361)
!5368 = !DILocation(line: 1986, column: 4, scope: !5361)
!5369 = !DILocation(line: 1988, column: 13, scope: !5370)
!5370 = distinct !DILexicalBlock(scope: !5331, file: !77, line: 1988, column: 8)
!5371 = !DILocation(line: 1988, column: 8, scope: !5370)
!5372 = !DILocation(line: 1988, column: 23, scope: !5370)
!5373 = !DILocation(line: 1988, column: 8, scope: !5331)
!5374 = !DILocation(line: 1990, column: 12, scope: !5375)
!5375 = distinct !DILexicalBlock(scope: !5370, file: !77, line: 1988, column: 43)
!5376 = !DILocation(line: 1990, column: 17, scope: !5375)
!5377 = !DILocation(line: 1990, column: 10, scope: !5375)
!5378 = !DILocation(line: 1991, column: 4, scope: !5375)
!5379 = !DILocation(line: 1994, column: 16, scope: !5331)
!5380 = !DILocation(line: 1994, column: 26, scope: !5331)
!5381 = !DILocation(line: 1994, column: 41, scope: !5331)
!5382 = !DILocation(line: 1994, column: 47, scope: !5331)
!5383 = !DILocation(line: 1994, column: 58, scope: !5331)
!5384 = !DILocation(line: 1994, column: 64, scope: !5331)
!5385 = !DILocation(line: 1994, column: 11, scope: !5331)
!5386 = !DILocation(line: 1994, column: 9, scope: !5331)
!5387 = !DILocation(line: 1995, column: 3, scope: !5331)
!5388 = !DILocation(line: 1998, column: 2, scope: !5298)
!5389 = distinct !DISubprogram(name: "reset_fifo_data_structure", scope: !77, file: !77, line: 4850, type: !5390, isLocal: true, isDefinition: true, scopeLine: 4851, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!5390 = !DISubroutineType(types: !5391)
!5391 = !{null, !252}
!5392 = !DILocalVariable(name: "dev", arg: 1, scope: !5389, file: !77, line: 4850, type: !252)
!5393 = !DILocation(line: 4850, column: 64, scope: !5389)
!5394 = !DILocation(line: 4851, column: 3, scope: !5389)
!5395 = !DILocation(line: 4854, column: 7, scope: !5389)
!5396 = !DILocation(line: 4854, column: 13, scope: !5389)
!5397 = !DILocation(line: 4854, column: 34, scope: !5389)
!5398 = !DILocation(line: 4855, column: 7, scope: !5389)
!5399 = !DILocation(line: 4855, column: 13, scope: !5389)
!5400 = !DILocation(line: 4855, column: 33, scope: !5389)
!5401 = !DILocation(line: 4856, column: 7, scope: !5389)
!5402 = !DILocation(line: 4856, column: 13, scope: !5389)
!5403 = !DILocation(line: 4856, column: 32, scope: !5389)
!5404 = !DILocation(line: 4857, column: 7, scope: !5389)
!5405 = !DILocation(line: 4857, column: 13, scope: !5389)
!5406 = !DILocation(line: 4857, column: 25, scope: !5389)
!5407 = !DILocation(line: 4858, column: 7, scope: !5389)
!5408 = !DILocation(line: 4858, column: 13, scope: !5389)
!5409 = !DILocation(line: 4858, column: 33, scope: !5389)
!5410 = !DILocation(line: 4859, column: 1, scope: !5389)
!5411 = distinct !DISubprogram(name: "get_fifo_byte_counter", scope: !77, file: !77, line: 4865, type: !4479, isLocal: true, isDefinition: true, scopeLine: 4866, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!5412 = !DILocalVariable(name: "bytes_to_read", arg: 1, scope: !5411, file: !77, line: 4865, type: !4481)
!5413 = !DILocation(line: 4865, column: 47, scope: !5411)
!5414 = !DILocalVariable(name: "dev", arg: 2, scope: !5411, file: !77, line: 4865, type: !252)
!5415 = !DILocation(line: 4865, column: 87, scope: !5411)
!5416 = !DILocalVariable(name: "rslt", scope: !5411, file: !77, line: 4867, type: !62)
!5417 = !DILocation(line: 4867, column: 9, scope: !5411)
!5418 = !DILocalVariable(name: "addr", scope: !5411, file: !77, line: 4869, type: !17)
!5419 = !DILocation(line: 4869, column: 10, scope: !5411)
!5420 = !DILocation(line: 4866, column: 3, scope: !5411)
!5421 = !DILocalVariable(name: "data", scope: !5411, file: !77, line: 4868, type: !573)
!5422 = !DILocation(line: 4868, column: 10, scope: !5411)
!5423 = !DILocation(line: 4871, column: 32, scope: !5411)
!5424 = !DILocation(line: 4871, column: 10, scope: !5411)
!5425 = !DILocation(line: 4871, column: 7, scope: !5411)
!5426 = !DILocation(line: 4872, column: 12, scope: !5411)
!5427 = !DILocation(line: 4872, column: 20, scope: !5411)
!5428 = !DILocation(line: 4872, column: 2, scope: !5411)
!5429 = !DILocation(line: 4872, column: 10, scope: !5411)
!5430 = !DILocation(line: 4875, column: 31, scope: !5411)
!5431 = !DILocation(line: 4875, column: 21, scope: !5411)
!5432 = !DILocation(line: 4875, column: 39, scope: !5411)
!5433 = !DILocation(line: 4875, column: 58, scope: !5411)
!5434 = !DILocation(line: 4875, column: 48, scope: !5411)
!5435 = !DILocation(line: 4875, column: 47, scope: !5411)
!5436 = !DILocation(line: 4875, column: 45, scope: !5411)
!5437 = !DILocation(line: 4875, column: 19, scope: !5411)
!5438 = !DILocation(line: 4875, column: 17, scope: !5411)
!5439 = !DILocation(line: 4877, column: 2, scope: !5411)
!5440 = distinct !DISubprogram(name: "bmi160_set_fifo_flush", scope: !77, file: !77, line: 2006, type: !412, isLocal: false, isDefinition: true, scopeLine: 2007, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!5441 = !DILocalVariable(name: "dev", arg: 1, scope: !5440, file: !77, line: 2006, type: !252)
!5442 = !DILocation(line: 2006, column: 55, scope: !5440)
!5443 = !DILocalVariable(name: "rslt", scope: !5440, file: !77, line: 2008, type: !62)
!5444 = !DILocation(line: 2008, column: 9, scope: !5440)
!5445 = !DILocalVariable(name: "reg_addr", scope: !5440, file: !77, line: 2010, type: !17)
!5446 = !DILocation(line: 2010, column: 10, scope: !5440)
!5447 = !DILocation(line: 2007, column: 3, scope: !5440)
!5448 = !DILocalVariable(name: "data", scope: !5440, file: !77, line: 2009, type: !17)
!5449 = !DILocation(line: 2009, column: 10, scope: !5440)
!5450 = !DILocation(line: 2013, column: 10, scope: !5451)
!5451 = distinct !DILexicalBlock(scope: !5440, file: !77, line: 2013, column: 6)
!5452 = !DILocation(line: 2013, column: 6, scope: !5440)
!5453 = !DILocation(line: 2014, column: 8, scope: !5451)
!5454 = !DILocation(line: 2014, column: 3, scope: !5451)
!5455 = !DILocation(line: 2016, column: 10, scope: !5451)
!5456 = !DILocation(line: 2016, column: 8, scope: !5451)
!5457 = !DILocation(line: 2018, column: 2, scope: !5440)
!5458 = distinct !DISubprogram(name: "bmi160_set_fifo_config", scope: !77, file: !77, line: 2024, type: !5459, isLocal: false, isDefinition: true, scopeLine: 2025, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!5459 = !DISubroutineType(types: !5460)
!5460 = !{!62, !17, !17, !252}
!5461 = !DILocalVariable(name: "config", arg: 1, scope: !5458, file: !77, line: 2024, type: !17)
!5462 = !DILocation(line: 2024, column: 39, scope: !5458)
!5463 = !DILocalVariable(name: "enable", arg: 2, scope: !5458, file: !77, line: 2024, type: !17)
!5464 = !DILocation(line: 2024, column: 55, scope: !5458)
!5465 = !DILocalVariable(name: "dev", arg: 3, scope: !5458, file: !77, line: 2024, type: !252)
!5466 = !DILocation(line: 2024, column: 88, scope: !5458)
!5467 = !DILocalVariable(name: "rslt", scope: !5458, file: !77, line: 2026, type: !62)
!5468 = !DILocation(line: 2026, column: 9, scope: !5458)
!5469 = !DILocalVariable(name: "reg_addr", scope: !5458, file: !77, line: 2028, type: !17)
!5470 = !DILocation(line: 2028, column: 10, scope: !5458)
!5471 = !DILocalVariable(name: "fifo_config", scope: !5458, file: !77, line: 2029, type: !17)
!5472 = !DILocation(line: 2029, column: 10, scope: !5458)
!5473 = !DILocation(line: 2025, column: 3, scope: !5458)
!5474 = !DILocalVariable(name: "data", scope: !5458, file: !77, line: 2027, type: !17)
!5475 = !DILocation(line: 2027, column: 10, scope: !5458)
!5476 = !DILocation(line: 2029, column: 24, scope: !5458)
!5477 = !DILocation(line: 2029, column: 31, scope: !5458)
!5478 = !DILocation(line: 2032, column: 10, scope: !5479)
!5479 = distinct !DILexicalBlock(scope: !5458, file: !77, line: 2032, column: 6)
!5480 = !DILocation(line: 2032, column: 6, scope: !5458)
!5481 = !DILocation(line: 2033, column: 8, scope: !5482)
!5482 = distinct !DILexicalBlock(scope: !5479, file: !77, line: 2032, column: 19)
!5483 = !DILocation(line: 2034, column: 2, scope: !5482)
!5484 = !DILocation(line: 2035, column: 10, scope: !5485)
!5485 = distinct !DILexicalBlock(scope: !5479, file: !77, line: 2034, column: 9)
!5486 = !DILocation(line: 2035, column: 8, scope: !5485)
!5487 = !DILocation(line: 2037, column: 7, scope: !5488)
!5488 = distinct !DILexicalBlock(scope: !5485, file: !77, line: 2037, column: 7)
!5489 = !DILocation(line: 2037, column: 12, scope: !5488)
!5490 = !DILocation(line: 2037, column: 7, scope: !5485)
!5491 = !DILocation(line: 2039, column: 8, scope: !5492)
!5492 = distinct !DILexicalBlock(scope: !5493, file: !77, line: 2039, column: 8)
!5493 = distinct !DILexicalBlock(scope: !5488, file: !77, line: 2037, column: 26)
!5494 = !DILocation(line: 2039, column: 20, scope: !5492)
!5495 = !DILocation(line: 2039, column: 8, scope: !5493)
!5496 = !DILocation(line: 2041, column: 9, scope: !5497)
!5497 = distinct !DILexicalBlock(scope: !5498, file: !77, line: 2041, column: 9)
!5498 = distinct !DILexicalBlock(scope: !5492, file: !77, line: 2039, column: 25)
!5499 = !DILocation(line: 2041, column: 16, scope: !5497)
!5500 = !DILocation(line: 2041, column: 9, scope: !5498)
!5501 = !DILocation(line: 2042, column: 13, scope: !5497)
!5502 = !DILocation(line: 2042, column: 20, scope: !5497)
!5503 = !DILocation(line: 2042, column: 18, scope: !5497)
!5504 = !DILocation(line: 2042, column: 11, scope: !5497)
!5505 = !DILocation(line: 2042, column: 6, scope: !5497)
!5506 = !DILocation(line: 2044, column: 13, scope: !5497)
!5507 = !DILocation(line: 2044, column: 22, scope: !5497)
!5508 = !DILocation(line: 2044, column: 21, scope: !5497)
!5509 = !DILocation(line: 2044, column: 18, scope: !5497)
!5510 = !DILocation(line: 2044, column: 11, scope: !5497)
!5511 = !DILocation(line: 2045, column: 4, scope: !5498)
!5512 = !DILocation(line: 2047, column: 11, scope: !5493)
!5513 = !DILocation(line: 2047, column: 9, scope: !5493)
!5514 = !DILocation(line: 2048, column: 8, scope: !5515)
!5515 = distinct !DILexicalBlock(scope: !5493, file: !77, line: 2048, column: 8)
!5516 = !DILocation(line: 2048, column: 13, scope: !5515)
!5517 = !DILocation(line: 2048, column: 8, scope: !5493)
!5518 = !DILocation(line: 2050, column: 12, scope: !5519)
!5519 = distinct !DILexicalBlock(scope: !5515, file: !77, line: 2048, column: 27)
!5520 = !DILocation(line: 2050, column: 10, scope: !5519)
!5521 = !DILocation(line: 2051, column: 9, scope: !5522)
!5522 = distinct !DILexicalBlock(scope: !5519, file: !77, line: 2051, column: 9)
!5523 = !DILocation(line: 2051, column: 14, scope: !5522)
!5524 = !DILocation(line: 2051, column: 9, scope: !5519)
!5525 = !DILocation(line: 2053, column: 38, scope: !5526)
!5526 = distinct !DILexicalBlock(scope: !5522, file: !77, line: 2051, column: 28)
!5527 = !DILocation(line: 2053, column: 43, scope: !5526)
!5528 = !DILocation(line: 2053, column: 11, scope: !5526)
!5529 = !DILocation(line: 2053, column: 17, scope: !5526)
!5530 = !DILocation(line: 2053, column: 36, scope: !5526)
!5531 = !DILocation(line: 2055, column: 36, scope: !5526)
!5532 = !DILocation(line: 2055, column: 41, scope: !5526)
!5533 = !DILocation(line: 2055, column: 11, scope: !5526)
!5534 = !DILocation(line: 2055, column: 17, scope: !5526)
!5535 = !DILocation(line: 2055, column: 34, scope: !5526)
!5536 = !DILocation(line: 2057, column: 36, scope: !5526)
!5537 = !DILocation(line: 2057, column: 41, scope: !5526)
!5538 = !DILocation(line: 2057, column: 11, scope: !5526)
!5539 = !DILocation(line: 2057, column: 17, scope: !5526)
!5540 = !DILocation(line: 2057, column: 34, scope: !5526)
!5541 = !DILocation(line: 2058, column: 5, scope: !5526)
!5542 = !DILocation(line: 2059, column: 4, scope: !5519)
!5543 = !DILocation(line: 2060, column: 3, scope: !5493)
!5544 = !DILocation(line: 2063, column: 2, scope: !5458)
!5545 = distinct !DISubprogram(name: "bmi160_set_fifo_down", scope: !77, file: !77, line: 2071, type: !4436, isLocal: false, isDefinition: true, scopeLine: 2072, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!5546 = !DILocalVariable(name: "fifo_down", arg: 1, scope: !5545, file: !77, line: 2071, type: !17)
!5547 = !DILocation(line: 2071, column: 37, scope: !5545)
!5548 = !DILocalVariable(name: "dev", arg: 2, scope: !5545, file: !77, line: 2071, type: !252)
!5549 = !DILocation(line: 2071, column: 73, scope: !5545)
!5550 = !DILocalVariable(name: "rslt", scope: !5545, file: !77, line: 2073, type: !62)
!5551 = !DILocation(line: 2073, column: 9, scope: !5545)
!5552 = !DILocalVariable(name: "reg_addr", scope: !5545, file: !77, line: 2075, type: !17)
!5553 = !DILocation(line: 2075, column: 10, scope: !5545)
!5554 = !DILocation(line: 2072, column: 3, scope: !5545)
!5555 = !DILocalVariable(name: "data", scope: !5545, file: !77, line: 2074, type: !17)
!5556 = !DILocation(line: 2074, column: 10, scope: !5545)
!5557 = !DILocation(line: 2078, column: 10, scope: !5558)
!5558 = distinct !DILexicalBlock(scope: !5545, file: !77, line: 2078, column: 6)
!5559 = !DILocation(line: 2078, column: 6, scope: !5545)
!5560 = !DILocation(line: 2079, column: 8, scope: !5561)
!5561 = distinct !DILexicalBlock(scope: !5558, file: !77, line: 2078, column: 19)
!5562 = !DILocation(line: 2080, column: 2, scope: !5561)
!5563 = !DILocation(line: 2081, column: 10, scope: !5564)
!5564 = distinct !DILexicalBlock(scope: !5558, file: !77, line: 2080, column: 9)
!5565 = !DILocation(line: 2081, column: 8, scope: !5564)
!5566 = !DILocation(line: 2083, column: 8, scope: !5567)
!5567 = distinct !DILexicalBlock(scope: !5564, file: !77, line: 2083, column: 8)
!5568 = !DILocation(line: 2083, column: 13, scope: !5567)
!5569 = !DILocation(line: 2083, column: 8, scope: !5564)
!5570 = !DILocation(line: 2084, column: 11, scope: !5571)
!5571 = distinct !DILexicalBlock(scope: !5567, file: !77, line: 2083, column: 27)
!5572 = !DILocation(line: 2084, column: 18, scope: !5571)
!5573 = !DILocation(line: 2084, column: 16, scope: !5571)
!5574 = !DILocation(line: 2084, column: 9, scope: !5571)
!5575 = !DILocation(line: 2085, column: 11, scope: !5571)
!5576 = !DILocation(line: 2085, column: 9, scope: !5571)
!5577 = !DILocation(line: 2086, column: 4, scope: !5571)
!5578 = !DILocation(line: 2089, column: 2, scope: !5545)
!5579 = distinct !DISubprogram(name: "bmi160_set_fifo_wm", scope: !77, file: !77, line: 2097, type: !4436, isLocal: false, isDefinition: true, scopeLine: 2098, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!5580 = !DILocalVariable(name: "fifo_wm", arg: 1, scope: !5579, file: !77, line: 2097, type: !17)
!5581 = !DILocation(line: 2097, column: 35, scope: !5579)
!5582 = !DILocalVariable(name: "dev", arg: 2, scope: !5579, file: !77, line: 2097, type: !252)
!5583 = !DILocation(line: 2097, column: 69, scope: !5579)
!5584 = !DILocalVariable(name: "rslt", scope: !5579, file: !77, line: 2099, type: !62)
!5585 = !DILocation(line: 2099, column: 9, scope: !5579)
!5586 = !DILocalVariable(name: "reg_addr", scope: !5579, file: !77, line: 2101, type: !17)
!5587 = !DILocation(line: 2101, column: 10, scope: !5579)
!5588 = !DILocation(line: 2098, column: 3, scope: !5579)
!5589 = !DILocalVariable(name: "data", scope: !5579, file: !77, line: 2100, type: !17)
!5590 = !DILocation(line: 2100, column: 10, scope: !5579)
!5591 = !DILocation(line: 2104, column: 10, scope: !5592)
!5592 = distinct !DILexicalBlock(scope: !5579, file: !77, line: 2104, column: 6)
!5593 = !DILocation(line: 2104, column: 6, scope: !5579)
!5594 = !DILocation(line: 2105, column: 8, scope: !5592)
!5595 = !DILocation(line: 2105, column: 3, scope: !5592)
!5596 = !DILocation(line: 2107, column: 10, scope: !5592)
!5597 = !DILocation(line: 2107, column: 8, scope: !5592)
!5598 = !DILocation(line: 2109, column: 2, scope: !5579)
!5599 = distinct !DISubprogram(name: "bmi160_extract_accel", scope: !77, file: !77, line: 2118, type: !5600, isLocal: false, isDefinition: true, scopeLine: 2119, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!5600 = !DISubroutineType(types: !5601)
!5601 = !{!62, !1277, !45, !252}
!5602 = !DILocalVariable(name: "accel_data", arg: 1, scope: !5599, file: !77, line: 2118, type: !1277)
!5603 = !DILocation(line: 2118, column: 56, scope: !5599)
!5604 = !DILocalVariable(name: "accel_length", arg: 2, scope: !5599, file: !77, line: 2118, type: !45)
!5605 = !DILocation(line: 2118, column: 77, scope: !5599)
!5606 = !DILocalVariable(name: "dev", arg: 3, scope: !5599, file: !77, line: 2118, type: !252)
!5607 = !DILocation(line: 2118, column: 116, scope: !5599)
!5608 = !DILocalVariable(name: "rslt", scope: !5599, file: !77, line: 2120, type: !62)
!5609 = !DILocation(line: 2120, column: 9, scope: !5599)
!5610 = !DILocalVariable(name: "fifo_data_enable", scope: !5599, file: !77, line: 2124, type: !17)
!5611 = !DILocation(line: 2124, column: 10, scope: !5599)
!5612 = !DILocation(line: 2119, column: 3, scope: !5599)
!5613 = !DILocalVariable(name: "data_index", scope: !5599, file: !77, line: 2121, type: !47)
!5614 = !DILocation(line: 2121, column: 11, scope: !5599)
!5615 = !DILocalVariable(name: "data_read_length", scope: !5599, file: !77, line: 2122, type: !47)
!5616 = !DILocation(line: 2122, column: 11, scope: !5599)
!5617 = !DILocalVariable(name: "accel_index", scope: !5599, file: !77, line: 2123, type: !17)
!5618 = !DILocation(line: 2123, column: 10, scope: !5599)
!5619 = !DILocation(line: 2126, column: 10, scope: !5620)
!5620 = distinct !DILexicalBlock(scope: !5599, file: !77, line: 2126, column: 6)
!5621 = !DILocation(line: 2126, column: 18, scope: !5620)
!5622 = !DILocation(line: 2126, column: 26, scope: !5623)
!5623 = !DILexicalBlockFile(scope: !5620, file: !77, discriminator: 1)
!5624 = !DILocation(line: 2126, column: 31, scope: !5623)
!5625 = !DILocation(line: 2126, column: 39, scope: !5623)
!5626 = !DILocation(line: 2126, column: 47, scope: !5627)
!5627 = !DILexicalBlockFile(scope: !5620, file: !77, discriminator: 2)
!5628 = !DILocation(line: 2126, column: 53, scope: !5627)
!5629 = !DILocation(line: 2126, column: 58, scope: !5627)
!5630 = !DILocation(line: 2126, column: 6, scope: !5631)
!5631 = !DILexicalBlockFile(scope: !5599, file: !77, discriminator: 2)
!5632 = !DILocation(line: 2127, column: 8, scope: !5633)
!5633 = distinct !DILexicalBlock(scope: !5620, file: !77, line: 2126, column: 67)
!5634 = !DILocation(line: 2128, column: 2, scope: !5633)
!5635 = !DILocation(line: 2130, column: 12, scope: !5636)
!5636 = distinct !DILexicalBlock(scope: !5637, file: !77, line: 2130, column: 7)
!5637 = distinct !DILexicalBlock(scope: !5620, file: !77, line: 2128, column: 9)
!5638 = !DILocation(line: 2130, column: 18, scope: !5636)
!5639 = !DILocation(line: 2130, column: 7, scope: !5636)
!5640 = !DILocation(line: 2130, column: 37, scope: !5636)
!5641 = !DILocation(line: 2130, column: 7, scope: !5637)
!5642 = !DILocation(line: 2132, column: 4, scope: !5643)
!5643 = distinct !DILexicalBlock(scope: !5636, file: !77, line: 2130, column: 43)
!5644 = !DILocation(line: 2133, column: 4, scope: !5643)
!5645 = !DILocation(line: 2133, column: 11, scope: !5646)
!5646 = !DILexicalBlockFile(scope: !5647, file: !77, discriminator: 1)
!5647 = distinct !DILexicalBlock(scope: !5648, file: !77, line: 2133, column: 4)
!5648 = distinct !DILexicalBlock(scope: !5643, file: !77, line: 2133, column: 4)
!5649 = !DILocation(line: 2133, column: 24, scope: !5646)
!5650 = !DILocation(line: 2133, column: 22, scope: !5646)
!5651 = !DILocation(line: 2133, column: 4, scope: !5652)
!5652 = !DILexicalBlockFile(scope: !5648, file: !77, discriminator: 1)
!5653 = !DILocation(line: 2135, column: 5, scope: !5654)
!5654 = distinct !DILexicalBlock(scope: !5647, file: !77, line: 2133, column: 44)
!5655 = !DILocation(line: 2136, column: 29, scope: !5654)
!5656 = !DILocation(line: 2136, column: 35, scope: !5654)
!5657 = !DILocation(line: 2136, column: 22, scope: !5654)
!5658 = !DILocation(line: 2137, column: 5, scope: !5654)
!5659 = !DILocation(line: 2133, column: 4, scope: !5660)
!5660 = !DILexicalBlockFile(scope: !5647, file: !77, discriminator: 2)
!5661 = distinct !{!5661, !5662, !5663}
!5662 = !DILocation(line: 2133, column: 4, scope: !5648)
!5663 = !DILocation(line: 2138, column: 4, scope: !5648)
!5664 = !DILocation(line: 2140, column: 20, scope: !5643)
!5665 = !DILocation(line: 2140, column: 18, scope: !5643)
!5666 = !DILocation(line: 2142, column: 38, scope: !5643)
!5667 = !DILocation(line: 2142, column: 9, scope: !5643)
!5668 = !DILocation(line: 2142, column: 15, scope: !5643)
!5669 = !DILocation(line: 2142, column: 36, scope: !5643)
!5670 = !DILocation(line: 2143, column: 3, scope: !5643)
!5671 = !DILocation(line: 2145, column: 4, scope: !5672)
!5672 = distinct !DILexicalBlock(scope: !5636, file: !77, line: 2143, column: 10)
!5673 = !DILocation(line: 2149, column: 2, scope: !5599)
!5674 = distinct !DISubprogram(name: "get_accel_len_to_parse", scope: !77, file: !77, line: 4884, type: !5675, isLocal: true, isDefinition: true, scopeLine: 4886, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!5675 = !DISubroutineType(types: !5676)
!5676 = !{null, !4481, !4481, !5677, !252}
!5677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !168, size: 64)
!5678 = !DILocalVariable(name: "data_index", arg: 1, scope: !5674, file: !77, line: 4884, type: !4481)
!5679 = !DILocation(line: 4884, column: 46, scope: !5674)
!5680 = !DILocalVariable(name: "data_read_length", arg: 2, scope: !5674, file: !77, line: 4884, type: !4481)
!5681 = !DILocation(line: 4884, column: 68, scope: !5674)
!5682 = !DILocalVariable(name: "acc_frame_count", arg: 3, scope: !5674, file: !77, line: 4884, type: !5677)
!5683 = !DILocation(line: 4884, column: 101, scope: !5674)
!5684 = !DILocalVariable(name: "dev", arg: 4, scope: !5674, file: !77, line: 4885, type: !252)
!5685 = !DILocation(line: 4885, column: 30, scope: !5674)
!5686 = !DILocation(line: 4886, column: 3, scope: !5674)
!5687 = !DILocation(line: 4888, column: 21, scope: !5674)
!5688 = !DILocation(line: 4888, column: 27, scope: !5674)
!5689 = !DILocation(line: 4888, column: 14, scope: !5674)
!5690 = !DILocation(line: 4890, column: 11, scope: !5691)
!5691 = distinct !DILexicalBlock(scope: !5674, file: !77, line: 4890, column: 6)
!5692 = !DILocation(line: 4890, column: 17, scope: !5691)
!5693 = !DILocation(line: 4890, column: 6, scope: !5691)
!5694 = !DILocation(line: 4890, column: 34, scope: !5691)
!5695 = !DILocation(line: 4890, column: 6, scope: !5674)
!5696 = !DILocation(line: 4891, column: 24, scope: !5697)
!5697 = distinct !DILexicalBlock(scope: !5691, file: !77, line: 4890, column: 59)
!5698 = !DILocation(line: 4891, column: 23, scope: !5697)
!5699 = !DILocation(line: 4891, column: 42, scope: !5697)
!5700 = !DILocation(line: 4891, column: 21, scope: !5697)
!5701 = !DILocation(line: 4892, column: 2, scope: !5697)
!5702 = !DILocation(line: 4892, column: 18, scope: !5703)
!5703 = !DILexicalBlockFile(scope: !5704, file: !77, discriminator: 1)
!5704 = distinct !DILexicalBlock(scope: !5691, file: !77, line: 4892, column: 13)
!5705 = !DILocation(line: 4892, column: 24, scope: !5703)
!5706 = !DILocation(line: 4892, column: 13, scope: !5703)
!5707 = !DILocation(line: 4892, column: 41, scope: !5703)
!5708 = !DILocation(line: 4892, column: 13, scope: !5709)
!5709 = !DILexicalBlockFile(scope: !5691, file: !77, discriminator: 1)
!5710 = !DILocation(line: 4893, column: 24, scope: !5711)
!5711 = distinct !DILexicalBlock(scope: !5704, file: !77, line: 4892, column: 68)
!5712 = !DILocation(line: 4893, column: 23, scope: !5711)
!5713 = !DILocation(line: 4893, column: 42, scope: !5711)
!5714 = !DILocation(line: 4893, column: 21, scope: !5711)
!5715 = !DILocation(line: 4894, column: 2, scope: !5711)
!5716 = !DILocation(line: 4894, column: 18, scope: !5717)
!5717 = !DILexicalBlockFile(scope: !5718, file: !77, discriminator: 1)
!5718 = distinct !DILexicalBlock(scope: !5704, file: !77, line: 4894, column: 13)
!5719 = !DILocation(line: 4894, column: 24, scope: !5717)
!5720 = !DILocation(line: 4894, column: 13, scope: !5717)
!5721 = !DILocation(line: 4894, column: 41, scope: !5717)
!5722 = !DILocation(line: 4894, column: 13, scope: !5703)
!5723 = !DILocation(line: 4895, column: 24, scope: !5724)
!5724 = distinct !DILexicalBlock(scope: !5718, file: !77, line: 4894, column: 68)
!5725 = !DILocation(line: 4895, column: 23, scope: !5724)
!5726 = !DILocation(line: 4895, column: 42, scope: !5724)
!5727 = !DILocation(line: 4895, column: 21, scope: !5724)
!5728 = !DILocation(line: 4896, column: 2, scope: !5724)
!5729 = !DILocation(line: 4896, column: 18, scope: !5730)
!5730 = !DILexicalBlockFile(scope: !5731, file: !77, discriminator: 1)
!5731 = distinct !DILexicalBlock(scope: !5718, file: !77, line: 4896, column: 13)
!5732 = !DILocation(line: 4896, column: 24, scope: !5730)
!5733 = !DILocation(line: 4896, column: 13, scope: !5730)
!5734 = !DILocation(line: 4896, column: 41, scope: !5730)
!5735 = !DILocation(line: 4896, column: 13, scope: !5717)
!5736 = !DILocation(line: 4897, column: 24, scope: !5737)
!5737 = distinct !DILexicalBlock(scope: !5731, file: !77, line: 4896, column: 70)
!5738 = !DILocation(line: 4897, column: 23, scope: !5737)
!5739 = !DILocation(line: 4897, column: 42, scope: !5737)
!5740 = !DILocation(line: 4897, column: 21, scope: !5737)
!5741 = !DILocation(line: 4898, column: 2, scope: !5737)
!5742 = !DILocation(line: 4901, column: 22, scope: !5743)
!5743 = distinct !DILexicalBlock(scope: !5731, file: !77, line: 4898, column: 9)
!5744 = !DILocation(line: 4901, column: 28, scope: !5743)
!5745 = !DILocation(line: 4901, column: 15, scope: !5743)
!5746 = !DILocation(line: 4904, column: 6, scope: !5747)
!5747 = distinct !DILexicalBlock(scope: !5674, file: !77, line: 4904, column: 6)
!5748 = !DILocation(line: 4904, column: 31, scope: !5747)
!5749 = !DILocation(line: 4904, column: 37, scope: !5747)
!5750 = !DILocation(line: 4904, column: 26, scope: !5747)
!5751 = !DILocation(line: 4904, column: 24, scope: !5747)
!5752 = !DILocation(line: 4904, column: 6, scope: !5674)
!5753 = !DILocation(line: 4907, column: 28, scope: !5754)
!5754 = distinct !DILexicalBlock(scope: !5747, file: !77, line: 4904, column: 45)
!5755 = !DILocation(line: 4907, column: 34, scope: !5754)
!5756 = !DILocation(line: 4907, column: 21, scope: !5754)
!5757 = !DILocation(line: 4908, column: 2, scope: !5754)
!5758 = !DILocation(line: 4910, column: 1, scope: !5674)
!5759 = distinct !DISubprogram(name: "check_frame_validity", scope: !77, file: !77, line: 5526, type: !5760, isLocal: true, isDefinition: true, scopeLine: 5527, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!5760 = !DISubroutineType(types: !5761)
!5761 = !{null, !4481, !252}
!5762 = !DILocalVariable(name: "data_index", arg: 1, scope: !5759, file: !77, line: 5526, type: !4481)
!5763 = !DILocation(line: 5526, column: 44, scope: !5759)
!5764 = !DILocalVariable(name: "dev", arg: 2, scope: !5759, file: !77, line: 5526, type: !252)
!5765 = !DILocation(line: 5526, column: 81, scope: !5759)
!5766 = !DILocation(line: 5527, column: 3, scope: !5759)
!5767 = !DILocation(line: 5528, column: 7, scope: !5768)
!5768 = distinct !DILexicalBlock(scope: !5759, file: !77, line: 5528, column: 6)
!5769 = !DILocation(line: 5528, column: 19, scope: !5768)
!5770 = !DILocation(line: 5528, column: 31, scope: !5768)
!5771 = !DILocation(line: 5528, column: 37, scope: !5768)
!5772 = !DILocation(line: 5528, column: 26, scope: !5768)
!5773 = !DILocation(line: 5528, column: 24, scope: !5768)
!5774 = !DILocation(line: 5528, column: 6, scope: !5759)
!5775 = !DILocation(line: 5530, column: 13, scope: !5776)
!5776 = distinct !DILexicalBlock(scope: !5777, file: !77, line: 5530, column: 7)
!5777 = distinct !DILexicalBlock(scope: !5768, file: !77, line: 5528, column: 45)
!5778 = !DILocation(line: 5530, column: 19, scope: !5776)
!5779 = !DILocation(line: 5530, column: 24, scope: !5776)
!5780 = !DILocation(line: 5530, column: 8, scope: !5776)
!5781 = !DILocation(line: 5530, column: 37, scope: !5776)
!5782 = !DILocation(line: 5531, column: 4, scope: !5776)
!5783 = !DILocation(line: 5531, column: 13, scope: !5784)
!5784 = !DILexicalBlockFile(scope: !5776, file: !77, discriminator: 1)
!5785 = !DILocation(line: 5531, column: 19, scope: !5784)
!5786 = !DILocation(line: 5531, column: 24, scope: !5784)
!5787 = !DILocation(line: 5531, column: 36, scope: !5784)
!5788 = !DILocation(line: 5531, column: 8, scope: !5784)
!5789 = !DILocation(line: 5531, column: 41, scope: !5784)
!5790 = !DILocation(line: 5530, column: 7, scope: !5791)
!5791 = !DILexicalBlockFile(scope: !5777, file: !77, discriminator: 1)
!5792 = !DILocation(line: 5533, column: 23, scope: !5793)
!5793 = distinct !DILexicalBlock(scope: !5776, file: !77, line: 5531, column: 68)
!5794 = !DILocation(line: 5533, column: 29, scope: !5793)
!5795 = !DILocation(line: 5533, column: 16, scope: !5793)
!5796 = !DILocation(line: 5534, column: 3, scope: !5793)
!5797 = !DILocation(line: 5535, column: 2, scope: !5777)
!5798 = !DILocation(line: 5536, column: 1, scope: !5759)
!5799 = distinct !DISubprogram(name: "unpack_accel_frame", scope: !77, file: !77, line: 4918, type: !5800, isLocal: true, isDefinition: true, scopeLine: 4920, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!5800 = !DISubroutineType(types: !5801)
!5801 = !{null, !1277, !4481, !45, !17, !252}
!5802 = !DILocalVariable(name: "acc", arg: 1, scope: !5799, file: !77, line: 4918, type: !1277)
!5803 = !DILocation(line: 4918, column: 59, scope: !5799)
!5804 = !DILocalVariable(name: "idx", arg: 2, scope: !5799, file: !77, line: 4918, type: !4481)
!5805 = !DILocation(line: 4918, column: 74, scope: !5799)
!5806 = !DILocalVariable(name: "acc_idx", arg: 3, scope: !5799, file: !77, line: 4918, type: !45)
!5807 = !DILocation(line: 4918, column: 88, scope: !5799)
!5808 = !DILocalVariable(name: "frame_info", arg: 4, scope: !5799, file: !77, line: 4918, type: !17)
!5809 = !DILocation(line: 4918, column: 105, scope: !5799)
!5810 = !DILocalVariable(name: "dev", arg: 5, scope: !5799, file: !77, line: 4919, type: !252)
!5811 = !DILocation(line: 4919, column: 30, scope: !5799)
!5812 = !DILocation(line: 4920, column: 3, scope: !5799)
!5813 = !DILocation(line: 4921, column: 10, scope: !5799)
!5814 = !DILocation(line: 4925, column: 8, scope: !5815)
!5815 = distinct !DILexicalBlock(scope: !5816, file: !77, line: 4925, column: 7)
!5816 = distinct !DILexicalBlock(scope: !5799, file: !77, line: 4921, column: 22)
!5817 = !DILocation(line: 4925, column: 13, scope: !5815)
!5818 = !DILocation(line: 4925, column: 44, scope: !5815)
!5819 = !DILocation(line: 4925, column: 50, scope: !5815)
!5820 = !DILocation(line: 4925, column: 39, scope: !5815)
!5821 = !DILocation(line: 4925, column: 37, scope: !5815)
!5822 = !DILocation(line: 4925, column: 7, scope: !5816)
!5823 = !DILocation(line: 4927, column: 16, scope: !5824)
!5824 = distinct !DILexicalBlock(scope: !5815, file: !77, line: 4925, column: 58)
!5825 = !DILocation(line: 4927, column: 22, scope: !5824)
!5826 = !DILocation(line: 4927, column: 9, scope: !5824)
!5827 = !DILocation(line: 4928, column: 4, scope: !5824)
!5828 = !DILocation(line: 4931, column: 26, scope: !5816)
!5829 = !DILocation(line: 4931, column: 22, scope: !5816)
!5830 = !DILocation(line: 4931, column: 37, scope: !5816)
!5831 = !DILocation(line: 4931, column: 3, scope: !5816)
!5832 = !DILocation(line: 4933, column: 10, scope: !5816)
!5833 = !DILocation(line: 4933, column: 15, scope: !5816)
!5834 = !DILocation(line: 4933, column: 8, scope: !5816)
!5835 = !DILocation(line: 4934, column: 13, scope: !5816)
!5836 = !DILocation(line: 4935, column: 3, scope: !5816)
!5837 = !DILocation(line: 4939, column: 8, scope: !5838)
!5838 = distinct !DILexicalBlock(scope: !5816, file: !77, line: 4939, column: 7)
!5839 = !DILocation(line: 4939, column: 13, scope: !5838)
!5840 = !DILocation(line: 4939, column: 45, scope: !5838)
!5841 = !DILocation(line: 4939, column: 51, scope: !5838)
!5842 = !DILocation(line: 4939, column: 40, scope: !5838)
!5843 = !DILocation(line: 4939, column: 38, scope: !5838)
!5844 = !DILocation(line: 4939, column: 7, scope: !5816)
!5845 = !DILocation(line: 4941, column: 16, scope: !5846)
!5846 = distinct !DILexicalBlock(scope: !5838, file: !77, line: 4939, column: 59)
!5847 = !DILocation(line: 4941, column: 22, scope: !5846)
!5848 = !DILocation(line: 4941, column: 9, scope: !5846)
!5849 = !DILocation(line: 4942, column: 4, scope: !5846)
!5850 = !DILocation(line: 4945, column: 26, scope: !5816)
!5851 = !DILocation(line: 4945, column: 22, scope: !5816)
!5852 = !DILocation(line: 4945, column: 37, scope: !5816)
!5853 = !DILocation(line: 4945, column: 42, scope: !5816)
!5854 = !DILocation(line: 4945, column: 3, scope: !5816)
!5855 = !DILocation(line: 4947, column: 10, scope: !5816)
!5856 = !DILocation(line: 4947, column: 15, scope: !5816)
!5857 = !DILocation(line: 4947, column: 8, scope: !5816)
!5858 = !DILocation(line: 4948, column: 13, scope: !5816)
!5859 = !DILocation(line: 4949, column: 3, scope: !5816)
!5860 = !DILocation(line: 4953, column: 8, scope: !5861)
!5861 = distinct !DILexicalBlock(scope: !5816, file: !77, line: 4953, column: 7)
!5862 = !DILocation(line: 4953, column: 13, scope: !5861)
!5863 = !DILocation(line: 4953, column: 45, scope: !5861)
!5864 = !DILocation(line: 4953, column: 51, scope: !5861)
!5865 = !DILocation(line: 4953, column: 40, scope: !5861)
!5866 = !DILocation(line: 4953, column: 38, scope: !5861)
!5867 = !DILocation(line: 4953, column: 7, scope: !5816)
!5868 = !DILocation(line: 4955, column: 16, scope: !5869)
!5869 = distinct !DILexicalBlock(scope: !5861, file: !77, line: 4953, column: 59)
!5870 = !DILocation(line: 4955, column: 22, scope: !5869)
!5871 = !DILocation(line: 4955, column: 9, scope: !5869)
!5872 = !DILocation(line: 4956, column: 4, scope: !5869)
!5873 = !DILocation(line: 4959, column: 26, scope: !5816)
!5874 = !DILocation(line: 4959, column: 22, scope: !5816)
!5875 = !DILocation(line: 4959, column: 37, scope: !5816)
!5876 = !DILocation(line: 4959, column: 42, scope: !5816)
!5877 = !DILocation(line: 4959, column: 3, scope: !5816)
!5878 = !DILocation(line: 4961, column: 10, scope: !5816)
!5879 = !DILocation(line: 4961, column: 15, scope: !5816)
!5880 = !DILocation(line: 4961, column: 8, scope: !5816)
!5881 = !DILocation(line: 4962, column: 13, scope: !5816)
!5882 = !DILocation(line: 4963, column: 3, scope: !5816)
!5883 = !DILocation(line: 4967, column: 8, scope: !5884)
!5884 = distinct !DILexicalBlock(scope: !5816, file: !77, line: 4967, column: 7)
!5885 = !DILocation(line: 4967, column: 13, scope: !5884)
!5886 = !DILocation(line: 4967, column: 46, scope: !5884)
!5887 = !DILocation(line: 4967, column: 52, scope: !5884)
!5888 = !DILocation(line: 4967, column: 41, scope: !5884)
!5889 = !DILocation(line: 4967, column: 39, scope: !5884)
!5890 = !DILocation(line: 4967, column: 7, scope: !5816)
!5891 = !DILocation(line: 4969, column: 16, scope: !5892)
!5892 = distinct !DILexicalBlock(scope: !5884, file: !77, line: 4967, column: 60)
!5893 = !DILocation(line: 4969, column: 22, scope: !5892)
!5894 = !DILocation(line: 4969, column: 9, scope: !5892)
!5895 = !DILocation(line: 4970, column: 4, scope: !5892)
!5896 = !DILocation(line: 4973, column: 26, scope: !5816)
!5897 = !DILocation(line: 4973, column: 22, scope: !5816)
!5898 = !DILocation(line: 4973, column: 37, scope: !5816)
!5899 = !DILocation(line: 4973, column: 42, scope: !5816)
!5900 = !DILocation(line: 4973, column: 3, scope: !5816)
!5901 = !DILocation(line: 4975, column: 10, scope: !5816)
!5902 = !DILocation(line: 4975, column: 15, scope: !5816)
!5903 = !DILocation(line: 4975, column: 8, scope: !5816)
!5904 = !DILocation(line: 4976, column: 13, scope: !5816)
!5905 = !DILocation(line: 4977, column: 3, scope: !5816)
!5906 = !DILocation(line: 4980, column: 13, scope: !5816)
!5907 = !DILocation(line: 4980, column: 12, scope: !5816)
!5908 = !DILocation(line: 4980, column: 19, scope: !5816)
!5909 = !DILocation(line: 4980, column: 10, scope: !5816)
!5910 = !DILocation(line: 4981, column: 3, scope: !5816)
!5911 = !DILocation(line: 4984, column: 13, scope: !5816)
!5912 = !DILocation(line: 4984, column: 12, scope: !5816)
!5913 = !DILocation(line: 4984, column: 19, scope: !5816)
!5914 = !DILocation(line: 4984, column: 10, scope: !5816)
!5915 = !DILocation(line: 4985, column: 3, scope: !5816)
!5916 = !DILocation(line: 4988, column: 13, scope: !5816)
!5917 = !DILocation(line: 4988, column: 12, scope: !5816)
!5918 = !DILocation(line: 4988, column: 19, scope: !5816)
!5919 = !DILocation(line: 4988, column: 10, scope: !5816)
!5920 = !DILocation(line: 4989, column: 3, scope: !5816)
!5921 = !DILocation(line: 4991, column: 3, scope: !5816)
!5922 = !DILocation(line: 4994, column: 1, scope: !5799)
!5923 = distinct !DISubprogram(name: "extract_accel_header_mode", scope: !77, file: !77, line: 5027, type: !5924, isLocal: true, isDefinition: true, scopeLine: 5029, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!5924 = !DISubroutineType(types: !5925)
!5925 = !{null, !1277, !45, !252}
!5926 = !DILocalVariable(name: "accel_data", arg: 1, scope: !5923, file: !77, line: 5027, type: !1277)
!5927 = !DILocation(line: 5027, column: 66, scope: !5923)
!5928 = !DILocalVariable(name: "accel_length", arg: 2, scope: !5923, file: !77, line: 5027, type: !45)
!5929 = !DILocation(line: 5027, column: 87, scope: !5923)
!5930 = !DILocalVariable(name: "dev", arg: 3, scope: !5923, file: !77, line: 5028, type: !252)
!5931 = !DILocation(line: 5028, column: 31, scope: !5923)
!5932 = !DILocalVariable(name: "frame_header", scope: !5923, file: !77, line: 5030, type: !17)
!5933 = !DILocation(line: 5030, column: 10, scope: !5923)
!5934 = !DILocation(line: 5029, column: 3, scope: !5923)
!5935 = !DILocalVariable(name: "data_index", scope: !5923, file: !77, line: 5031, type: !47)
!5936 = !DILocation(line: 5031, column: 11, scope: !5923)
!5937 = !DILocalVariable(name: "accel_index", scope: !5923, file: !77, line: 5032, type: !17)
!5938 = !DILocation(line: 5032, column: 10, scope: !5923)
!5939 = !DILocation(line: 5034, column: 25, scope: !5940)
!5940 = distinct !DILexicalBlock(scope: !5923, file: !77, line: 5034, column: 2)
!5941 = !DILocation(line: 5034, column: 31, scope: !5940)
!5942 = !DILocation(line: 5034, column: 18, scope: !5940)
!5943 = !DILocation(line: 5034, column: 7, scope: !5940)
!5944 = !DILocation(line: 5034, column: 53, scope: !5945)
!5945 = !DILexicalBlockFile(scope: !5946, file: !77, discriminator: 1)
!5946 = distinct !DILexicalBlock(scope: !5940, file: !77, line: 5034, column: 2)
!5947 = !DILocation(line: 5034, column: 71, scope: !5945)
!5948 = !DILocation(line: 5034, column: 77, scope: !5945)
!5949 = !DILocation(line: 5034, column: 66, scope: !5945)
!5950 = !DILocation(line: 5034, column: 64, scope: !5945)
!5951 = !DILocation(line: 5034, column: 2, scope: !5952)
!5952 = !DILexicalBlockFile(scope: !5940, file: !77, discriminator: 1)
!5953 = !DILocation(line: 5036, column: 24, scope: !5954)
!5954 = distinct !DILexicalBlock(scope: !5946, file: !77, line: 5034, column: 86)
!5955 = !DILocation(line: 5036, column: 30, scope: !5954)
!5956 = !DILocation(line: 5036, column: 35, scope: !5954)
!5957 = !DILocation(line: 5036, column: 19, scope: !5954)
!5958 = !DILocation(line: 5036, column: 47, scope: !5954)
!5959 = !DILocation(line: 5036, column: 18, scope: !5954)
!5960 = !DILocation(line: 5036, column: 16, scope: !5954)
!5961 = !DILocation(line: 5038, column: 13, scope: !5954)
!5962 = !DILocation(line: 5040, column: 11, scope: !5954)
!5963 = !DILocation(line: 5040, column: 3, scope: !5954)
!5964 = !DILocation(line: 5046, column: 4, scope: !5965)
!5965 = distinct !DILexicalBlock(scope: !5954, file: !77, line: 5040, column: 25)
!5966 = !DILocation(line: 5047, column: 4, scope: !5965)
!5967 = !DILocation(line: 5049, column: 4, scope: !5965)
!5968 = !DILocation(line: 5050, column: 4, scope: !5965)
!5969 = !DILocation(line: 5053, column: 4, scope: !5965)
!5970 = !DILocation(line: 5054, column: 4, scope: !5965)
!5971 = !DILocation(line: 5056, column: 4, scope: !5965)
!5972 = !DILocation(line: 5057, column: 4, scope: !5965)
!5973 = !DILocation(line: 5060, column: 4, scope: !5965)
!5974 = !DILocation(line: 5061, column: 4, scope: !5965)
!5975 = !DILocation(line: 5064, column: 4, scope: !5965)
!5976 = !DILocation(line: 5065, column: 4, scope: !5965)
!5977 = !DILocation(line: 5068, column: 4, scope: !5965)
!5978 = !DILocation(line: 5069, column: 4, scope: !5965)
!5979 = !DILocation(line: 5072, column: 22, scope: !5965)
!5980 = !DILocation(line: 5072, column: 28, scope: !5965)
!5981 = !DILocation(line: 5072, column: 15, scope: !5965)
!5982 = !DILocation(line: 5073, column: 4, scope: !5965)
!5983 = !DILocation(line: 5075, column: 4, scope: !5965)
!5984 = !DILocation(line: 5077, column: 7, scope: !5985)
!5985 = distinct !DILexicalBlock(scope: !5954, file: !77, line: 5077, column: 7)
!5986 = !DILocation(line: 5077, column: 24, scope: !5985)
!5987 = !DILocation(line: 5077, column: 21, scope: !5985)
!5988 = !DILocation(line: 5077, column: 7, scope: !5954)
!5989 = !DILocation(line: 5079, column: 4, scope: !5990)
!5990 = distinct !DILexicalBlock(scope: !5985, file: !77, line: 5077, column: 37)
!5991 = !DILocation(line: 5034, column: 2, scope: !5992)
!5992 = !DILexicalBlockFile(scope: !5946, file: !77, discriminator: 2)
!5993 = distinct !{!5993, !5994, !5995}
!5994 = !DILocation(line: 5034, column: 2, scope: !5940)
!5995 = !DILocation(line: 5081, column: 2, scope: !5940)
!5996 = !DILocation(line: 5084, column: 18, scope: !5923)
!5997 = !DILocation(line: 5084, column: 16, scope: !5923)
!5998 = !DILocation(line: 5086, column: 36, scope: !5923)
!5999 = !DILocation(line: 5086, column: 7, scope: !5923)
!6000 = !DILocation(line: 5086, column: 13, scope: !5923)
!6001 = !DILocation(line: 5086, column: 34, scope: !5923)
!6002 = !DILocation(line: 5087, column: 1, scope: !5923)
!6003 = distinct !DISubprogram(name: "move_next_frame", scope: !77, file: !77, line: 5543, type: !6004, isLocal: true, isDefinition: true, scopeLine: 5544, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!6004 = !DISubroutineType(types: !6005)
!6005 = !{null, !4481, !17, !252}
!6006 = !DILocalVariable(name: "data_index", arg: 1, scope: !6003, file: !77, line: 5543, type: !4481)
!6007 = !DILocation(line: 5543, column: 39, scope: !6003)
!6008 = !DILocalVariable(name: "current_frame_length", arg: 2, scope: !6003, file: !77, line: 5543, type: !17)
!6009 = !DILocation(line: 5543, column: 59, scope: !6003)
!6010 = !DILocalVariable(name: "dev", arg: 3, scope: !6003, file: !77, line: 5543, type: !252)
!6011 = !DILocation(line: 5543, column: 106, scope: !6003)
!6012 = !DILocation(line: 5544, column: 3, scope: !6003)
!6013 = !DILocation(line: 5546, column: 7, scope: !6014)
!6014 = distinct !DILexicalBlock(scope: !6003, file: !77, line: 5546, column: 6)
!6015 = !DILocation(line: 5546, column: 21, scope: !6014)
!6016 = !DILocation(line: 5546, column: 19, scope: !6014)
!6017 = !DILocation(line: 5546, column: 50, scope: !6014)
!6018 = !DILocation(line: 5546, column: 56, scope: !6014)
!6019 = !DILocation(line: 5546, column: 45, scope: !6014)
!6020 = !DILocation(line: 5546, column: 43, scope: !6014)
!6021 = !DILocation(line: 5546, column: 6, scope: !6003)
!6022 = !DILocation(line: 5548, column: 22, scope: !6023)
!6023 = distinct !DILexicalBlock(scope: !6014, file: !77, line: 5546, column: 64)
!6024 = !DILocation(line: 5548, column: 28, scope: !6023)
!6025 = !DILocation(line: 5548, column: 15, scope: !6023)
!6026 = !DILocation(line: 5549, column: 2, scope: !6023)
!6027 = !DILocation(line: 5551, column: 17, scope: !6028)
!6028 = distinct !DILexicalBlock(scope: !6014, file: !77, line: 5549, column: 9)
!6029 = !DILocation(line: 5551, column: 31, scope: !6028)
!6030 = !DILocation(line: 5551, column: 29, scope: !6028)
!6031 = !DILocation(line: 5551, column: 15, scope: !6028)
!6032 = !DILocation(line: 5553, column: 1, scope: !6003)
!6033 = distinct !DISubprogram(name: "unpack_sensortime_frame", scope: !77, file: !77, line: 5559, type: !5760, isLocal: true, isDefinition: true, scopeLine: 5560, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!6034 = !DILocalVariable(name: "data_index", arg: 1, scope: !6033, file: !77, line: 5559, type: !4481)
!6035 = !DILocation(line: 5559, column: 47, scope: !6033)
!6036 = !DILocalVariable(name: "dev", arg: 2, scope: !6033, file: !77, line: 5559, type: !252)
!6037 = !DILocation(line: 5559, column: 84, scope: !6033)
!6038 = !DILocalVariable(name: "sensor_time_byte3", scope: !6033, file: !77, line: 5561, type: !55)
!6039 = !DILocation(line: 5561, column: 11, scope: !6033)
!6040 = !DILocalVariable(name: "sensor_time_byte2", scope: !6033, file: !77, line: 5562, type: !47)
!6041 = !DILocation(line: 5562, column: 11, scope: !6033)
!6042 = !DILocalVariable(name: "sensor_time_byte1", scope: !6033, file: !77, line: 5563, type: !17)
!6043 = !DILocation(line: 5563, column: 10, scope: !6033)
!6044 = !DILocation(line: 5560, column: 3, scope: !6033)
!6045 = !DILocation(line: 5566, column: 7, scope: !6046)
!6046 = distinct !DILexicalBlock(scope: !6033, file: !77, line: 5566, column: 6)
!6047 = !DILocation(line: 5566, column: 19, scope: !6046)
!6048 = !DILocation(line: 5566, column: 55, scope: !6046)
!6049 = !DILocation(line: 5566, column: 61, scope: !6046)
!6050 = !DILocation(line: 5566, column: 50, scope: !6046)
!6051 = !DILocation(line: 5566, column: 48, scope: !6046)
!6052 = !DILocation(line: 5566, column: 6, scope: !6033)
!6053 = !DILocation(line: 5568, column: 22, scope: !6054)
!6054 = distinct !DILexicalBlock(scope: !6046, file: !77, line: 5566, column: 69)
!6055 = !DILocation(line: 5568, column: 28, scope: !6054)
!6056 = !DILocation(line: 5568, column: 15, scope: !6054)
!6057 = !DILocation(line: 5569, column: 2, scope: !6054)
!6058 = !DILocation(line: 5570, column: 28, scope: !6059)
!6059 = distinct !DILexicalBlock(scope: !6046, file: !77, line: 5569, column: 9)
!6060 = !DILocation(line: 5570, column: 34, scope: !6059)
!6061 = !DILocation(line: 5570, column: 40, scope: !6059)
!6062 = !DILocation(line: 5570, column: 39, scope: !6059)
!6063 = !DILocation(line: 5570, column: 53, scope: !6059)
!6064 = !DILocation(line: 5570, column: 23, scope: !6059)
!6065 = !DILocation(line: 5570, column: 84, scope: !6059)
!6066 = !DILocation(line: 5570, column: 21, scope: !6059)
!6067 = !DILocation(line: 5571, column: 28, scope: !6059)
!6068 = !DILocation(line: 5571, column: 34, scope: !6059)
!6069 = !DILocation(line: 5571, column: 40, scope: !6059)
!6070 = !DILocation(line: 5571, column: 39, scope: !6059)
!6071 = !DILocation(line: 5571, column: 53, scope: !6059)
!6072 = !DILocation(line: 5571, column: 23, scope: !6059)
!6073 = !DILocation(line: 5571, column: 85, scope: !6059)
!6074 = !DILocation(line: 5571, column: 21, scope: !6059)
!6075 = !DILocation(line: 5572, column: 28, scope: !6059)
!6076 = !DILocation(line: 5572, column: 34, scope: !6059)
!6077 = !DILocation(line: 5572, column: 40, scope: !6059)
!6078 = !DILocation(line: 5572, column: 23, scope: !6059)
!6079 = !DILocation(line: 5572, column: 21, scope: !6059)
!6080 = !DILocation(line: 5574, column: 59, scope: !6059)
!6081 = !DILocation(line: 5574, column: 57, scope: !6059)
!6082 = !DILocation(line: 5574, column: 79, scope: !6059)
!6083 = !DILocation(line: 5574, column: 77, scope: !6059)
!6084 = !DILocation(line: 5574, column: 8, scope: !6059)
!6085 = !DILocation(line: 5574, column: 14, scope: !6059)
!6086 = !DILocation(line: 5574, column: 26, scope: !6059)
!6087 = !DILocation(line: 5575, column: 18, scope: !6059)
!6088 = !DILocation(line: 5575, column: 17, scope: !6059)
!6089 = !DILocation(line: 5575, column: 31, scope: !6059)
!6090 = !DILocation(line: 5575, column: 15, scope: !6059)
!6091 = !DILocation(line: 5577, column: 1, scope: !6033)
!6092 = distinct !DISubprogram(name: "unpack_skipped_frame", scope: !77, file: !77, line: 5583, type: !5760, isLocal: true, isDefinition: true, scopeLine: 5584, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!6093 = !DILocalVariable(name: "data_index", arg: 1, scope: !6092, file: !77, line: 5583, type: !4481)
!6094 = !DILocation(line: 5583, column: 44, scope: !6092)
!6095 = !DILocalVariable(name: "dev", arg: 2, scope: !6092, file: !77, line: 5583, type: !252)
!6096 = !DILocation(line: 5583, column: 81, scope: !6092)
!6097 = !DILocation(line: 5584, column: 3, scope: !6092)
!6098 = !DILocation(line: 5586, column: 6, scope: !6099)
!6099 = distinct !DILexicalBlock(scope: !6092, file: !77, line: 5586, column: 6)
!6100 = !DILocation(line: 5586, column: 26, scope: !6099)
!6101 = !DILocation(line: 5586, column: 32, scope: !6099)
!6102 = !DILocation(line: 5586, column: 21, scope: !6099)
!6103 = !DILocation(line: 5586, column: 18, scope: !6099)
!6104 = !DILocation(line: 5586, column: 6, scope: !6092)
!6105 = !DILocation(line: 5588, column: 22, scope: !6106)
!6106 = distinct !DILexicalBlock(scope: !6099, file: !77, line: 5586, column: 40)
!6107 = !DILocation(line: 5588, column: 28, scope: !6106)
!6108 = !DILocation(line: 5588, column: 15, scope: !6106)
!6109 = !DILocation(line: 5589, column: 2, scope: !6106)
!6110 = !DILocation(line: 5590, column: 41, scope: !6111)
!6111 = distinct !DILexicalBlock(scope: !6099, file: !77, line: 5589, column: 9)
!6112 = !DILocation(line: 5590, column: 47, scope: !6111)
!6113 = !DILocation(line: 5590, column: 52, scope: !6111)
!6114 = !DILocation(line: 5590, column: 36, scope: !6111)
!6115 = !DILocation(line: 5590, column: 8, scope: !6111)
!6116 = !DILocation(line: 5590, column: 14, scope: !6111)
!6117 = !DILocation(line: 5590, column: 34, scope: !6111)
!6118 = !DILocation(line: 5592, column: 18, scope: !6111)
!6119 = !DILocation(line: 5592, column: 17, scope: !6111)
!6120 = !DILocation(line: 5592, column: 31, scope: !6111)
!6121 = !DILocation(line: 5592, column: 15, scope: !6111)
!6122 = !DILocation(line: 5594, column: 1, scope: !6092)
!6123 = distinct !DISubprogram(name: "unpack_accel_data", scope: !77, file: !77, line: 5000, type: !6124, isLocal: true, isDefinition: true, scopeLine: 5002, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!6124 = !DISubroutineType(types: !6125)
!6125 = !{null, !1277, !47, !252}
!6126 = !DILocalVariable(name: "accel_data", arg: 1, scope: !6123, file: !77, line: 5000, type: !1277)
!6127 = !DILocation(line: 5000, column: 58, scope: !6123)
!6128 = !DILocalVariable(name: "data_start_index", arg: 2, scope: !6123, file: !77, line: 5000, type: !47)
!6129 = !DILocation(line: 5000, column: 79, scope: !6123)
!6130 = !DILocalVariable(name: "dev", arg: 3, scope: !6123, file: !77, line: 5001, type: !252)
!6131 = !DILocation(line: 5001, column: 30, scope: !6123)
!6132 = !DILocalVariable(name: "data_lsb", scope: !6123, file: !77, line: 5003, type: !47)
!6133 = !DILocation(line: 5003, column: 11, scope: !6123)
!6134 = !DILocalVariable(name: "data_msb", scope: !6123, file: !77, line: 5004, type: !47)
!6135 = !DILocation(line: 5004, column: 11, scope: !6123)
!6136 = !DILocation(line: 5002, column: 3, scope: !6123)
!6137 = !DILocation(line: 5007, column: 18, scope: !6123)
!6138 = !DILocation(line: 5007, column: 24, scope: !6123)
!6139 = !DILocation(line: 5007, column: 45, scope: !6123)
!6140 = !DILocation(line: 5007, column: 13, scope: !6123)
!6141 = !DILocation(line: 5007, column: 11, scope: !6123)
!6142 = !DILocation(line: 5008, column: 18, scope: !6123)
!6143 = !DILocation(line: 5008, column: 24, scope: !6123)
!6144 = !DILocation(line: 5008, column: 45, scope: !6123)
!6145 = !DILocation(line: 5008, column: 13, scope: !6123)
!6146 = !DILocation(line: 5008, column: 11, scope: !6123)
!6147 = !DILocation(line: 5009, column: 29, scope: !6123)
!6148 = !DILocation(line: 5009, column: 38, scope: !6123)
!6149 = !DILocation(line: 5009, column: 46, scope: !6123)
!6150 = !DILocation(line: 5009, column: 44, scope: !6123)
!6151 = !DILocation(line: 5009, column: 18, scope: !6123)
!6152 = !DILocation(line: 5009, column: 14, scope: !6123)
!6153 = !DILocation(line: 5009, column: 16, scope: !6123)
!6154 = !DILocation(line: 5012, column: 18, scope: !6123)
!6155 = !DILocation(line: 5012, column: 24, scope: !6123)
!6156 = !DILocation(line: 5012, column: 45, scope: !6123)
!6157 = !DILocation(line: 5012, column: 13, scope: !6123)
!6158 = !DILocation(line: 5012, column: 11, scope: !6123)
!6159 = !DILocation(line: 5013, column: 18, scope: !6123)
!6160 = !DILocation(line: 5013, column: 24, scope: !6123)
!6161 = !DILocation(line: 5013, column: 45, scope: !6123)
!6162 = !DILocation(line: 5013, column: 13, scope: !6123)
!6163 = !DILocation(line: 5013, column: 11, scope: !6123)
!6164 = !DILocation(line: 5014, column: 29, scope: !6123)
!6165 = !DILocation(line: 5014, column: 38, scope: !6123)
!6166 = !DILocation(line: 5014, column: 46, scope: !6123)
!6167 = !DILocation(line: 5014, column: 44, scope: !6123)
!6168 = !DILocation(line: 5014, column: 18, scope: !6123)
!6169 = !DILocation(line: 5014, column: 14, scope: !6123)
!6170 = !DILocation(line: 5014, column: 16, scope: !6123)
!6171 = !DILocation(line: 5017, column: 18, scope: !6123)
!6172 = !DILocation(line: 5017, column: 24, scope: !6123)
!6173 = !DILocation(line: 5017, column: 45, scope: !6123)
!6174 = !DILocation(line: 5017, column: 13, scope: !6123)
!6175 = !DILocation(line: 5017, column: 11, scope: !6123)
!6176 = !DILocation(line: 5018, column: 18, scope: !6123)
!6177 = !DILocation(line: 5018, column: 24, scope: !6123)
!6178 = !DILocation(line: 5018, column: 45, scope: !6123)
!6179 = !DILocation(line: 5018, column: 13, scope: !6123)
!6180 = !DILocation(line: 5018, column: 11, scope: !6123)
!6181 = !DILocation(line: 5019, column: 29, scope: !6123)
!6182 = !DILocation(line: 5019, column: 38, scope: !6123)
!6183 = !DILocation(line: 5019, column: 46, scope: !6123)
!6184 = !DILocation(line: 5019, column: 44, scope: !6123)
!6185 = !DILocation(line: 5019, column: 18, scope: !6123)
!6186 = !DILocation(line: 5019, column: 14, scope: !6123)
!6187 = !DILocation(line: 5019, column: 16, scope: !6123)
!6188 = !DILocation(line: 5021, column: 1, scope: !6123)
!6189 = distinct !DISubprogram(name: "bmi160_extract_gyro", scope: !77, file: !77, line: 2157, type: !5600, isLocal: false, isDefinition: true, scopeLine: 2158, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!6190 = !DILocalVariable(name: "gyro_data", arg: 1, scope: !6189, file: !77, line: 2157, type: !1277)
!6191 = !DILocation(line: 2157, column: 55, scope: !6189)
!6192 = !DILocalVariable(name: "gyro_length", arg: 2, scope: !6189, file: !77, line: 2157, type: !45)
!6193 = !DILocation(line: 2157, column: 75, scope: !6189)
!6194 = !DILocalVariable(name: "dev", arg: 3, scope: !6189, file: !77, line: 2157, type: !252)
!6195 = !DILocation(line: 2157, column: 113, scope: !6189)
!6196 = !DILocalVariable(name: "rslt", scope: !6189, file: !77, line: 2159, type: !62)
!6197 = !DILocation(line: 2159, column: 9, scope: !6189)
!6198 = !DILocalVariable(name: "fifo_data_enable", scope: !6189, file: !77, line: 2163, type: !17)
!6199 = !DILocation(line: 2163, column: 10, scope: !6189)
!6200 = !DILocation(line: 2158, column: 3, scope: !6189)
!6201 = !DILocalVariable(name: "data_index", scope: !6189, file: !77, line: 2160, type: !47)
!6202 = !DILocation(line: 2160, column: 11, scope: !6189)
!6203 = !DILocalVariable(name: "data_read_length", scope: !6189, file: !77, line: 2161, type: !47)
!6204 = !DILocation(line: 2161, column: 11, scope: !6189)
!6205 = !DILocalVariable(name: "gyro_index", scope: !6189, file: !77, line: 2162, type: !17)
!6206 = !DILocation(line: 2162, column: 10, scope: !6189)
!6207 = !DILocation(line: 2165, column: 10, scope: !6208)
!6208 = distinct !DILexicalBlock(scope: !6189, file: !77, line: 2165, column: 6)
!6209 = !DILocation(line: 2165, column: 18, scope: !6208)
!6210 = !DILocation(line: 2165, column: 26, scope: !6211)
!6211 = !DILexicalBlockFile(scope: !6208, file: !77, discriminator: 1)
!6212 = !DILocation(line: 2165, column: 32, scope: !6211)
!6213 = !DILocation(line: 2165, column: 37, scope: !6211)
!6214 = !DILocation(line: 2165, column: 6, scope: !6215)
!6215 = !DILexicalBlockFile(scope: !6189, file: !77, discriminator: 1)
!6216 = !DILocation(line: 2166, column: 8, scope: !6217)
!6217 = distinct !DILexicalBlock(scope: !6208, file: !77, line: 2165, column: 46)
!6218 = !DILocation(line: 2167, column: 2, scope: !6217)
!6219 = !DILocation(line: 2169, column: 12, scope: !6220)
!6220 = distinct !DILexicalBlock(scope: !6221, file: !77, line: 2169, column: 7)
!6221 = distinct !DILexicalBlock(scope: !6208, file: !77, line: 2167, column: 9)
!6222 = !DILocation(line: 2169, column: 18, scope: !6220)
!6223 = !DILocation(line: 2169, column: 7, scope: !6220)
!6224 = !DILocation(line: 2169, column: 37, scope: !6220)
!6225 = !DILocation(line: 2169, column: 7, scope: !6221)
!6226 = !DILocation(line: 2171, column: 4, scope: !6227)
!6227 = distinct !DILexicalBlock(scope: !6220, file: !77, line: 2169, column: 43)
!6228 = !DILocation(line: 2172, column: 4, scope: !6227)
!6229 = !DILocation(line: 2172, column: 11, scope: !6230)
!6230 = !DILexicalBlockFile(scope: !6231, file: !77, discriminator: 1)
!6231 = distinct !DILexicalBlock(scope: !6232, file: !77, line: 2172, column: 4)
!6232 = distinct !DILexicalBlock(scope: !6227, file: !77, line: 2172, column: 4)
!6233 = !DILocation(line: 2172, column: 24, scope: !6230)
!6234 = !DILocation(line: 2172, column: 22, scope: !6230)
!6235 = !DILocation(line: 2172, column: 4, scope: !6236)
!6236 = !DILexicalBlockFile(scope: !6232, file: !77, discriminator: 1)
!6237 = !DILocation(line: 2174, column: 5, scope: !6238)
!6238 = distinct !DILexicalBlock(scope: !6231, file: !77, line: 2172, column: 44)
!6239 = !DILocation(line: 2175, column: 29, scope: !6238)
!6240 = !DILocation(line: 2175, column: 35, scope: !6238)
!6241 = !DILocation(line: 2175, column: 22, scope: !6238)
!6242 = !DILocation(line: 2176, column: 5, scope: !6238)
!6243 = !DILocation(line: 2172, column: 4, scope: !6244)
!6244 = !DILexicalBlockFile(scope: !6231, file: !77, discriminator: 2)
!6245 = distinct !{!6245, !6246, !6247}
!6246 = !DILocation(line: 2172, column: 4, scope: !6232)
!6247 = !DILocation(line: 2177, column: 4, scope: !6232)
!6248 = !DILocation(line: 2179, column: 19, scope: !6227)
!6249 = !DILocation(line: 2179, column: 17, scope: !6227)
!6250 = !DILocation(line: 2181, column: 37, scope: !6227)
!6251 = !DILocation(line: 2181, column: 9, scope: !6227)
!6252 = !DILocation(line: 2181, column: 15, scope: !6227)
!6253 = !DILocation(line: 2181, column: 35, scope: !6227)
!6254 = !DILocation(line: 2182, column: 3, scope: !6227)
!6255 = !DILocation(line: 2184, column: 4, scope: !6256)
!6256 = distinct !DILexicalBlock(scope: !6220, file: !77, line: 2182, column: 10)
!6257 = !DILocation(line: 2188, column: 2, scope: !6189)
!6258 = distinct !DISubprogram(name: "get_gyro_len_to_parse", scope: !77, file: !77, line: 5093, type: !5675, isLocal: true, isDefinition: true, scopeLine: 5095, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!6259 = !DILocalVariable(name: "data_index", arg: 1, scope: !6258, file: !77, line: 5093, type: !4481)
!6260 = !DILocation(line: 5093, column: 45, scope: !6258)
!6261 = !DILocalVariable(name: "data_read_length", arg: 2, scope: !6258, file: !77, line: 5093, type: !4481)
!6262 = !DILocation(line: 5093, column: 67, scope: !6258)
!6263 = !DILocalVariable(name: "gyro_frame_count", arg: 3, scope: !6258, file: !77, line: 5093, type: !5677)
!6264 = !DILocation(line: 5093, column: 100, scope: !6258)
!6265 = !DILocalVariable(name: "dev", arg: 4, scope: !6258, file: !77, line: 5094, type: !252)
!6266 = !DILocation(line: 5094, column: 31, scope: !6258)
!6267 = !DILocation(line: 5095, column: 3, scope: !6258)
!6268 = !DILocation(line: 5097, column: 21, scope: !6258)
!6269 = !DILocation(line: 5097, column: 27, scope: !6258)
!6270 = !DILocation(line: 5097, column: 14, scope: !6258)
!6271 = !DILocation(line: 5099, column: 11, scope: !6272)
!6272 = distinct !DILexicalBlock(scope: !6258, file: !77, line: 5099, column: 6)
!6273 = !DILocation(line: 5099, column: 17, scope: !6272)
!6274 = !DILocation(line: 5099, column: 6, scope: !6272)
!6275 = !DILocation(line: 5099, column: 34, scope: !6272)
!6276 = !DILocation(line: 5099, column: 6, scope: !6258)
!6277 = !DILocation(line: 5100, column: 24, scope: !6278)
!6278 = distinct !DILexicalBlock(scope: !6272, file: !77, line: 5099, column: 59)
!6279 = !DILocation(line: 5100, column: 23, scope: !6278)
!6280 = !DILocation(line: 5100, column: 43, scope: !6278)
!6281 = !DILocation(line: 5100, column: 21, scope: !6278)
!6282 = !DILocation(line: 5101, column: 2, scope: !6278)
!6283 = !DILocation(line: 5101, column: 18, scope: !6284)
!6284 = !DILexicalBlockFile(scope: !6285, file: !77, discriminator: 1)
!6285 = distinct !DILexicalBlock(scope: !6272, file: !77, line: 5101, column: 13)
!6286 = !DILocation(line: 5101, column: 24, scope: !6284)
!6287 = !DILocation(line: 5101, column: 13, scope: !6284)
!6288 = !DILocation(line: 5101, column: 41, scope: !6284)
!6289 = !DILocation(line: 5101, column: 13, scope: !6290)
!6290 = !DILexicalBlockFile(scope: !6272, file: !77, discriminator: 1)
!6291 = !DILocation(line: 5102, column: 24, scope: !6292)
!6292 = distinct !DILexicalBlock(scope: !6285, file: !77, line: 5101, column: 68)
!6293 = !DILocation(line: 5102, column: 23, scope: !6292)
!6294 = !DILocation(line: 5102, column: 43, scope: !6292)
!6295 = !DILocation(line: 5102, column: 21, scope: !6292)
!6296 = !DILocation(line: 5103, column: 2, scope: !6292)
!6297 = !DILocation(line: 5103, column: 18, scope: !6298)
!6298 = !DILexicalBlockFile(scope: !6299, file: !77, discriminator: 1)
!6299 = distinct !DILexicalBlock(scope: !6285, file: !77, line: 5103, column: 13)
!6300 = !DILocation(line: 5103, column: 24, scope: !6298)
!6301 = !DILocation(line: 5103, column: 13, scope: !6298)
!6302 = !DILocation(line: 5103, column: 41, scope: !6298)
!6303 = !DILocation(line: 5103, column: 13, scope: !6284)
!6304 = !DILocation(line: 5104, column: 24, scope: !6305)
!6305 = distinct !DILexicalBlock(scope: !6299, file: !77, line: 5103, column: 68)
!6306 = !DILocation(line: 5104, column: 23, scope: !6305)
!6307 = !DILocation(line: 5104, column: 43, scope: !6305)
!6308 = !DILocation(line: 5104, column: 21, scope: !6305)
!6309 = !DILocation(line: 5105, column: 2, scope: !6305)
!6310 = !DILocation(line: 5105, column: 18, scope: !6311)
!6311 = !DILexicalBlockFile(scope: !6312, file: !77, discriminator: 1)
!6312 = distinct !DILexicalBlock(scope: !6299, file: !77, line: 5105, column: 13)
!6313 = !DILocation(line: 5105, column: 24, scope: !6311)
!6314 = !DILocation(line: 5105, column: 13, scope: !6311)
!6315 = !DILocation(line: 5105, column: 41, scope: !6311)
!6316 = !DILocation(line: 5105, column: 13, scope: !6298)
!6317 = !DILocation(line: 5106, column: 24, scope: !6318)
!6318 = distinct !DILexicalBlock(scope: !6312, file: !77, line: 5105, column: 70)
!6319 = !DILocation(line: 5106, column: 23, scope: !6318)
!6320 = !DILocation(line: 5106, column: 43, scope: !6318)
!6321 = !DILocation(line: 5106, column: 21, scope: !6318)
!6322 = !DILocation(line: 5107, column: 2, scope: !6318)
!6323 = !DILocation(line: 5110, column: 22, scope: !6324)
!6324 = distinct !DILexicalBlock(scope: !6312, file: !77, line: 5107, column: 9)
!6325 = !DILocation(line: 5110, column: 28, scope: !6324)
!6326 = !DILocation(line: 5110, column: 15, scope: !6324)
!6327 = !DILocation(line: 5113, column: 6, scope: !6328)
!6328 = distinct !DILexicalBlock(scope: !6258, file: !77, line: 5113, column: 6)
!6329 = !DILocation(line: 5113, column: 31, scope: !6328)
!6330 = !DILocation(line: 5113, column: 37, scope: !6328)
!6331 = !DILocation(line: 5113, column: 26, scope: !6328)
!6332 = !DILocation(line: 5113, column: 24, scope: !6328)
!6333 = !DILocation(line: 5113, column: 6, scope: !6258)
!6334 = !DILocation(line: 5116, column: 28, scope: !6335)
!6335 = distinct !DILexicalBlock(scope: !6328, file: !77, line: 5113, column: 45)
!6336 = !DILocation(line: 5116, column: 34, scope: !6335)
!6337 = !DILocation(line: 5116, column: 21, scope: !6335)
!6338 = !DILocation(line: 5117, column: 2, scope: !6335)
!6339 = !DILocation(line: 5119, column: 1, scope: !6258)
!6340 = distinct !DISubprogram(name: "unpack_gyro_frame", scope: !77, file: !77, line: 5128, type: !5800, isLocal: true, isDefinition: true, scopeLine: 5130, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!6341 = !DILocalVariable(name: "gyro", arg: 1, scope: !6340, file: !77, line: 5128, type: !1277)
!6342 = !DILocation(line: 5128, column: 58, scope: !6340)
!6343 = !DILocalVariable(name: "idx", arg: 2, scope: !6340, file: !77, line: 5128, type: !4481)
!6344 = !DILocation(line: 5128, column: 74, scope: !6340)
!6345 = !DILocalVariable(name: "gyro_idx", arg: 3, scope: !6340, file: !77, line: 5128, type: !45)
!6346 = !DILocation(line: 5128, column: 88, scope: !6340)
!6347 = !DILocalVariable(name: "frame_info", arg: 4, scope: !6340, file: !77, line: 5128, type: !17)
!6348 = !DILocation(line: 5128, column: 106, scope: !6340)
!6349 = !DILocalVariable(name: "dev", arg: 5, scope: !6340, file: !77, line: 5129, type: !252)
!6350 = !DILocation(line: 5129, column: 30, scope: !6340)
!6351 = !DILocation(line: 5130, column: 3, scope: !6340)
!6352 = !DILocation(line: 5131, column: 10, scope: !6340)
!6353 = !DILocation(line: 5131, column: 2, scope: !6340)
!6354 = !DILocation(line: 5136, column: 8, scope: !6355)
!6355 = distinct !DILexicalBlock(scope: !6356, file: !77, line: 5136, column: 7)
!6356 = distinct !DILexicalBlock(scope: !6340, file: !77, line: 5131, column: 22)
!6357 = !DILocation(line: 5136, column: 13, scope: !6355)
!6358 = !DILocation(line: 5136, column: 44, scope: !6355)
!6359 = !DILocation(line: 5136, column: 50, scope: !6355)
!6360 = !DILocation(line: 5136, column: 39, scope: !6355)
!6361 = !DILocation(line: 5136, column: 37, scope: !6355)
!6362 = !DILocation(line: 5136, column: 7, scope: !6356)
!6363 = !DILocation(line: 5138, column: 16, scope: !6364)
!6364 = distinct !DILexicalBlock(scope: !6355, file: !77, line: 5136, column: 58)
!6365 = !DILocation(line: 5138, column: 22, scope: !6364)
!6366 = !DILocation(line: 5138, column: 9, scope: !6364)
!6367 = !DILocation(line: 5139, column: 4, scope: !6364)
!6368 = !DILocation(line: 5142, column: 26, scope: !6356)
!6369 = !DILocation(line: 5142, column: 21, scope: !6356)
!6370 = !DILocation(line: 5142, column: 38, scope: !6356)
!6371 = !DILocation(line: 5142, column: 3, scope: !6356)
!6372 = !DILocation(line: 5144, column: 13, scope: !6356)
!6373 = !DILocation(line: 5144, column: 12, scope: !6356)
!6374 = !DILocation(line: 5144, column: 19, scope: !6356)
!6375 = !DILocation(line: 5144, column: 10, scope: !6356)
!6376 = !DILocation(line: 5145, column: 14, scope: !6356)
!6377 = !DILocation(line: 5146, column: 3, scope: !6356)
!6378 = !DILocation(line: 5151, column: 8, scope: !6379)
!6379 = distinct !DILexicalBlock(scope: !6356, file: !77, line: 5151, column: 7)
!6380 = !DILocation(line: 5151, column: 13, scope: !6379)
!6381 = !DILocation(line: 5151, column: 45, scope: !6379)
!6382 = !DILocation(line: 5151, column: 51, scope: !6379)
!6383 = !DILocation(line: 5151, column: 40, scope: !6379)
!6384 = !DILocation(line: 5151, column: 38, scope: !6379)
!6385 = !DILocation(line: 5151, column: 7, scope: !6356)
!6386 = !DILocation(line: 5153, column: 16, scope: !6387)
!6387 = distinct !DILexicalBlock(scope: !6379, file: !77, line: 5151, column: 59)
!6388 = !DILocation(line: 5153, column: 22, scope: !6387)
!6389 = !DILocation(line: 5153, column: 9, scope: !6387)
!6390 = !DILocation(line: 5154, column: 4, scope: !6387)
!6391 = !DILocation(line: 5157, column: 26, scope: !6356)
!6392 = !DILocation(line: 5157, column: 21, scope: !6356)
!6393 = !DILocation(line: 5157, column: 38, scope: !6356)
!6394 = !DILocation(line: 5157, column: 3, scope: !6356)
!6395 = !DILocation(line: 5159, column: 10, scope: !6356)
!6396 = !DILocation(line: 5159, column: 15, scope: !6356)
!6397 = !DILocation(line: 5159, column: 8, scope: !6356)
!6398 = !DILocation(line: 5160, column: 14, scope: !6356)
!6399 = !DILocation(line: 5161, column: 3, scope: !6356)
!6400 = !DILocation(line: 5166, column: 8, scope: !6401)
!6401 = distinct !DILexicalBlock(scope: !6356, file: !77, line: 5166, column: 7)
!6402 = !DILocation(line: 5166, column: 13, scope: !6401)
!6403 = !DILocation(line: 5166, column: 46, scope: !6401)
!6404 = !DILocation(line: 5166, column: 52, scope: !6401)
!6405 = !DILocation(line: 5166, column: 41, scope: !6401)
!6406 = !DILocation(line: 5166, column: 39, scope: !6401)
!6407 = !DILocation(line: 5166, column: 7, scope: !6356)
!6408 = !DILocation(line: 5168, column: 16, scope: !6409)
!6409 = distinct !DILexicalBlock(scope: !6401, file: !77, line: 5166, column: 60)
!6410 = !DILocation(line: 5168, column: 22, scope: !6409)
!6411 = !DILocation(line: 5168, column: 9, scope: !6409)
!6412 = !DILocation(line: 5169, column: 4, scope: !6409)
!6413 = !DILocation(line: 5172, column: 26, scope: !6356)
!6414 = !DILocation(line: 5172, column: 21, scope: !6356)
!6415 = !DILocation(line: 5172, column: 38, scope: !6356)
!6416 = !DILocation(line: 5172, column: 43, scope: !6356)
!6417 = !DILocation(line: 5172, column: 3, scope: !6356)
!6418 = !DILocation(line: 5174, column: 10, scope: !6356)
!6419 = !DILocation(line: 5174, column: 15, scope: !6356)
!6420 = !DILocation(line: 5174, column: 8, scope: !6356)
!6421 = !DILocation(line: 5175, column: 14, scope: !6356)
!6422 = !DILocation(line: 5176, column: 3, scope: !6356)
!6423 = !DILocation(line: 5182, column: 10, scope: !6356)
!6424 = !DILocation(line: 5182, column: 15, scope: !6356)
!6425 = !DILocation(line: 5182, column: 8, scope: !6356)
!6426 = !DILocation(line: 5183, column: 3, scope: !6356)
!6427 = !DILocation(line: 5187, column: 13, scope: !6356)
!6428 = !DILocation(line: 5187, column: 12, scope: !6356)
!6429 = !DILocation(line: 5187, column: 19, scope: !6356)
!6430 = !DILocation(line: 5187, column: 10, scope: !6356)
!6431 = !DILocation(line: 5188, column: 3, scope: !6356)
!6432 = !DILocation(line: 5193, column: 8, scope: !6433)
!6433 = distinct !DILexicalBlock(scope: !6356, file: !77, line: 5193, column: 7)
!6434 = !DILocation(line: 5193, column: 13, scope: !6433)
!6435 = !DILocation(line: 5193, column: 45, scope: !6433)
!6436 = !DILocation(line: 5193, column: 51, scope: !6433)
!6437 = !DILocation(line: 5193, column: 40, scope: !6433)
!6438 = !DILocation(line: 5193, column: 38, scope: !6433)
!6439 = !DILocation(line: 5193, column: 7, scope: !6356)
!6440 = !DILocation(line: 5195, column: 16, scope: !6441)
!6441 = distinct !DILexicalBlock(scope: !6433, file: !77, line: 5193, column: 59)
!6442 = !DILocation(line: 5195, column: 22, scope: !6441)
!6443 = !DILocation(line: 5195, column: 9, scope: !6441)
!6444 = !DILocation(line: 5196, column: 4, scope: !6441)
!6445 = !DILocation(line: 5199, column: 26, scope: !6356)
!6446 = !DILocation(line: 5199, column: 21, scope: !6356)
!6447 = !DILocation(line: 5199, column: 38, scope: !6356)
!6448 = !DILocation(line: 5199, column: 43, scope: !6356)
!6449 = !DILocation(line: 5199, column: 3, scope: !6356)
!6450 = !DILocation(line: 5201, column: 13, scope: !6356)
!6451 = !DILocation(line: 5201, column: 12, scope: !6356)
!6452 = !DILocation(line: 5201, column: 19, scope: !6356)
!6453 = !DILocation(line: 5201, column: 10, scope: !6356)
!6454 = !DILocation(line: 5202, column: 14, scope: !6356)
!6455 = !DILocation(line: 5203, column: 3, scope: !6356)
!6456 = !DILocation(line: 5208, column: 10, scope: !6356)
!6457 = !DILocation(line: 5208, column: 15, scope: !6356)
!6458 = !DILocation(line: 5208, column: 8, scope: !6356)
!6459 = !DILocation(line: 5209, column: 3, scope: !6356)
!6460 = !DILocation(line: 5212, column: 3, scope: !6356)
!6461 = !DILocation(line: 5215, column: 1, scope: !6340)
!6462 = distinct !DISubprogram(name: "extract_gyro_header_mode", scope: !77, file: !77, line: 5248, type: !5924, isLocal: true, isDefinition: true, scopeLine: 5250, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!6463 = !DILocalVariable(name: "gyro_data", arg: 1, scope: !6462, file: !77, line: 5248, type: !1277)
!6464 = !DILocation(line: 5248, column: 65, scope: !6462)
!6465 = !DILocalVariable(name: "gyro_length", arg: 2, scope: !6462, file: !77, line: 5248, type: !45)
!6466 = !DILocation(line: 5248, column: 85, scope: !6462)
!6467 = !DILocalVariable(name: "dev", arg: 3, scope: !6462, file: !77, line: 5249, type: !252)
!6468 = !DILocation(line: 5249, column: 31, scope: !6462)
!6469 = !DILocalVariable(name: "frame_header", scope: !6462, file: !77, line: 5251, type: !17)
!6470 = !DILocation(line: 5251, column: 10, scope: !6462)
!6471 = !DILocation(line: 5250, column: 3, scope: !6462)
!6472 = !DILocalVariable(name: "data_index", scope: !6462, file: !77, line: 5252, type: !47)
!6473 = !DILocation(line: 5252, column: 11, scope: !6462)
!6474 = !DILocalVariable(name: "gyro_index", scope: !6462, file: !77, line: 5253, type: !17)
!6475 = !DILocation(line: 5253, column: 10, scope: !6462)
!6476 = !DILocation(line: 5255, column: 25, scope: !6477)
!6477 = distinct !DILexicalBlock(scope: !6462, file: !77, line: 5255, column: 2)
!6478 = !DILocation(line: 5255, column: 31, scope: !6477)
!6479 = !DILocation(line: 5255, column: 18, scope: !6477)
!6480 = !DILocation(line: 5255, column: 7, scope: !6477)
!6481 = !DILocation(line: 5255, column: 52, scope: !6482)
!6482 = !DILexicalBlockFile(scope: !6483, file: !77, discriminator: 1)
!6483 = distinct !DILexicalBlock(scope: !6477, file: !77, line: 5255, column: 2)
!6484 = !DILocation(line: 5255, column: 70, scope: !6482)
!6485 = !DILocation(line: 5255, column: 76, scope: !6482)
!6486 = !DILocation(line: 5255, column: 65, scope: !6482)
!6487 = !DILocation(line: 5255, column: 63, scope: !6482)
!6488 = !DILocation(line: 5255, column: 2, scope: !6489)
!6489 = !DILexicalBlockFile(scope: !6477, file: !77, discriminator: 1)
!6490 = !DILocation(line: 5257, column: 24, scope: !6491)
!6491 = distinct !DILexicalBlock(scope: !6483, file: !77, line: 5255, column: 85)
!6492 = !DILocation(line: 5257, column: 30, scope: !6491)
!6493 = !DILocation(line: 5257, column: 35, scope: !6491)
!6494 = !DILocation(line: 5257, column: 19, scope: !6491)
!6495 = !DILocation(line: 5257, column: 47, scope: !6491)
!6496 = !DILocation(line: 5257, column: 18, scope: !6491)
!6497 = !DILocation(line: 5257, column: 16, scope: !6491)
!6498 = !DILocation(line: 5259, column: 13, scope: !6491)
!6499 = !DILocation(line: 5261, column: 11, scope: !6491)
!6500 = !DILocation(line: 5261, column: 3, scope: !6491)
!6501 = !DILocation(line: 5267, column: 4, scope: !6502)
!6502 = distinct !DILexicalBlock(scope: !6491, file: !77, line: 5261, column: 25)
!6503 = !DILocation(line: 5268, column: 4, scope: !6502)
!6504 = !DILocation(line: 5270, column: 4, scope: !6502)
!6505 = !DILocation(line: 5271, column: 4, scope: !6502)
!6506 = !DILocation(line: 5273, column: 4, scope: !6502)
!6507 = !DILocation(line: 5274, column: 4, scope: !6502)
!6508 = !DILocation(line: 5276, column: 4, scope: !6502)
!6509 = !DILocation(line: 5277, column: 4, scope: !6502)
!6510 = !DILocation(line: 5280, column: 4, scope: !6502)
!6511 = !DILocation(line: 5281, column: 4, scope: !6502)
!6512 = !DILocation(line: 5284, column: 4, scope: !6502)
!6513 = !DILocation(line: 5285, column: 4, scope: !6502)
!6514 = !DILocation(line: 5288, column: 4, scope: !6502)
!6515 = !DILocation(line: 5289, column: 4, scope: !6502)
!6516 = !DILocation(line: 5292, column: 22, scope: !6502)
!6517 = !DILocation(line: 5292, column: 28, scope: !6502)
!6518 = !DILocation(line: 5292, column: 15, scope: !6502)
!6519 = !DILocation(line: 5293, column: 4, scope: !6502)
!6520 = !DILocation(line: 5295, column: 4, scope: !6502)
!6521 = !DILocation(line: 5297, column: 7, scope: !6522)
!6522 = distinct !DILexicalBlock(scope: !6491, file: !77, line: 5297, column: 7)
!6523 = !DILocation(line: 5297, column: 23, scope: !6522)
!6524 = !DILocation(line: 5297, column: 20, scope: !6522)
!6525 = !DILocation(line: 5297, column: 7, scope: !6491)
!6526 = !DILocation(line: 5299, column: 4, scope: !6527)
!6527 = distinct !DILexicalBlock(scope: !6522, file: !77, line: 5297, column: 35)
!6528 = !DILocation(line: 5255, column: 2, scope: !6529)
!6529 = !DILexicalBlockFile(scope: !6483, file: !77, discriminator: 2)
!6530 = distinct !{!6530, !6531, !6532}
!6531 = !DILocation(line: 5255, column: 2, scope: !6477)
!6532 = !DILocation(line: 5301, column: 2, scope: !6477)
!6533 = !DILocation(line: 5304, column: 17, scope: !6462)
!6534 = !DILocation(line: 5304, column: 15, scope: !6462)
!6535 = !DILocation(line: 5306, column: 35, scope: !6462)
!6536 = !DILocation(line: 5306, column: 7, scope: !6462)
!6537 = !DILocation(line: 5306, column: 13, scope: !6462)
!6538 = !DILocation(line: 5306, column: 33, scope: !6462)
!6539 = !DILocation(line: 5307, column: 1, scope: !6462)
!6540 = distinct !DISubprogram(name: "unpack_gyro_data", scope: !77, file: !77, line: 5221, type: !6124, isLocal: true, isDefinition: true, scopeLine: 5223, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!6541 = !DILocalVariable(name: "gyro_data", arg: 1, scope: !6540, file: !77, line: 5221, type: !1277)
!6542 = !DILocation(line: 5221, column: 57, scope: !6540)
!6543 = !DILocalVariable(name: "data_start_index", arg: 2, scope: !6540, file: !77, line: 5221, type: !47)
!6544 = !DILocation(line: 5221, column: 77, scope: !6540)
!6545 = !DILocalVariable(name: "dev", arg: 3, scope: !6540, file: !77, line: 5222, type: !252)
!6546 = !DILocation(line: 5222, column: 30, scope: !6540)
!6547 = !DILocalVariable(name: "data_lsb", scope: !6540, file: !77, line: 5224, type: !47)
!6548 = !DILocation(line: 5224, column: 11, scope: !6540)
!6549 = !DILocalVariable(name: "data_msb", scope: !6540, file: !77, line: 5225, type: !47)
!6550 = !DILocation(line: 5225, column: 11, scope: !6540)
!6551 = !DILocation(line: 5223, column: 3, scope: !6540)
!6552 = !DILocation(line: 5228, column: 18, scope: !6540)
!6553 = !DILocation(line: 5228, column: 24, scope: !6540)
!6554 = !DILocation(line: 5228, column: 45, scope: !6540)
!6555 = !DILocation(line: 5228, column: 13, scope: !6540)
!6556 = !DILocation(line: 5228, column: 11, scope: !6540)
!6557 = !DILocation(line: 5229, column: 18, scope: !6540)
!6558 = !DILocation(line: 5229, column: 24, scope: !6540)
!6559 = !DILocation(line: 5229, column: 45, scope: !6540)
!6560 = !DILocation(line: 5229, column: 13, scope: !6540)
!6561 = !DILocation(line: 5229, column: 11, scope: !6540)
!6562 = !DILocation(line: 5230, column: 28, scope: !6540)
!6563 = !DILocation(line: 5230, column: 37, scope: !6540)
!6564 = !DILocation(line: 5230, column: 45, scope: !6540)
!6565 = !DILocation(line: 5230, column: 43, scope: !6540)
!6566 = !DILocation(line: 5230, column: 17, scope: !6540)
!6567 = !DILocation(line: 5230, column: 13, scope: !6540)
!6568 = !DILocation(line: 5230, column: 15, scope: !6540)
!6569 = !DILocation(line: 5233, column: 18, scope: !6540)
!6570 = !DILocation(line: 5233, column: 24, scope: !6540)
!6571 = !DILocation(line: 5233, column: 45, scope: !6540)
!6572 = !DILocation(line: 5233, column: 13, scope: !6540)
!6573 = !DILocation(line: 5233, column: 11, scope: !6540)
!6574 = !DILocation(line: 5234, column: 18, scope: !6540)
!6575 = !DILocation(line: 5234, column: 24, scope: !6540)
!6576 = !DILocation(line: 5234, column: 45, scope: !6540)
!6577 = !DILocation(line: 5234, column: 13, scope: !6540)
!6578 = !DILocation(line: 5234, column: 11, scope: !6540)
!6579 = !DILocation(line: 5235, column: 28, scope: !6540)
!6580 = !DILocation(line: 5235, column: 37, scope: !6540)
!6581 = !DILocation(line: 5235, column: 45, scope: !6540)
!6582 = !DILocation(line: 5235, column: 43, scope: !6540)
!6583 = !DILocation(line: 5235, column: 17, scope: !6540)
!6584 = !DILocation(line: 5235, column: 13, scope: !6540)
!6585 = !DILocation(line: 5235, column: 15, scope: !6540)
!6586 = !DILocation(line: 5238, column: 18, scope: !6540)
!6587 = !DILocation(line: 5238, column: 24, scope: !6540)
!6588 = !DILocation(line: 5238, column: 45, scope: !6540)
!6589 = !DILocation(line: 5238, column: 13, scope: !6540)
!6590 = !DILocation(line: 5238, column: 11, scope: !6540)
!6591 = !DILocation(line: 5239, column: 18, scope: !6540)
!6592 = !DILocation(line: 5239, column: 24, scope: !6540)
!6593 = !DILocation(line: 5239, column: 45, scope: !6540)
!6594 = !DILocation(line: 5239, column: 13, scope: !6540)
!6595 = !DILocation(line: 5239, column: 11, scope: !6540)
!6596 = !DILocation(line: 5240, column: 28, scope: !6540)
!6597 = !DILocation(line: 5240, column: 37, scope: !6540)
!6598 = !DILocation(line: 5240, column: 45, scope: !6540)
!6599 = !DILocation(line: 5240, column: 43, scope: !6540)
!6600 = !DILocation(line: 5240, column: 17, scope: !6540)
!6601 = !DILocation(line: 5240, column: 13, scope: !6540)
!6602 = !DILocation(line: 5240, column: 15, scope: !6540)
!6603 = !DILocation(line: 5242, column: 1, scope: !6540)
!6604 = distinct !DISubprogram(name: "bmi160_extract_aux", scope: !77, file: !77, line: 2196, type: !6605, isLocal: false, isDefinition: true, scopeLine: 2197, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!6605 = !DISubroutineType(types: !6606)
!6606 = !{!62, !6607, !45, !252}
!6607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6608, size: 64)
!6608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bmi160_aux_data", file: !6, line: 816, size: 64, elements: !6609)
!6609 = !{!6610}
!6610 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6608, file: !6, line: 818, baseType: !71, size: 64)
!6611 = !DILocalVariable(name: "aux_data", arg: 1, scope: !6604, file: !77, line: 2196, type: !6607)
!6612 = !DILocation(line: 2196, column: 51, scope: !6604)
!6613 = !DILocalVariable(name: "aux_len", arg: 2, scope: !6604, file: !77, line: 2196, type: !45)
!6614 = !DILocation(line: 2196, column: 70, scope: !6604)
!6615 = !DILocalVariable(name: "dev", arg: 3, scope: !6604, file: !77, line: 2196, type: !252)
!6616 = !DILocation(line: 2196, column: 104, scope: !6604)
!6617 = !DILocalVariable(name: "rslt", scope: !6604, file: !77, line: 2198, type: !62)
!6618 = !DILocation(line: 2198, column: 9, scope: !6604)
!6619 = !DILocalVariable(name: "fifo_data_enable", scope: !6604, file: !77, line: 2202, type: !17)
!6620 = !DILocation(line: 2202, column: 10, scope: !6604)
!6621 = !DILocation(line: 2197, column: 3, scope: !6604)
!6622 = !DILocalVariable(name: "data_index", scope: !6604, file: !77, line: 2199, type: !47)
!6623 = !DILocation(line: 2199, column: 11, scope: !6604)
!6624 = !DILocalVariable(name: "data_read_length", scope: !6604, file: !77, line: 2200, type: !47)
!6625 = !DILocation(line: 2200, column: 11, scope: !6604)
!6626 = !DILocalVariable(name: "aux_index", scope: !6604, file: !77, line: 2201, type: !17)
!6627 = !DILocation(line: 2201, column: 10, scope: !6604)
!6628 = !DILocation(line: 2204, column: 11, scope: !6629)
!6629 = distinct !DILexicalBlock(scope: !6604, file: !77, line: 2204, column: 6)
!6630 = !DILocation(line: 2204, column: 20, scope: !6629)
!6631 = !DILocation(line: 2204, column: 29, scope: !6632)
!6632 = !DILexicalBlockFile(scope: !6629, file: !77, discriminator: 1)
!6633 = !DILocation(line: 2204, column: 35, scope: !6632)
!6634 = !DILocation(line: 2204, column: 40, scope: !6632)
!6635 = !DILocation(line: 2204, column: 49, scope: !6632)
!6636 = !DILocation(line: 2204, column: 62, scope: !6637)
!6637 = !DILexicalBlockFile(scope: !6629, file: !77, discriminator: 2)
!6638 = !DILocation(line: 2204, column: 6, scope: !6639)
!6639 = !DILexicalBlockFile(scope: !6604, file: !77, discriminator: 2)
!6640 = !DILocation(line: 2205, column: 8, scope: !6641)
!6641 = distinct !DILexicalBlock(scope: !6629, file: !77, line: 2204, column: 72)
!6642 = !DILocation(line: 2206, column: 2, scope: !6641)
!6643 = !DILocation(line: 2208, column: 12, scope: !6644)
!6644 = distinct !DILexicalBlock(scope: !6645, file: !77, line: 2208, column: 7)
!6645 = distinct !DILexicalBlock(scope: !6629, file: !77, line: 2206, column: 9)
!6646 = !DILocation(line: 2208, column: 18, scope: !6644)
!6647 = !DILocation(line: 2208, column: 7, scope: !6644)
!6648 = !DILocation(line: 2208, column: 37, scope: !6644)
!6649 = !DILocation(line: 2208, column: 7, scope: !6645)
!6650 = !DILocation(line: 2210, column: 4, scope: !6651)
!6651 = distinct !DILexicalBlock(scope: !6644, file: !77, line: 2208, column: 43)
!6652 = !DILocation(line: 2211, column: 4, scope: !6651)
!6653 = !DILocation(line: 2211, column: 11, scope: !6654)
!6654 = !DILexicalBlockFile(scope: !6655, file: !77, discriminator: 1)
!6655 = distinct !DILexicalBlock(scope: !6656, file: !77, line: 2211, column: 4)
!6656 = distinct !DILexicalBlock(scope: !6651, file: !77, line: 2211, column: 4)
!6657 = !DILocation(line: 2211, column: 24, scope: !6654)
!6658 = !DILocation(line: 2211, column: 22, scope: !6654)
!6659 = !DILocation(line: 2211, column: 4, scope: !6660)
!6660 = !DILexicalBlockFile(scope: !6656, file: !77, discriminator: 1)
!6661 = !DILocation(line: 2214, column: 5, scope: !6662)
!6662 = distinct !DILexicalBlock(scope: !6655, file: !77, line: 2211, column: 44)
!6663 = !DILocation(line: 2215, column: 29, scope: !6662)
!6664 = !DILocation(line: 2215, column: 35, scope: !6662)
!6665 = !DILocation(line: 2215, column: 22, scope: !6662)
!6666 = !DILocation(line: 2216, column: 5, scope: !6662)
!6667 = !DILocation(line: 2211, column: 4, scope: !6668)
!6668 = !DILexicalBlockFile(scope: !6655, file: !77, discriminator: 2)
!6669 = distinct !{!6669, !6670, !6671}
!6670 = !DILocation(line: 2211, column: 4, scope: !6656)
!6671 = !DILocation(line: 2217, column: 4, scope: !6656)
!6672 = !DILocation(line: 2219, column: 15, scope: !6651)
!6673 = !DILocation(line: 2219, column: 13, scope: !6651)
!6674 = !DILocation(line: 2221, column: 36, scope: !6651)
!6675 = !DILocation(line: 2221, column: 9, scope: !6651)
!6676 = !DILocation(line: 2221, column: 15, scope: !6651)
!6677 = !DILocation(line: 2221, column: 34, scope: !6651)
!6678 = !DILocation(line: 2222, column: 3, scope: !6651)
!6679 = !DILocation(line: 2224, column: 4, scope: !6680)
!6680 = distinct !DILexicalBlock(scope: !6644, file: !77, line: 2222, column: 10)
!6681 = !DILocation(line: 2228, column: 2, scope: !6604)
!6682 = distinct !DISubprogram(name: "get_aux_len_to_parse", scope: !77, file: !77, line: 5313, type: !5675, isLocal: true, isDefinition: true, scopeLine: 5315, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!6683 = !DILocalVariable(name: "data_index", arg: 1, scope: !6682, file: !77, line: 5313, type: !4481)
!6684 = !DILocation(line: 5313, column: 44, scope: !6682)
!6685 = !DILocalVariable(name: "data_read_length", arg: 2, scope: !6682, file: !77, line: 5313, type: !4481)
!6686 = !DILocation(line: 5313, column: 66, scope: !6682)
!6687 = !DILocalVariable(name: "aux_frame_count", arg: 3, scope: !6682, file: !77, line: 5313, type: !5677)
!6688 = !DILocation(line: 5313, column: 99, scope: !6682)
!6689 = !DILocalVariable(name: "dev", arg: 4, scope: !6682, file: !77, line: 5314, type: !252)
!6690 = !DILocation(line: 5314, column: 31, scope: !6682)
!6691 = !DILocation(line: 5315, column: 3, scope: !6682)
!6692 = !DILocation(line: 5317, column: 21, scope: !6682)
!6693 = !DILocation(line: 5317, column: 27, scope: !6682)
!6694 = !DILocation(line: 5317, column: 14, scope: !6682)
!6695 = !DILocation(line: 5319, column: 11, scope: !6696)
!6696 = distinct !DILexicalBlock(scope: !6682, file: !77, line: 5319, column: 6)
!6697 = !DILocation(line: 5319, column: 17, scope: !6696)
!6698 = !DILocation(line: 5319, column: 6, scope: !6696)
!6699 = !DILocation(line: 5319, column: 34, scope: !6696)
!6700 = !DILocation(line: 5319, column: 6, scope: !6682)
!6701 = !DILocation(line: 5320, column: 24, scope: !6702)
!6702 = distinct !DILexicalBlock(scope: !6696, file: !77, line: 5319, column: 59)
!6703 = !DILocation(line: 5320, column: 23, scope: !6702)
!6704 = !DILocation(line: 5320, column: 42, scope: !6702)
!6705 = !DILocation(line: 5320, column: 21, scope: !6702)
!6706 = !DILocation(line: 5321, column: 2, scope: !6702)
!6707 = !DILocation(line: 5321, column: 18, scope: !6708)
!6708 = !DILexicalBlockFile(scope: !6709, file: !77, discriminator: 1)
!6709 = distinct !DILexicalBlock(scope: !6696, file: !77, line: 5321, column: 13)
!6710 = !DILocation(line: 5321, column: 24, scope: !6708)
!6711 = !DILocation(line: 5321, column: 13, scope: !6708)
!6712 = !DILocation(line: 5321, column: 41, scope: !6708)
!6713 = !DILocation(line: 5321, column: 13, scope: !6714)
!6714 = !DILexicalBlockFile(scope: !6696, file: !77, discriminator: 1)
!6715 = !DILocation(line: 5322, column: 24, scope: !6716)
!6716 = distinct !DILexicalBlock(scope: !6709, file: !77, line: 5321, column: 68)
!6717 = !DILocation(line: 5322, column: 23, scope: !6716)
!6718 = !DILocation(line: 5322, column: 42, scope: !6716)
!6719 = !DILocation(line: 5322, column: 21, scope: !6716)
!6720 = !DILocation(line: 5323, column: 2, scope: !6716)
!6721 = !DILocation(line: 5323, column: 18, scope: !6722)
!6722 = !DILexicalBlockFile(scope: !6723, file: !77, discriminator: 1)
!6723 = distinct !DILexicalBlock(scope: !6709, file: !77, line: 5323, column: 13)
!6724 = !DILocation(line: 5323, column: 24, scope: !6722)
!6725 = !DILocation(line: 5323, column: 13, scope: !6722)
!6726 = !DILocation(line: 5323, column: 41, scope: !6722)
!6727 = !DILocation(line: 5323, column: 13, scope: !6708)
!6728 = !DILocation(line: 5324, column: 24, scope: !6729)
!6729 = distinct !DILexicalBlock(scope: !6723, file: !77, line: 5323, column: 68)
!6730 = !DILocation(line: 5324, column: 23, scope: !6729)
!6731 = !DILocation(line: 5324, column: 42, scope: !6729)
!6732 = !DILocation(line: 5324, column: 21, scope: !6729)
!6733 = !DILocation(line: 5325, column: 2, scope: !6729)
!6734 = !DILocation(line: 5325, column: 18, scope: !6735)
!6735 = !DILexicalBlockFile(scope: !6736, file: !77, discriminator: 1)
!6736 = distinct !DILexicalBlock(scope: !6723, file: !77, line: 5325, column: 13)
!6737 = !DILocation(line: 5325, column: 24, scope: !6735)
!6738 = !DILocation(line: 5325, column: 13, scope: !6735)
!6739 = !DILocation(line: 5325, column: 41, scope: !6735)
!6740 = !DILocation(line: 5325, column: 13, scope: !6722)
!6741 = !DILocation(line: 5326, column: 24, scope: !6742)
!6742 = distinct !DILexicalBlock(scope: !6736, file: !77, line: 5325, column: 70)
!6743 = !DILocation(line: 5326, column: 23, scope: !6742)
!6744 = !DILocation(line: 5326, column: 42, scope: !6742)
!6745 = !DILocation(line: 5326, column: 21, scope: !6742)
!6746 = !DILocation(line: 5327, column: 2, scope: !6742)
!6747 = !DILocation(line: 5330, column: 22, scope: !6748)
!6748 = distinct !DILexicalBlock(scope: !6736, file: !77, line: 5327, column: 9)
!6749 = !DILocation(line: 5330, column: 28, scope: !6748)
!6750 = !DILocation(line: 5330, column: 15, scope: !6748)
!6751 = !DILocation(line: 5333, column: 6, scope: !6752)
!6752 = distinct !DILexicalBlock(scope: !6682, file: !77, line: 5333, column: 6)
!6753 = !DILocation(line: 5333, column: 31, scope: !6752)
!6754 = !DILocation(line: 5333, column: 37, scope: !6752)
!6755 = !DILocation(line: 5333, column: 26, scope: !6752)
!6756 = !DILocation(line: 5333, column: 24, scope: !6752)
!6757 = !DILocation(line: 5333, column: 6, scope: !6682)
!6758 = !DILocation(line: 5336, column: 28, scope: !6759)
!6759 = distinct !DILexicalBlock(scope: !6752, file: !77, line: 5333, column: 45)
!6760 = !DILocation(line: 5336, column: 34, scope: !6759)
!6761 = !DILocation(line: 5336, column: 21, scope: !6759)
!6762 = !DILocation(line: 5337, column: 2, scope: !6759)
!6763 = !DILocation(line: 5338, column: 1, scope: !6682)
!6764 = distinct !DISubprogram(name: "unpack_aux_frame", scope: !77, file: !77, line: 5346, type: !6765, isLocal: true, isDefinition: true, scopeLine: 5348, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!6765 = !DISubroutineType(types: !6766)
!6766 = !{null, !6607, !4481, !45, !17, !252}
!6767 = !DILocalVariable(name: "aux_data", arg: 1, scope: !6764, file: !77, line: 5346, type: !6607)
!6768 = !DILocation(line: 5346, column: 54, scope: !6764)
!6769 = !DILocalVariable(name: "idx", arg: 2, scope: !6764, file: !77, line: 5346, type: !4481)
!6770 = !DILocation(line: 5346, column: 74, scope: !6764)
!6771 = !DILocalVariable(name: "aux_index", arg: 3, scope: !6764, file: !77, line: 5346, type: !45)
!6772 = !DILocation(line: 5346, column: 88, scope: !6764)
!6773 = !DILocalVariable(name: "frame_info", arg: 4, scope: !6764, file: !77, line: 5346, type: !17)
!6774 = !DILocation(line: 5346, column: 107, scope: !6764)
!6775 = !DILocalVariable(name: "dev", arg: 5, scope: !6764, file: !77, line: 5347, type: !252)
!6776 = !DILocation(line: 5347, column: 30, scope: !6764)
!6777 = !DILocation(line: 5348, column: 3, scope: !6764)
!6778 = !DILocation(line: 5349, column: 10, scope: !6764)
!6779 = !DILocation(line: 5349, column: 2, scope: !6764)
!6780 = !DILocation(line: 5354, column: 8, scope: !6781)
!6781 = distinct !DILexicalBlock(scope: !6782, file: !77, line: 5354, column: 7)
!6782 = distinct !DILexicalBlock(scope: !6764, file: !77, line: 5349, column: 22)
!6783 = !DILocation(line: 5354, column: 13, scope: !6781)
!6784 = !DILocation(line: 5354, column: 44, scope: !6781)
!6785 = !DILocation(line: 5354, column: 50, scope: !6781)
!6786 = !DILocation(line: 5354, column: 39, scope: !6781)
!6787 = !DILocation(line: 5354, column: 37, scope: !6781)
!6788 = !DILocation(line: 5354, column: 7, scope: !6782)
!6789 = !DILocation(line: 5356, column: 16, scope: !6790)
!6790 = distinct !DILexicalBlock(scope: !6781, file: !77, line: 5354, column: 58)
!6791 = !DILocation(line: 5356, column: 22, scope: !6790)
!6792 = !DILocation(line: 5356, column: 9, scope: !6790)
!6793 = !DILocation(line: 5357, column: 4, scope: !6790)
!6794 = !DILocation(line: 5360, column: 29, scope: !6782)
!6795 = !DILocation(line: 5360, column: 20, scope: !6782)
!6796 = !DILocation(line: 5360, column: 42, scope: !6782)
!6797 = !DILocation(line: 5360, column: 3, scope: !6782)
!6798 = !DILocation(line: 5362, column: 10, scope: !6782)
!6799 = !DILocation(line: 5362, column: 15, scope: !6782)
!6800 = !DILocation(line: 5362, column: 8, scope: !6782)
!6801 = !DILocation(line: 5363, column: 15, scope: !6782)
!6802 = !DILocation(line: 5364, column: 3, scope: !6782)
!6803 = !DILocation(line: 5369, column: 8, scope: !6804)
!6804 = distinct !DILexicalBlock(scope: !6782, file: !77, line: 5369, column: 7)
!6805 = !DILocation(line: 5369, column: 13, scope: !6804)
!6806 = !DILocation(line: 5369, column: 45, scope: !6804)
!6807 = !DILocation(line: 5369, column: 51, scope: !6804)
!6808 = !DILocation(line: 5369, column: 40, scope: !6804)
!6809 = !DILocation(line: 5369, column: 38, scope: !6804)
!6810 = !DILocation(line: 5369, column: 7, scope: !6782)
!6811 = !DILocation(line: 5371, column: 16, scope: !6812)
!6812 = distinct !DILexicalBlock(scope: !6804, file: !77, line: 5369, column: 59)
!6813 = !DILocation(line: 5371, column: 22, scope: !6812)
!6814 = !DILocation(line: 5371, column: 9, scope: !6812)
!6815 = !DILocation(line: 5372, column: 4, scope: !6812)
!6816 = !DILocation(line: 5375, column: 29, scope: !6782)
!6817 = !DILocation(line: 5375, column: 20, scope: !6782)
!6818 = !DILocation(line: 5375, column: 42, scope: !6782)
!6819 = !DILocation(line: 5375, column: 3, scope: !6782)
!6820 = !DILocation(line: 5377, column: 10, scope: !6782)
!6821 = !DILocation(line: 5377, column: 15, scope: !6782)
!6822 = !DILocation(line: 5377, column: 8, scope: !6782)
!6823 = !DILocation(line: 5378, column: 15, scope: !6782)
!6824 = !DILocation(line: 5379, column: 3, scope: !6782)
!6825 = !DILocation(line: 5385, column: 8, scope: !6826)
!6826 = distinct !DILexicalBlock(scope: !6782, file: !77, line: 5385, column: 7)
!6827 = !DILocation(line: 5385, column: 13, scope: !6826)
!6828 = !DILocation(line: 5385, column: 45, scope: !6826)
!6829 = !DILocation(line: 5385, column: 51, scope: !6826)
!6830 = !DILocation(line: 5385, column: 40, scope: !6826)
!6831 = !DILocation(line: 5385, column: 38, scope: !6826)
!6832 = !DILocation(line: 5385, column: 7, scope: !6782)
!6833 = !DILocation(line: 5387, column: 16, scope: !6834)
!6834 = distinct !DILexicalBlock(scope: !6826, file: !77, line: 5385, column: 59)
!6835 = !DILocation(line: 5387, column: 22, scope: !6834)
!6836 = !DILocation(line: 5387, column: 9, scope: !6834)
!6837 = !DILocation(line: 5388, column: 4, scope: !6834)
!6838 = !DILocation(line: 5391, column: 29, scope: !6782)
!6839 = !DILocation(line: 5391, column: 20, scope: !6782)
!6840 = !DILocation(line: 5391, column: 42, scope: !6782)
!6841 = !DILocation(line: 5391, column: 3, scope: !6782)
!6842 = !DILocation(line: 5393, column: 13, scope: !6782)
!6843 = !DILocation(line: 5393, column: 12, scope: !6782)
!6844 = !DILocation(line: 5393, column: 19, scope: !6782)
!6845 = !DILocation(line: 5393, column: 10, scope: !6782)
!6846 = !DILocation(line: 5394, column: 15, scope: !6782)
!6847 = !DILocation(line: 5395, column: 3, scope: !6782)
!6848 = !DILocation(line: 5400, column: 8, scope: !6849)
!6849 = distinct !DILexicalBlock(scope: !6782, file: !77, line: 5400, column: 7)
!6850 = !DILocation(line: 5400, column: 13, scope: !6849)
!6851 = !DILocation(line: 5400, column: 46, scope: !6849)
!6852 = !DILocation(line: 5400, column: 52, scope: !6849)
!6853 = !DILocation(line: 5400, column: 41, scope: !6849)
!6854 = !DILocation(line: 5400, column: 39, scope: !6849)
!6855 = !DILocation(line: 5400, column: 7, scope: !6782)
!6856 = !DILocation(line: 5402, column: 16, scope: !6857)
!6857 = distinct !DILexicalBlock(scope: !6849, file: !77, line: 5400, column: 60)
!6858 = !DILocation(line: 5402, column: 22, scope: !6857)
!6859 = !DILocation(line: 5402, column: 9, scope: !6857)
!6860 = !DILocation(line: 5403, column: 4, scope: !6857)
!6861 = !DILocation(line: 5406, column: 29, scope: !6782)
!6862 = !DILocation(line: 5406, column: 20, scope: !6782)
!6863 = !DILocation(line: 5406, column: 42, scope: !6782)
!6864 = !DILocation(line: 5406, column: 3, scope: !6782)
!6865 = !DILocation(line: 5408, column: 10, scope: !6782)
!6866 = !DILocation(line: 5408, column: 15, scope: !6782)
!6867 = !DILocation(line: 5408, column: 8, scope: !6782)
!6868 = !DILocation(line: 5409, column: 15, scope: !6782)
!6869 = !DILocation(line: 5410, column: 3, scope: !6782)
!6870 = !DILocation(line: 5415, column: 13, scope: !6782)
!6871 = !DILocation(line: 5415, column: 12, scope: !6782)
!6872 = !DILocation(line: 5415, column: 19, scope: !6782)
!6873 = !DILocation(line: 5415, column: 10, scope: !6782)
!6874 = !DILocation(line: 5416, column: 3, scope: !6782)
!6875 = !DILocation(line: 5421, column: 10, scope: !6782)
!6876 = !DILocation(line: 5421, column: 15, scope: !6782)
!6877 = !DILocation(line: 5421, column: 8, scope: !6782)
!6878 = !DILocation(line: 5422, column: 3, scope: !6782)
!6879 = !DILocation(line: 5427, column: 10, scope: !6782)
!6880 = !DILocation(line: 5427, column: 15, scope: !6782)
!6881 = !DILocation(line: 5427, column: 8, scope: !6782)
!6882 = !DILocation(line: 5428, column: 3, scope: !6782)
!6883 = !DILocation(line: 5431, column: 3, scope: !6782)
!6884 = !DILocation(line: 5434, column: 1, scope: !6764)
!6885 = distinct !DISubprogram(name: "extract_aux_header_mode", scope: !77, file: !77, line: 5458, type: !6886, isLocal: true, isDefinition: true, scopeLine: 5460, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!6886 = !DISubroutineType(types: !6887)
!6887 = !{null, !6607, !45, !252}
!6888 = !DILocalVariable(name: "aux_data", arg: 1, scope: !6885, file: !77, line: 5458, type: !6607)
!6889 = !DILocation(line: 5458, column: 61, scope: !6885)
!6890 = !DILocalVariable(name: "aux_length", arg: 2, scope: !6885, file: !77, line: 5458, type: !45)
!6891 = !DILocation(line: 5458, column: 80, scope: !6885)
!6892 = !DILocalVariable(name: "dev", arg: 3, scope: !6885, file: !77, line: 5459, type: !252)
!6893 = !DILocation(line: 5459, column: 31, scope: !6885)
!6894 = !DILocalVariable(name: "frame_header", scope: !6885, file: !77, line: 5461, type: !17)
!6895 = !DILocation(line: 5461, column: 10, scope: !6885)
!6896 = !DILocation(line: 5460, column: 3, scope: !6885)
!6897 = !DILocalVariable(name: "data_index", scope: !6885, file: !77, line: 5462, type: !47)
!6898 = !DILocation(line: 5462, column: 11, scope: !6885)
!6899 = !DILocalVariable(name: "aux_index", scope: !6885, file: !77, line: 5463, type: !17)
!6900 = !DILocation(line: 5463, column: 10, scope: !6885)
!6901 = !DILocation(line: 5465, column: 25, scope: !6902)
!6902 = distinct !DILexicalBlock(scope: !6885, file: !77, line: 5465, column: 2)
!6903 = !DILocation(line: 5465, column: 31, scope: !6902)
!6904 = !DILocation(line: 5465, column: 18, scope: !6902)
!6905 = !DILocation(line: 5465, column: 7, scope: !6902)
!6906 = !DILocation(line: 5465, column: 51, scope: !6907)
!6907 = !DILexicalBlockFile(scope: !6908, file: !77, discriminator: 1)
!6908 = distinct !DILexicalBlock(scope: !6902, file: !77, line: 5465, column: 2)
!6909 = !DILocation(line: 5465, column: 69, scope: !6907)
!6910 = !DILocation(line: 5465, column: 75, scope: !6907)
!6911 = !DILocation(line: 5465, column: 64, scope: !6907)
!6912 = !DILocation(line: 5465, column: 62, scope: !6907)
!6913 = !DILocation(line: 5465, column: 2, scope: !6914)
!6914 = !DILexicalBlockFile(scope: !6902, file: !77, discriminator: 1)
!6915 = !DILocation(line: 5467, column: 24, scope: !6916)
!6916 = distinct !DILexicalBlock(scope: !6908, file: !77, line: 5465, column: 84)
!6917 = !DILocation(line: 5467, column: 30, scope: !6916)
!6918 = !DILocation(line: 5467, column: 35, scope: !6916)
!6919 = !DILocation(line: 5467, column: 19, scope: !6916)
!6920 = !DILocation(line: 5467, column: 47, scope: !6916)
!6921 = !DILocation(line: 5467, column: 18, scope: !6916)
!6922 = !DILocation(line: 5467, column: 16, scope: !6916)
!6923 = !DILocation(line: 5469, column: 13, scope: !6916)
!6924 = !DILocation(line: 5471, column: 11, scope: !6916)
!6925 = !DILocation(line: 5471, column: 3, scope: !6916)
!6926 = !DILocation(line: 5477, column: 4, scope: !6927)
!6927 = distinct !DILexicalBlock(scope: !6916, file: !77, line: 5471, column: 25)
!6928 = !DILocation(line: 5478, column: 4, scope: !6927)
!6929 = !DILocation(line: 5480, column: 4, scope: !6927)
!6930 = !DILocation(line: 5481, column: 4, scope: !6927)
!6931 = !DILocation(line: 5483, column: 4, scope: !6927)
!6932 = !DILocation(line: 5484, column: 4, scope: !6927)
!6933 = !DILocation(line: 5486, column: 4, scope: !6927)
!6934 = !DILocation(line: 5487, column: 4, scope: !6927)
!6935 = !DILocation(line: 5490, column: 4, scope: !6927)
!6936 = !DILocation(line: 5491, column: 4, scope: !6927)
!6937 = !DILocation(line: 5494, column: 4, scope: !6927)
!6938 = !DILocation(line: 5495, column: 4, scope: !6927)
!6939 = !DILocation(line: 5498, column: 4, scope: !6927)
!6940 = !DILocation(line: 5499, column: 4, scope: !6927)
!6941 = !DILocation(line: 5503, column: 22, scope: !6927)
!6942 = !DILocation(line: 5503, column: 28, scope: !6927)
!6943 = !DILocation(line: 5503, column: 15, scope: !6927)
!6944 = !DILocation(line: 5504, column: 4, scope: !6927)
!6945 = !DILocation(line: 5508, column: 22, scope: !6927)
!6946 = !DILocation(line: 5508, column: 28, scope: !6927)
!6947 = !DILocation(line: 5508, column: 15, scope: !6927)
!6948 = !DILocation(line: 5509, column: 4, scope: !6927)
!6949 = !DILocation(line: 5511, column: 7, scope: !6950)
!6950 = distinct !DILexicalBlock(scope: !6916, file: !77, line: 5511, column: 7)
!6951 = !DILocation(line: 5511, column: 22, scope: !6950)
!6952 = !DILocation(line: 5511, column: 19, scope: !6950)
!6953 = !DILocation(line: 5511, column: 7, scope: !6916)
!6954 = !DILocation(line: 5513, column: 4, scope: !6955)
!6955 = distinct !DILexicalBlock(scope: !6950, file: !77, line: 5511, column: 33)
!6956 = !DILocation(line: 5465, column: 2, scope: !6957)
!6957 = !DILexicalBlockFile(scope: !6908, file: !77, discriminator: 2)
!6958 = distinct !{!6958, !6959, !6960}
!6959 = !DILocation(line: 5465, column: 2, scope: !6902)
!6960 = !DILocation(line: 5515, column: 2, scope: !6902)
!6961 = !DILocation(line: 5518, column: 16, scope: !6885)
!6962 = !DILocation(line: 5518, column: 14, scope: !6885)
!6963 = !DILocation(line: 5520, column: 34, scope: !6885)
!6964 = !DILocation(line: 5520, column: 7, scope: !6885)
!6965 = !DILocation(line: 5520, column: 13, scope: !6885)
!6966 = !DILocation(line: 5520, column: 32, scope: !6885)
!6967 = !DILocation(line: 5521, column: 1, scope: !6885)
!6968 = distinct !DISubprogram(name: "unpack_aux_data", scope: !77, file: !77, line: 5440, type: !6969, isLocal: true, isDefinition: true, scopeLine: 5442, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!6969 = !DISubroutineType(types: !6970)
!6970 = !{null, !6607, !47, !252}
!6971 = !DILocalVariable(name: "aux_data", arg: 1, scope: !6968, file: !77, line: 5440, type: !6607)
!6972 = !DILocation(line: 5440, column: 53, scope: !6968)
!6973 = !DILocalVariable(name: "data_start_index", arg: 2, scope: !6968, file: !77, line: 5440, type: !47)
!6974 = !DILocation(line: 5440, column: 72, scope: !6968)
!6975 = !DILocalVariable(name: "dev", arg: 3, scope: !6968, file: !77, line: 5441, type: !252)
!6976 = !DILocation(line: 5441, column: 30, scope: !6968)
!6977 = !DILocation(line: 5442, column: 3, scope: !6968)
!6978 = !DILocation(line: 5444, column: 27, scope: !6968)
!6979 = !DILocation(line: 5444, column: 33, scope: !6968)
!6980 = !DILocation(line: 5444, column: 54, scope: !6968)
!6981 = !DILocation(line: 5444, column: 22, scope: !6968)
!6982 = !DILocation(line: 5444, column: 12, scope: !6968)
!6983 = !DILocation(line: 5444, column: 2, scope: !6968)
!6984 = !DILocation(line: 5444, column: 20, scope: !6968)
!6985 = !DILocation(line: 5445, column: 27, scope: !6968)
!6986 = !DILocation(line: 5445, column: 33, scope: !6968)
!6987 = !DILocation(line: 5445, column: 54, scope: !6968)
!6988 = !DILocation(line: 5445, column: 22, scope: !6968)
!6989 = !DILocation(line: 5445, column: 12, scope: !6968)
!6990 = !DILocation(line: 5445, column: 2, scope: !6968)
!6991 = !DILocation(line: 5445, column: 20, scope: !6968)
!6992 = !DILocation(line: 5446, column: 27, scope: !6968)
!6993 = !DILocation(line: 5446, column: 33, scope: !6968)
!6994 = !DILocation(line: 5446, column: 54, scope: !6968)
!6995 = !DILocation(line: 5446, column: 22, scope: !6968)
!6996 = !DILocation(line: 5446, column: 12, scope: !6968)
!6997 = !DILocation(line: 5446, column: 2, scope: !6968)
!6998 = !DILocation(line: 5446, column: 20, scope: !6968)
!6999 = !DILocation(line: 5447, column: 27, scope: !6968)
!7000 = !DILocation(line: 5447, column: 33, scope: !6968)
!7001 = !DILocation(line: 5447, column: 54, scope: !6968)
!7002 = !DILocation(line: 5447, column: 22, scope: !6968)
!7003 = !DILocation(line: 5447, column: 12, scope: !6968)
!7004 = !DILocation(line: 5447, column: 2, scope: !6968)
!7005 = !DILocation(line: 5447, column: 20, scope: !6968)
!7006 = !DILocation(line: 5448, column: 27, scope: !6968)
!7007 = !DILocation(line: 5448, column: 33, scope: !6968)
!7008 = !DILocation(line: 5448, column: 54, scope: !6968)
!7009 = !DILocation(line: 5448, column: 22, scope: !6968)
!7010 = !DILocation(line: 5448, column: 12, scope: !6968)
!7011 = !DILocation(line: 5448, column: 2, scope: !6968)
!7012 = !DILocation(line: 5448, column: 20, scope: !6968)
!7013 = !DILocation(line: 5449, column: 27, scope: !6968)
!7014 = !DILocation(line: 5449, column: 33, scope: !6968)
!7015 = !DILocation(line: 5449, column: 54, scope: !6968)
!7016 = !DILocation(line: 5449, column: 22, scope: !6968)
!7017 = !DILocation(line: 5449, column: 12, scope: !6968)
!7018 = !DILocation(line: 5449, column: 2, scope: !6968)
!7019 = !DILocation(line: 5449, column: 20, scope: !6968)
!7020 = !DILocation(line: 5450, column: 27, scope: !6968)
!7021 = !DILocation(line: 5450, column: 33, scope: !6968)
!7022 = !DILocation(line: 5450, column: 54, scope: !6968)
!7023 = !DILocation(line: 5450, column: 22, scope: !6968)
!7024 = !DILocation(line: 5450, column: 12, scope: !6968)
!7025 = !DILocation(line: 5450, column: 2, scope: !6968)
!7026 = !DILocation(line: 5450, column: 20, scope: !6968)
!7027 = !DILocation(line: 5451, column: 27, scope: !6968)
!7028 = !DILocation(line: 5451, column: 33, scope: !6968)
!7029 = !DILocation(line: 5451, column: 54, scope: !6968)
!7030 = !DILocation(line: 5451, column: 22, scope: !6968)
!7031 = !DILocation(line: 5451, column: 12, scope: !6968)
!7032 = !DILocation(line: 5451, column: 2, scope: !6968)
!7033 = !DILocation(line: 5451, column: 20, scope: !6968)
!7034 = !DILocation(line: 5452, column: 1, scope: !6968)
!7035 = distinct !DISubprogram(name: "bmi160_start_foc", scope: !77, file: !77, line: 2239, type: !7036, isLocal: false, isDefinition: true, scopeLine: 2241, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!7036 = !DISubroutineType(types: !7037)
!7037 = !{!62, !7038, !7048, !252}
!7038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7039, size: 64)
!7039 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7040)
!7040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bmi160_foc_conf", file: !6, line: 824, size: 48, elements: !7041)
!7041 = !{!7042, !7043, !7044, !7045, !7046, !7047}
!7042 = !DIDerivedType(tag: DW_TAG_member, name: "foc_gyr_en", scope: !7040, file: !6, line: 830, baseType: !17, size: 8)
!7043 = !DIDerivedType(tag: DW_TAG_member, name: "foc_acc_x", scope: !7040, file: !6, line: 839, baseType: !17, size: 8, offset: 8)
!7044 = !DIDerivedType(tag: DW_TAG_member, name: "foc_acc_y", scope: !7040, file: !6, line: 840, baseType: !17, size: 8, offset: 16)
!7045 = !DIDerivedType(tag: DW_TAG_member, name: "foc_acc_z", scope: !7040, file: !6, line: 841, baseType: !17, size: 8, offset: 24)
!7046 = !DIDerivedType(tag: DW_TAG_member, name: "acc_off_en", scope: !7040, file: !6, line: 848, baseType: !17, size: 8, offset: 32)
!7047 = !DIDerivedType(tag: DW_TAG_member, name: "gyro_off_en", scope: !7040, file: !6, line: 855, baseType: !17, size: 8, offset: 40)
!7048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7049, size: 64)
!7049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bmi160_offsets", file: !6, line: 861, size: 80, elements: !7050)
!7050 = !{!7051, !7052, !7053, !7054, !7055, !7056}
!7051 = !DIDerivedType(tag: DW_TAG_member, name: "off_acc_x", scope: !7049, file: !6, line: 863, baseType: !62, size: 8)
!7052 = !DIDerivedType(tag: DW_TAG_member, name: "off_acc_y", scope: !7049, file: !6, line: 865, baseType: !62, size: 8, offset: 8)
!7053 = !DIDerivedType(tag: DW_TAG_member, name: "off_acc_z", scope: !7049, file: !6, line: 867, baseType: !62, size: 8, offset: 16)
!7054 = !DIDerivedType(tag: DW_TAG_member, name: "off_gyro_x", scope: !7049, file: !6, line: 869, baseType: !121, size: 16, offset: 32)
!7055 = !DIDerivedType(tag: DW_TAG_member, name: "off_gyro_y", scope: !7049, file: !6, line: 871, baseType: !121, size: 16, offset: 48)
!7056 = !DIDerivedType(tag: DW_TAG_member, name: "off_gyro_z", scope: !7049, file: !6, line: 873, baseType: !121, size: 16, offset: 64)
!7057 = !DILocalVariable(name: "foc_conf", arg: 1, scope: !7035, file: !77, line: 2239, type: !7038)
!7058 = !DILocation(line: 2239, column: 55, scope: !7035)
!7059 = !DILocalVariable(name: "offset", arg: 2, scope: !7035, file: !77, line: 2239, type: !7048)
!7060 = !DILocation(line: 2239, column: 88, scope: !7035)
!7061 = !DILocalVariable(name: "dev", arg: 3, scope: !7035, file: !77, line: 2240, type: !252)
!7062 = !DILocation(line: 2240, column: 30, scope: !7035)
!7063 = !DILocalVariable(name: "rslt", scope: !7035, file: !77, line: 2242, type: !62)
!7064 = !DILocation(line: 2242, column: 9, scope: !7035)
!7065 = !DILocation(line: 2241, column: 3, scope: !7035)
!7066 = !DILocalVariable(name: "data", scope: !7035, file: !77, line: 2243, type: !17)
!7067 = !DILocation(line: 2243, column: 10, scope: !7035)
!7068 = !DILocation(line: 2246, column: 9, scope: !7035)
!7069 = !DILocation(line: 2246, column: 7, scope: !7035)
!7070 = !DILocation(line: 2248, column: 6, scope: !7071)
!7071 = distinct !DILexicalBlock(scope: !7035, file: !77, line: 2248, column: 6)
!7072 = !DILocation(line: 2248, column: 11, scope: !7071)
!7073 = !DILocation(line: 2248, column: 6, scope: !7035)
!7074 = !DILocation(line: 2249, column: 8, scope: !7075)
!7075 = distinct !DILexicalBlock(scope: !7071, file: !77, line: 2248, column: 25)
!7076 = !DILocation(line: 2250, column: 2, scope: !7075)
!7077 = !DILocation(line: 2252, column: 10, scope: !7078)
!7078 = distinct !DILexicalBlock(scope: !7071, file: !77, line: 2250, column: 9)
!7079 = !DILocation(line: 2252, column: 8, scope: !7078)
!7080 = !DILocation(line: 2253, column: 7, scope: !7081)
!7081 = distinct !DILexicalBlock(scope: !7078, file: !77, line: 2253, column: 7)
!7082 = !DILocation(line: 2253, column: 12, scope: !7081)
!7083 = !DILocation(line: 2253, column: 7, scope: !7078)
!7084 = !DILocation(line: 2255, column: 11, scope: !7085)
!7085 = distinct !DILexicalBlock(scope: !7081, file: !77, line: 2253, column: 26)
!7086 = !DILocation(line: 2255, column: 9, scope: !7085)
!7087 = !DILocation(line: 2258, column: 11, scope: !7085)
!7088 = !DILocation(line: 2258, column: 9, scope: !7085)
!7089 = !DILocation(line: 2261, column: 11, scope: !7085)
!7090 = !DILocation(line: 2261, column: 9, scope: !7085)
!7091 = !DILocation(line: 2262, column: 11, scope: !7085)
!7092 = !DILocation(line: 2262, column: 9, scope: !7085)
!7093 = !DILocation(line: 2263, column: 11, scope: !7085)
!7094 = !DILocation(line: 2263, column: 9, scope: !7085)
!7095 = !DILocation(line: 2265, column: 8, scope: !7096)
!7096 = distinct !DILexicalBlock(scope: !7085, file: !77, line: 2265, column: 8)
!7097 = !DILocation(line: 2265, column: 13, scope: !7096)
!7098 = !DILocation(line: 2265, column: 8, scope: !7085)
!7099 = !DILocation(line: 2267, column: 12, scope: !7100)
!7100 = distinct !DILexicalBlock(scope: !7096, file: !77, line: 2265, column: 27)
!7101 = !DILocation(line: 2267, column: 10, scope: !7100)
!7102 = !DILocation(line: 2268, column: 9, scope: !7103)
!7103 = distinct !DILexicalBlock(scope: !7100, file: !77, line: 2268, column: 9)
!7104 = !DILocation(line: 2268, column: 14, scope: !7103)
!7105 = !DILocation(line: 2268, column: 9, scope: !7100)
!7106 = !DILocation(line: 2271, column: 13, scope: !7107)
!7107 = distinct !DILexicalBlock(scope: !7103, file: !77, line: 2268, column: 28)
!7108 = !DILocation(line: 2271, column: 11, scope: !7107)
!7109 = !DILocation(line: 2272, column: 5, scope: !7107)
!7110 = !DILocation(line: 2273, column: 4, scope: !7100)
!7111 = !DILocation(line: 2274, column: 3, scope: !7085)
!7112 = !DILocation(line: 2277, column: 2, scope: !7035)
!7113 = distinct !DISubprogram(name: "configure_offset_enable", scope: !77, file: !77, line: 5617, type: !7114, isLocal: true, isDefinition: true, scopeLine: 5618, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!7114 = !DISubroutineType(types: !7115)
!7115 = !{!62, !7038, !252}
!7116 = !DILocalVariable(name: "foc_conf", arg: 1, scope: !7113, file: !77, line: 5617, type: !7038)
!7117 = !DILocation(line: 5617, column: 69, scope: !7113)
!7118 = !DILocalVariable(name: "dev", arg: 2, scope: !7113, file: !77, line: 5617, type: !252)
!7119 = !DILocation(line: 5617, column: 104, scope: !7113)
!7120 = !DILocalVariable(name: "rslt", scope: !7113, file: !77, line: 5619, type: !62)
!7121 = !DILocation(line: 5619, column: 9, scope: !7113)
!7122 = !DILocation(line: 5618, column: 3, scope: !7113)
!7123 = !DILocalVariable(name: "data", scope: !7113, file: !77, line: 5620, type: !17)
!7124 = !DILocation(line: 5620, column: 10, scope: !7113)
!7125 = !DILocation(line: 5623, column: 9, scope: !7113)
!7126 = !DILocation(line: 5623, column: 7, scope: !7113)
!7127 = !DILocation(line: 5625, column: 6, scope: !7128)
!7128 = distinct !DILexicalBlock(scope: !7113, file: !77, line: 5625, column: 6)
!7129 = !DILocation(line: 5625, column: 11, scope: !7128)
!7130 = !DILocation(line: 5625, column: 6, scope: !7113)
!7131 = !DILocation(line: 5626, column: 8, scope: !7132)
!7132 = distinct !DILexicalBlock(scope: !7128, file: !77, line: 5625, column: 25)
!7133 = !DILocation(line: 5627, column: 2, scope: !7132)
!7134 = !DILocation(line: 5629, column: 10, scope: !7135)
!7135 = distinct !DILexicalBlock(scope: !7128, file: !77, line: 5627, column: 9)
!7136 = !DILocation(line: 5629, column: 8, scope: !7135)
!7137 = !DILocation(line: 5631, column: 7, scope: !7138)
!7138 = distinct !DILexicalBlock(scope: !7135, file: !77, line: 5631, column: 7)
!7139 = !DILocation(line: 5631, column: 12, scope: !7138)
!7140 = !DILocation(line: 5631, column: 7, scope: !7135)
!7141 = !DILocation(line: 5633, column: 11, scope: !7142)
!7142 = distinct !DILexicalBlock(scope: !7138, file: !77, line: 5631, column: 26)
!7143 = !DILocation(line: 5633, column: 9, scope: !7142)
!7144 = !DILocation(line: 5636, column: 11, scope: !7142)
!7145 = !DILocation(line: 5636, column: 9, scope: !7142)
!7146 = !DILocation(line: 5639, column: 11, scope: !7142)
!7147 = !DILocation(line: 5639, column: 9, scope: !7142)
!7148 = !DILocation(line: 5640, column: 3, scope: !7142)
!7149 = !DILocation(line: 5643, column: 2, scope: !7113)
!7150 = distinct !DISubprogram(name: "trigger_foc", scope: !77, file: !77, line: 5646, type: !7151, isLocal: true, isDefinition: true, scopeLine: 5647, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!7151 = !DISubroutineType(types: !7152)
!7152 = !{!62, !7048, !252}
!7153 = !DILocalVariable(name: "offset", arg: 1, scope: !7150, file: !77, line: 5646, type: !7048)
!7154 = !DILocation(line: 5646, column: 50, scope: !7150)
!7155 = !DILocalVariable(name: "dev", arg: 2, scope: !7150, file: !77, line: 5646, type: !252)
!7156 = !DILocation(line: 5646, column: 83, scope: !7150)
!7157 = !DILocalVariable(name: "rslt", scope: !7150, file: !77, line: 5648, type: !62)
!7158 = !DILocation(line: 5648, column: 9, scope: !7150)
!7159 = !DILocalVariable(name: "timeout", scope: !7150, file: !77, line: 5651, type: !17)
!7160 = !DILocation(line: 5651, column: 10, scope: !7150)
!7161 = !DILocation(line: 5647, column: 3, scope: !7150)
!7162 = !DILocalVariable(name: "foc_status", scope: !7150, file: !77, line: 5649, type: !17)
!7163 = !DILocation(line: 5649, column: 10, scope: !7150)
!7164 = !DILocalVariable(name: "cmd", scope: !7150, file: !77, line: 5650, type: !17)
!7165 = !DILocation(line: 5650, column: 10, scope: !7150)
!7166 = !DILocalVariable(name: "data_array", scope: !7150, file: !77, line: 5652, type: !7167)
!7167 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 160, elements: !7168)
!7168 = !{!7169}
!7169 = !DISubrange(count: 20)
!7170 = !DILocation(line: 5652, column: 10, scope: !7150)
!7171 = !DILocation(line: 5655, column: 9, scope: !7150)
!7172 = !DILocation(line: 5655, column: 7, scope: !7150)
!7173 = !DILocation(line: 5656, column: 6, scope: !7174)
!7174 = distinct !DILexicalBlock(scope: !7150, file: !77, line: 5656, column: 6)
!7175 = !DILocation(line: 5656, column: 11, scope: !7174)
!7176 = !DILocation(line: 5656, column: 6, scope: !7150)
!7177 = !DILocation(line: 5658, column: 10, scope: !7178)
!7178 = distinct !DILexicalBlock(scope: !7174, file: !77, line: 5656, column: 25)
!7179 = !DILocation(line: 5658, column: 8, scope: !7178)
!7180 = !DILocation(line: 5659, column: 8, scope: !7181)
!7181 = distinct !DILexicalBlock(scope: !7178, file: !77, line: 5659, column: 7)
!7182 = !DILocation(line: 5659, column: 13, scope: !7181)
!7183 = !DILocation(line: 5659, column: 27, scope: !7181)
!7184 = !DILocation(line: 5659, column: 31, scope: !7185)
!7185 = !DILexicalBlockFile(scope: !7181, file: !77, discriminator: 1)
!7186 = !DILocation(line: 5659, column: 42, scope: !7185)
!7187 = !DILocation(line: 5659, column: 7, scope: !7188)
!7188 = !DILexicalBlockFile(scope: !7178, file: !77, discriminator: 1)
!7189 = !DILocation(line: 5660, column: 4, scope: !7190)
!7190 = distinct !DILexicalBlock(scope: !7181, file: !77, line: 5659, column: 61)
!7191 = !DILocation(line: 5660, column: 12, scope: !7192)
!7192 = !DILexicalBlockFile(scope: !7190, file: !77, discriminator: 1)
!7193 = !DILocation(line: 5660, column: 23, scope: !7192)
!7194 = !DILocation(line: 5660, column: 41, scope: !7192)
!7195 = !DILocation(line: 5660, column: 45, scope: !7196)
!7196 = !DILexicalBlockFile(scope: !7190, file: !77, discriminator: 2)
!7197 = !DILocation(line: 5660, column: 53, scope: !7196)
!7198 = !DILocation(line: 5660, column: 4, scope: !7199)
!7199 = !DILexicalBlockFile(scope: !7190, file: !77, discriminator: 3)
!7200 = !DILocation(line: 5663, column: 10, scope: !7201)
!7201 = distinct !DILexicalBlock(scope: !7190, file: !77, line: 5660, column: 60)
!7202 = !DILocation(line: 5663, column: 5, scope: !7201)
!7203 = !DILocation(line: 5665, column: 12, scope: !7201)
!7204 = !DILocation(line: 5665, column: 10, scope: !7201)
!7205 = !DILocation(line: 5666, column: 12, scope: !7201)
!7206 = !DILocation(line: 5660, column: 4, scope: !7207)
!7207 = !DILexicalBlockFile(scope: !7190, file: !77, discriminator: 4)
!7208 = distinct !{!7208, !7189, !7209}
!7209 = !DILocation(line: 5667, column: 4, scope: !7190)
!7210 = !DILocation(line: 5669, column: 9, scope: !7211)
!7211 = distinct !DILexicalBlock(scope: !7190, file: !77, line: 5669, column: 8)
!7212 = !DILocation(line: 5669, column: 14, scope: !7211)
!7213 = !DILocation(line: 5669, column: 28, scope: !7211)
!7214 = !DILocation(line: 5669, column: 32, scope: !7215)
!7215 = !DILexicalBlockFile(scope: !7211, file: !77, discriminator: 1)
!7216 = !DILocation(line: 5669, column: 43, scope: !7215)
!7217 = !DILocation(line: 5669, column: 8, scope: !7192)
!7218 = !DILocation(line: 5671, column: 12, scope: !7219)
!7219 = distinct !DILexicalBlock(scope: !7211, file: !77, line: 5669, column: 62)
!7220 = !DILocation(line: 5671, column: 10, scope: !7219)
!7221 = !DILocation(line: 5672, column: 4, scope: !7219)
!7222 = !DILocation(line: 5674, column: 10, scope: !7223)
!7223 = distinct !DILexicalBlock(scope: !7211, file: !77, line: 5672, column: 11)
!7224 = !DILocation(line: 5676, column: 3, scope: !7190)
!7225 = !DILocation(line: 5678, column: 7, scope: !7226)
!7226 = distinct !DILexicalBlock(scope: !7178, file: !77, line: 5678, column: 7)
!7227 = !DILocation(line: 5678, column: 12, scope: !7226)
!7228 = !DILocation(line: 5678, column: 7, scope: !7178)
!7229 = !DILocation(line: 5681, column: 5, scope: !7230)
!7230 = distinct !DILexicalBlock(scope: !7226, file: !77, line: 5678, column: 26)
!7231 = !DILocation(line: 5680, column: 11, scope: !7230)
!7232 = !DILocation(line: 5680, column: 9, scope: !7230)
!7233 = !DILocation(line: 5682, column: 3, scope: !7230)
!7234 = !DILocation(line: 5683, column: 2, scope: !7178)
!7235 = !DILocation(line: 5686, column: 2, scope: !7150)
!7236 = distinct !DISubprogram(name: "get_foc_status", scope: !77, file: !77, line: 5599, type: !880, isLocal: true, isDefinition: true, scopeLine: 5600, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!7237 = !DILocalVariable(name: "foc_status", arg: 1, scope: !7236, file: !77, line: 5599, type: !45)
!7238 = !DILocation(line: 5599, column: 39, scope: !7236)
!7239 = !DILocalVariable(name: "dev", arg: 2, scope: !7236, file: !77, line: 5599, type: !252)
!7240 = !DILocation(line: 5599, column: 76, scope: !7236)
!7241 = !DILocalVariable(name: "rslt", scope: !7236, file: !77, line: 5601, type: !62)
!7242 = !DILocation(line: 5601, column: 9, scope: !7236)
!7243 = !DILocation(line: 5600, column: 3, scope: !7236)
!7244 = !DILocalVariable(name: "data", scope: !7236, file: !77, line: 5602, type: !17)
!7245 = !DILocation(line: 5602, column: 10, scope: !7236)
!7246 = !DILocation(line: 5605, column: 9, scope: !7236)
!7247 = !DILocation(line: 5605, column: 7, scope: !7236)
!7248 = !DILocation(line: 5606, column: 6, scope: !7249)
!7249 = distinct !DILexicalBlock(scope: !7236, file: !77, line: 5606, column: 6)
!7250 = !DILocation(line: 5606, column: 11, scope: !7249)
!7251 = !DILocation(line: 5606, column: 6, scope: !7236)
!7252 = !DILocation(line: 5608, column: 17, scope: !7253)
!7253 = distinct !DILexicalBlock(scope: !7249, file: !77, line: 5606, column: 25)
!7254 = !DILocation(line: 5608, column: 15, scope: !7253)
!7255 = !DILocation(line: 5609, column: 2, scope: !7253)
!7256 = !DILocation(line: 5611, column: 2, scope: !7236)
!7257 = distinct !DISubprogram(name: "bmi160_get_offsets", scope: !77, file: !77, line: 2283, type: !7151, isLocal: false, isDefinition: true, scopeLine: 2284, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!7258 = !DILocalVariable(name: "offset", arg: 1, scope: !7257, file: !77, line: 2283, type: !7048)
!7259 = !DILocation(line: 2283, column: 50, scope: !7257)
!7260 = !DILocalVariable(name: "dev", arg: 2, scope: !7257, file: !77, line: 2283, type: !252)
!7261 = !DILocation(line: 2283, column: 83, scope: !7257)
!7262 = !DILocalVariable(name: "rslt", scope: !7257, file: !77, line: 2285, type: !62)
!7263 = !DILocation(line: 2285, column: 9, scope: !7257)
!7264 = !DILocalVariable(name: "lsb", scope: !7257, file: !77, line: 2287, type: !17)
!7265 = !DILocation(line: 2287, column: 10, scope: !7257)
!7266 = !DILocalVariable(name: "msb", scope: !7257, file: !77, line: 2287, type: !17)
!7267 = !DILocation(line: 2287, column: 15, scope: !7257)
!7268 = !DILocalVariable(name: "offset_msb", scope: !7257, file: !77, line: 2288, type: !121)
!7269 = !DILocation(line: 2288, column: 10, scope: !7257)
!7270 = !DILocalVariable(name: "offset_lsb", scope: !7257, file: !77, line: 2288, type: !121)
!7271 = !DILocation(line: 2288, column: 22, scope: !7257)
!7272 = !DILocalVariable(name: "offset_data", scope: !7257, file: !77, line: 2289, type: !121)
!7273 = !DILocation(line: 2289, column: 10, scope: !7257)
!7274 = !DILocation(line: 2284, column: 3, scope: !7257)
!7275 = !DILocalVariable(name: "data", scope: !7257, file: !77, line: 2286, type: !7276)
!7276 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 56, elements: !7277)
!7277 = !{!7278}
!7278 = !DISubrange(count: 7)
!7279 = !DILocation(line: 2286, column: 10, scope: !7257)
!7280 = !DILocation(line: 2293, column: 9, scope: !7257)
!7281 = !DILocation(line: 2293, column: 7, scope: !7257)
!7282 = !DILocation(line: 2295, column: 6, scope: !7283)
!7283 = distinct !DILexicalBlock(scope: !7257, file: !77, line: 2295, column: 6)
!7284 = !DILocation(line: 2295, column: 11, scope: !7283)
!7285 = !DILocation(line: 2295, column: 6, scope: !7257)
!7286 = !DILocation(line: 2296, column: 8, scope: !7287)
!7287 = distinct !DILexicalBlock(scope: !7283, file: !77, line: 2295, column: 25)
!7288 = !DILocation(line: 2297, column: 2, scope: !7287)
!7289 = !DILocation(line: 2299, column: 46, scope: !7290)
!7290 = distinct !DILexicalBlock(scope: !7283, file: !77, line: 2297, column: 9)
!7291 = !DILocation(line: 2299, column: 10, scope: !7290)
!7292 = !DILocation(line: 2299, column: 8, scope: !7290)
!7293 = !DILocation(line: 2302, column: 31, scope: !7290)
!7294 = !DILocation(line: 2302, column: 11, scope: !7290)
!7295 = !DILocation(line: 2302, column: 21, scope: !7290)
!7296 = !DILocation(line: 2303, column: 31, scope: !7290)
!7297 = !DILocation(line: 2303, column: 11, scope: !7290)
!7298 = !DILocation(line: 2303, column: 21, scope: !7290)
!7299 = !DILocation(line: 2304, column: 31, scope: !7290)
!7300 = !DILocation(line: 2304, column: 11, scope: !7290)
!7301 = !DILocation(line: 2304, column: 21, scope: !7290)
!7302 = !DILocation(line: 2307, column: 9, scope: !7290)
!7303 = !DILocation(line: 2307, column: 7, scope: !7290)
!7304 = !DILocation(line: 2308, column: 9, scope: !7290)
!7305 = !DILocation(line: 2308, column: 7, scope: !7290)
!7306 = !DILocation(line: 2309, column: 26, scope: !7290)
!7307 = !DILocation(line: 2309, column: 30, scope: !7290)
!7308 = !DILocation(line: 2309, column: 16, scope: !7290)
!7309 = !DILocation(line: 2309, column: 14, scope: !7290)
!7310 = !DILocation(line: 2310, column: 16, scope: !7290)
!7311 = !DILocation(line: 2310, column: 20, scope: !7290)
!7312 = !DILocation(line: 2310, column: 14, scope: !7290)
!7313 = !DILocation(line: 2311, column: 17, scope: !7290)
!7314 = !DILocation(line: 2311, column: 30, scope: !7290)
!7315 = !DILocation(line: 2311, column: 28, scope: !7290)
!7316 = !DILocation(line: 2311, column: 15, scope: !7290)
!7317 = !DILocation(line: 2313, column: 34, scope: !7290)
!7318 = !DILocation(line: 2313, column: 46, scope: !7290)
!7319 = !DILocation(line: 2313, column: 24, scope: !7290)
!7320 = !DILocation(line: 2313, column: 11, scope: !7290)
!7321 = !DILocation(line: 2313, column: 22, scope: !7290)
!7322 = !DILocation(line: 2316, column: 9, scope: !7290)
!7323 = !DILocation(line: 2316, column: 7, scope: !7290)
!7324 = !DILocation(line: 2317, column: 9, scope: !7290)
!7325 = !DILocation(line: 2317, column: 7, scope: !7290)
!7326 = !DILocation(line: 2318, column: 26, scope: !7290)
!7327 = !DILocation(line: 2318, column: 30, scope: !7290)
!7328 = !DILocation(line: 2318, column: 16, scope: !7290)
!7329 = !DILocation(line: 2318, column: 14, scope: !7290)
!7330 = !DILocation(line: 2319, column: 16, scope: !7290)
!7331 = !DILocation(line: 2319, column: 20, scope: !7290)
!7332 = !DILocation(line: 2319, column: 14, scope: !7290)
!7333 = !DILocation(line: 2320, column: 17, scope: !7290)
!7334 = !DILocation(line: 2320, column: 30, scope: !7290)
!7335 = !DILocation(line: 2320, column: 28, scope: !7290)
!7336 = !DILocation(line: 2320, column: 15, scope: !7290)
!7337 = !DILocation(line: 2322, column: 34, scope: !7290)
!7338 = !DILocation(line: 2322, column: 46, scope: !7290)
!7339 = !DILocation(line: 2322, column: 24, scope: !7290)
!7340 = !DILocation(line: 2322, column: 11, scope: !7290)
!7341 = !DILocation(line: 2322, column: 22, scope: !7290)
!7342 = !DILocation(line: 2325, column: 9, scope: !7290)
!7343 = !DILocation(line: 2325, column: 7, scope: !7290)
!7344 = !DILocation(line: 2326, column: 9, scope: !7290)
!7345 = !DILocation(line: 2326, column: 7, scope: !7290)
!7346 = !DILocation(line: 2327, column: 26, scope: !7290)
!7347 = !DILocation(line: 2327, column: 30, scope: !7290)
!7348 = !DILocation(line: 2327, column: 16, scope: !7290)
!7349 = !DILocation(line: 2327, column: 14, scope: !7290)
!7350 = !DILocation(line: 2328, column: 16, scope: !7290)
!7351 = !DILocation(line: 2328, column: 20, scope: !7290)
!7352 = !DILocation(line: 2328, column: 14, scope: !7290)
!7353 = !DILocation(line: 2329, column: 17, scope: !7290)
!7354 = !DILocation(line: 2329, column: 30, scope: !7290)
!7355 = !DILocation(line: 2329, column: 28, scope: !7290)
!7356 = !DILocation(line: 2329, column: 15, scope: !7290)
!7357 = !DILocation(line: 2331, column: 34, scope: !7290)
!7358 = !DILocation(line: 2331, column: 46, scope: !7290)
!7359 = !DILocation(line: 2331, column: 24, scope: !7290)
!7360 = !DILocation(line: 2331, column: 11, scope: !7290)
!7361 = !DILocation(line: 2331, column: 22, scope: !7290)
!7362 = !DILocation(line: 2334, column: 2, scope: !7257)
!7363 = distinct !DISubprogram(name: "bmi160_set_offsets", scope: !77, file: !77, line: 2341, type: !7364, isLocal: false, isDefinition: true, scopeLine: 2343, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!7364 = !DISubroutineType(types: !7365)
!7365 = !{!62, !7038, !7366, !252}
!7366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7367, size: 64)
!7367 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7049)
!7368 = !DILocalVariable(name: "foc_conf", arg: 1, scope: !7363, file: !77, line: 2341, type: !7038)
!7369 = !DILocation(line: 2341, column: 57, scope: !7363)
!7370 = !DILocalVariable(name: "offset", arg: 2, scope: !7363, file: !77, line: 2341, type: !7366)
!7371 = !DILocation(line: 2341, column: 96, scope: !7363)
!7372 = !DILocalVariable(name: "dev", arg: 3, scope: !7363, file: !77, line: 2342, type: !252)
!7373 = !DILocation(line: 2342, column: 30, scope: !7363)
!7374 = !DILocalVariable(name: "rslt", scope: !7363, file: !77, line: 2344, type: !62)
!7375 = !DILocation(line: 2344, column: 9, scope: !7363)
!7376 = !DILocalVariable(name: "x_msb", scope: !7363, file: !77, line: 2346, type: !17)
!7377 = !DILocation(line: 2346, column: 10, scope: !7363)
!7378 = !DILocalVariable(name: "y_msb", scope: !7363, file: !77, line: 2346, type: !17)
!7379 = !DILocation(line: 2346, column: 17, scope: !7363)
!7380 = !DILocalVariable(name: "z_msb", scope: !7363, file: !77, line: 2346, type: !17)
!7381 = !DILocation(line: 2346, column: 24, scope: !7363)
!7382 = !DILocation(line: 2343, column: 3, scope: !7363)
!7383 = !DILocalVariable(name: "data", scope: !7363, file: !77, line: 2345, type: !7276)
!7384 = !DILocation(line: 2345, column: 10, scope: !7363)
!7385 = !DILocation(line: 2350, column: 9, scope: !7363)
!7386 = !DILocation(line: 2350, column: 7, scope: !7363)
!7387 = !DILocation(line: 2352, column: 6, scope: !7388)
!7388 = distinct !DILexicalBlock(scope: !7363, file: !77, line: 2352, column: 6)
!7389 = !DILocation(line: 2352, column: 11, scope: !7388)
!7390 = !DILocation(line: 2352, column: 6, scope: !7363)
!7391 = !DILocation(line: 2353, column: 8, scope: !7392)
!7392 = distinct !DILexicalBlock(scope: !7388, file: !77, line: 2352, column: 25)
!7393 = !DILocation(line: 2354, column: 2, scope: !7392)
!7394 = !DILocation(line: 2356, column: 30, scope: !7395)
!7395 = distinct !DILexicalBlock(scope: !7388, file: !77, line: 2354, column: 9)
!7396 = !DILocation(line: 2356, column: 3, scope: !7395)
!7397 = !DILocation(line: 2356, column: 11, scope: !7395)
!7398 = !DILocation(line: 2357, column: 30, scope: !7395)
!7399 = !DILocation(line: 2357, column: 3, scope: !7395)
!7400 = !DILocation(line: 2357, column: 11, scope: !7395)
!7401 = !DILocation(line: 2358, column: 30, scope: !7395)
!7402 = !DILocation(line: 2358, column: 3, scope: !7395)
!7403 = !DILocation(line: 2358, column: 11, scope: !7395)
!7404 = !DILocation(line: 2361, column: 13, scope: !7395)
!7405 = !DILocation(line: 2361, column: 3, scope: !7395)
!7406 = !DILocation(line: 2361, column: 11, scope: !7395)
!7407 = !DILocation(line: 2362, column: 13, scope: !7395)
!7408 = !DILocation(line: 2362, column: 3, scope: !7395)
!7409 = !DILocation(line: 2362, column: 11, scope: !7395)
!7410 = !DILocation(line: 2363, column: 13, scope: !7395)
!7411 = !DILocation(line: 2363, column: 3, scope: !7395)
!7412 = !DILocation(line: 2363, column: 11, scope: !7395)
!7413 = !DILocation(line: 2366, column: 11, scope: !7395)
!7414 = !DILocation(line: 2366, column: 9, scope: !7395)
!7415 = !DILocation(line: 2367, column: 11, scope: !7395)
!7416 = !DILocation(line: 2367, column: 9, scope: !7395)
!7417 = !DILocation(line: 2368, column: 11, scope: !7395)
!7418 = !DILocation(line: 2368, column: 9, scope: !7395)
!7419 = !DILocation(line: 2369, column: 23, scope: !7395)
!7420 = !DILocation(line: 2369, column: 29, scope: !7395)
!7421 = !DILocation(line: 2369, column: 36, scope: !7395)
!7422 = !DILocation(line: 2369, column: 42, scope: !7395)
!7423 = !DILocation(line: 2369, column: 34, scope: !7395)
!7424 = !DILocation(line: 2369, column: 49, scope: !7395)
!7425 = !DILocation(line: 2369, column: 47, scope: !7395)
!7426 = !DILocation(line: 2369, column: 13, scope: !7395)
!7427 = !DILocation(line: 2369, column: 3, scope: !7395)
!7428 = !DILocation(line: 2369, column: 11, scope: !7395)
!7429 = !DILocation(line: 2372, column: 13, scope: !7395)
!7430 = !DILocation(line: 2372, column: 3, scope: !7395)
!7431 = !DILocation(line: 2372, column: 11, scope: !7395)
!7432 = !DILocation(line: 2373, column: 13, scope: !7395)
!7433 = !DILocation(line: 2373, column: 3, scope: !7395)
!7434 = !DILocation(line: 2373, column: 11, scope: !7395)
!7435 = !DILocation(line: 2376, column: 46, scope: !7395)
!7436 = !DILocation(line: 2376, column: 10, scope: !7395)
!7437 = !DILocation(line: 2376, column: 8, scope: !7395)
!7438 = !DILocation(line: 2379, column: 2, scope: !7363)
!7439 = distinct !DISubprogram(name: "bmi160_update_nvm", scope: !77, file: !77, line: 2386, type: !412, isLocal: false, isDefinition: true, scopeLine: 2387, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!7440 = !DILocalVariable(name: "dev", arg: 1, scope: !7439, file: !77, line: 2386, type: !252)
!7441 = !DILocation(line: 2386, column: 51, scope: !7439)
!7442 = !DILocalVariable(name: "rslt", scope: !7439, file: !77, line: 2388, type: !62)
!7443 = !DILocation(line: 2388, column: 9, scope: !7439)
!7444 = !DILocation(line: 2387, column: 3, scope: !7439)
!7445 = !DILocalVariable(name: "data", scope: !7439, file: !77, line: 2389, type: !17)
!7446 = !DILocation(line: 2389, column: 10, scope: !7439)
!7447 = !DILocalVariable(name: "cmd", scope: !7439, file: !77, line: 2390, type: !17)
!7448 = !DILocation(line: 2390, column: 10, scope: !7439)
!7449 = !DILocation(line: 2393, column: 9, scope: !7439)
!7450 = !DILocation(line: 2393, column: 7, scope: !7439)
!7451 = !DILocation(line: 2394, column: 6, scope: !7452)
!7452 = distinct !DILexicalBlock(scope: !7439, file: !77, line: 2394, column: 6)
!7453 = !DILocation(line: 2394, column: 11, scope: !7452)
!7454 = !DILocation(line: 2394, column: 6, scope: !7439)
!7455 = !DILocation(line: 2395, column: 10, scope: !7456)
!7456 = distinct !DILexicalBlock(scope: !7452, file: !77, line: 2394, column: 25)
!7457 = !DILocation(line: 2395, column: 8, scope: !7456)
!7458 = !DILocation(line: 2397, column: 10, scope: !7456)
!7459 = !DILocation(line: 2397, column: 8, scope: !7456)
!7460 = !DILocation(line: 2398, column: 7, scope: !7461)
!7461 = distinct !DILexicalBlock(scope: !7456, file: !77, line: 2398, column: 7)
!7462 = !DILocation(line: 2398, column: 12, scope: !7461)
!7463 = !DILocation(line: 2398, column: 7, scope: !7456)
!7464 = !DILocation(line: 2400, column: 11, scope: !7465)
!7465 = distinct !DILexicalBlock(scope: !7461, file: !77, line: 2398, column: 26)
!7466 = !DILocation(line: 2400, column: 9, scope: !7465)
!7467 = !DILocation(line: 2401, column: 8, scope: !7468)
!7468 = distinct !DILexicalBlock(scope: !7465, file: !77, line: 2401, column: 8)
!7469 = !DILocation(line: 2401, column: 13, scope: !7468)
!7470 = !DILocation(line: 2401, column: 8, scope: !7465)
!7471 = !DILocation(line: 2403, column: 12, scope: !7472)
!7472 = distinct !DILexicalBlock(scope: !7468, file: !77, line: 2401, column: 27)
!7473 = !DILocation(line: 2403, column: 10, scope: !7472)
!7474 = !DILocation(line: 2404, column: 9, scope: !7475)
!7475 = distinct !DILexicalBlock(scope: !7472, file: !77, line: 2404, column: 9)
!7476 = !DILocation(line: 2404, column: 14, scope: !7475)
!7477 = !DILocation(line: 2404, column: 9, scope: !7472)
!7478 = !DILocation(line: 2405, column: 13, scope: !7479)
!7479 = distinct !DILexicalBlock(scope: !7475, file: !77, line: 2404, column: 28)
!7480 = !DILocation(line: 2405, column: 11, scope: !7479)
!7481 = !DILocation(line: 2406, column: 10, scope: !7482)
!7482 = distinct !DILexicalBlock(scope: !7479, file: !77, line: 2406, column: 10)
!7483 = !DILocation(line: 2406, column: 15, scope: !7482)
!7484 = !DILocation(line: 2406, column: 10, scope: !7479)
!7485 = !DILocation(line: 2408, column: 12, scope: !7486)
!7486 = distinct !DILexicalBlock(scope: !7482, file: !77, line: 2406, column: 33)
!7487 = !DILocation(line: 2408, column: 7, scope: !7486)
!7488 = !DILocation(line: 2409, column: 6, scope: !7486)
!7489 = !DILocation(line: 2410, column: 5, scope: !7479)
!7490 = !DILocation(line: 2411, column: 4, scope: !7472)
!7491 = !DILocation(line: 2412, column: 3, scope: !7465)
!7492 = !DILocation(line: 2413, column: 2, scope: !7456)
!7493 = !DILocation(line: 2415, column: 2, scope: !7439)
!7494 = distinct !DISubprogram(name: "bmi160_get_int_status", scope: !77, file: !77, line: 2421, type: !7495, isLocal: false, isDefinition: true, scopeLine: 2423, flags: DIFlagPrototyped, isOptimized: false, unit: !76, variables: !175)
!7495 = !DISubroutineType(types: !7496)
!7496 = !{!62, !101, !7497, !252}
!7497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7498, size: 64)
!7498 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "bmi160_int_status", file: !6, line: 794, size: 32, elements: !7499)
!7499 = !{!7500, !7504}
!7500 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7498, file: !6, line: 795, baseType: !7501, size: 32)
!7501 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 32, elements: !7502)
!7502 = !{!7503}
!7503 = !DISubrange(count: 4)
!7504 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !7498, file: !6, line: 796, baseType: !7505, size: 32)
!7505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bmi160_int_status_bits", file: !6, line: 723, size: 32, elements: !7506)
!7506 = !{!7507, !7508, !7509, !7510, !7511, !7512, !7513, !7514, !7515, !7516, !7517, !7518, !7519, !7520, !7521, !7522, !7523, !7524, !7525, !7526, !7527, !7528, !7529, !7530, !7531, !7532, !7533, !7534, !7535, !7536}
!7507 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !7505, file: !6, line: 725, baseType: !55, size: 1, flags: DIFlagBitField, extraData: i64 0)
!7508 = !DIDerivedType(tag: DW_TAG_member, name: "sigmot", scope: !7505, file: !6, line: 726, baseType: !55, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!7509 = !DIDerivedType(tag: DW_TAG_member, name: "anym", scope: !7505, file: !6, line: 727, baseType: !55, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!7510 = !DIDerivedType(tag: DW_TAG_member, name: "pmu_trigger_reserved", scope: !7505, file: !6, line: 729, baseType: !55, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!7511 = !DIDerivedType(tag: DW_TAG_member, name: "d_tap", scope: !7505, file: !6, line: 730, baseType: !55, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!7512 = !DIDerivedType(tag: DW_TAG_member, name: "s_tap", scope: !7505, file: !6, line: 731, baseType: !55, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!7513 = !DIDerivedType(tag: DW_TAG_member, name: "orient", scope: !7505, file: !6, line: 732, baseType: !55, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!7514 = !DIDerivedType(tag: DW_TAG_member, name: "flat_int", scope: !7505, file: !6, line: 733, baseType: !55, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!7515 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !7505, file: !6, line: 734, baseType: !55, size: 2, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!7516 = !DIDerivedType(tag: DW_TAG_member, name: "high_g", scope: !7505, file: !6, line: 735, baseType: !55, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!7517 = !DIDerivedType(tag: DW_TAG_member, name: "low_g", scope: !7505, file: !6, line: 736, baseType: !55, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!7518 = !DIDerivedType(tag: DW_TAG_member, name: "drdy", scope: !7505, file: !6, line: 737, baseType: !55, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!7519 = !DIDerivedType(tag: DW_TAG_member, name: "ffull", scope: !7505, file: !6, line: 738, baseType: !55, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!7520 = !DIDerivedType(tag: DW_TAG_member, name: "fwm", scope: !7505, file: !6, line: 739, baseType: !55, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!7521 = !DIDerivedType(tag: DW_TAG_member, name: "nomo", scope: !7505, file: !6, line: 740, baseType: !55, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!7522 = !DIDerivedType(tag: DW_TAG_member, name: "anym_first_x", scope: !7505, file: !6, line: 741, baseType: !55, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!7523 = !DIDerivedType(tag: DW_TAG_member, name: "anym_first_y", scope: !7505, file: !6, line: 742, baseType: !55, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!7524 = !DIDerivedType(tag: DW_TAG_member, name: "anym_first_z", scope: !7505, file: !6, line: 743, baseType: !55, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!7525 = !DIDerivedType(tag: DW_TAG_member, name: "anym_sign", scope: !7505, file: !6, line: 744, baseType: !55, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!7526 = !DIDerivedType(tag: DW_TAG_member, name: "tap_first_x", scope: !7505, file: !6, line: 745, baseType: !55, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!7527 = !DIDerivedType(tag: DW_TAG_member, name: "tap_first_y", scope: !7505, file: !6, line: 746, baseType: !55, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!7528 = !DIDerivedType(tag: DW_TAG_member, name: "tap_first_z", scope: !7505, file: !6, line: 747, baseType: !55, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!7529 = !DIDerivedType(tag: DW_TAG_member, name: "tap_sign", scope: !7505, file: !6, line: 748, baseType: !55, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!7530 = !DIDerivedType(tag: DW_TAG_member, name: "high_first_x", scope: !7505, file: !6, line: 749, baseType: !55, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!7531 = !DIDerivedType(tag: DW_TAG_member, name: "high_first_y", scope: !7505, file: !6, line: 750, baseType: !55, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!7532 = !DIDerivedType(tag: DW_TAG_member, name: "high_first_z", scope: !7505, file: !6, line: 751, baseType: !55, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!7533 = !DIDerivedType(tag: DW_TAG_member, name: "high_sign", scope: !7505, file: !6, line: 752, baseType: !55, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!7534 = !DIDerivedType(tag: DW_TAG_member, name: "orient_1_0", scope: !7505, file: !6, line: 753, baseType: !55, size: 2, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!7535 = !DIDerivedType(tag: DW_TAG_member, name: "orient_2", scope: !7505, file: !6, line: 754, baseType: !55, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!7536 = !DIDerivedType(tag: DW_TAG_member, name: "flat", scope: !7505, file: !6, line: 755, baseType: !55, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!7537 = !DILocalVariable(name: "int_status_sel", arg: 1, scope: !7494, file: !77, line: 2421, type: !101)
!7538 = !DILocation(line: 2421, column: 57, scope: !7494)
!7539 = !DILocalVariable(name: "int_status", arg: 2, scope: !7494, file: !77, line: 2422, type: !7497)
!7540 = !DILocation(line: 2422, column: 30, scope: !7494)
!7541 = !DILocalVariable(name: "dev", arg: 3, scope: !7494, file: !77, line: 2422, type: !252)
!7542 = !DILocation(line: 2422, column: 67, scope: !7494)
!7543 = !DILocalVariable(name: "rslt", scope: !7494, file: !77, line: 2424, type: !62)
!7544 = !DILocation(line: 2424, column: 9, scope: !7494)
!7545 = !DILocation(line: 2423, column: 3, scope: !7494)
!7546 = !DILocation(line: 2427, column: 21, scope: !7547)
!7547 = distinct !DILexicalBlock(scope: !7494, file: !77, line: 2427, column: 6)
!7548 = !DILocation(line: 2427, column: 6, scope: !7494)
!7549 = !DILocation(line: 2428, column: 63, scope: !7550)
!7550 = distinct !DILexicalBlock(scope: !7547, file: !77, line: 2427, column: 47)
!7551 = !DILocation(line: 2428, column: 51, scope: !7550)
!7552 = !DILocation(line: 2428, column: 10, scope: !7550)
!7553 = !DILocation(line: 2428, column: 8, scope: !7550)
!7554 = !DILocation(line: 2429, column: 2, scope: !7550)
!7555 = !DILocation(line: 2430, column: 22, scope: !7556)
!7556 = distinct !DILexicalBlock(scope: !7557, file: !77, line: 2430, column: 7)
!7557 = distinct !DILexicalBlock(scope: !7547, file: !77, line: 2429, column: 9)
!7558 = !DILocation(line: 2430, column: 7, scope: !7557)
!7559 = !DILocation(line: 2431, column: 64, scope: !7556)
!7560 = !DILocation(line: 2431, column: 52, scope: !7556)
!7561 = !DILocation(line: 2431, column: 11, scope: !7556)
!7562 = !DILocation(line: 2431, column: 9, scope: !7556)
!7563 = !DILocation(line: 2431, column: 4, scope: !7556)
!7564 = !DILocation(line: 2432, column: 22, scope: !7565)
!7565 = distinct !DILexicalBlock(scope: !7557, file: !77, line: 2432, column: 7)
!7566 = !DILocation(line: 2432, column: 7, scope: !7557)
!7567 = !DILocation(line: 2433, column: 68, scope: !7565)
!7568 = !DILocation(line: 2433, column: 56, scope: !7565)
!7569 = !DILocation(line: 2433, column: 11, scope: !7565)
!7570 = !DILocation(line: 2433, column: 9, scope: !7565)
!7571 = !DILocation(line: 2433, column: 4, scope: !7565)
!7572 = !DILocation(line: 2434, column: 22, scope: !7573)
!7573 = distinct !DILexicalBlock(scope: !7557, file: !77, line: 2434, column: 7)
!7574 = !DILocation(line: 2434, column: 7, scope: !7557)
!7575 = !DILocation(line: 2435, column: 68, scope: !7573)
!7576 = !DILocation(line: 2435, column: 56, scope: !7573)
!7577 = !DILocation(line: 2435, column: 11, scope: !7573)
!7578 = !DILocation(line: 2435, column: 9, scope: !7573)
!7579 = !DILocation(line: 2435, column: 4, scope: !7573)
!7580 = !DILocation(line: 2436, column: 22, scope: !7581)
!7581 = distinct !DILexicalBlock(scope: !7557, file: !77, line: 2436, column: 7)
!7582 = !DILocation(line: 2436, column: 7, scope: !7557)
!7583 = !DILocation(line: 2437, column: 68, scope: !7581)
!7584 = !DILocation(line: 2437, column: 56, scope: !7581)
!7585 = !DILocation(line: 2437, column: 11, scope: !7581)
!7586 = !DILocation(line: 2437, column: 9, scope: !7581)
!7587 = !DILocation(line: 2437, column: 4, scope: !7581)
!7588 = !DILocation(line: 2440, column: 2, scope: !7494)
