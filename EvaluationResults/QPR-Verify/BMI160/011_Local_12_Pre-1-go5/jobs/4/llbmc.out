runJobCommand
precondition analysis with entry:config_tap_param
arguents: child
arguents: job
arguents: mode
arguents: precondition
handleJobInSeparateProcess0

Checking job 4 ...about to run job:
preconNumber: 5, 1

  Running Model Checker with 1 checks ...entry: config_tap_param, functionName: bmi160_set_regs
  <badref> = call i8 @qpr.precondition.bmi160_set_regs(i8 99, i8* %82, i16 %83, %struct.bmi160_dev.7* @configStub)
entry: config_tap_param, functionName: bmi160_set_regs
entry: config_tap_param, functionName: config_tap_param
try
try ready

    SMTSolver : stp
    CallStackBound : 0
    StopEncodingAfterCheckLoop : 0
    LoopUnrollBound : 12
    HavocLimit : 0
    PreconditionNumber : 5
    PreconditionLocation : jobs/4
    TimeOut : 300
    InitializedGlobals : false
    IgnoreMissingFunctions : false
    StopEncodingAfterCheck : false
    OverApproxVaArgs : false
    PreconditionCheckMemory : false
    PreconditionOnlyArguments : trueI [0] lib/ModelChecker/Verifier.cpp:247 | EntryPoint : config_tap_param
m_checker->run()

    Performing bounded model checking ...
      Performing pre-transformations on LLVM IR ...        0 sec [DONE]
        
      Performing logical encoding ...size Alloca: 1
size Alloca: 1
size Alloca: 1
isMemset:   call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 2, i32 1, i1 false), !dbg !311
getMatchingFunctions
res.push_back: stubRead
res.push_back: stubWrite
getMatchingFunctions
res.push_back: stubDelay

        Transformed "bmi160_get_regs" from 9 to 19 basic blocks and from 62 to 79 instructions
        Unrolling loop in function "stubRead" for 12 iterations succeeded.
        Transformed "stubRead" from 7 to 30 basic blocks and from 43 to 190 instructionsTODO MKB implement precondition handling: IE
Reading in precondition at: jobs/4/precondition_bmi160_set_regs.txt
preconFile: jobs/4/precondition_bmi160_set_regs.txt
ref: [underoverapprox]name of function arguments, argValue:  
ref: [underoverapprox]name of function arguments, argValue:  
name of function arguments line
param: i8 %arg0:-1
---name: i8 %arg0, value: -1.
integer, char or other simple types
name: i8 %arg0
assuming that there are not more then 10 arguments
nameIndex: 0
nameID: 0
argument name: 
value: -1
###new bool cond: bool % = compare(%i8__99, %i8__255)
param:  i16 %arg2:1
---name:  i16 %arg2, value: 1.
integer, char or other simple types
name:  i16 %arg2
assuming that there are not more then 10 arguments
nameIndex: 2
nameID: 2
argument name: 
value: 1
###added bool cond: bool % = or(%, %)
pruneOrAssert -- adding line boolCond: bool % = or(%, %)
param: i8 %arg0:-1
---name: i8 %arg0, value: -1.
integer, char or other simple types
name: i8 %arg0
assuming that there are not more then 10 arguments
nameIndex: 0
nameID: 0
argument name: 
value: -1
###new bool cond: bool % = compare(%i8__99, %i8__255)
param:  i16 %arg2:2
---name:  i16 %arg2, value: 2.
integer, char or other simple types
name:  i16 %arg2
assuming that there are not more then 10 arguments
nameIndex: 2
nameID: 2
argument name: 
value: 2
###added bool cond: bool % = or(%, %)
pruneOrAssert -- adding line boolCond: bool % = or(%, %)
param: i8 %arg0:-2
---name: i8 %arg0, value: -2.
integer, char or other simple types
name: i8 %arg0
assuming that there are not more then 10 arguments
nameIndex: 0
nameID: 0
argument name: 
value: -2
###new bool cond: bool % = compare(%i8__99, %i8__254)
param:  i16 %arg2:2
---name:  i16 %arg2, value: 2.
integer, char or other simple types
name:  i16 %arg2
assuming that there are not more then 10 arguments
nameIndex: 2
nameID: 2
argument name: 
value: 2
###added bool cond: bool % = or(%, %)
pruneOrAssert -- adding line boolCond: bool % = or(%, %)
param: i8 %arg0:-2
---name: i8 %arg0, value: -2.
integer, char or other simple types
name: i8 %arg0
assuming that there are not more then 10 arguments
nameIndex: 0
nameID: 0
argument name: 
value: -2
###new bool cond: bool % = compare(%i8__99, %i8__254)
param:  i16 %arg2:3
---name:  i16 %arg2, value: 3.
integer, char or other simple types
name:  i16 %arg2
assuming that there are not more then 10 arguments
nameIndex: 2
nameID: 2
argument name: 
value: 3
###added bool cond: bool % = or(%, %)
pruneOrAssert -- adding line boolCond: bool % = or(%, %)
param: i8 %arg0:-3
---name: i8 %arg0, value: -3.
integer, char or other simple types
name: i8 %arg0
assuming that there are not more then 10 arguments
nameIndex: 0
nameID: 0
argument name: 
value: -3
###new bool cond: bool % = compare(%i8__99, %i8__253)
param:  i16 %arg2:3
---name:  i16 %arg2, value: 3.
integer, char or other simple types
name:  i16 %arg2
assuming that there are not more then 10 arguments
nameIndex: 2
nameID: 2
argument name: 
value: 3
###added bool cond: bool % = or(%, %)
pruneOrAssert -- adding line boolCond: bool % = or(%, %)
Writing precondition type at: jobs/4/precondition_type_config_tap_param.txt

Type of Precondition:
[underoverapprox]
precondition found, end encoding

                                                           0 sec [DONE]
        Number of expressions:                           774
        after encoding

      8 assertions before transformations (2 no_function_call, 1 no_back_edge, 5 custom).

      Performing formula transformations ...
        Simplifier
          Number of rewrites                             430
        Fixed Memory Address Assigner
          Number of moved ops                             13
          Number of rewrites                              11
        Simplifier
          Number of moved ops                              3
          Number of rewrites                             115
        Memory Model Encoder
          Number of moved ops                              0rewriteAllocaOprewriteStackAddressOp

          Number of rewrites                               1
        Simplifier
          Number of moved ops                              0
          Number of rewrites                              95
        Simplifier
          Number of moved ops                              0
          Number of rewrites                               3
        ToASC Analyser
          Memcpy/memset found                             no
        Byte-Based Memory Creator
        Instantiation-Based ToASC Simplifier
        Simplifier
        FP Abstraction
          Number of rewrites                               0
        Simplifier
          Number of moved ops                              0
          Number of rewrites                               0
                                                           0 sec [DONE]
        
      8 assertions remain after transformations (2 no_function_call, 1 no_back_edge, 5 custom).
after rewriteFormula
after sanityCheckFormula

      Running SMT solver (STP with MiniSat) ...            0 sec [DONE]
        
                                                           0 sec [DONE]
      after performing Check
evaluateCheckerResultsViaRefinementLoop
getCheckerResultAfterUpdatingMarker
Result is NoTrace

                                                           0 sec [DONE]
    allunsafe
    
                                                           0 sec [DONE]
  
                      0 sec [DONE]
  kerResultAfterUpdatingMarker
Result is NoTrace

                                                           0 sec [DONE]
    allunsafe
    
                                                           0 sec [DONE]
                                                     0 sec [DONE]
        
      48 assertions remain after transformations (16 no_function_call, 15 no_back_edge, 17 custom).
after rewriteFormula
after sanityCheckFormula

      Running SMT solver (STP with MiniSat) ...            0 sec [DONE]
        
                                                           0 sec [DONE]
      after performing Check
evaluateCheckerResultsViaRefinementLoop
getCheckerResultAfterUpdatingMarker
Result is NoTrace

                                                           0 sec [DONE]
    allunsafe
    
                                                           0 sec [DONE]
                no
        Byte-Based Memory Creator
        Instantiation-Based ToASC Simplifier
        Simplifier
        FP Abstraction
          Number of rewrites                               0
        Simplifier
          Number of moved ops                              0
          Number of rewrites                               0
                                                           0 sec [DONE]
        
      355 assertions remain after transformations (121 no_function_call, 121 no_back_edge, 113 custom).
after rewriteFormula
after sanityCheckFormula

      Running SMT solver (STP with MiniSat) ...            0 sec [DONE]
        
                                                           0 sec [DONE]
      after performing Check
evaluateCheckerResultsViaRefinementLoop
getCheckerResultAfterUpdatingMarker
Result is NoTrace

                                                           0 sec [DONE]
    allunsafe
    
                                                           0 sec [DONE]
  