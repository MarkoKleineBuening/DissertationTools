<SourceFile>
  <Line number="1">#ifndef __QPR_STDLIB_MATH_H</Line>
  <Line number="2">#define __QPR_STDLIB_MATH_H</Line>
  <Line number="3"></Line>
  <Line number="4">// 7.12 (1)</Line>
  <Line number="5">// introduction</Line>
  <Line number="6"></Line>
  <Line number="7">// 7.12 (2)</Line>
  <Line number="8">#if FLT_EVAL_METHOD == 0</Line>
  <Line number="9">#define float_t float</Line>
  <Line number="10">#define double_t double</Line>
  <Line number="11">#elif FLT_EVAL_METHOD == 1</Line>
  <Line number="12">#define float_t double</Line>
  <Line number="13">#define double_t double</Line>
  <Line number="14">#elif FLT_EVAL_METHOD == 2</Line>
  <Line number="15">#define float_t long double</Line>
  <Line number="16">#define double_t long double</Line>
  <Line number="17">#else</Line>
  <Line number="18">// this is implementation defined</Line>
  <Line number="19">#endif</Line>
  <Line number="20"></Line>
  <Line number="21">// 7.12 (3)</Line>
  <Line number="22">// HUGE_VAL and friends indicate the value is too large to be represented</Line>
  <Line number="23">#define HUGE_VAL</Line>
  <Line number="24">// ^ some positive large double value</Line>
  <Line number="25">#define HUGE_VALF</Line>
  <Line number="26">// ^ some positive large float value</Line>
  <Line number="27">#define HUGE_VALL</Line>
  <Line number="28">// ^ some positive large long double value</Line>
  <Line number="29"></Line>
  <Line number="30">// 7.12 (4)</Line>
  <Line number="31">#define INFINITY</Line>
  <Line number="32"></Line>
  <Line number="33">// 7.12 (5)</Line>
  <Line number="34">#define NAN</Line>
  <Line number="35"></Line>
  <Line number="36">// 7.12 (6) number classification macros</Line>
  <Line number="37">// arbitrarily chosen...</Line>
  <Line number="38">#define FP_INFINITE 0</Line>
  <Line number="39">#define FP_NAN 1</Line>
  <Line number="40">#define FP_NORMAL 2</Line>
  <Line number="41">#define FP_SUBNORMAL 3</Line>
  <Line number="42">#define FP_ZERO 4</Line>
  <Line number="43"></Line>
  <Line number="44">// 7.12 (7) fast float multiplication plus addition</Line>
  <Line number="45">// these macros are option (does this mean implementation defined?)</Line>
  <Line number="46">//#define  FP_FAST_FMA 1</Line>
  <Line number="47">//#define FP_FAST_FMAF 1</Line>
  <Line number="48">//#define FP_FAST_FMAL 1</Line>
  <Line number="49"></Line>
  <Line number="50">// 7.12 (8)</Line>
  <Line number="51">#define FP_ILOGB0 INT_MIN</Line>
  <Line number="52">#define FP_ILOGBNAN INT_MAX</Line>
  <Line number="53"></Line>
  <Line number="54">// 7.12 (9)</Line>
  <Line number="55">#define MATH_ERRNO 1</Line>
  <Line number="56">#define MATH_ERREXCEPT 2</Line>
  <Line number="57">// the following can also be MATH_ERREXCEPT ot MATH_ERRNO|MATH_ERREXCEPT  </Line>
  <Line number="58">#define math_errhandling() (int)MATH_ERRNO</Line>
  <Line number="59"></Line>
  <Line number="60">// 7.12.1 treatment of error conditions</Line>
  <Line number="61"></Line>
  <Line number="62">// 7.12.2 the FP_CONTRACT pragma</Line>
  <Line number="63"></Line>
  <Line number="64">// 7.12.3 classification macros</Line>
  <Line number="65"></Line>
  <Line number="66">// 7.12.3.1 fpclassify</Line>
  <Line number="67">int __fpclassifyf(float x);</Line>
  <Line number="68">int __fpclassifyd(double x);</Line>
  <Line number="69">int __fpclassifyl(long double x);</Line>
  <Line number="70">#define fpclassify(x) \</Line>
  <Line number="71">    ((sizeof (x) == sizeof (float))  ? __fpclassifyf(x) : \</Line>
  <Line number="72">     (sizeof (x) == sizeof (double)) ? __fpclassifyd(x) : \</Line>
  <Line number="73">                                       __fpclassifyl(x))</Line>
  <Line number="74"></Line>
  <Line number="75">// 7.12.3.2 isfinite</Line>
  <Line number="76">#define isfinite(x) (fpclassify(x) == FP_NORMAL || fpclassify(x) == FP_SUBNORMAL || fpclassify(x) == FP_ZERO)</Line>
  <Line number="77"></Line>
  <Line number="78">// 7.12.3.3 isinf</Line>
  <Line number="79">#define isinf(x) (fpclassify(x) == FP_INF)</Line>
  <Line number="80"></Line>
  <Line number="81">// 7.12.3.4 isnan</Line>
  <Line number="82">#define isnan(x) (fpclassify(x) == FP_NAN)</Line>
  <Line number="83"></Line>
  <Line number="84"></Line>
  <Line number="85">//7.12.3.5 isnormal</Line>
  <Line number="86">#define isnormal(X) (flpassify(x) == FP_NORMAL)</Line>
  <Line number="87"></Line>
  <Line number="88">// 7.12.3.6 signbit</Line>
  <Line number="89">int __signbitf(float x);</Line>
  <Line number="90">int __signbitd(double x);</Line>
  <Line number="91">int __signbitl(long double x);</Line>
  <Line number="92">#define signbit(x) \</Line>
  <Line number="93">  ((sizeof (x) == sizeof (float))  ? __signbitf(x) : \</Line>
  <Line number="94">   (sizeof (x) == sizeof (double)) ? __signbitd(x) : \</Line>
  <Line number="95">                                     __signbitl(x))</Line>
  <Line number="96"></Line>
  <Line number="97">// 7.12.4.1 acos</Line>
  <Line number="98">double acos(double x);</Line>
  <Line number="99">float acosf(float x);</Line>
  <Line number="100">long double acosl(long double x);</Line>
  <Line number="101"></Line>
  <Line number="102">// 7.12.4.2 asin</Line>
  <Line number="103">double asin(double x);</Line>
  <Line number="104">float asinf(float x);</Line>
  <Line number="105">long double asinl(long double x);</Line>
  <Line number="106"></Line>
  <Line number="107">// 7.12.4.3 atan</Line>
  <Line number="108">double atan(double x);</Line>
  <Line number="109">float atanf(float x);</Line>
  <Line number="110">long double atanl(long double x);</Line>
  <Line number="111"></Line>
  <Line number="112">// 7.12.4.4 atan2</Line>
  <Line number="113">double atan2(double y, double x);</Line>
  <Line number="114">float atan2f(float y, float x);</Line>
  <Line number="115">long double atan2l(long double y, long double x);</Line>
  <Line number="116"></Line>
  <Line number="117">// 7.12.4.5 cos</Line>
  <Line number="118">double cos(double x);</Line>
  <Line number="119">float cosf(float x);</Line>
  <Line number="120">long double cosl(long double x);</Line>
  <Line number="121"></Line>
  <Line number="122">// 7.12.4.6 sin</Line>
  <Line number="123">double sin(double x);</Line>
  <Line number="124">float sinf(float x);</Line>
  <Line number="125">long double sinl(long double x);</Line>
  <Line number="126"></Line>
  <Line number="127">// 7.12.4.7 tan</Line>
  <Line number="128">double tan(double x);</Line>
  <Line number="129">float tanf(float x);</Line>
  <Line number="130">long double tanl(long double x);</Line>
  <Line number="131"></Line>
  <Line number="132">// 7.12.5.1 acosh</Line>
  <Line number="133">double acosh(double x);</Line>
  <Line number="134">float acoshf(float x);</Line>
  <Line number="135">long double acoshl(long double x);</Line>
  <Line number="136"></Line>
  <Line number="137">// 7.12.5.2 asinh</Line>
  <Line number="138">double asinh(double x);</Line>
  <Line number="139">float asinhf(float x);</Line>
  <Line number="140">long double asinhl(long double x);</Line>
  <Line number="141"></Line>
  <Line number="142">// 7.12.5.3 atanh</Line>
  <Line number="143">double atanh(double x);</Line>
  <Line number="144">float atanhf(float x);</Line>
  <Line number="145">long double atanhl(long double x);</Line>
  <Line number="146"></Line>
  <Line number="147">// 7.12.5.4 cosh</Line>
  <Line number="148">double cosh(double x);</Line>
  <Line number="149">float coshf(float x);</Line>
  <Line number="150">long double coshl(long double x);</Line>
  <Line number="151"></Line>
  <Line number="152">// 7.12.5.5 sinh</Line>
  <Line number="153">double sinh(double x);</Line>
  <Line number="154">float sinhf(float x);</Line>
  <Line number="155">long double sinhl(long double x);</Line>
  <Line number="156"></Line>
  <Line number="157">// 7.12.5.6 tanh</Line>
  <Line number="158">double tanh(double x);</Line>
  <Line number="159">float tanhf(float x);</Line>
  <Line number="160">long double tanhl(long double x);</Line>
  <Line number="161"></Line>
  <Line number="162">// 7.12.6.1 exp</Line>
  <Line number="163">double exp(double x);</Line>
  <Line number="164">float expf(float x);</Line>
  <Line number="165">long double expl(long double x);</Line>
  <Line number="166"></Line>
  <Line number="167">// 7.12.6.2 exp2</Line>
  <Line number="168">double exp2(double x);</Line>
  <Line number="169">float exp2f(float x);</Line>
  <Line number="170">long double exp2l(long double x);</Line>
  <Line number="171"></Line>
  <Line number="172">// 7.12.6.3 expm1</Line>
  <Line number="173">double expm1(double x);</Line>
  <Line number="174">float expm1f(float x);</Line>
  <Line number="175">long double expm1l(long double x);</Line>
  <Line number="176"></Line>
  <Line number="177">// 7.12.6.4 frexp</Line>
  <Line number="178">double frexp(double value, int *exp);</Line>
  <Line number="179">float frexpf(float value, int *exp);</Line>
  <Line number="180">long double frexpl(long double value, int *exp);</Line>
  <Line number="181"></Line>
  <Line number="182">// 7.12.6.5 ilogb</Line>
  <Line number="183">int ilogb(double x);</Line>
  <Line number="184">int ilogbf(float x);</Line>
  <Line number="185">int ilogbl(long double x);</Line>
  <Line number="186"></Line>
  <Line number="187">// 7.12.6.6 ldexp</Line>
  <Line number="188">double ldexp(double x, int exp);</Line>
  <Line number="189">float ldexpf(float x, int exp);</Line>
  <Line number="190">long double ldexpl(long double x, int exp);</Line>
  <Line number="191"></Line>
  <Line number="192">// 7.12.6.7 log</Line>
  <Line number="193">double log(double x);</Line>
  <Line number="194">float logf(float x);</Line>
  <Line number="195">long double logl(long double x);</Line>
  <Line number="196"></Line>
  <Line number="197">// 7.12.6.8 log10</Line>
  <Line number="198">double log10(double x);</Line>
  <Line number="199">float log10f(float x);</Line>
  <Line number="200">long double log10l(long double x);</Line>
  <Line number="201"></Line>
  <Line number="202">// 7.12.6.9 log1p</Line>
  <Line number="203">double log1p(double x);</Line>
  <Line number="204">float log1pf(float x);</Line>
  <Line number="205">long double log1pl(long double x);</Line>
  <Line number="206"></Line>
  <Line number="207">// 7.12.6.10 log2</Line>
  <Line number="208">double log2(double x);</Line>
  <Line number="209">float log2f(float x);</Line>
  <Line number="210">long double log2l(long double x);</Line>
  <Line number="211"></Line>
  <Line number="212">// 7.12.6.11 logb</Line>
  <Line number="213">double logb(double x);</Line>
  <Line number="214">float logbf(float x);</Line>
  <Line number="215">long double logbl(long double x);</Line>
  <Line number="216"></Line>
  <Line number="217">// 7.12.6.12 modf</Line>
  <Line number="218">double modf(double value, double *iptr);</Line>
  <Line number="219">float modff(float value, float *iptr);</Line>
  <Line number="220">long double modfl(long double value, long double *iptr);</Line>
  <Line number="221"></Line>
  <Line number="222">// 7.12.6.13 scalbn scalbln</Line>
  <Line number="223">double scalbn(double x, int n);</Line>
  <Line number="224">float scalbnf(float x, int n);</Line>
  <Line number="225">long double scalbnl(long double x, int n);</Line>
  <Line number="226"></Line>
  <Line number="227">double scalbln(double x, long int n);</Line>
  <Line number="228">float scalblnf(float x, long int n);</Line>
  <Line number="229">long double scalblnl(long double x, long int n);</Line>
  <Line number="230"></Line>
  <Line number="231">// 7.12.7.1 cbrt</Line>
  <Line number="232">double cbrt(double x);</Line>
  <Line number="233">float cbrtf(float x);</Line>
  <Line number="234">long double cbrtl(long double x);</Line>
  <Line number="235"></Line>
  <Line number="236">// 7.12.7.2 fabs</Line>
  <Line number="237">double fabs(double x);</Line>
  <Line number="238">float fabsf(float x);</Line>
  <Line number="239">long double fabsl(long double x);</Line>
  <Line number="240"></Line>
  <Line number="241">// 7.12.7.3 hypot</Line>
  <Line number="242">double hypot(double x, double y);</Line>
  <Line number="243">float hypotf(float x, float y);</Line>
  <Line number="244">long double hypotl(long double x, long double y);</Line>
  <Line number="245"></Line>
  <Line number="246">// 7.12.7.4 pow</Line>
  <Line number="247">double pow(double x, double y);</Line>
  <Line number="248">float powf(float x, float y);</Line>
  <Line number="249">long double powl(long double x, long double y);</Line>
  <Line number="250"></Line>
  <Line number="251">// 7.12.7.5 sqrt</Line>
  <Line number="252">double sqrt(double x);</Line>
  <Line number="253">float sqrtf(float x);</Line>
  <Line number="254">long double sqrtl(long double x);</Line>
  <Line number="255"></Line>
  <Line number="256">// 7.12.8.1 erf</Line>
  <Line number="257">double erf(double x);</Line>
  <Line number="258">float erff(float x);</Line>
  <Line number="259">long double erfl(long double x);</Line>
  <Line number="260"></Line>
  <Line number="261">// 7.12.8.2 erfc</Line>
  <Line number="262">double erfc(double x);</Line>
  <Line number="263">float erfcf(float x);</Line>
  <Line number="264">long double erfcl(long double x);</Line>
  <Line number="265"></Line>
  <Line number="266">// 7.12.8.3 lgamma</Line>
  <Line number="267">double lgamma(double x);</Line>
  <Line number="268">float lgammaf(float x);</Line>
  <Line number="269">long double lgammal(long double x);</Line>
  <Line number="270"></Line>
  <Line number="271">// 7.12.8.4 tgamma</Line>
  <Line number="272">double tgamma(double x);</Line>
  <Line number="273">float tgammaf(float x);</Line>
  <Line number="274">long double tgammal(long double x);</Line>
  <Line number="275"></Line>
  <Line number="276">// 7.12.9.1 ceil</Line>
  <Line number="277">double ceil(double x);</Line>
  <Line number="278">float ceilf(float x);</Line>
  <Line number="279">long double ceill(long double x);</Line>
  <Line number="280"></Line>
  <Line number="281">// 7.12.9.2 floor</Line>
  <Line number="282">double floor(double x);</Line>
  <Line number="283">float floorf(float x);</Line>
  <Line number="284">long double floorl(long double x);</Line>
  <Line number="285"></Line>
  <Line number="286">// 7.12.9.3 nearbyint</Line>
  <Line number="287">double nearbyint(double x);</Line>
  <Line number="288">float nearbyintf(float x);</Line>
  <Line number="289">long double nearbyintl(long double x);</Line>
  <Line number="290"></Line>
  <Line number="291">// 7.12.9.4 rint</Line>
  <Line number="292">double rint(double x);</Line>
  <Line number="293">float rintf(float x);</Line>
  <Line number="294">long double rintl(long double x);</Line>
  <Line number="295"></Line>
  <Line number="296">// 7.12.9.5 lrint</Line>
  <Line number="297">long int lrint(double x);</Line>
  <Line number="298">long int lrintf(float x);</Line>
  <Line number="299">long int lrintl(long double x);</Line>
  <Line number="300"></Line>
  <Line number="301">long long int llrint(double x);</Line>
  <Line number="302">long long int llrintf(float x);</Line>
  <Line number="303">long long int llrintl(long double x);</Line>
  <Line number="304"></Line>
  <Line number="305">// 7.12.9.6 round</Line>
  <Line number="306">double round(double x);</Line>
  <Line number="307">float roundf(float x);</Line>
  <Line number="308">long double roundl(long double x);</Line>
  <Line number="309"></Line>
  <Line number="310">// 7.12.9.7 lround llround</Line>
  <Line number="311">long int lround(double x);</Line>
  <Line number="312">long int lroundf(float x);</Line>
  <Line number="313">long int lroundl(long double x);</Line>
  <Line number="314">long long int llround(double x);</Line>
  <Line number="315">long long int llroundf(float x);</Line>
  <Line number="316">long long int llroundl(long double x);</Line>
  <Line number="317"></Line>
  <Line number="318">// 7.12.9.8 trunc</Line>
  <Line number="319">double trunc(double x);</Line>
  <Line number="320">float truncf(float x);</Line>
  <Line number="321">long double truncl(long double x);</Line>
  <Line number="322"></Line>
  <Line number="323">// 7.12.10.1 fmod</Line>
  <Line number="324">double fmod(double x, double y);</Line>
  <Line number="325">float fmodf(float x, float y);</Line>
  <Line number="326">long double fmodl(long double x, long double y);</Line>
  <Line number="327"></Line>
  <Line number="328">// 7.12.10.2 remainder</Line>
  <Line number="329">double remainder(double x, double y);</Line>
  <Line number="330">float remainderf(float x, float y);</Line>
  <Line number="331">long double remainderl(long double x, long double y);</Line>
  <Line number="332"></Line>
  <Line number="333">// 7.12.10.3 remquo</Line>
  <Line number="334">double remquo(double x, double y, int *quo);</Line>
  <Line number="335">float remquof(float x, float y, int *quo);</Line>
  <Line number="336">long double remquol(long double x, long double y, int *quo);</Line>
  <Line number="337"></Line>
  <Line number="338">// 7.12.11.1 copysign</Line>
  <Line number="339">double copysign(double x, double y);</Line>
  <Line number="340">float copysignf(float x, float y);</Line>
  <Line number="341">long double copysignl(long double x, long double y);</Line>
  <Line number="342"></Line>
  <Line number="343">// 7.12.11.2 nan</Line>
  <Line number="344">double nan(const char *tagp);</Line>
  <Line number="345">float nanf(const char *tagp);</Line>
  <Line number="346">long double nanl(const char *tagp);</Line>
  <Line number="347"></Line>
  <Line number="348">// 7.12.11.3 nextafter</Line>
  <Line number="349">double nextafter(double x, double y);</Line>
  <Line number="350">float nextafterf(float x, float y);</Line>
  <Line number="351">long double nextafterl(long double x, long double y);</Line>
  <Line number="352"></Line>
  <Line number="353">// 7.12.11.4 nexttoward</Line>
  <Line number="354">double nexttoward(double x, long double y);</Line>
  <Line number="355">float nexttowardf(float x, long double y);</Line>
  <Line number="356">long double nexttowardl(long double x, long double y);</Line>
  <Line number="357"></Line>
  <Line number="358">// 7.12.12.1 fdim</Line>
  <Line number="359">double fdim(double x, double y);</Line>
  <Line number="360">float fdimf(float x, float y);</Line>
  <Line number="361">long double fdiml(long double x, long double y);</Line>
  <Line number="362"></Line>
  <Line number="363">// 7.12.12.2 fmax</Line>
  <Line number="364">double fmax(double x, double y);</Line>
  <Line number="365">float fmaxf(float x, float y);</Line>
  <Line number="366">long double fmaxl(long double x, long double y);</Line>
  <Line number="367"></Line>
  <Line number="368">// 7.12.12.3 fmin</Line>
  <Line number="369">double fmin(double x, double y);</Line>
  <Line number="370">float fminf(float x, float y);</Line>
  <Line number="371">long double fminl(long double x, long double y);</Line>
  <Line number="372"></Line>
  <Line number="373">// 7.12.13.1 floating multiply add</Line>
  <Line number="374">double fma(double x, double y, double z);</Line>
  <Line number="375">float fmaf(float x, float y, float z);</Line>
  <Line number="376">long double fmal(long double x, long double y, long double z);</Line>
  <Line number="377"></Line>
  <Line number="378">// 7.12.14.1</Line>
  <Line number="379">#define isgreater(x) \</Line>
  <Line number="380">    ((sizeof (x) == sizeof (float))  ? __isgreaterf(x) : \</Line>
  <Line number="381">     (sizeof (x) == sizeof (double)) ? __isgreaterd(x) : \</Line>
  <Line number="382">                                       __isgreaterl(x))</Line>
  <Line number="383"></Line>
  <Line number="384">// 7.12.14.2</Line>
  <Line number="385">#define isgreaterequal(x) \</Line>
  <Line number="386">    ((sizeof (x) == sizeof (float))  ? __isgreaterequalf(x) : \</Line>
  <Line number="387">     (sizeof (x) == sizeof (double)) ? __isgreaterequald(x) : \</Line>
  <Line number="388">                                       __isgreaterequall(x))</Line>
  <Line number="389"></Line>
  <Line number="390">// 7.12.14.3</Line>
  <Line number="391">#define isless(x) \</Line>
  <Line number="392">    ((sizeof (x) == sizeof (float))  ? __islessf(x) : \</Line>
  <Line number="393">     (sizeof (x) == sizeof (double)) ? __islessd(x) : \</Line>
  <Line number="394">                                       __islessl(x))</Line>
  <Line number="395"></Line>
  <Line number="396">// 7.12.14.4</Line>
  <Line number="397">#define islessequal(x) \</Line>
  <Line number="398">    ((sizeof (x) == sizeof (float))  ? __islessequalf(x) : \</Line>
  <Line number="399">     (sizeof (x) == sizeof (double)) ? __islessequald(x) : \</Line>
  <Line number="400">                                       __islessequall(x))</Line>
  <Line number="401"></Line>
  <Line number="402">// 7.12.14.5</Line>
  <Line number="403">#define islessgreater(x) \</Line>
  <Line number="404">    ((sizeof (x) == sizeof (float))  ? __islessgreaterf(x) : \</Line>
  <Line number="405">     (sizeof (x) == sizeof (double)) ? __islessgreaterd(x) : \</Line>
  <Line number="406">                                       __islessgreaterl(x))</Line>
  <Line number="407"></Line>
  <Line number="408">// 7.12.14.6</Line>
  <Line number="409">#define isunordered(x) \</Line>
  <Line number="410">    ((sizeof (x) == sizeof (float))  ? __isunorderedf(x) : \</Line>
  <Line number="411">     (sizeof (x) == sizeof (double)) ? __isunoredredd(x) : \</Line>
  <Line number="412">                                       __isunorderedl(x))</Line>
  <Line number="413">#endif</Line>
</SourceFile>
