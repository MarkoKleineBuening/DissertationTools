<SourceFile>
  <Line number="1">/* Inline functions to return unsigned integer values unchanged.</Line>
  <Line number="2">   Copyright (C) 2017-2020 Free Software Foundation, Inc.</Line>
  <Line number="3">   This file is part of the GNU C Library.</Line>
  <Line number="4"></Line>
  <Line number="5">   The GNU C Library is free software; you can redistribute it and/or</Line>
  <Line number="6">   modify it under the terms of the GNU Lesser General Public</Line>
  <Line number="7">   License as published by the Free Software Foundation; either</Line>
  <Line number="8">   version 2.1 of the License, or (at your option) any later version.</Line>
  <Line number="9"></Line>
  <Line number="10">   The GNU C Library is distributed in the hope that it will be useful,</Line>
  <Line number="11">   but WITHOUT ANY WARRANTY; without even the implied warranty of</Line>
  <Line number="12">   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</Line>
  <Line number="13">   Lesser General Public License for more details.</Line>
  <Line number="14"></Line>
  <Line number="15">   You should have received a copy of the GNU Lesser General Public</Line>
  <Line number="16">   License along with the GNU C Library; if not, see</Line>
  <Line number="17">   &lt;https://www.gnu.org/licenses/&gt;.  */</Line>
  <Line number="18"></Line>
  <Line number="19">#if !defined _NETINET_IN_H &amp;&amp; !defined _ENDIAN_H</Line>
  <Line number="20"># error &quot;Never use &lt;bits/uintn-identity.h&gt; directly; include &lt;netinet/in.h&gt; or &lt;endian.h&gt; instead.&quot;</Line>
  <Line number="21">#endif</Line>
  <Line number="22"></Line>
  <Line number="23">#ifndef _BITS_UINTN_IDENTITY_H</Line>
  <Line number="24">#define _BITS_UINTN_IDENTITY_H 1</Line>
  <Line number="25"></Line>
  <Line number="26">#include &lt;bits/types.h&gt;</Line>
  <Line number="27"></Line>
  <Line number="28">/* These inline functions are to ensure the appropriate type</Line>
  <Line number="29">   conversions and associated diagnostics from macros that convert to</Line>
  <Line number="30">   a given endianness.  */</Line>
  <Line number="31"></Line>
  <Line number="32">static __inline __uint16_t</Line>
  <Line number="33">__uint16_identity (__uint16_t __x)</Line>
  <Line number="34">{</Line>
  <Line number="35">  return __x;</Line>
  <Line number="36">}</Line>
  <Line number="37"></Line>
  <Line number="38">static __inline __uint32_t</Line>
  <Line number="39">__uint32_identity (__uint32_t __x)</Line>
  <Line number="40">{</Line>
  <Line number="41">  return __x;</Line>
  <Line number="42">}</Line>
  <Line number="43"></Line>
  <Line number="44">static __inline __uint64_t</Line>
  <Line number="45">__uint64_identity (__uint64_t __x)</Line>
  <Line number="46">{</Line>
  <Line number="47">  return __x;</Line>
  <Line number="48">}</Line>
  <Line number="49"></Line>
  <Line number="50">#endif /* _BITS_UINTN_IDENTITY_H.  */</Line>
</SourceFile>
