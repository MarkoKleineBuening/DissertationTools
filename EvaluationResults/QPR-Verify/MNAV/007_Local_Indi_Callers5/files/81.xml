<SourceFile>
  <Line number="1">/* x86 internal rwlock struct definitions.</Line>
  <Line number="2">   Copyright (C) 2019-2020 Free Software Foundation, Inc.</Line>
  <Line number="3"></Line>
  <Line number="4">   This file is part of the GNU C Library.</Line>
  <Line number="5"></Line>
  <Line number="6">   The GNU C Library is free software; you can redistribute it and/or</Line>
  <Line number="7">   modify it under the terms of the GNU Lesser General Public</Line>
  <Line number="8">   License as published by the Free Software Foundation; either</Line>
  <Line number="9">   version 2.1 of the License, or (at your option) any later version.</Line>
  <Line number="10"></Line>
  <Line number="11">   The GNU C Library is distributed in the hope that it will be useful,</Line>
  <Line number="12">   but WITHOUT ANY WARRANTY; without even the implied warranty of</Line>
  <Line number="13">   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</Line>
  <Line number="14">   Lesser General Public License for more details.</Line>
  <Line number="15"></Line>
  <Line number="16">   You should have received a copy of the GNU Lesser General Public</Line>
  <Line number="17">   License along with the GNU C Library; if not, see</Line>
  <Line number="18">   &lt;http://www.gnu.org/licenses/&gt;.  */</Line>
  <Line number="19"></Line>
  <Line number="20">#ifndef _RWLOCK_INTERNAL_H</Line>
  <Line number="21">#define _RWLOCK_INTERNAL_H</Line>
  <Line number="22"></Line>
  <Line number="23">struct __pthread_rwlock_arch_t</Line>
  <Line number="24">{</Line>
  <Line number="25">  unsigned int __readers;</Line>
  <Line number="26">  unsigned int __writers;</Line>
  <Line number="27">  unsigned int __wrphase_futex;</Line>
  <Line number="28">  unsigned int __writers_futex;</Line>
  <Line number="29">  unsigned int __pad3;</Line>
  <Line number="30">  unsigned int __pad4;</Line>
  <Line number="31">#ifdef __x86_64__</Line>
  <Line number="32">  int __cur_writer;</Line>
  <Line number="33">  int __shared;</Line>
  <Line number="34">  signed char __rwelision;</Line>
  <Line number="35"># ifdef  __ILP32__</Line>
  <Line number="36">  unsigned char __pad1[3];</Line>
  <Line number="37">#  define __PTHREAD_RWLOCK_ELISION_EXTRA 0, { 0, 0, 0 }</Line>
  <Line number="38"># else</Line>
  <Line number="39">  unsigned char __pad1[7];</Line>
  <Line number="40">#  define __PTHREAD_RWLOCK_ELISION_EXTRA 0, { 0, 0, 0, 0, 0, 0, 0 }</Line>
  <Line number="41"># endif</Line>
  <Line number="42">  unsigned long int __pad2;</Line>
  <Line number="43">  /* FLAGS must stay at this position in the structure to maintain</Line>
  <Line number="44">     binary compatibility.  */</Line>
  <Line number="45">  unsigned int __flags;</Line>
  <Line number="46">#else /* __x86_64__  */</Line>
  <Line number="47">  /* FLAGS must stay at this position in the structure to maintain</Line>
  <Line number="48">     binary compatibility.  */</Line>
  <Line number="49">  unsigned char __flags;</Line>
  <Line number="50">  unsigned char __shared;</Line>
  <Line number="51">  signed char __rwelision;</Line>
  <Line number="52">  unsigned char __pad2;</Line>
  <Line number="53">  int __cur_writer;</Line>
  <Line number="54">#endif</Line>
  <Line number="55">};</Line>
  <Line number="56"></Line>
  <Line number="57">#ifdef __x86_64__</Line>
  <Line number="58"># define __PTHREAD_RWLOCK_INITIALIZER(__flags) \</Line>
  <Line number="59">  0, 0, 0, 0, 0, 0, 0, 0, __PTHREAD_RWLOCK_ELISION_EXTRA, 0, __flags</Line>
  <Line number="60">#else</Line>
  <Line number="61"># define __PTHREAD_RWLOCK_INITIALIZER(__flags) \</Line>
  <Line number="62">  0, 0, 0, 0, 0, 0, __flags, 0, 0, 0, 0</Line>
  <Line number="63">#endif</Line>
  <Line number="64"></Line>
  <Line number="65">#endif</Line>
</SourceFile>
