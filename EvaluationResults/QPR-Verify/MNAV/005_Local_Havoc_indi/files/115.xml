<SourceFile>
  <Line number="1">/* Signal number constants.  Generic template.</Line>
  <Line number="2">   Copyright (C) 1991-2020 Free Software Foundation, Inc.</Line>
  <Line number="3">   This file is part of the GNU C Library.</Line>
  <Line number="4"></Line>
  <Line number="5">   The GNU C Library is free software; you can redistribute it and/or</Line>
  <Line number="6">   modify it under the terms of the GNU Lesser General Public</Line>
  <Line number="7">   License as published by the Free Software Foundation; either</Line>
  <Line number="8">   version 2.1 of the License, or (at your option) any later version.</Line>
  <Line number="9"></Line>
  <Line number="10">   The GNU C Library is distributed in the hope that it will be useful,</Line>
  <Line number="11">   but WITHOUT ANY WARRANTY; without even the implied warranty of</Line>
  <Line number="12">   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</Line>
  <Line number="13">   Lesser General Public License for more details.</Line>
  <Line number="14"></Line>
  <Line number="15">   You should have received a copy of the GNU Lesser General Public</Line>
  <Line number="16">   License along with the GNU C Library; if not, see</Line>
  <Line number="17">   &lt;https://www.gnu.org/licenses/&gt;.  */</Line>
  <Line number="18"></Line>
  <Line number="19">#ifndef	_BITS_SIGNUM_GENERIC_H</Line>
  <Line number="20">#define _BITS_SIGNUM_GENERIC_H 1</Line>
  <Line number="21"></Line>
  <Line number="22">#ifndef _SIGNAL_H</Line>
  <Line number="23">#error &quot;Never include &lt;bits/signum-generic.h&gt; directly; use &lt;signal.h&gt; instead.&quot;</Line>
  <Line number="24">#endif</Line>
  <Line number="25"></Line>
  <Line number="26">/* Fake signal functions.  */</Line>
  <Line number="27"></Line>
  <Line number="28">#define	SIG_ERR	 ((__sighandler_t) -1)	/* Error return.  */</Line>
  <Line number="29">#define	SIG_DFL	 ((__sighandler_t)  0)	/* Default action.  */</Line>
  <Line number="30">#define	SIG_IGN	 ((__sighandler_t)  1)	/* Ignore signal.  */</Line>
  <Line number="31"></Line>
  <Line number="32">#ifdef __USE_XOPEN</Line>
  <Line number="33"># define SIG_HOLD ((__sighandler_t) 2)	/* Add signal to hold mask.  */</Line>
  <Line number="34">#endif</Line>
  <Line number="35"></Line>
  <Line number="36">/* We define here all the signal names listed in POSIX (1003.1-2008);</Line>
  <Line number="37">   as of 1003.1-2013, no additional signals have been added by POSIX.</Line>
  <Line number="38">   We also define here signal names that historically exist in every</Line>
  <Line number="39">   real-world POSIX variant (e.g. SIGWINCH).</Line>
  <Line number="40"></Line>
  <Line number="41">   Signals in the 1-15 range are defined with their historical numbers.</Line>
  <Line number="42">   For other signals, we use the BSD numbers.</Line>
  <Line number="43">   There are two unallocated signal numbers in the 1-31 range: 7 and 29.</Line>
  <Line number="44">   Signal number 0 is reserved for use as kill(pid, 0), to test whether</Line>
  <Line number="45">   a process exists without sending it a signal.  */</Line>
  <Line number="46"></Line>
  <Line number="47">/* ISO C99 signals.  */</Line>
  <Line number="48">#define	SIGINT		2	/* Interactive attention signal.  */</Line>
  <Line number="49">#define	SIGILL		4	/* Illegal instruction.  */</Line>
  <Line number="50">#define	SIGABRT		6	/* Abnormal termination.  */</Line>
  <Line number="51">#define	SIGFPE		8	/* Erroneous arithmetic operation.  */</Line>
  <Line number="52">#define	SIGSEGV		11	/* Invalid access to storage.  */</Line>
  <Line number="53">#define	SIGTERM		15	/* Termination request.  */</Line>
  <Line number="54"></Line>
  <Line number="55">/* Historical signals specified by POSIX. */</Line>
  <Line number="56">#define	SIGHUP		1	/* Hangup.  */</Line>
  <Line number="57">#define	SIGQUIT		3	/* Quit.  */</Line>
  <Line number="58">#define	SIGTRAP		5	/* Trace/breakpoint trap.  */</Line>
  <Line number="59">#define	SIGKILL		9	/* Killed.  */</Line>
  <Line number="60">#define SIGBUS		10	/* Bus error.  */</Line>
  <Line number="61">#define	SIGSYS		12	/* Bad system call.  */</Line>
  <Line number="62">#define	SIGPIPE		13	/* Broken pipe.  */</Line>
  <Line number="63">#define	SIGALRM		14	/* Alarm clock.  */</Line>
  <Line number="64"></Line>
  <Line number="65">/* New(er) POSIX signals (1003.1-2008, 1003.1-2013).  */</Line>
  <Line number="66">#define	SIGURG		16	/* Urgent data is available at a socket.  */</Line>
  <Line number="67">#define	SIGSTOP		17	/* Stop, unblockable.  */</Line>
  <Line number="68">#define	SIGTSTP		18	/* Keyboard stop.  */</Line>
  <Line number="69">#define	SIGCONT		19	/* Continue.  */</Line>
  <Line number="70">#define	SIGCHLD		20	/* Child terminated or stopped.  */</Line>
  <Line number="71">#define	SIGTTIN		21	/* Background read from control terminal.  */</Line>
  <Line number="72">#define	SIGTTOU		22	/* Background write to control terminal.  */</Line>
  <Line number="73">#define	SIGPOLL		23	/* Pollable event occurred (System V).  */</Line>
  <Line number="74">#define	SIGXCPU		24	/* CPU time limit exceeded.  */</Line>
  <Line number="75">#define	SIGXFSZ		25	/* File size limit exceeded.  */</Line>
  <Line number="76">#define	SIGVTALRM	26	/* Virtual timer expired.  */</Line>
  <Line number="77">#define	SIGPROF		27	/* Profiling timer expired.  */</Line>
  <Line number="78">#define	SIGUSR1		30	/* User-defined signal 1.  */</Line>
  <Line number="79">#define	SIGUSR2		31	/* User-defined signal 2.  */</Line>
  <Line number="80"></Line>
  <Line number="81">/* Nonstandard signals found in all modern POSIX systems</Line>
  <Line number="82">   (including both BSD and Linux).  */</Line>
  <Line number="83">#define	SIGWINCH	28	/* Window size change (4.3 BSD, Sun).  */</Line>
  <Line number="84"></Line>
  <Line number="85">/* Archaic names for compatibility.  */</Line>
  <Line number="86">#define	SIGIO		SIGPOLL	/* I/O now possible (4.2 BSD).  */</Line>
  <Line number="87">#define	SIGIOT		SIGABRT	/* IOT instruction, abort() on a PDP-11.  */</Line>
  <Line number="88">#define	SIGCLD		SIGCHLD	/* Old System V name */</Line>
  <Line number="89"></Line>
  <Line number="90">/* Not all systems support real-time signals.  bits/signum.h indicates</Line>
  <Line number="91">   that they are supported by overriding __SIGRTMAX to a value greater</Line>
  <Line number="92">   than __SIGRTMIN.  These constants give the kernel-level hard limits,</Line>
  <Line number="93">   but some real-time signals may be used internally by glibc.  Do not</Line>
  <Line number="94">   use these constants in application code; use SIGRTMIN and SIGRTMAX</Line>
  <Line number="95">   (defined in signal.h) instead.  */</Line>
  <Line number="96">#define __SIGRTMIN	32</Line>
  <Line number="97">#define __SIGRTMAX	__SIGRTMIN</Line>
  <Line number="98"></Line>
  <Line number="99">/* Biggest signal number + 1 (including real-time signals).  */</Line>
  <Line number="100">#define _NSIG		(__SIGRTMAX + 1)</Line>
  <Line number="101"></Line>
  <Line number="102">#endif /* bits/signum-generic.h.  */</Line>
</SourceFile>
