<SourceFile>
  <Line number="1">/* Copyright (C) 1992-2020 Free Software Foundation, Inc.</Line>
  <Line number="2">   This file is part of the GNU C Library.</Line>
  <Line number="3"></Line>
  <Line number="4">   The GNU C Library is free software; you can redistribute it and/or</Line>
  <Line number="5">   modify it under the terms of the GNU Lesser General Public</Line>
  <Line number="6">   License as published by the Free Software Foundation; either</Line>
  <Line number="7">   version 2.1 of the License, or (at your option) any later version.</Line>
  <Line number="8"></Line>
  <Line number="9">   The GNU C Library is distributed in the hope that it will be useful,</Line>
  <Line number="10">   but WITHOUT ANY WARRANTY; without even the implied warranty of</Line>
  <Line number="11">   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</Line>
  <Line number="12">   Lesser General Public License for more details.</Line>
  <Line number="13"></Line>
  <Line number="14">   You should have received a copy of the GNU Lesser General Public</Line>
  <Line number="15">   License along with the GNU C Library; if not, see</Line>
  <Line number="16">   &lt;https://www.gnu.org/licenses/&gt;.  */</Line>
  <Line number="17"></Line>
  <Line number="18">#ifndef	_ENDIAN_H</Line>
  <Line number="19">#define	_ENDIAN_H	1</Line>
  <Line number="20"></Line>
  <Line number="21">#include &lt;features.h&gt;</Line>
  <Line number="22"></Line>
  <Line number="23">/* Get the definitions of __*_ENDIAN, __BYTE_ORDER, and __FLOAT_WORD_ORDER.  */</Line>
  <Line number="24">#include &lt;bits/endian.h&gt;</Line>
  <Line number="25"></Line>
  <Line number="26">#ifdef __USE_MISC</Line>
  <Line number="27"># define LITTLE_ENDIAN	__LITTLE_ENDIAN</Line>
  <Line number="28"># define BIG_ENDIAN	__BIG_ENDIAN</Line>
  <Line number="29"># define PDP_ENDIAN	__PDP_ENDIAN</Line>
  <Line number="30"># define BYTE_ORDER	__BYTE_ORDER</Line>
  <Line number="31">#endif</Line>
  <Line number="32"></Line>
  <Line number="33">#if defined __USE_MISC &amp;&amp; !defined __ASSEMBLER__</Line>
  <Line number="34">/* Conversion interfaces.  */</Line>
  <Line number="35"># include &lt;bits/byteswap.h&gt;</Line>
  <Line number="36"># include &lt;bits/uintn-identity.h&gt;</Line>
  <Line number="37"></Line>
  <Line number="38"># if __BYTE_ORDER == __LITTLE_ENDIAN</Line>
  <Line number="39">#  define htobe16(x) __bswap_16 (x)</Line>
  <Line number="40">#  define htole16(x) __uint16_identity (x)</Line>
  <Line number="41">#  define be16toh(x) __bswap_16 (x)</Line>
  <Line number="42">#  define le16toh(x) __uint16_identity (x)</Line>
  <Line number="43"></Line>
  <Line number="44">#  define htobe32(x) __bswap_32 (x)</Line>
  <Line number="45">#  define htole32(x) __uint32_identity (x)</Line>
  <Line number="46">#  define be32toh(x) __bswap_32 (x)</Line>
  <Line number="47">#  define le32toh(x) __uint32_identity (x)</Line>
  <Line number="48"></Line>
  <Line number="49">#  define htobe64(x) __bswap_64 (x)</Line>
  <Line number="50">#  define htole64(x) __uint64_identity (x)</Line>
  <Line number="51">#  define be64toh(x) __bswap_64 (x)</Line>
  <Line number="52">#  define le64toh(x) __uint64_identity (x)</Line>
  <Line number="53"></Line>
  <Line number="54"># else</Line>
  <Line number="55">#  define htobe16(x) __uint16_identity (x)</Line>
  <Line number="56">#  define htole16(x) __bswap_16 (x)</Line>
  <Line number="57">#  define be16toh(x) __uint16_identity (x)</Line>
  <Line number="58">#  define le16toh(x) __bswap_16 (x)</Line>
  <Line number="59"></Line>
  <Line number="60">#  define htobe32(x) __uint32_identity (x)</Line>
  <Line number="61">#  define htole32(x) __bswap_32 (x)</Line>
  <Line number="62">#  define be32toh(x) __uint32_identity (x)</Line>
  <Line number="63">#  define le32toh(x) __bswap_32 (x)</Line>
  <Line number="64"></Line>
  <Line number="65">#  define htobe64(x) __uint64_identity (x)</Line>
  <Line number="66">#  define htole64(x) __bswap_64 (x)</Line>
  <Line number="67">#  define be64toh(x) __uint64_identity (x)</Line>
  <Line number="68">#  define le64toh(x) __bswap_64 (x)</Line>
  <Line number="69"># endif</Line>
  <Line number="70">#endif</Line>
  <Line number="71"></Line>
  <Line number="72">#endif	/* endian.h */</Line>
</SourceFile>
