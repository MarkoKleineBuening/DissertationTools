<SourceFile>
  <Line number="1">/* Copyright (C) 1991-2020 Free Software Foundation, Inc.</Line>
  <Line number="2">   This file is part of the GNU C Library.</Line>
  <Line number="3"></Line>
  <Line number="4">   The GNU C Library is free software; you can redistribute it and/or</Line>
  <Line number="5">   modify it under the terms of the GNU Lesser General Public</Line>
  <Line number="6">   License as published by the Free Software Foundation; either</Line>
  <Line number="7">   version 2.1 of the License, or (at your option) any later version.</Line>
  <Line number="8"></Line>
  <Line number="9">   The GNU C Library is distributed in the hope that it will be useful,</Line>
  <Line number="10">   but WITHOUT ANY WARRANTY; without even the implied warranty of</Line>
  <Line number="11">   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</Line>
  <Line number="12">   Lesser General Public License for more details.</Line>
  <Line number="13"></Line>
  <Line number="14">   You should have received a copy of the GNU Lesser General Public</Line>
  <Line number="15">   License along with the GNU C Library; if not, see</Line>
  <Line number="16">   &lt;https://www.gnu.org/licenses/&gt;.  */</Line>
  <Line number="17"></Line>
  <Line number="18">/* Linux version.  */</Line>
  <Line number="19"></Line>
  <Line number="20">#ifndef _NETINET_IN_H</Line>
  <Line number="21"># error &quot;Never use &lt;bits/in.h&gt; directly; include &lt;netinet/in.h&gt; instead.&quot;</Line>
  <Line number="22">#endif</Line>
  <Line number="23"></Line>
  <Line number="24">/* If the application has already included linux/in6.h from a linux-based</Line>
  <Line number="25">   kernel then we will not define the IPv6 IPPROTO_* defines, in6_addr (nor the</Line>
  <Line number="26">   defines), sockaddr_in6, or ipv6_mreq. Same for in6_ptkinfo or ip6_mtuinfo</Line>
  <Line number="27">   in linux/ipv6.h. The ABI used by the linux-kernel and glibc match exactly.</Line>
  <Line number="28">   Neither the linux kernel nor glibc should break this ABI without coordination.</Line>
  <Line number="29">   In upstream kernel 56c176c9 the _UAPI prefix was stripped so we need to check</Line>
  <Line number="30">   for _LINUX_IN6_H and _IPV6_H now, and keep checking the old versions for</Line>
  <Line number="31">   maximum backwards compatibility.  */</Line>
  <Line number="32">#if defined _UAPI_LINUX_IN6_H \</Line>
  <Line number="33">    || defined _UAPI_IPV6_H \</Line>
  <Line number="34">    || defined _LINUX_IN6_H \</Line>
  <Line number="35">    || defined _IPV6_H</Line>
  <Line number="36">/* This is not quite the same API since the kernel always defines s6_addr16 and</Line>
  <Line number="37">   s6_addr32. This is not a violation of POSIX since POSIX says &quot;at least the</Line>
  <Line number="38">   following member&quot; and that holds true.  */</Line>
  <Line number="39"># define __USE_KERNEL_IPV6_DEFS 1</Line>
  <Line number="40">#else</Line>
  <Line number="41"># define __USE_KERNEL_IPV6_DEFS 0</Line>
  <Line number="42">#endif</Line>
  <Line number="43"></Line>
  <Line number="44">/* Options for use with `getsockopt&apos; and `setsockopt&apos; at the IP level.</Line>
  <Line number="45">   The first word in the comment at the right is the data type used;</Line>
  <Line number="46">   &quot;bool&quot; means a boolean value stored in an `int&apos;.  */</Line>
  <Line number="47">#define        IP_OPTIONS      4       /* ip_opts; IP per-packet options.  */</Line>
  <Line number="48">#define        IP_HDRINCL      3       /* int; Header is included with data.  */</Line>
  <Line number="49">#define        IP_TOS          1       /* int; IP type of service and precedence.  */</Line>
  <Line number="50">#define        IP_TTL          2       /* int; IP time to live.  */</Line>
  <Line number="51">#define        IP_RECVOPTS     6       /* bool; Receive all IP options w/datagram.  */</Line>
  <Line number="52">/* For BSD compatibility.  */</Line>
  <Line number="53">#define        IP_RECVRETOPTS  IP_RETOPTS       /* bool; Receive IP options for response.  */</Line>
  <Line number="54">#define        IP_RETOPTS      7       /* ip_opts; Set/get IP per-packet options.  */</Line>
  <Line number="55">#define IP_MULTICAST_IF 32	/* in_addr; set/get IP multicast i/f */</Line>
  <Line number="56">#define IP_MULTICAST_TTL 33	/* unsigned char; set/get IP multicast ttl */</Line>
  <Line number="57">#define IP_MULTICAST_LOOP 34	/* bool; set/get IP multicast loopback */</Line>
  <Line number="58">#define IP_ADD_MEMBERSHIP 35	/* ip_mreq; add an IP group membership */</Line>
  <Line number="59">#define IP_DROP_MEMBERSHIP 36	/* ip_mreq; drop an IP group membership */</Line>
  <Line number="60">#define IP_UNBLOCK_SOURCE 37	/* ip_mreq_source: unblock data from source */</Line>
  <Line number="61">#define IP_BLOCK_SOURCE 38	/* ip_mreq_source: block data from source */</Line>
  <Line number="62">#define IP_ADD_SOURCE_MEMBERSHIP 39 /* ip_mreq_source: join source group */</Line>
  <Line number="63">#define IP_DROP_SOURCE_MEMBERSHIP 40 /* ip_mreq_source: leave source group */</Line>
  <Line number="64">#define IP_MSFILTER 41</Line>
  <Line number="65">#ifdef __USE_MISC</Line>
  <Line number="66"># define MCAST_JOIN_GROUP 42	/* group_req: join any-source group */</Line>
  <Line number="67"># define MCAST_BLOCK_SOURCE 43	/* group_source_req: block from given group */</Line>
  <Line number="68"># define MCAST_UNBLOCK_SOURCE 44 /* group_source_req: unblock from given group*/</Line>
  <Line number="69"># define MCAST_LEAVE_GROUP 45	/* group_req: leave any-source group */</Line>
  <Line number="70"># define MCAST_JOIN_SOURCE_GROUP 46 /* group_source_req: join source-spec gr */</Line>
  <Line number="71"># define MCAST_LEAVE_SOURCE_GROUP 47 /* group_source_req: leave source-spec gr*/</Line>
  <Line number="72"># define MCAST_MSFILTER 48</Line>
  <Line number="73"># define IP_MULTICAST_ALL 49</Line>
  <Line number="74"># define IP_UNICAST_IF 50</Line>
  <Line number="75"></Line>
  <Line number="76"># define MCAST_EXCLUDE   0</Line>
  <Line number="77"># define MCAST_INCLUDE   1</Line>
  <Line number="78">#endif</Line>
  <Line number="79"></Line>
  <Line number="80">#define IP_ROUTER_ALERT	5	/* bool */</Line>
  <Line number="81">#define IP_PKTINFO	8	/* bool */</Line>
  <Line number="82">#define IP_PKTOPTIONS	9</Line>
  <Line number="83">#define IP_PMTUDISC	10	/* obsolete name? */</Line>
  <Line number="84">#define IP_MTU_DISCOVER	10	/* int; see below */</Line>
  <Line number="85">#define IP_RECVERR	11	/* bool */</Line>
  <Line number="86">#define IP_RECVTTL	12	/* bool */</Line>
  <Line number="87">#define IP_RECVTOS	13	/* bool */</Line>
  <Line number="88">#define IP_MTU		14	/* int */</Line>
  <Line number="89">#define IP_FREEBIND	15</Line>
  <Line number="90">#define IP_IPSEC_POLICY 16</Line>
  <Line number="91">#define IP_XFRM_POLICY	17</Line>
  <Line number="92">#define IP_PASSSEC	18</Line>
  <Line number="93">#define IP_TRANSPARENT	19</Line>
  <Line number="94">#define IP_MULTICAST_ALL 49	/* bool */</Line>
  <Line number="95"></Line>
  <Line number="96">/* TProxy original addresses */</Line>
  <Line number="97">#define IP_ORIGDSTADDR       20</Line>
  <Line number="98">#define IP_RECVORIGDSTADDR   IP_ORIGDSTADDR</Line>
  <Line number="99"></Line>
  <Line number="100">#define IP_MINTTL       21</Line>
  <Line number="101">#define IP_NODEFRAG     22</Line>
  <Line number="102">#define IP_CHECKSUM     23</Line>
  <Line number="103">#define IP_BIND_ADDRESS_NO_PORT 24</Line>
  <Line number="104">#define IP_RECVFRAGSIZE 25</Line>
  <Line number="105"></Line>
  <Line number="106">/* IP_MTU_DISCOVER arguments.  */</Line>
  <Line number="107">#define IP_PMTUDISC_DONT   0	/* Never send DF frames.  */</Line>
  <Line number="108">#define IP_PMTUDISC_WANT   1	/* Use per route hints.  */</Line>
  <Line number="109">#define IP_PMTUDISC_DO     2	/* Always DF.  */</Line>
  <Line number="110">#define IP_PMTUDISC_PROBE  3	/* Ignore dst pmtu.  */</Line>
  <Line number="111">/* Always use interface mtu (ignores dst pmtu) but don&apos;t set DF flag.</Line>
  <Line number="112">   Also incoming ICMP frag_needed notifications will be ignored on</Line>
  <Line number="113">   this socket to prevent accepting spoofed ones.  */</Line>
  <Line number="114">#define IP_PMTUDISC_INTERFACE           4</Line>
  <Line number="115">/* Like IP_PMTUDISC_INTERFACE but allow packets to be fragmented.  */</Line>
  <Line number="116">#define IP_PMTUDISC_OMIT		5</Line>
  <Line number="117"></Line>
  <Line number="118">#define IP_MULTICAST_IF			32</Line>
  <Line number="119">#define IP_MULTICAST_TTL 		33</Line>
  <Line number="120">#define IP_MULTICAST_LOOP 		34</Line>
  <Line number="121">#define IP_ADD_MEMBERSHIP		35</Line>
  <Line number="122">#define IP_DROP_MEMBERSHIP		36</Line>
  <Line number="123">#define IP_UNBLOCK_SOURCE		37</Line>
  <Line number="124">#define IP_BLOCK_SOURCE			38</Line>
  <Line number="125">#define IP_ADD_SOURCE_MEMBERSHIP	39</Line>
  <Line number="126">#define IP_DROP_SOURCE_MEMBERSHIP	40</Line>
  <Line number="127">#define IP_MSFILTER			41</Line>
  <Line number="128">#define IP_MULTICAST_ALL		49</Line>
  <Line number="129">#define IP_UNICAST_IF			50</Line>
  <Line number="130"></Line>
  <Line number="131">/* To select the IP level.  */</Line>
  <Line number="132">#define SOL_IP	0</Line>
  <Line number="133"></Line>
  <Line number="134">#define IP_DEFAULT_MULTICAST_TTL        1</Line>
  <Line number="135">#define IP_DEFAULT_MULTICAST_LOOP       1</Line>
  <Line number="136">#define IP_MAX_MEMBERSHIPS              20</Line>
  <Line number="137"></Line>
  <Line number="138">#ifdef __USE_MISC</Line>
  <Line number="139">/* Structure used to describe IP options for IP_OPTIONS and IP_RETOPTS.</Line>
  <Line number="140">   The `ip_dst&apos; field is used for the first-hop gateway when using a</Line>
  <Line number="141">   source route (this gets put into the header proper).  */</Line>
  <Line number="142">struct ip_opts</Line>
  <Line number="143">  {</Line>
  <Line number="144">    struct in_addr ip_dst;	/* First hop; zero without source route.  */</Line>
  <Line number="145">    char ip_opts[40];		/* Actually variable in size.  */</Line>
  <Line number="146">  };</Line>
  <Line number="147"></Line>
  <Line number="148">/* Like `struct ip_mreq&apos; but including interface specification by index.  */</Line>
  <Line number="149">struct ip_mreqn</Line>
  <Line number="150">  {</Line>
  <Line number="151">    struct in_addr imr_multiaddr;	/* IP multicast address of group */</Line>
  <Line number="152">    struct in_addr imr_address;		/* local IP address of interface */</Line>
  <Line number="153">    int	imr_ifindex;			/* Interface index */</Line>
  <Line number="154">  };</Line>
  <Line number="155"></Line>
  <Line number="156">/* Structure used for IP_PKTINFO.  */</Line>
  <Line number="157">struct in_pktinfo</Line>
  <Line number="158">  {</Line>
  <Line number="159">    int ipi_ifindex;			/* Interface index  */</Line>
  <Line number="160">    struct in_addr ipi_spec_dst;	/* Routing destination address  */</Line>
  <Line number="161">    struct in_addr ipi_addr;		/* Header destination address  */</Line>
  <Line number="162">  };</Line>
  <Line number="163">#endif</Line>
  <Line number="164"></Line>
  <Line number="165">/* Options for use with `getsockopt&apos; and `setsockopt&apos; at the IPv6 level.</Line>
  <Line number="166">   The first word in the comment at the right is the data type used;</Line>
  <Line number="167">   &quot;bool&quot; means a boolean value stored in an `int&apos;.  */</Line>
  <Line number="168">#define IPV6_ADDRFORM		1</Line>
  <Line number="169">#define IPV6_2292PKTINFO	2</Line>
  <Line number="170">#define IPV6_2292HOPOPTS	3</Line>
  <Line number="171">#define IPV6_2292DSTOPTS	4</Line>
  <Line number="172">#define IPV6_2292RTHDR		5</Line>
  <Line number="173">#define IPV6_2292PKTOPTIONS	6</Line>
  <Line number="174">#define IPV6_CHECKSUM		7</Line>
  <Line number="175">#define IPV6_2292HOPLIMIT	8</Line>
  <Line number="176"></Line>
  <Line number="177">#define SCM_SRCRT		IPV6_RXSRCRT</Line>
  <Line number="178"></Line>
  <Line number="179">#define IPV6_NEXTHOP		9</Line>
  <Line number="180">#define IPV6_AUTHHDR		10</Line>
  <Line number="181">#define IPV6_UNICAST_HOPS	16</Line>
  <Line number="182">#define IPV6_MULTICAST_IF	17</Line>
  <Line number="183">#define IPV6_MULTICAST_HOPS	18</Line>
  <Line number="184">#define IPV6_MULTICAST_LOOP	19</Line>
  <Line number="185">#define IPV6_JOIN_GROUP		20</Line>
  <Line number="186">#define IPV6_LEAVE_GROUP	21</Line>
  <Line number="187">#define IPV6_ROUTER_ALERT	22</Line>
  <Line number="188">#define IPV6_MTU_DISCOVER	23</Line>
  <Line number="189">#define IPV6_MTU		24</Line>
  <Line number="190">#define IPV6_RECVERR		25</Line>
  <Line number="191">#define IPV6_V6ONLY		26</Line>
  <Line number="192">#define IPV6_JOIN_ANYCAST	27</Line>
  <Line number="193">#define IPV6_LEAVE_ANYCAST	28</Line>
  <Line number="194">#define IPV6_MULTICAST_ALL	29</Line>
  <Line number="195">#define IPV6_ROUTER_ALERT_ISOLATE 30</Line>
  <Line number="196">#define IPV6_IPSEC_POLICY	34</Line>
  <Line number="197">#define IPV6_XFRM_POLICY	35</Line>
  <Line number="198">#define IPV6_HDRINCL		36</Line>
  <Line number="199"></Line>
  <Line number="200">/* Advanced API (RFC3542) (1).  */</Line>
  <Line number="201">#define IPV6_RECVPKTINFO	49</Line>
  <Line number="202">#define IPV6_PKTINFO		50</Line>
  <Line number="203">#define IPV6_RECVHOPLIMIT	51</Line>
  <Line number="204">#define IPV6_HOPLIMIT		52</Line>
  <Line number="205">#define IPV6_RECVHOPOPTS	53</Line>
  <Line number="206">#define IPV6_HOPOPTS		54</Line>
  <Line number="207">#define IPV6_RTHDRDSTOPTS	55</Line>
  <Line number="208">#define IPV6_RECVRTHDR		56</Line>
  <Line number="209">#define IPV6_RTHDR		57</Line>
  <Line number="210">#define IPV6_RECVDSTOPTS	58</Line>
  <Line number="211">#define IPV6_DSTOPTS		59</Line>
  <Line number="212">#define IPV6_RECVPATHMTU	60</Line>
  <Line number="213">#define IPV6_PATHMTU		61</Line>
  <Line number="214">#define IPV6_DONTFRAG		62</Line>
  <Line number="215"></Line>
  <Line number="216">/* Advanced API (RFC3542) (2).  */</Line>
  <Line number="217">#define IPV6_RECVTCLASS		66</Line>
  <Line number="218">#define IPV6_TCLASS		67</Line>
  <Line number="219"></Line>
  <Line number="220">#define IPV6_AUTOFLOWLABEL	70</Line>
  <Line number="221"></Line>
  <Line number="222">/* RFC5014.  */</Line>
  <Line number="223">#define IPV6_ADDR_PREFERENCES	72</Line>
  <Line number="224"></Line>
  <Line number="225">/* RFC5082.  */</Line>
  <Line number="226">#define IPV6_MINHOPCOUNT	73</Line>
  <Line number="227"></Line>
  <Line number="228">#define IPV6_ORIGDSTADDR	74</Line>
  <Line number="229">#define IPV6_RECVORIGDSTADDR	IPV6_ORIGDSTADDR</Line>
  <Line number="230">#define IPV6_TRANSPARENT	75</Line>
  <Line number="231">#define IPV6_UNICAST_IF		76</Line>
  <Line number="232">#define IPV6_RECVFRAGSIZE	77</Line>
  <Line number="233">#define IPV6_FREEBIND		78</Line>
  <Line number="234"></Line>
  <Line number="235">/* Obsolete synonyms for the above.  */</Line>
  <Line number="236">#if !__USE_KERNEL_IPV6_DEFS</Line>
  <Line number="237"># define IPV6_ADD_MEMBERSHIP	IPV6_JOIN_GROUP</Line>
  <Line number="238"># define IPV6_DROP_MEMBERSHIP	IPV6_LEAVE_GROUP</Line>
  <Line number="239">#endif</Line>
  <Line number="240">#define IPV6_RXHOPOPTS		IPV6_HOPOPTS</Line>
  <Line number="241">#define IPV6_RXDSTOPTS		IPV6_DSTOPTS</Line>
  <Line number="242"></Line>
  <Line number="243">/* IPV6_MTU_DISCOVER values.  */</Line>
  <Line number="244">#define IPV6_PMTUDISC_DONT	0	/* Never send DF frames.  */</Line>
  <Line number="245">#define IPV6_PMTUDISC_WANT	1	/* Use per route hints.  */</Line>
  <Line number="246">#define IPV6_PMTUDISC_DO	2	/* Always DF.  */</Line>
  <Line number="247">#define IPV6_PMTUDISC_PROBE	3	/* Ignore dst pmtu.  */</Line>
  <Line number="248">#define IPV6_PMTUDISC_INTERFACE	4	/* See IP_PMTUDISC_INTERFACE.  */</Line>
  <Line number="249">#define IPV6_PMTUDISC_OMIT	5	/* See IP_PMTUDISC_OMIT.  */</Line>
  <Line number="250"></Line>
  <Line number="251">/* Socket level values for IPv6.  */</Line>
  <Line number="252">#define SOL_IPV6        41</Line>
  <Line number="253">#define SOL_ICMPV6      58</Line>
  <Line number="254"></Line>
  <Line number="255">/* Routing header options for IPv6.  */</Line>
  <Line number="256">#define IPV6_RTHDR_LOOSE	0	/* Hop doesn&apos;t need to be neighbour. */</Line>
  <Line number="257">#define IPV6_RTHDR_STRICT	1	/* Hop must be a neighbour.  */</Line>
  <Line number="258"></Line>
  <Line number="259">#define IPV6_RTHDR_TYPE_0	0	/* IPv6 Routing header type 0.  */</Line>
</SourceFile>
