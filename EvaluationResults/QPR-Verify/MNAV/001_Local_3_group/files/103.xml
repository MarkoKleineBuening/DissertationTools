<SourceFile>
  <Line number="1">/* Declarations for getopt (basic, portable features only).</Line>
  <Line number="2">   Copyright (C) 1989-2020 Free Software Foundation, Inc.</Line>
  <Line number="3">   This file is part of the GNU C Library and is also part of gnulib.</Line>
  <Line number="4">   Patches to this file should be submitted to both projects.</Line>
  <Line number="5"></Line>
  <Line number="6">   The GNU C Library is free software; you can redistribute it and/or</Line>
  <Line number="7">   modify it under the terms of the GNU Lesser General Public</Line>
  <Line number="8">   License as published by the Free Software Foundation; either</Line>
  <Line number="9">   version 2.1 of the License, or (at your option) any later version.</Line>
  <Line number="10"></Line>
  <Line number="11">   The GNU C Library is distributed in the hope that it will be useful,</Line>
  <Line number="12">   but WITHOUT ANY WARRANTY; without even the implied warranty of</Line>
  <Line number="13">   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</Line>
  <Line number="14">   Lesser General Public License for more details.</Line>
  <Line number="15"></Line>
  <Line number="16">   You should have received a copy of the GNU Lesser General Public</Line>
  <Line number="17">   License along with the GNU C Library; if not, see</Line>
  <Line number="18">   &lt;https://www.gnu.org/licenses/&gt;.  */</Line>
  <Line number="19"></Line>
  <Line number="20">#ifndef _GETOPT_CORE_H</Line>
  <Line number="21">#define _GETOPT_CORE_H 1</Line>
  <Line number="22"></Line>
  <Line number="23">/* This header should not be used directly; include getopt.h or</Line>
  <Line number="24">   unistd.h instead.  Unlike most bits headers, it does not have</Line>
  <Line number="25">   a protective #error, because the guard macro for getopt.h in</Line>
  <Line number="26">   gnulib is not fixed.  */</Line>
  <Line number="27"></Line>
  <Line number="28">__BEGIN_DECLS</Line>
  <Line number="29"></Line>
  <Line number="30">/* For communication from &apos;getopt&apos; to the caller.</Line>
  <Line number="31">   When &apos;getopt&apos; finds an option that takes an argument,</Line>
  <Line number="32">   the argument value is returned here.</Line>
  <Line number="33">   Also, when &apos;ordering&apos; is RETURN_IN_ORDER,</Line>
  <Line number="34">   each non-option ARGV-element is returned here.  */</Line>
  <Line number="35"></Line>
  <Line number="36">extern char *optarg;</Line>
  <Line number="37"></Line>
  <Line number="38">/* Index in ARGV of the next element to be scanned.</Line>
  <Line number="39">   This is used for communication to and from the caller</Line>
  <Line number="40">   and for communication between successive calls to &apos;getopt&apos;.</Line>
  <Line number="41"></Line>
  <Line number="42">   On entry to &apos;getopt&apos;, zero means this is the first call; initialize.</Line>
  <Line number="43"></Line>
  <Line number="44">   When &apos;getopt&apos; returns -1, this is the index of the first of the</Line>
  <Line number="45">   non-option elements that the caller should itself scan.</Line>
  <Line number="46"></Line>
  <Line number="47">   Otherwise, &apos;optind&apos; communicates from one call to the next</Line>
  <Line number="48">   how much of ARGV has been scanned so far.  */</Line>
  <Line number="49"></Line>
  <Line number="50">extern int optind;</Line>
  <Line number="51"></Line>
  <Line number="52">/* Callers store zero here to inhibit the error message &apos;getopt&apos; prints</Line>
  <Line number="53">   for unrecognized options.  */</Line>
  <Line number="54"></Line>
  <Line number="55">extern int opterr;</Line>
  <Line number="56"></Line>
  <Line number="57">/* Set to an option character which was unrecognized.  */</Line>
  <Line number="58"></Line>
  <Line number="59">extern int optopt;</Line>
  <Line number="60"></Line>
  <Line number="61">/* Get definitions and prototypes for functions to process the</Line>
  <Line number="62">   arguments in ARGV (ARGC of them, minus the program name) for</Line>
  <Line number="63">   options given in OPTS.</Line>
  <Line number="64"></Line>
  <Line number="65">   Return the option character from OPTS just read.  Return -1 when</Line>
  <Line number="66">   there are no more options.  For unrecognized options, or options</Line>
  <Line number="67">   missing arguments, &apos;optopt&apos; is set to the option letter, and &apos;?&apos; is</Line>
  <Line number="68">   returned.</Line>
  <Line number="69"></Line>
  <Line number="70">   The OPTS string is a list of characters which are recognized option</Line>
  <Line number="71">   letters, optionally followed by colons, specifying that that letter</Line>
  <Line number="72">   takes an argument, to be placed in &apos;optarg&apos;.</Line>
  <Line number="73"></Line>
  <Line number="74">   If a letter in OPTS is followed by two colons, its argument is</Line>
  <Line number="75">   optional.  This behavior is specific to the GNU &apos;getopt&apos;.</Line>
  <Line number="76"></Line>
  <Line number="77">   The argument &apos;--&apos; causes premature termination of argument</Line>
  <Line number="78">   scanning, explicitly telling &apos;getopt&apos; that there are no more</Line>
  <Line number="79">   options.</Line>
  <Line number="80"></Line>
  <Line number="81">   If OPTS begins with &apos;-&apos;, then non-option arguments are treated as</Line>
  <Line number="82">   arguments to the option &apos;\1&apos;.  This behavior is specific to the GNU</Line>
  <Line number="83">   &apos;getopt&apos;.  If OPTS begins with &apos;+&apos;, or POSIXLY_CORRECT is set in</Line>
  <Line number="84">   the environment, then do not permute arguments.</Line>
  <Line number="85"></Line>
  <Line number="86">   For standards compliance, the &apos;argv&apos; argument has the type</Line>
  <Line number="87">   char *const *, but this is inaccurate; if argument permutation is</Line>
  <Line number="88">   enabled, the argv array (not the strings it points to) must be</Line>
  <Line number="89">   writable.  */</Line>
  <Line number="90"></Line>
  <Line number="91">extern int getopt (int ___argc, char *const *___argv, const char *__shortopts)</Line>
  <Line number="92">       __THROW __nonnull ((2, 3));</Line>
  <Line number="93"></Line>
  <Line number="94">__END_DECLS</Line>
  <Line number="95"></Line>
  <Line number="96">#endif /* getopt_core.h */</Line>
</SourceFile>
