<SourceFile>
  <Line number="1">/* Declaration of common pthread types for all architectures.</Line>
  <Line number="2">   Copyright (C) 2017-2020 Free Software Foundation, Inc.</Line>
  <Line number="3">   This file is part of the GNU C Library.</Line>
  <Line number="4"></Line>
  <Line number="5">   The GNU C Library is free software; you can redistribute it and/or</Line>
  <Line number="6">   modify it under the terms of the GNU Lesser General Public</Line>
  <Line number="7">   License as published by the Free Software Foundation; either</Line>
  <Line number="8">   version 2.1 of the License, or (at your option) any later version.</Line>
  <Line number="9"></Line>
  <Line number="10">   The GNU C Library is distributed in the hope that it will be useful,</Line>
  <Line number="11">   but WITHOUT ANY WARRANTY; without even the implied warranty of</Line>
  <Line number="12">   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</Line>
  <Line number="13">   Lesser General Public License for more details.</Line>
  <Line number="14"></Line>
  <Line number="15">   You should have received a copy of the GNU Lesser General Public</Line>
  <Line number="16">   License along with the GNU C Library; if not, see</Line>
  <Line number="17">   &lt;https://www.gnu.org/licenses/&gt;.  */</Line>
  <Line number="18"></Line>
  <Line number="19">#ifndef _BITS_PTHREADTYPES_COMMON_H</Line>
  <Line number="20"># define _BITS_PTHREADTYPES_COMMON_H	1</Line>
  <Line number="21"></Line>
  <Line number="22">/* For internal mutex and condition variable definitions.  */</Line>
  <Line number="23">#include &lt;bits/thread-shared-types.h&gt;</Line>
  <Line number="24"></Line>
  <Line number="25">/* Thread identifiers.  The structure of the attribute type is not</Line>
  <Line number="26">   exposed on purpose.  */</Line>
  <Line number="27">typedef unsigned long int pthread_t;</Line>
  <Line number="28"></Line>
  <Line number="29"></Line>
  <Line number="30">/* Data structures for mutex handling.  The structure of the attribute</Line>
  <Line number="31">   type is not exposed on purpose.  */</Line>
  <Line number="32">typedef union</Line>
  <Line number="33">{</Line>
  <Line number="34">  char __size[__SIZEOF_PTHREAD_MUTEXATTR_T];</Line>
  <Line number="35">  int __align;</Line>
  <Line number="36">} pthread_mutexattr_t;</Line>
  <Line number="37"></Line>
  <Line number="38"></Line>
  <Line number="39">/* Data structure for condition variable handling.  The structure of</Line>
  <Line number="40">   the attribute type is not exposed on purpose.  */</Line>
  <Line number="41">typedef union</Line>
  <Line number="42">{</Line>
  <Line number="43">  char __size[__SIZEOF_PTHREAD_CONDATTR_T];</Line>
  <Line number="44">  int __align;</Line>
  <Line number="45">} pthread_condattr_t;</Line>
  <Line number="46"></Line>
  <Line number="47"></Line>
  <Line number="48">/* Keys for thread-specific data */</Line>
  <Line number="49">typedef unsigned int pthread_key_t;</Line>
  <Line number="50"></Line>
  <Line number="51"></Line>
  <Line number="52">/* Once-only execution */</Line>
  <Line number="53">typedef int __ONCE_ALIGNMENT pthread_once_t;</Line>
  <Line number="54"></Line>
  <Line number="55"></Line>
  <Line number="56">union pthread_attr_t</Line>
  <Line number="57">{</Line>
  <Line number="58">  char __size[__SIZEOF_PTHREAD_ATTR_T];</Line>
  <Line number="59">  long int __align;</Line>
  <Line number="60">};</Line>
  <Line number="61">#ifndef __have_pthread_attr_t</Line>
  <Line number="62">typedef union pthread_attr_t pthread_attr_t;</Line>
  <Line number="63"># define __have_pthread_attr_t 1</Line>
  <Line number="64">#endif</Line>
  <Line number="65"></Line>
  <Line number="66"></Line>
  <Line number="67">typedef union</Line>
  <Line number="68">{</Line>
  <Line number="69">  struct __pthread_mutex_s __data;</Line>
  <Line number="70">  char __size[__SIZEOF_PTHREAD_MUTEX_T];</Line>
  <Line number="71">  long int __align;</Line>
  <Line number="72">} pthread_mutex_t;</Line>
  <Line number="73"></Line>
  <Line number="74"></Line>
  <Line number="75">typedef union</Line>
  <Line number="76">{</Line>
  <Line number="77">  struct __pthread_cond_s __data;</Line>
  <Line number="78">  char __size[__SIZEOF_PTHREAD_COND_T];</Line>
  <Line number="79">  __extension__ long long int __align;</Line>
  <Line number="80">} pthread_cond_t;</Line>
  <Line number="81"></Line>
  <Line number="82"></Line>
  <Line number="83">#if defined __USE_UNIX98 || defined __USE_XOPEN2K</Line>
  <Line number="84">/* Data structure for reader-writer lock variable handling.  The</Line>
  <Line number="85">   structure of the attribute type is deliberately not exposed.  */</Line>
  <Line number="86">typedef union</Line>
  <Line number="87">{</Line>
  <Line number="88">  struct __pthread_rwlock_arch_t __data;</Line>
  <Line number="89">  char __size[__SIZEOF_PTHREAD_RWLOCK_T];</Line>
  <Line number="90">  long int __align;</Line>
  <Line number="91">} pthread_rwlock_t;</Line>
  <Line number="92"></Line>
  <Line number="93">typedef union</Line>
  <Line number="94">{</Line>
  <Line number="95">  char __size[__SIZEOF_PTHREAD_RWLOCKATTR_T];</Line>
  <Line number="96">  long int __align;</Line>
  <Line number="97">} pthread_rwlockattr_t;</Line>
  <Line number="98">#endif</Line>
  <Line number="99"></Line>
  <Line number="100"></Line>
  <Line number="101">#ifdef __USE_XOPEN2K</Line>
  <Line number="102">/* POSIX spinlock data type.  */</Line>
  <Line number="103">typedef volatile int pthread_spinlock_t;</Line>
  <Line number="104"></Line>
  <Line number="105"></Line>
  <Line number="106">/* POSIX barriers data type.  The structure of the type is</Line>
  <Line number="107">   deliberately not exposed.  */</Line>
  <Line number="108">typedef union</Line>
  <Line number="109">{</Line>
  <Line number="110">  char __size[__SIZEOF_PTHREAD_BARRIER_T];</Line>
  <Line number="111">  long int __align;</Line>
  <Line number="112">} pthread_barrier_t;</Line>
  <Line number="113"></Line>
  <Line number="114">typedef union</Line>
  <Line number="115">{</Line>
  <Line number="116">  char __size[__SIZEOF_PTHREAD_BARRIERATTR_T];</Line>
  <Line number="117">  int __align;</Line>
  <Line number="118">} pthread_barrierattr_t;</Line>
  <Line number="119">#endif</Line>
  <Line number="120"></Line>
  <Line number="121">#endif</Line>
</SourceFile>
