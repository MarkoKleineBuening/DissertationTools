runJobCommand
arguents: child
arguents: job
arguents: mode
handleJobInSeparateProcess0

Checking job 130 ...about to run job:
preconNumber: 0, 0

  Running Model Checker with 1 checks ...Check contains Safe and does not have to refined by preconditions
try
try ready

    SMTSolver : stp
    CallStackBound : 0
    StopEncodingAfterCheckLoop : 0
    LoopUnrollBound : 1
    HavocLimit : 0
    PreconditionNumber : 0
    PreconditionLocation : jobs/130
    TimeOut : 300
    InitializedGlobals : false
    IgnoreMissingFunctions : true
    StopEncodingAfterCheck : false
    OverApproxVaArgs : false
    PreconditionCheckMemory : false
    PreconditionOnlyArguments : trueI [0] lib/ModelChecker/Verifier.cpp:247 | EntryPoint : control_uav
m_checker->run()

    Performing bounded model checking ...
      Performing pre-transformations on LLVM IR ...        0 sec [DONE]
        
      Performing logical encoding ...isMemset:   call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 6, i32 2, i1 false), !dbg !1400
isMemcpy:   call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast (%struct.servo* @servopos to i8*), i8* bitcast (%struct.servo* @servopacket to i8*), i64 18, i32 2, i1 false), !dbg !1405
isMemcpy:   call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast (%struct.imu* @imuval to i8*), i8* bitcast (%struct.imu* @imupacket to i8*), i64 128, i32 8, i1 false), !dbg !1407
isMemcpy:   call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast (%struct.gps* @gpsval to i8*), i8* bitcast (%struct.gps* @gpspacket to i8*), i64 64, i32 8, i1 false), !dbg !1408
isMemcpy:   call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast (%struct.nav* @navval to i8*), i8* bitcast (%struct.nav* @navpacket to i8*), i64 64, i32 8, i1 false), !dbg !1409

        Unrolling loop in function "send_servo_cmd" for 1 iterations succeeded.
        Unrolling loop in function "send_servo_cmd" for 18 iterations succeeded.getMatchingFunctions

        Transformed "send_servo_cmd" from 8 to 40 basic blocks and from 143 to 536 instructionsisMemset:   call void @llvm.memset.p0i8.i64(i8* %2, i8 0, i64 24, i32 16, i1 false), !dbg !1378

                                                           0 sec [DONE]
        Number of expressions:                          7245
        after encoding

      3 assertions before transformations (2 no_back_edge, 1 custom).

      Performing formula transformations ...
        Simplifier
          Number of rewrites                             712
        Fixed Memory Address Assigner
          Number of moved ops                             51
          Number of rewrites                             364
        Simplifier
          Number of moved ops                              0
          Number of rewrites                            2854
        Memory Model Encoder
          Number of moved ops                              0rewriteAllocaOprewriteStackAddressOp
rewriteAllocaOprewriteStackAddressOp

          Number of rewrites                               2
        Simplifier
          Number of moved ops                              0
          Number of rewrites                             314
        Simplifier
          Number of moved ops                              0
          Number of rewrites                          725468
        ToASC Analyser
          Memcpy/memset found                             no
        Byte-Based Memory Creator
        Instantiation-Based ToASC Simplifier
        Simplifier
        FP Abstraction
          Number of rewrites                             119

Abstracted floating point operations.  The result might be a false positive.

        Simplifier
          Number of moved ops                              0
          Number of rewrites                              18
                                                           0 sec [DONE]
        
      3 assertions remain after transformations (2 no_back_edge, 1 custom).
after rewriteFormula
after sanityCheckFormula

      Running SMT solver (STP with MiniSat) ...            0 sec [DONE]
        
                                                           0 sec [DONE]
      after performing Check
evaluateCheckerResultsViaRefinementLoop
checker.getResult() is Trace
checkOnlyPrecon: 0, size:1
getFailingCheckFor
setStatusMarkerAccordingToFailingInstruction
BranchInst - LoopBound
trying to exclude Assertions for Failing Instruction

    Rerunning SMT solver (STP with MiniSat) ...            0 sec [DONE]
      getCheckerResultAfterUpdatingMarker
Result is NoTrace

                                                           1 sec [DONE]
    allsafe
    
                                                           1 sec [DONE]
  