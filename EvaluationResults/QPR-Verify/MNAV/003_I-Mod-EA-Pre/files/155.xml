<SourceFile>
  <Line number="1">/*</Line>
  <Line number="2">*-----------------------------------------------------------------------------</Line>
  <Line number="3">*	file:	matrix.h</Line>
  <Line number="4">*	desc:	matrix mathematics header file</Line>
  <Line number="5">*	by:	    ko shu pui, patrick</Line>
  <Line number="6">*	date:	24 nov 91	v0.1b</Line>
  <Line number="7">*	revi:   Rodney Teo and Jung Soon Jang</Line>
  <Line number="8">*	ref:</Line>
  <Line number="9">*       [1] Mary L.Boas, &quot;Mathematical Methods in the Physical Sciene,&quot;</Line>
  <Line number="10">*	John Wiley &amp; Sons, 2nd Ed., 1983. Chap 3.</Line>
  <Line number="11">*</Line>
  <Line number="12">*-----------------------------------------------------------------------------</Line>
  <Line number="13">*/</Line>
  <Line number="14"></Line>
  <Line number="15">#ifndef _matrix_h</Line>
  <Line number="16">#define _matrix_h</Line>
  <Line number="17">#include &lt;stdio.h&gt;</Line>
  <Line number="18">/*</Line>
  <Line number="19">*-----------------------------------------------------------------------------</Line>
  <Line number="20">*	internal matrix structure</Line>
  <Line number="21">*-----------------------------------------------------------------------------</Line>
  <Line number="22">*/</Line>
  <Line number="23"></Line>
  <Line number="24">typedef struct {</Line>
  <Line number="25">	int	row;</Line>
  <Line number="26">	int	col;</Line>
  <Line number="27">	}	MATHEAD;</Line>
  <Line number="28"></Line>
  <Line number="29">typedef struct {</Line>
  <Line number="30">	MATHEAD	head;</Line>
  <Line number="31">	/*</Line>
  <Line number="32">	* only the starting address of the following will be</Line>
  <Line number="33">	* returned to the C programmer, like malloc() concept</Line>
  <Line number="34">	*/</Line>
  <Line number="35">	double	*matrix; // double</Line>
  <Line number="36">	}	MATBODY;</Line>
  <Line number="37"></Line>
  <Line number="38">typedef	double	**MATRIX;// double</Line>
  <Line number="39"></Line>
  <Line number="40">#define	Mathead(a)	((MATHEAD *)((MATHEAD *)(a) - 1))</Line>
  <Line number="41">#define MatRow(a)	(Mathead(a)-&gt;row)</Line>
  <Line number="42">#define	MatCol(a)	(Mathead(a)-&gt;col)</Line>
  <Line number="43"></Line>
  <Line number="44">/*</Line>
  <Line number="45">*----------------------------------------------------------------------------</Line>
  <Line number="46">*	mat_errors definitions</Line>
  <Line number="47">*----------------------------------------------------------------------------</Line>
  <Line number="48">*/</Line>
  <Line number="49">#define	MAT_MALLOC	1</Line>
  <Line number="50">#define MAT_FNOTOPEN	2</Line>
  <Line number="51">#define	MAT_FNOTGETMAT	3</Line>
  <Line number="52"></Line>
  <Line number="53">/*</Line>
  <Line number="54">*----------------------------------------------------------------------------</Line>
  <Line number="55">*	matrice types</Line>
  <Line number="56">*----------------------------------------------------------------------------</Line>
  <Line number="57">*/</Line>
  <Line number="58">#define UNDEFINED	-1</Line>
  <Line number="59">#define ZERO_MATRIX	0</Line>
  <Line number="60">#define	UNIT_MATRIX	1</Line>
  <Line number="61">#define	ONES_MATRIX	2</Line>
  <Line number="62"></Line>
  <Line number="63"></Line>
  <Line number="64">/* prototypes of matrix package */</Line>
  <Line number="65"></Line>
  <Line number="66">MATRIX mat_error	(int);</Line>
  <Line number="67">MATRIX _mat_creat	(int, int);</Line>
  <Line number="68">MATRIX mat_creat	(int, int, int);</Line>
  <Line number="69">MATRIX mat_fill		(MATRIX, int);</Line>
  <Line number="70">int mat_free		(MATRIX);</Line>
  <Line number="71">MATRIX mat_copy		(MATRIX, MATRIX);</Line>
  <Line number="72">MATRIX mat_copy1	(MATRIX, MATRIX);</Line>
  <Line number="73">MATRIX mat_colcopy1	(MATRIX, MATRIX, int, int);</Line>
  <Line number="74">int fgetmat		(MATRIX, FILE *fp);</Line>
  <Line number="75">MATRIX mat_dump     (MATRIX);</Line>
  <Line number="76">MATRIX mat_dumpf    (MATRIX, char *);</Line>
  <Line number="77">MATRIX mat_fdump	(MATRIX, FILE *fp);</Line>
  <Line number="78">MATRIX mat_fdumpf   (MATRIX, char *, FILE *fp);</Line>
  <Line number="79">MATRIX mat_add		(MATRIX, MATRIX, MATRIX);</Line>
  <Line number="80">MATRIX mat_sub		(MATRIX, MATRIX, MATRIX);</Line>
  <Line number="81">MATRIX mat_mul		(MATRIX, MATRIX,MATRIX);</Line>
  <Line number="82">MATRIX mat_mymul(MATRIX A,MATRIX B, MATRIX C, short m);</Line>
  <Line number="83">MATRIX mat_mymul1(MATRIX A,MATRIX B, MATRIX C, short m);</Line>
  <Line number="84">MATRIX mat_mymul2(MATRIX A,MATRIX B, MATRIX C, short m);</Line>
  <Line number="85">MATRIX mat_mymul3(MATRIX A,MATRIX B, MATRIX C, short m);</Line>
  <Line number="86">MATRIX mat_mymul4(MATRIX A,MATRIX B, MATRIX C, short m);</Line>
  <Line number="87">MATRIX mat_mymul5(MATRIX A,MATRIX B, MATRIX C, short m);</Line>
  <Line number="88">double mat_diagmul	(MATRIX);</Line>
  <Line number="89">MATRIX mat_tran		(MATRIX, MATRIX);</Line>
  <Line number="90">MATRIX mat_inv		(MATRIX,MATRIX);</Line>
  <Line number="91">MATRIX mat_SymToeplz	(MATRIX, MATRIX);</Line>
  <Line number="92">int mat_lu		(MATRIX, MATRIX);</Line>
  <Line number="93">MATRIX mat_backsubs1	(MATRIX, MATRIX, MATRIX, MATRIX, int);</Line>
  <Line number="94">MATRIX mat_lsolve	(MATRIX, MATRIX,MATRIX);</Line>
  <Line number="95">MATRIX mat_submat	(MATRIX, int, int, MATRIX);</Line>
  <Line number="96">double mat_cofact	(MATRIX, int, int);</Line>
  <Line number="97">double mat_det		(MATRIX);</Line>
  <Line number="98">double mat_minor	(MATRIX, int, int);</Line>
  <Line number="99">MATRIX mat_durbin       (MATRIX,MATRIX);</Line>
  <Line number="100">MATRIX mat_lsolve_durbin(MATRIX, MATRIX,MATRIX);</Line>
  <Line number="101">double mat_norm (MATRIX X, int column);</Line>
  <Line number="102">MATRIX mat_subcopy(MATRIX A, int row, int col, MATRIX B);</Line>
  <Line number="103">MATRIX mat_T321 (double pitch, double roll, double yaw, MATRIX);</Line>
  <Line number="104">MATRIX mat_round (MATRIX X, MATRIX C);</Line>
  <Line number="105">double mat_dot (MATRIX X, MATRIX Y);</Line>
  <Line number="106">MATRIX mat_scalMult (MATRIX X,double A, MATRIX C);</Line>
  <Line number="107">MATRIX mat_scalMul(MATRIX X,double A, MATRIX C);</Line>
  <Line number="108">#endif</Line>
  <Line number="109"></Line>
</SourceFile>
