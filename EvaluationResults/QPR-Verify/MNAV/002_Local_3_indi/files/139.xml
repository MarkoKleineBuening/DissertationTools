<SourceFile>
  <Line number="1">/* Copyright (C) 1991-2020 Free Software Foundation, Inc.</Line>
  <Line number="2">   This file is part of the GNU C Library.</Line>
  <Line number="3"></Line>
  <Line number="4">   The GNU C Library is free software; you can redistribute it and/or</Line>
  <Line number="5">   modify it under the terms of the GNU Lesser General Public</Line>
  <Line number="6">   License as published by the Free Software Foundation; either</Line>
  <Line number="7">   version 2.1 of the License, or (at your option) any later version.</Line>
  <Line number="8"></Line>
  <Line number="9">   The GNU C Library is distributed in the hope that it will be useful,</Line>
  <Line number="10">   but WITHOUT ANY WARRANTY; without even the implied warranty of</Line>
  <Line number="11">   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</Line>
  <Line number="12">   Lesser General Public License for more details.</Line>
  <Line number="13"></Line>
  <Line number="14">   You should have received a copy of the GNU Lesser General Public</Line>
  <Line number="15">   License along with the GNU C Library; if not, see</Line>
  <Line number="16">   &lt;https://www.gnu.org/licenses/&gt;.  */</Line>
  <Line number="17"></Line>
  <Line number="18">/*</Line>
  <Line number="19"> *	POSIX Standard: 7.1-2 General Terminal Interface	&lt;termios.h&gt;</Line>
  <Line number="20"> */</Line>
  <Line number="21"></Line>
  <Line number="22">#ifndef	_TERMIOS_H</Line>
  <Line number="23">#define	_TERMIOS_H	1</Line>
  <Line number="24"></Line>
  <Line number="25">#include &lt;features.h&gt;</Line>
  <Line number="26">#if defined __USE_XOPEN_EXTENDED || defined __USE_XOPEN2K8</Line>
  <Line number="27">/* We need `pid_t&apos;.  */</Line>
  <Line number="28"># include &lt;bits/types.h&gt;</Line>
  <Line number="29"># ifndef __pid_t_defined</Line>
  <Line number="30">typedef __pid_t pid_t;</Line>
  <Line number="31">#  define __pid_t_defined</Line>
  <Line number="32"># endif</Line>
  <Line number="33">#endif</Line>
  <Line number="34"></Line>
  <Line number="35">__BEGIN_DECLS</Line>
  <Line number="36"></Line>
  <Line number="37">/* Get the system-dependent definitions of `struct termios&apos;, `tcflag_t&apos;,</Line>
  <Line number="38">   `cc_t&apos;, `speed_t&apos;, and all the macros specifying the flag bits.  */</Line>
  <Line number="39">#include &lt;bits/termios.h&gt;</Line>
  <Line number="40"></Line>
  <Line number="41">#ifdef __USE_MISC</Line>
  <Line number="42">/* Compare a character C to a value VAL from the `c_cc&apos; array in a</Line>
  <Line number="43">   `struct termios&apos;.  If VAL is _POSIX_VDISABLE, no character can match it.  */</Line>
  <Line number="44"># define CCEQ(val, c)	((c) == (val) &amp;&amp; (val) != _POSIX_VDISABLE)</Line>
  <Line number="45">#endif</Line>
  <Line number="46"></Line>
  <Line number="47">/* Return the output baud rate stored in *TERMIOS_P.  */</Line>
  <Line number="48">extern speed_t cfgetospeed (const struct termios *__termios_p) __THROW;</Line>
  <Line number="49"></Line>
  <Line number="50">/* Return the input baud rate stored in *TERMIOS_P.  */</Line>
  <Line number="51">extern speed_t cfgetispeed (const struct termios *__termios_p) __THROW;</Line>
  <Line number="52"></Line>
  <Line number="53">/* Set the output baud rate stored in *TERMIOS_P to SPEED.  */</Line>
  <Line number="54">extern int cfsetospeed (struct termios *__termios_p, speed_t __speed) __THROW;</Line>
  <Line number="55"></Line>
  <Line number="56">/* Set the input baud rate stored in *TERMIOS_P to SPEED.  */</Line>
  <Line number="57">extern int cfsetispeed (struct termios *__termios_p, speed_t __speed) __THROW;</Line>
  <Line number="58"></Line>
  <Line number="59">#ifdef	__USE_MISC</Line>
  <Line number="60">/* Set both the input and output baud rates in *TERMIOS_OP to SPEED.  */</Line>
  <Line number="61">extern int cfsetspeed (struct termios *__termios_p, speed_t __speed) __THROW;</Line>
  <Line number="62">#endif</Line>
  <Line number="63"></Line>
  <Line number="64"></Line>
  <Line number="65">/* Put the state of FD into *TERMIOS_P.  */</Line>
  <Line number="66">extern int tcgetattr (int __fd, struct termios *__termios_p) __THROW;</Line>
  <Line number="67"></Line>
  <Line number="68">/* Set the state of FD to *TERMIOS_P.</Line>
  <Line number="69">   Values for OPTIONAL_ACTIONS (TCSA*) are in &lt;bits/termios.h&gt;.  */</Line>
  <Line number="70">extern int tcsetattr (int __fd, int __optional_actions,</Line>
  <Line number="71">		      const struct termios *__termios_p) __THROW;</Line>
  <Line number="72"></Line>
  <Line number="73"></Line>
  <Line number="74">#ifdef	__USE_MISC</Line>
  <Line number="75">/* Set *TERMIOS_P to indicate raw mode.  */</Line>
  <Line number="76">extern void cfmakeraw (struct termios *__termios_p) __THROW;</Line>
  <Line number="77">#endif</Line>
  <Line number="78"></Line>
  <Line number="79">/* Send zero bits on FD.  */</Line>
  <Line number="80">extern int tcsendbreak (int __fd, int __duration) __THROW;</Line>
  <Line number="81"></Line>
  <Line number="82">/* Wait for pending output to be written on FD.</Line>
  <Line number="83"></Line>
  <Line number="84">   This function is a cancellation point and therefore not marked with</Line>
  <Line number="85">   __THROW.  */</Line>
  <Line number="86">extern int tcdrain (int __fd);</Line>
  <Line number="87"></Line>
  <Line number="88">/* Flush pending data on FD.</Line>
  <Line number="89">   Values for QUEUE_SELECTOR (TC{I,O,IO}FLUSH) are in &lt;bits/termios.h&gt;.  */</Line>
  <Line number="90">extern int tcflush (int __fd, int __queue_selector) __THROW;</Line>
  <Line number="91"></Line>
  <Line number="92">/* Suspend or restart transmission on FD.</Line>
  <Line number="93">   Values for ACTION (TC[IO]{OFF,ON}) are in &lt;bits/termios.h&gt;.  */</Line>
  <Line number="94">extern int tcflow (int __fd, int __action) __THROW;</Line>
  <Line number="95"></Line>
  <Line number="96"></Line>
  <Line number="97">#if defined __USE_XOPEN_EXTENDED || defined __USE_XOPEN2K8</Line>
  <Line number="98">/* Get process group ID for session leader for controlling terminal FD.  */</Line>
  <Line number="99">extern __pid_t tcgetsid (int __fd) __THROW;</Line>
  <Line number="100">#endif</Line>
  <Line number="101"></Line>
  <Line number="102"></Line>
  <Line number="103">#ifdef __USE_MISC</Line>
  <Line number="104"># include &lt;sys/ttydefaults.h&gt;</Line>
  <Line number="105">#endif</Line>
  <Line number="106"></Line>
  <Line number="107">__END_DECLS</Line>
  <Line number="108"></Line>
  <Line number="109">#endif /* termios.h  */</Line>
</SourceFile>
