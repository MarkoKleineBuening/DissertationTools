runJobCommand
precondition analysis with entry:mat_creat
arguents: child
arguents: job
arguents: mode
arguents: precondition
handleJobInSeparateProcess0

Checking job 95 ...about to run job:
preconNumber: 5, 1

  Running Model Checker with 1 checks ...entry: mat_creat, functionName: _mat_creat
  <badref> = call double** @qpr.precondition._mat_creat(i32 %0, i32 %1)
entry: mat_creat, functionName: _mat_creat
entry: mat_creat, functionName: mat_creat
try
try ready

    SMTSolver : stp
    CallStackBound : 0
    StopEncodingAfterCheckLoop : 0
    LoopUnrollBound : 12
    HavocLimit : 0
    PreconditionNumber : 5
    PreconditionLocation : jobs/95
    TimeOut : 300
    InitializedGlobals : false
    IgnoreMissingFunctions : false
    StopEncodingAfterCheck : false
    OverApproxVaArgs : false
    PreconditionCheckMemory : false
    PreconditionOnlyArguments : trueI [0] lib/ModelChecker/Verifier.cpp:247 | EntryPoint : mat_creat
m_checker->run()

    Performing bounded model checking ...
      Performing pre-transformations on LLVM IR ...        0 sec [DONE]
        
      Performing logical encoding ...TODO MKB implement precondition handling: IE
Reading in precondition at: jobs/95/precondition__mat_creat.txt
preconFile: jobs/95/precondition__mat_creat.txt
ref: [underoverapprox]name of function arguments, argValue:  
ref: [underoverapprox]name of function arguments, argValue:  
name of function arguments line
param: i32 %arg0:1895565183
---name: i32 %arg0, value: 1895565183.
integer, char or other simple types
name: i32 %arg0
assuming that there are not more then 10 arguments
nameIndex: 0
nameID: 0
argument name: arg0
value: 1895565183
###new bool cond: bool % = compare(%arg0, %i32__1895565183)
param:  i32 %arg1:-2002911400
---name:  i32 %arg1, value: -2002911400.
integer, char or other simple types
name:  i32 %arg1
assuming that there are not more then 10 arguments
nameIndex: 1
nameID: 1
argument name: arg1
value: -2002911400
###added bool cond: bool % = or(%, %)
pruneOrAssert -- adding line boolCond: bool % = or(%, %)
param: i32 %arg0:2088538861
---name: i32 %arg0, value: 2088538861.
integer, char or other simple types
name: i32 %arg0
assuming that there are not more then 10 arguments
nameIndex: 0
nameID: 0
argument name: arg0
value: 2088538861
###new bool cond: bool % = compare(%arg0, %i32__2088538861)
param:  i32 %arg1:-1723366939
---name:  i32 %arg1, value: -1723366939.
integer, char or other simple types
name:  i32 %arg1
assuming that there are not more then 10 arguments
nameIndex: 1
nameID: 1
argument name: arg1
value: -1723366939
###added bool cond: bool % = or(%, %)
pruneOrAssert -- adding line boolCond: bool % = or(%, %)
param: i32 %arg0:2079719199
---name: i32 %arg0, value: 2079719199.
integer, char or other simple types
name: i32 %arg0
assuming that there are not more then 10 arguments
nameIndex: 0
nameID: 0
argument name: arg0
value: 2079719199
###new bool cond: bool % = compare(%arg0, %i32__2079719199)
param:  i32 %arg1:-18
---name:  i32 %arg1, value: -18.
integer, char or other simple types
name:  i32 %arg1
assuming that there are not more then 10 arguments
nameIndex: 1
nameID: 1
argument name: arg1
value: -18
###added bool cond: bool % = or(%, %)
pruneOrAssert -- adding line boolCond: bool % = or(%, %)
param: i32 %arg0:335847795
---name: i32 %arg0, value: 335847795.
integer, char or other simple types
name: i32 %arg0
assuming that there are not more then 10 arguments
nameIndex: 0
nameID: 0
argument name: arg0
value: 335847795
###new bool cond: bool % = compare(%arg0, %i32__335847795)
param:  i32 %arg1:-2014093719
---name:  i32 %arg1, value: -2014093719.
integer, char or other simple types
name:  i32 %arg1
assuming that there are not more then 10 arguments
nameIndex: 1
nameID: 1
argument name: arg1
value: -2014093719
###added bool cond: bool % = or(%, %)
pruneOrAssert -- adding line boolCond: bool % = or(%, %)
param: i32 %arg0:1140194820
---name: i32 %arg0, value: 1140194820.
integer, char or other simple types
name: i32 %arg0
assuming that there are not more then 10 arguments
nameIndex: 0
nameID: 0
argument name: arg0
value: 1140194820
###new bool cond: bool % = compare(%arg0, %i32__1140194820)
param:  i32 %arg1:-536870912
---name:  i32 %arg1, value: -536870912.
integer, char or other simple types
name:  i32 %arg1
assuming that there are not more then 10 arguments
nameIndex: 1
nameID: 1
argument name: arg1
value: -536870912
###added bool cond: bool % = or(%, %)
pruneOrAssert -- adding line boolCond: bool % = or(%, %)
Writing precondition type at: jobs/95/precondition_type_mat_creat.txt

Type of Precondition:
[underoverapprox]
precondition found, end encoding
                      0 sec [DONE]
        Number of expressions:                          6086
        after encoding

      5 assertions before transformations (5 custom).

      Performing formula transformations ...
        Simplifier
          Number of rewrites                              94
        Fixed Memory Address Assigner
          Number of moved ops                              5
          Number of rewrites                             364
        Simplifier
          Number of moved ops                              0
          Number of rewrites                            2730
        Memory Model Encoder
          Number of moved ops                              0
          Number of rewrites                               0
        Simplifier
          Number of rewrites                               0
        Simplifier
          Number of rewrites                               0
        ToASC Analyser
          Memcpy/memset found                             no
        Byte-Based Memory Creator
        Instantiation-Based ToASC Simplifier
        Simplifier
        FP Abstraction
          Number of rewrites                               0
        Simplifier
          Number of rewrites                               0
                                                           0 sec [DONE]
        
      5 assertions remain after transformations (5 custom).
after rewriteFormula
after sanityCheckFormula

      Running SMT solver (STP with MiniSat) ...            0 sec [DONE]
        
                                                           0 sec [DONE]
      after performing Check
evaluateCheckerResultsViaRefinementLoop
checker.getResult() is Trace
checkOnlyPrecon: 1, size:1
setCheckToUnsafe for precondition Instruction
checkID: 1438
setCheckToUnsafe
set check to unsafe
getCheckerResultAfterUpdatingMarker
failingInst is nullptr
Preconditions internal: 
i32 %arg0:335847795; (i32 %arg0:335847795)i32 %arg1:-2014093719; (i32 %arg1:2280873577)i32 %arg2:arbitrary; 
 function does not read memory: 0, checkValidLoad:0, checkMemory: 0
function does not read memory 

assumePair: i32 %arg0 = nondef() : 335847795
assumePair: i32 %arg1 = nondef() : -2014093719
assumePair: i32 %arg2 = nondef() : 0
error: No matching SMT expression for Op %arg2 (nondef) found!
    Rerunning SMT solver (STP with MiniSat) ...            0 sec [DONE]
      failingInst is nullptr
Preconditions internal: 
i32 %arg0:1140194820; (i32 %arg0:1140194820)i32 %arg1:-536870912; (i32 %arg1:3758096384)i32 %arg2:arbitrary; 
 function does not read memory: 0, checkValidLoad:0, checkMemory: 0
function does not read memory 

assumePair: i32 %arg0 = nondef() : 1140194820
assumePair: i32 %arg1 = nondef() : -536870912
assumePair: i32 %arg2 = nondef() : 0
error: No matching SMT expression for Op %arg2 (nondef) found!
    Rerunning SMT solver (STP with MiniSat) ...            0 sec [DONE]
      failingInst:   %2 = call double** @qpr.precondition._mat_creat(i32 %arg0, i32 %arg1), !dbg !1389
Preconditions internal: 
i32 %arg0:1895565183; (i32 %arg0:1895565183)i32 %arg1:-2002911400; (i32 %arg1:2292055896)i32 %arg2:arbitrary; 
 function does not read memory: 0, checkValidLoad:0, checkMemory: 0
function does not read memory 

assumePair: i32 %arg0 = nondef() : 1895565183
assumePair: i32 %arg1 = nondef() : -2002911400
assumePair: i32 %arg2 = nondef() : 0
error: No matching SMT expression for Op %arg2 (nondef) found!
    Rerunning SMT solver (STP with MiniSat) ...            0 sec [DONE]
      failingInst is nullptr
Preconditions internal: 
i32 %arg0:2079719199; (i32 %arg0:2079719199)i32 %arg1:-18; (i32 %arg1:4294967278)i32 %arg2:arbitrary; 
 function does not read memory: 0, checkValidLoad:0, checkMemory: 0
function does not read memory 

assumePair: i32 %arg0 = nondef() : 2079719199
assumePair: i32 %arg1 = nondef() : -18
assumePair: i32 %arg2 = nondef() : 0
error: No matching SMT expression for Op %arg2 (nondef) found!
    Rerunning SMT solver (STP with MiniSat) ...            0 sec [DONE]
      failingInst is nullptr
Preconditions internal: 
i32 %arg0:2088538861; (i32 %arg0:2088538861)i32 %arg1:-1723366939; (i32 %arg1:2571600357)i32 %arg2:arbitrary; 
 function does not read memory: 0, checkValidLoad:0, checkMemory: 0
function does not read memory 

assumePair: i32 %arg0 = nondef() : 2088538861
assumePair: i32 %arg1 = nondef() : -1723366939
assumePair: i32 %arg2 = nondef() : 0
error: No matching SMT expression for Op %arg2 (nondef) found!
    Rerunning SMT solver (STP with MiniSat) ...            0 sec [DONE]
      name of function arguments: Writing precondition at: jobs/95/precondition_mat_creat.txt

Generated Preconditions:
[underoverapprox]name of function arguments: 
i32 %arg0:335847795; i32 %arg1:-2014093719; i32 %arg2:arbitrary; 
i32 %arg0:1140194820; i32 %arg1:-536870912; i32 %arg2:arbitrary; 
i32 %arg0:1895565183; i32 %arg1:-2002911400; i32 %arg2:arbitrary; 
i32 %arg0:2079719199; i32 %arg1:-18; i32 %arg2:arbitrary; 
i32 %arg0:2088538861; i32 %arg1:-1723366939; i32 %arg2:arbitrary; 

                                                           0 sec [DONE]
    allunsafe
    
                                                           0 sec [DONE]
  