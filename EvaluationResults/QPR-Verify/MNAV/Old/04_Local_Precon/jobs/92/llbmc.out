runJobCommand
precondition analysis with entry:mat_creat
arguents: child
arguents: job
arguents: mode
arguents: precondition
handleJobInSeparateProcess0

Checking job 92 ...about to run job:
preconNumber: 5, 1

  Running Model Checker with 1 checks ...entry: mat_creat, functionName: _mat_creat
  <badref> = call double** @qpr.precondition._mat_creat(i32 %0, i32 %1)
entry: mat_creat, functionName: _mat_creat
entry: mat_creat, functionName: mat_creat
try
try ready

    SMTSolver : stp
    CallStackBound : 0
    StopEncodingAfterCheckLoop : 0
    LoopUnrollBound : 12
    HavocLimit : 0
    PreconditionNumber : 5
    PreconditionLocation : jobs/92
    TimeOut : 300
    InitializedGlobals : false
    IgnoreMissingFunctions : false
    StopEncodingAfterCheck : false
    OverApproxVaArgs : false
    PreconditionCheckMemory : false
    PreconditionOnlyArguments : trueI [0] lib/ModelChecker/Verifier.cpp:247 | EntryPoint : mat_creat
m_checker->run()

    Performing bounded model checking ...
      Performing pre-transformations on LLVM IR ...        0 sec [DONE]
        
      Performing logical encoding ...TODO MKB implement precondition handling: IE
Reading in precondition at: jobs/92/precondition__mat_creat.txt
preconFile: jobs/92/precondition__mat_creat.txt
ref: [underoverapprox]name of function arguments, argValue:  
ref: [underoverapprox]name of function arguments, argValue:  
name of function arguments line
param: i32 %arg0:1005977213
---name: i32 %arg0, value: 1005977213.
integer, char or other simple types
name: i32 %arg0
assuming that there are not more then 10 arguments
nameIndex: 0
nameID: 0
argument name: arg0
value: 1005977213
###new bool cond: bool % = compare(%arg0, %i32__1005977213)
param:  i32 %arg1:-536870911
---name:  i32 %arg1, value: -536870911.
integer, char or other simple types
name:  i32 %arg1
assuming that there are not more then 10 arguments
nameIndex: 1
nameID: 1
argument name: arg1
value: -536870911
###added bool cond: bool % = or(%, %)
pruneOrAssert -- adding line boolCond: bool % = or(%, %)
param: i32 %arg0:-1
---name: i32 %arg0, value: -1.
integer, char or other simple types
name: i32 %arg0
assuming that there are not more then 10 arguments
nameIndex: 0
nameID: 0
argument name: arg0
value: -1
###new bool cond: bool % = compare(%arg0, %i32__4294967295)
param:  i32 %arg1:201413274
---name:  i32 %arg1, value: 201413274.
integer, char or other simple types
name:  i32 %arg1
assuming that there are not more then 10 arguments
nameIndex: 1
nameID: 1
argument name: arg1
value: 201413274
###added bool cond: bool % = or(%, %)
pruneOrAssert -- adding line boolCond: bool % = or(%, %)
param: i32 %arg0:2079719037
---name: i32 %arg0, value: 2079719037.
integer, char or other simple types
name: i32 %arg0
assuming that there are not more then 10 arguments
nameIndex: 0
nameID: 0
argument name: arg0
value: 2079719037
###new bool cond: bool % = compare(%arg0, %i32__2079719037)
param:  i32 %arg1:-1073741823
---name:  i32 %arg1, value: -1073741823.
integer, char or other simple types
name:  i32 %arg1
assuming that there are not more then 10 arguments
nameIndex: 1
nameID: 1
argument name: arg1
value: -1073741823
###added bool cond: bool % = or(%, %)
pruneOrAssert -- adding line boolCond: bool % = or(%, %)
param: i32 %arg0:1542848125
---name: i32 %arg0, value: 1542848125.
integer, char or other simple types
name: i32 %arg0
assuming that there are not more then 10 arguments
nameIndex: 0
nameID: 0
argument name: arg0
value: 1542848125
###new bool cond: bool % = compare(%arg0, %i32__1542848125)
param:  i32 %arg1:-805306367
---name:  i32 %arg1, value: -805306367.
integer, char or other simple types
name:  i32 %arg1
assuming that there are not more then 10 arguments
nameIndex: 1
nameID: 1
argument name: arg1
value: -805306367
###added bool cond: bool % = or(%, %)
pruneOrAssert -- adding line boolCond: bool % = or(%, %)
param: i32 %arg0:-1
---name: i32 %arg0, value: -1.
integer, char or other simple types
name: i32 %arg0
assuming that there are not more then 10 arguments
nameIndex: 0
nameID: 0
argument name: arg0
value: -1
###new bool cond: bool % = compare(%arg0, %i32__4294967295)
param:  i32 %arg1:1830190951
---name:  i32 %arg1, value: 1830190951.
integer, char or other simple types
name:  i32 %arg1
assuming that there are not more then 10 arguments
nameIndex: 1
nameID: 1
argument name: arg1
value: 1830190951
###added bool cond: bool % = or(%, %)
pruneOrAssert -- adding line boolCond: bool % = or(%, %)
Writing precondition type at: jobs/92/precondition_type_mat_creat.txt

Type of Precondition:
[underoverapprox]
precondition found, end encoding
                      0 sec [DONE]
        Number of expressions:                          6085
        after encoding

      5 assertions before transformations (5 custom).

      Performing formula transformations ...
        Simplifier
          Number of rewrites                              94
        Fixed Memory Address Assigner
          Number of moved ops                              5
          Number of rewrites                             364
        Simplifier
          Number of moved ops                              0
          Number of rewrites                            2730
        Memory Model Encoder
          Number of moved ops                              0
          Number of rewrites                               0
        Simplifier
          Number of rewrites                               0
        Simplifier
          Number of rewrites                               0
        ToASC Analyser
          Memcpy/memset found                             no
        Byte-Based Memory Creator
        Instantiation-Based ToASC Simplifier
        Simplifier
        FP Abstraction
          Number of rewrites                               0
        Simplifier
          Number of rewrites                               0
                                                           0 sec [DONE]
        
      5 assertions remain after transformations (5 custom).
after rewriteFormula
after sanityCheckFormula

      Running SMT solver (STP with MiniSat) ...            0 sec [DONE]
        
                                                           0 sec [DONE]
      after performing Check
evaluateCheckerResultsViaRefinementLoop
checker.getResult() is Trace
checkOnlyPrecon: 1, size:1
setCheckToUnsafe for precondition Instruction
checkID: 1434
setCheckToUnsafe
set check to unsafe
getCheckerResultAfterUpdatingMarker
failingInst:   %2 = call double** @qpr.precondition._mat_creat(i32 %arg0, i32 %arg1), !dbg !1389
Preconditions internal: 
i32 %arg0:1005977213; (i32 %arg0:1005977213)i32 %arg1:-536870911; (i32 %arg1:3758096385)i32 %arg2:arbitrary; 
 function does not read memory: 0, checkValidLoad:0, checkMemory: 0
function does not read memory 

assumePair: i32 %arg0 = nondef() : 1005977213
assumePair: i32 %arg1 = nondef() : -536870911
assumePair: i32 %arg2 = nondef() : 0
error: No matching SMT expression for Op %arg2 (nondef) found!
    Rerunning SMT solver (STP with MiniSat) ...            0 sec [DONE]
      failingInst is nullptr
Preconditions internal: 
i32 %arg0:1542848125; (i32 %arg0:1542848125)i32 %arg1:-805306367; (i32 %arg1:3489660929)i32 %arg2:arbitrary; 
 function does not read memory: 0, checkValidLoad:0, checkMemory: 0
function does not read memory 

assumePair: i32 %arg0 = nondef() : 1542848125
assumePair: i32 %arg1 = nondef() : -805306367
assumePair: i32 %arg2 = nondef() : 0
error: No matching SMT expression for Op %arg2 (nondef) found!
    Rerunning SMT solver (STP with MiniSat) ...            0 sec [DONE]
      failingInst is nullptr
Preconditions internal: 
i32 %arg0:2079719037; (i32 %arg0:2079719037)i32 %arg1:-1073741823; (i32 %arg1:3221225473)i32 %arg2:arbitrary; 
 function does not read memory: 0, checkValidLoad:0, checkMemory: 0
function does not read memory 

assumePair: i32 %arg0 = nondef() : 2079719037
assumePair: i32 %arg1 = nondef() : -1073741823
assumePair: i32 %arg2 = nondef() : 0
error: No matching SMT expression for Op %arg2 (nondef) found!
    Rerunning SMT solver (STP with MiniSat) ...            0 sec [DONE]
      failingInst is nullptr
Preconditions internal: 
i32 %arg0:-1; (i32 %arg0:4294967295)i32 %arg1:201413274; (i32 %arg1:201413274)i32 %arg2:arbitrary; 
 function does not read memory: 0, checkValidLoad:0, checkMemory: 0
function does not read memory 

assumePair: i32 %arg0 = nondef() : -1
assumePair: i32 %arg1 = nondef() : 201413274
assumePair: i32 %arg2 = nondef() : 0
error: No matching SMT expression for Op %arg2 (nondef) found!
    Rerunning SMT solver (STP with MiniSat) ...            0 sec [DONE]
      failingInst is nullptr
Preconditions internal: 
i32 %arg0:-1; (i32 %arg0:4294967295)i32 %arg1:1830190951; (i32 %arg1:1830190951)i32 %arg2:arbitrary; 
 function does not read memory: 0, checkValidLoad:0, checkMemory: 0
function does not read memory 

assumePair: i32 %arg0 = nondef() : -1
assumePair: i32 %arg1 = nondef() : 1830190951
assumePair: i32 %arg2 = nondef() : 0
error: No matching SMT expression for Op %arg2 (nondef) found!
    Rerunning SMT solver (STP with MiniSat) ...            0 sec [DONE]
      name of function arguments: Writing precondition at: jobs/92/precondition_mat_creat.txt

Generated Preconditions:
[underoverapprox]name of function arguments: 
i32 %arg0:1005977213; i32 %arg1:-536870911; i32 %arg2:arbitrary; 
i32 %arg0:1542848125; i32 %arg1:-805306367; i32 %arg2:arbitrary; 
i32 %arg0:2079719037; i32 %arg1:-1073741823; i32 %arg2:arbitrary; 
i32 %arg0:-1; i32 %arg1:201413274; i32 %arg2:arbitrary; 
i32 %arg0:-1; i32 %arg1:1830190951; i32 %arg2:arbitrary; 

                                                           0 sec [DONE]
    allsafe
    
                                                           0 sec [DONE]
  