<SourceFile>
  <Line number="1">/* Copyright (C) 1992-2020 Free Software Foundation, Inc.</Line>
  <Line number="2">   This file is part of the GNU C Library.</Line>
  <Line number="3"></Line>
  <Line number="4">   The GNU C Library is free software; you can redistribute it and/or</Line>
  <Line number="5">   modify it under the terms of the GNU Lesser General Public</Line>
  <Line number="6">   License as published by the Free Software Foundation; either</Line>
  <Line number="7">   version 2.1 of the License, or (at your option) any later version.</Line>
  <Line number="8"></Line>
  <Line number="9">   The GNU C Library is distributed in the hope that it will be useful,</Line>
  <Line number="10">   but WITHOUT ANY WARRANTY; without even the implied warranty of</Line>
  <Line number="11">   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</Line>
  <Line number="12">   Lesser General Public License for more details.</Line>
  <Line number="13"></Line>
  <Line number="14">   You should have received a copy of the GNU Lesser General Public</Line>
  <Line number="15">   License along with the GNU C Library; if not, see</Line>
  <Line number="16">   &lt;https://www.gnu.org/licenses/&gt;.  */</Line>
  <Line number="17"></Line>
  <Line number="18">#ifndef	_SYS_RESOURCE_H</Line>
  <Line number="19">#define	_SYS_RESOURCE_H	1</Line>
  <Line number="20"></Line>
  <Line number="21">#include &lt;features.h&gt;</Line>
  <Line number="22"></Line>
  <Line number="23">/* Get the system-dependent definitions of structures and bit values.  */</Line>
  <Line number="24">#include &lt;bits/resource.h&gt;</Line>
  <Line number="25"></Line>
  <Line number="26">#ifndef __id_t_defined</Line>
  <Line number="27">typedef __id_t id_t;</Line>
  <Line number="28"># define __id_t_defined</Line>
  <Line number="29">#endif</Line>
  <Line number="30"></Line>
  <Line number="31">__BEGIN_DECLS</Line>
  <Line number="32"></Line>
  <Line number="33">/* The X/Open standard defines that all the functions below must use</Line>
  <Line number="34">   `int&apos; as the type for the first argument.  When we are compiling with</Line>
  <Line number="35">   GNU extensions we change this slightly to provide better error</Line>
  <Line number="36">   checking.  */</Line>
  <Line number="37">#if defined __USE_GNU &amp;&amp; !defined __cplusplus</Line>
  <Line number="38">typedef enum __rlimit_resource __rlimit_resource_t;</Line>
  <Line number="39">typedef enum __rusage_who __rusage_who_t;</Line>
  <Line number="40">typedef enum __priority_which __priority_which_t;</Line>
  <Line number="41">#else</Line>
  <Line number="42">typedef int __rlimit_resource_t;</Line>
  <Line number="43">typedef int __rusage_who_t;</Line>
  <Line number="44">typedef int __priority_which_t;</Line>
  <Line number="45">#endif</Line>
  <Line number="46"></Line>
  <Line number="47">/* Put the soft and hard limits for RESOURCE in *RLIMITS.</Line>
  <Line number="48">   Returns 0 if successful, -1 if not (and sets errno).  */</Line>
  <Line number="49">#ifndef __USE_FILE_OFFSET64</Line>
  <Line number="50">extern int getrlimit (__rlimit_resource_t __resource,</Line>
  <Line number="51">		      struct rlimit *__rlimits) __THROW;</Line>
  <Line number="52">#else</Line>
  <Line number="53"># ifdef __REDIRECT_NTH</Line>
  <Line number="54">extern int __REDIRECT_NTH (getrlimit, (__rlimit_resource_t __resource,</Line>
  <Line number="55">				       struct rlimit *__rlimits), getrlimit64);</Line>
  <Line number="56"># else</Line>
  <Line number="57">#  define getrlimit getrlimit64</Line>
  <Line number="58"># endif</Line>
  <Line number="59">#endif</Line>
  <Line number="60">#ifdef __USE_LARGEFILE64</Line>
  <Line number="61">extern int getrlimit64 (__rlimit_resource_t __resource,</Line>
  <Line number="62">			struct rlimit64 *__rlimits) __THROW;</Line>
  <Line number="63">#endif</Line>
  <Line number="64"></Line>
  <Line number="65">/* Set the soft and hard limits for RESOURCE to *RLIMITS.</Line>
  <Line number="66">   Only the super-user can increase hard limits.</Line>
  <Line number="67">   Return 0 if successful, -1 if not (and sets errno).  */</Line>
  <Line number="68">#ifndef __USE_FILE_OFFSET64</Line>
  <Line number="69">extern int setrlimit (__rlimit_resource_t __resource,</Line>
  <Line number="70">		      const struct rlimit *__rlimits) __THROW;</Line>
  <Line number="71">#else</Line>
  <Line number="72"># ifdef __REDIRECT_NTH</Line>
  <Line number="73">extern int __REDIRECT_NTH (setrlimit, (__rlimit_resource_t __resource,</Line>
  <Line number="74">				       const struct rlimit *__rlimits),</Line>
  <Line number="75">			   setrlimit64);</Line>
  <Line number="76"># else</Line>
  <Line number="77">#  define setrlimit setrlimit64</Line>
  <Line number="78"># endif</Line>
  <Line number="79">#endif</Line>
  <Line number="80">#ifdef __USE_LARGEFILE64</Line>
  <Line number="81">extern int setrlimit64 (__rlimit_resource_t __resource,</Line>
  <Line number="82">			const struct rlimit64 *__rlimits) __THROW;</Line>
  <Line number="83">#endif</Line>
  <Line number="84"></Line>
  <Line number="85">/* Return resource usage information on process indicated by WHO</Line>
  <Line number="86">   and put it in *USAGE.  Returns 0 for success, -1 for failure.  */</Line>
  <Line number="87">extern int getrusage (__rusage_who_t __who, struct rusage *__usage) __THROW;</Line>
  <Line number="88"></Line>
  <Line number="89">/* Return the highest priority of any process specified by WHICH and WHO</Line>
  <Line number="90">   (see above); if WHO is zero, the current process, process group, or user</Line>
  <Line number="91">   (as specified by WHO) is used.  A lower priority number means higher</Line>
  <Line number="92">   priority.  Priorities range from PRIO_MIN to PRIO_MAX (above).  */</Line>
  <Line number="93">extern int getpriority (__priority_which_t __which, id_t __who) __THROW;</Line>
  <Line number="94"></Line>
  <Line number="95">/* Set the priority of all processes specified by WHICH and WHO (see above)</Line>
  <Line number="96">   to PRIO.  Returns 0 on success, -1 on errors.  */</Line>
  <Line number="97">extern int setpriority (__priority_which_t __which, id_t __who, int __prio)</Line>
  <Line number="98">     __THROW;</Line>
  <Line number="99"></Line>
  <Line number="100">__END_DECLS</Line>
  <Line number="101"></Line>
  <Line number="102">#endif	/* sys/resource.h  */</Line>
</SourceFile>
