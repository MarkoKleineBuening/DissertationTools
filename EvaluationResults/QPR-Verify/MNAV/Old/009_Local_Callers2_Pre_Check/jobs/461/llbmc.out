runJobCommand
arguents: child
arguents: job
arguents: mode
handleJobInSeparateProcess0

Checking job 461 ...about to run job:
preconNumber: 3, 1

  Running Model Checker with 1 checks ...try
try ready

    SMTSolver : stp
    CallStackBound : 0
    StopEncodingAfterCheckLoop : 0
    LoopUnrollBound : 4
    HavocLimit : 0
    PreconditionNumber : 3
    PreconditionLocation : jobs/461
    TimeOut : 300
    InitializedGlobals : false
    IgnoreMissingFunctions : false
    StopEncodingAfterCheck : false
    OverApproxVaArgs : false
    PreconditionCheckMemory : false
    PreconditionOnlyArguments : trueI [0] lib/ModelChecker/Verifier.cpp:247 | EntryPoint : AHRS_Algorithm
m_checker->run()

    Performing bounded model checking ...
      Unrolling loop in function "AHRS_Algorithm" for 4 iterations succeeded.
      Unrolling loop in function "AHRS_Algorithm" for 7 iterations succeeded.
      Unrolling loop in function "AHRS_Algorithm" for 4 iterations succeeded.
      Unrolling loop in function "AHRS_Algorithm" for 7 iterations succeeded.
      Unrolling loop in function "AHRS_Algorithm" for 3 iterations succeeded.
      Unrolling loop in function "AHRS_Algorithm" for 7 iterations succeeded.
      Unrolling loop in function "AHRS_Algorithm" for 4 iterations succeeded.
      Transformed "AHRS_Algorithm" from 35 to 86 basic blocks and from 1180 to 2157 instructions
      Performing pre-transformations on LLVM IR ...        0 sec [DONE]
        
      Performing logical encoding ...size Alloca: 1
isMemset:   call void @llvm.memset.p0i8.i64(i8* %4, i8 0, i64 24, i32 16, i1 false), !dbg !1399
isMemset:   call void @llvm.memset.p0i8.i64(i8* %5, i8 0, i64 24, i32 16, i1 false), !dbg !1401
isMemset:   call void @llvm.memset.p0i8.i64(i8* %6, i8 0, i64 16, i32 16, i1 false), !dbg !1403
isMemset:   call void @llvm.memset.p0i8.i64(i8* %7, i8 0, i64 32, i32 16, i1 false), !dbg !1406

        Unrolling loop in function "mat_mymul2" for 7 iterations succeeded.
        Unrolling loop in function "mat_mymul2" for 3 iterations succeeded.
        Unrolling loop in function "mat_mymul2" for 4 iterations succeeded.
        Unrolling loop in function "mat_mymul2" for 4 iterations succeeded.
        Unrolling loop in function "mat_mymul2" for 4 iterations succeeded.
        Transformed "mat_mymul2" from 21 to 284 basic blocks and from 122 to 2890 instructions
        Unrolling loop in function "mat_mymul3" for 3 iterations succeeded.
        Unrolling loop in function "mat_mymul3" for 7 iterations succeeded.
        Unrolling loop in function "mat_mymul3" for 4 iterations succeeded.
        Unrolling loop in function "mat_mymul3" for 4 iterations succeeded.
        Unrolling loop in function "mat_mymul3" for 4 iterations succeeded.
        Transformed "mat_mymul3" from 21 to 296 basic blocks and from 122 to 2982 instructions
        Unrolling loop in function "mat_mymul4" for 4 iterations succeeded.
        Unrolling loop in function "mat_mymul4" for 4 iterations succeeded.
        Unrolling loop in function "mat_mymul4" for 4 iterations succeeded.
        Transformed "mat_mymul4" from 13 to 232 basic blocks and from 88 to 2674 instructions
        Unrolling loop in function "mat_mymul" for 4 iterations succeeded.
        Unrolling loop in function "mat_mymul" for 4 iterations succeeded.
        Unrolling loop in function "mat_mymul" for 4 iterations succeeded.
        Transformed "mat_mymul" from 13 to 232 basic blocks and from 88 to 2674 instructions
        Unrolling loop in function "mat_inv" for 4 iterations succeeded.
        Transformed "mat_inv" from 20 to 27 basic blocks and from 96 to 144 instructions
        Unrolling loop in function "_mat_creat" for 4 iterations succeeded.
        Transformed "_mat_creat" from 10 to 20 basic blocks and from 54 to 117 instructions
        Transformed "mat_error" from 5 to 10 basic blocks and from 10 to 19 instructions
        Unrolling loop in function "mat_fill" for 4 iterations succeeded.
        Unrolling loop in function "mat_fill" for 4 iterations succeeded.
        Transformed "mat_fill" from 18 to 159 basic blocks and from 67 to 679 instructions
        Unrolling loop in function "mat_copy" for 4 iterations succeeded.
        Unrolling loop in function "mat_copy" for 4 iterations succeeded.
        Transformed "mat_copy" from 9 to 56 basic blocks and from 49 to 429 instructions
        Unrolling loop in function "mat_lu" for 4 iterations succeeded.
        Unrolling loop in function "mat_lu" for 4 iterations succeeded.
        Unrolling loop in function "mat_lu" for 4 iterations succeeded.
        Unrolling loop in function "mat_lu" for 4 iterations succeeded.
        Unrolling loop in function "mat_lu" for 4 iterations succeeded.
        Transformed "mat_lu" from 28 to 333 basic blocks and from 239 to 4803 instructions
        Unrolling loop in function "mat_backsubs1" for 4 iterations succeeded.
        Unrolling loop in function "mat_backsubs1" for 4 iterations succeeded.
        Unrolling loop in function "mat_backsubs1" for 4 iterations succeeded.
        Unrolling loop in function "mat_backsubs1" for 4 iterations succeeded.
        Transformed "mat_backsubs1" from 17 to 111 basic blocks and from 201 to 1557 instructions
        Unrolling loop in function "mat_free" for 4 iterations succeeded.
        Transformed "mat_free" from 8 to 15 basic blocks and from 33 to 79 instructions
        Unrolling loop in function "mat_mul" for 4 iterations succeeded.
        Unrolling loop in function "mat_mul" for 4 iterations succeeded.
        Unrolling loop in function "mat_mul" for 4 iterations succeeded.
        Transformed "mat_mul" from 13 to 232 basic blocks and from 82 to 2416 instructions
        Unrolling loop in function "mat_mymul1" for 4 iterations succeeded.
        Unrolling loop in function "mat_mymul1" for 4 iterations succeeded.
        Unrolling loop in function "mat_mymul1" for 4 iterations succeeded.
        Transformed "mat_mymul1" from 13 to 232 basic blocks and from 88 to 2482 instructions
        Unrolling loop in function "mat_sub" for 4 iterations succeeded.
        Unrolling loop in function "mat_sub" for 4 iterations succeeded.
        Transformed "mat_sub" from 9 to 56 basic blocks and from 58 to 543 instructions
        Unrolling loop in function "mat_mymul5" for 4 iterations succeeded.
        Unrolling loop in function "mat_mymul5" for 4 iterations succeeded.
        Unrolling loop in function "mat_mymul5" for 4 iterations succeeded.
        Unrolling loop in function "mat_mymul5" for 4 iterations succeeded.
        Unrolling loop in function "mat_mymul5" for 4 iterations succeeded.
        Transformed "mat_mymul5" from 21 to 287 basic blocks and from 136 to 3132 instructions
                                                           0 sec [DONE]
        Number of expressions:                         78910
        after encoding

      441 assertions before transformations (57 no_function_call, 376 no_back_edge, 7 custom, 1 no_unreachable_executed).

      Performing formula transformations ...
        Simplifier
          Number of rewrites                           48984
        Fixed Memory Address Assigner
          Number of moved ops                             10
          Number of rewrites                             395
        Simplifier
          Number of moved ops                              1
          Number of rewrites                            3214
        Memory Model Encoder
          Number of moved ops                              0rewriteAllocaOprewriteStackAddressOp
rewriteAllocaOprewriteStackAddressOp
rewriteAllocaOprewriteStackAddressOp
rewriteAllocaOprewriteStackAddressOp
rewriteAllocaOprewriteStackAddressOp

          Number of rewrites                               5
        Simplifier
          Number of moved ops                              0
          Number of rewrites                           12999
        Simplifier
          Number of moved ops                              0
          Number of rewrites                           21252
        ToASC Analyser
          Memcpy/memset found                             no
        Byte-Based Memory Creator
        Instantiation-Based ToASC Simplifier
        Simplifier
        FP Abstraction
          Number of rewrites                            4232

Abstracted floating point operations.  The result might be a false positive.

        Simplifier
          Number of moved ops                              0
          Number of rewrites                              70
                                                           0 sec [DONE]
        
      441 assertions remain after transformations (57 no_function_call, 376 no_back_edge, 7 custom, 1 no_unreachable_executed).
after rewriteFormula
after sanityCheckFormula

      Running SMT solver (STP with MiniSat) ...            0 sec [DONE]
        
                                                           0 sec [DONE]
      after performing Check
evaluateCheckerResultsViaRefinementLoop
checker.getResult() is Trace
checkOnlyPrecon: 0, size:1
getFailingCheckFor
setStatusMarkerAccordingToFailingInstruction
getCheckerResultAfterUpdatingMarker
failingInst:   %3 = call i32 @clock_gettime(i32 0, %struct.timeval.141* @get_Time.tset) #9, !dbg !1380
Preconditions internal: 

 function does not read memory: 0, checkValidLoad:0, checkMemory: 0
function does not read memory 


    Rerunning SMT solver (STP with MiniSat) ...            0 sec [DONE]
      failingInst:   %3 = call i32 @clock_gettime(i32 0, %struct.timeval.141* @get_Time.tset) #9, !dbg !1380
Preconditions internal: 

 function does not read memory: 0, checkValidLoad:0, checkMemory: 0
function does not read memory 


    Rerunning SMT solver (STP with MiniSat) ...            0 sec [DONE]
      failingInst:   %3 = call i32 @clock_gettime(i32 0, %struct.timeval.141* @get_Time.tset) #9, !dbg !1380
Preconditions internal: 

 function does not read memory: 0, checkValidLoad:0, checkMemory: 0
function does not read memory 


    Rerunning SMT solver (STP with MiniSat) ...            0 sec [DONE]
      name of function arguments: Writing precondition at: jobs/461/precondition_AHRS_Algorithm.txt

Generated Preconditions:
[underoverapprox]name of function arguments: 




                                                           0 sec [DONE]
    allsafe
    
                                                           0 sec [DONE]
  