runJobCommand
arguents: child
arguents: job
arguents: mode
handleJobInSeparateProcess0

Checking job 137 ...about to run job:
preconNumber: 5, 1

  Running Model Checker with 1 checks ...try
try ready

    SMTSolver : stp
    CallStackBound : 0
    StopEncodingAfterCheckLoop : 0
    LoopUnrollBound : 12
    HavocLimit : 0
    PreconditionNumber : 5
    PreconditionLocation : jobs/137
    TimeOut : 300
    InitializedGlobals : false
    IgnoreMissingFunctions : false
    StopEncodingAfterCheck : false
    OverApproxVaArgs : false
    PreconditionCheckMemory : false
    PreconditionOnlyArguments : trueI [0] lib/ModelChecker/Verifier.cpp:247 | EntryPoint : EcefToEnu
m_checker->run()

    Performing bounded model checking ...
      Unrolling loop in function "EcefToEnu" for 3 iterations succeeded.
      Transformed "EcefToEnu" from 5 to 8 basic blocks and from 136 to 172 instructions
      Performing pre-transformations on LLVM IR ...        0 sec [DONE]
        
      Performing logical encoding ...size Alloca: 1
size Alloca: 1
size Alloca: 1

        Unrolling loop in function "_mat_creat" for 12 iterations succeeded.
        Transformed "_mat_creat" from 10 to 44 basic blocks and from 54 to 277 instructions
        Transformed "mat_error" from 5 to 10 basic blocks and from 10 to 19 instructions
        Unrolling loop in function "mat_fill" for 12 iterations succeeded.
        Unrolling loop in function "mat_fill" for 12 iterations succeeded.
        Transformed "mat_fill" from 18 to 1223 basic blocks and from 67 to 5439 instructions
        Unrolling loop in function "mat_copy" for 12 iterations succeeded.
        Unrolling loop in function "mat_copy" for 12 iterations succeeded.
        Transformed "mat_copy" from 9 to 352 basic blocks and from 49 to 3269 instructions
        Unrolling loop in function "mat_sub" for 12 iterations succeeded.
        Unrolling loop in function "mat_sub" for 12 iterations succeeded.
        Transformed "mat_sub" from 9 to 352 basic blocks and from 58 to 4279 instructions
        Unrolling loop in function "mat_mul" for 12 iterations succeeded.
        Unrolling loop in function "mat_mul" for 12 iterations succeeded.
        Unrolling loop in function "mat_mul" for 12 iterations succeeded.
        Transformed "mat_mul" from 13 to 4240 basic blocks and from 82 to 55688 instructions
        Unrolling loop in function "mat_free" for 12 iterations succeeded.
        Transformed "mat_free" from 8 to 31 basic blocks and from 33 to 191 instructions
                                                           0 sec [DONE]
        Number of expressions:                        179863
        after encoding

      2035 assertions before transformations (48 no_function_call, 259 no_back_edge, 1728 custom).

      Performing formula transformations ...
        Simplifier
          Number of rewrites                          122045
        Fixed Memory Address Assigner
          Number of moved ops                              3
          Number of rewrites                             497
        Simplifier
          Number of moved ops                              3
          Number of rewrites                           38661
        Memory Model Encoder
          Number of moved ops                              0
          Number of rewrites                               0
        Simplifier
          Number of rewrites                               2
        Simplifier
          Number of moved ops                              0
          Number of rewrites                               0
        ToASC Analyser
          Memcpy/memset found                             no
        Byte-Based Memory Creator
        Instantiation-Based ToASC Simplifier
        Simplifier
        FP Abstraction
          Number of rewrites                            7962

Abstracted floating point operations.  The result might be a false positive.

        Simplifier
          Number of rewrites                               0
                                                           0 sec [DONE]
        
      2035 assertions remain after transformations (48 no_function_call, 259 no_back_edge, 1728 custom).
after rewriteFormula
after sanityCheckFormula

      Running SMT solver (STP with MiniSat) ...           88 sec [DONE]
        
                                                          89 sec [DONE]
      after performing Check
evaluateCheckerResultsViaRefinementLoop
checker.getResult() is Trace
checkOnlyPrecon: 0, size:1
getFailingCheckFor
setStatusMarkerAccordingToFailingInstruction
BranchInst - LoopBound
trying to exclude Assertions for Failing Instruction

    Rerunning SMT solver (STP with MiniSat) ...           88 sec [DONE]
      checker.getResult() is Trace
checkOnlyPrecon: 0, size:1
getFailingCheckFor
setStatusMarkerAccordingToFailingInstruction
getCheckerResultAfterUpdatingMarker
failingInst:   %6 = call double @sin(double %5) #9, !dbg !1396
Preconditions internal: 

 function does not read memory: 0, checkValidLoad:0, checkMemory: 0
function does not read memory 


    Rerunning SMT solver (STP with MiniSat) ...           86 sec [DONE]
      failingInst:   %6 = call double @sin(double %5) #9, !dbg !1396
Preconditions internal: 

 function does not read memory: 0, checkValidLoad:0, checkMemory: 0
function does not read memory 


    Rerunning SMT solver (STP with MiniSat) ...n for Op %arg1 (nondef) found!
    Rerunning SMT solver (STP with MiniSat) ...            0 sec [DONE]
      failingInst:   %4 = call double @cos(double %3) #9, !dbg !1397
Preconditions internal: 
double %arg1:arbitrary; 
 function does not read memory: 0, checkValidLoad:0, checkMemory: 0
function does not read memory 

assumePair: fp_11_52 %arg1 = nondef() : 0.0E+0
error: No matching SMT expression for Op %arg1 (nondef) found!
    Rerunning SMT solver (STP with MiniSat) ...            0 sec [DONE]
      name of function arguments: Writing precondition at: jobs/137/precondition_EulerToDcm.txt

Generated Preconditions:
[underoverapprox]name of function arguments: 
double %arg1:arbitrary; 
double %arg1:arbitrary; 
double %arg1:arbitrary; 
double %arg1:arbitrary; 
double %arg1:arbitrary; 

                                                           0 sec [DONE]
    allsafe
    
                                                           0 sec [DONE]
                 no
        Byte-Based Memory Creator
        Instantiation-Based ToASC Simplifier
        Simplifier
        FP Abstraction
          Number of rewrites                           79947

Abstracted floating point operations.  The result might be a false positive.

        Simplifier
          Number of rewrites                             314
                                                           3 sec [DONE]
        
      16127 assertions remain after transformations (191 no_function_call, 2111 no_back_edge, 13824 custom, 1 no_unreachable_executed).
after rewriteFormula
after sanityCheckFormula

      Running SMT solver (STP with MiniSat) ...            0 sec [DONE]
        
                                                           5 sec [DONE]
      after performing Check
evaluateCheckerResultsViaRefinementLoop
checker.getResult() is Trace
checkOnlyPrecon: 0, size:1
getFailingCheckFor
setStatusMarkerAccordingToFailingInstruction
getCheckerResultAfterUpdatingMarker
failingInst:   %3 = call i32 @clock_gettime(i32 0, %struct.timeval.141* @get_Time.tset) #9, !dbg !1380
Preconditions internal: 

 function does not read memory: 0, checkValidLoad:0, checkMemory: 0
function does not read memory 


    Rerunning SMT solver (STP with MiniSat) ...            0 sec [DONE]
      failingInst:   %3 = call i32 @clock_gettime(i32 0, %struct.timeval.141* @get_Time.tset) #9, !dbg !1380
Preconditions internal: 

 function does not read memory: 0, checkValidLoad:0, checkMemory: 0
function does not read memory 


    Rerunning SMT solver (STP with MiniSat) ...            0 sec [DONE]
      failingInst:   %3 = call i32 @clock_gettime(i32 0, %struct.timeval.141* @get_Time.tset) #9, !dbg !1380
Preconditions internal: 

 function does not read memory: 0, checkValidLoad:0, checkMemory: 0
function does not read memory 


    Rerunning SMT solver (STP with MiniSat) ...            0 sec [DONE]
      failingInst:   %3 = call i32 @clock_gettime(i32 0, %struct.timeval.141* @get_Time.tset) #9, !dbg !1380
Preconditions internal: 

 function does not read memory: 0, checkValidLoad:0, checkMemory: 0
function does not read memory 


    Rerunning SMT solver (STP with MiniSat) ...            0 sec [DONE]
      failingInst:   %3 = call i32 @clock_gettime(i32 0, %struct.timeval.141* @get_Time.tset) #9, !dbg !1380
Preconditions internal: 

 function does not read memory: 0, checkValidLoad:0, checkMemory: 0
function does not read memory 


    Rerunning SMT solver (STP with MiniSat) ...            0 sec [DONE]
      name of function arguments: Writing precondition at: jobs/137/precondition_navigation_algorithm.txt

Generated Preconditions:
[underoverapprox]name of function arguments: 






                                                           5 sec [DONE]
    allsafe
    
                                                           5 sec [DONE]
  ction
getCheckerResultAfterUpdatingMarker
failingInst:   %3 = call i32 @clock_gettime(i32 0, %struct.timeval.141* @get_Time.tset) #9, !dbg !1380
Preconditions internal: 

 function does not read memory: 0, checkValidLoad:0, checkMemory: 0
function does not read memory 


    Rerunning SMT solver (STP with MiniSat) ...            0 sec [DONE]
      failingInst:   %3 = call i32 @clock_gettime(i32 0, %struct.timeval.141* @get_Time.tset) #9, !dbg !1380
Preconditions internal: 

 function does not read memory: 0, checkValidLoad:0, checkMemory: 0
function does not read memory 


    Rerunning SMT solver (STP with MiniSat) ...            0 sec [DONE]
      failingInst:   %3 = call i32 @clock_gettime(i32 0, %struct.timeval.141* @get_Time.tset) #9, !dbg !1380
Preconditions internal: 

 function does not read memory: 0, checkValidLoad:0, checkMemory: 0
function does not read memory 


    Rerunning SMT solver (STP with MiniSat) ...            0 sec [DONE]
      failingInst:   %3 = call i32 @clock_gettime(i32 0, %struct.timeval.141* @get_Time.tset) #9, !dbg !1380
Preconditions internal: 

 function does not read memory: 0, checkValidLoad:0, checkMemory: 0
function does not read memory 


    Rerunning SMT solver (STP with MiniSat) ...            0 sec [DONE]
      failingInst:   %3 = call i32 @clock_gettime(i32 0, %struct.timeval.141* @get_Time.tset) #9, !dbg !1380
Preconditions internal: 

 function does not read memory: 0, checkValidLoad:0, checkMemory: 0
function does not read memory 


    Rerunning SMT solver (STP with MiniSat) ...            0 sec [DONE]
      name of function arguments: Writing precondition at: jobs/137/precondition_AHRS_Algorithm.txt

Generated Preconditions:
[underoverapprox]name of function arguments: 






                                                           7 sec [DONE]
    allsafe
    
                                                           7 sec [DONE]
  