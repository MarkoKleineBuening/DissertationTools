runJobCommand
arguents: child
arguents: job
arguents: mode
handleJobInSeparateProcess0

Checking job 257 ...about to run job:
preconNumber: 5, 1

  Running Model Checker with 1 checks ...try
try ready

    SMTSolver : stp
    CallStackBound : 0
    StopEncodingAfterCheckLoop : 0
    LoopUnrollBound : 12
    HavocLimit : 0
    PreconditionNumber : 5
    PreconditionLocation : jobs/257
    TimeOut : 300
    InitializedGlobals : false
    IgnoreMissingFunctions : false
    StopEncodingAfterCheck : false
    OverApproxVaArgs : false
    PreconditionCheckMemory : false
    PreconditionOnlyArguments : trueI [0] lib/ModelChecker/Verifier.cpp:247 | EntryPoint : imugps_acq
m_checker->run()

    Performing bounded model checking ...
      Unrolling loop in function "imugps_acq" for 12 iterations succeeded.
      Unrolling loop in function "imugps_acq" for 12 iterations succeeded.
      Unrolling loop in function "imugps_acq" for 12 iterations succeeded.
      Unrolling loop in function "imugps_acq" for 12 iterations succeeded.
      Unrolling loop in function "imugps_acq" for 12 iterations succeeded.
      Unrolling loop in function "imugps_acq" for 12 iterations succeeded.
      Unrolling loop in function "imugps_acq" for 12 iterations succeeded.
      Unrolling loop in function "imugps_acq" for 12 iterations succeeded.
      Unrolling loop in function "imugps_acq" for 12 iterations succeeded.
      Unrolling loop in function "imugps_acq" for 12 iterations succeeded.getMatchingFunctions
res.push_back: read
getMatchingFunctions
res.push_back: read
getMatchingFunctions
res.push_back: read
getMatchingFunctions
res.push_back: read
getMatchingFunctions
res.push_back: read
getMatchingFunctions
res.push_back: read
getMatchingFunctions
res.push_back: read
getMatchingFunctions
res.push_back: read
getMatchingFunctions
res.push_back: read
getMatchingFunctions
res.push_back: read
getMatchingFunctions
res.push_back: read
getMatchingFunctions
res.push_back: read
getMatchingFunctions
res.push_back: read
getMatchingFunctions
res.push_back: read
getMatchingFunctions
res.push_back: read
getMatchingFunctions
res.push_back: read
getMatchingFunctions
res.push_back: read
getMatchingFunctions
res.push_back: read
getMatchingFunctions
res.push_back: read
getMatchingFunctions
res.push_back: read
getMatchingFunctions
res.push_back: read
getMatchingFunctions
res.push_back: read
getMatchingFunctions
res.push_back: read
getMatchingFunctions
res.push_back: read
getMatchingFunctions
res.push_back: read
getMatchingFunctions
res.push_back: read
getMatchingFunctions
res.push_back: read
getMatchingFunctions
res.push_back: read
getMatchingFunctions
res.push_back: read
getMatchingFunctions
res.push_back: read
getMatchingFunctions
res.push_back: read
getMatchingFunctions
res.push_back: read
getMatchingFunctions
res.push_back: read
getMatchingFunctions
res.push_back: read
getMatchingFunctions
res.push_back: read
getMatchingFunctions
res.push_back: read
getMatchingFunctions
res.push_back: read
getMatchingFunctions
res.push_back: read
getMatchingFunctions
res.push_back: read
getMatchingFunctions
res.push_back: read
getMatchingFunctions
res.push_back: read
getMatchingFunctions
res.push_back: read
getMatchingFunctions
res.push_back: read
getMatchingFunctions
res.push_back: read
getMatchingFunctions
res.push_back: read
getMatchingFunctions
res.push_back: read
getMatchingFunctions
res.push_back: read
getMatchingFunctions
res.push_back: read

      Transformed "imugps_acq" from 58 to 3736 basic blocks and from 279 to 24976 instructions
      Performing pre-transformations on LLVM IR ...        0 sec [DONE]
        
      Performing logical encoding ...size Alloca: 1
isMemset:   call void @llvm.memset.p0i8.i64(i8* %8, i8 0, i64 86, i32 16, i1 false), !dbg !1424
isMemcpy:   call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @imugps_acq.SCALED_MODE, i32 0, i32 0), i64 11, i32 1, i1 false), !dbg !1429
isMemcpy:   call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @imugps_acq.CH_BAUD, i32 0, i32 0), i64 11, i32 1, i1 false), !dbg !1431
isMemcpy:   call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @imugps_acq.CH_SAMP, i32 0, i32 0), i64 11, i32 1, i1 false), !dbg !1433
isMemcpy:   call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @imugps_acq.CH_SERVO, i32 0, i32 0), i64 7, i32 1, i1 false), !dbg !1436
isMemset:   call void @llvm.memset.p0i8.i64(i8* %10, i8 0, i64 60, i32 4, i1 false), !dbg !1413
isMemset:   call void @llvm.memset.p0i8.i64(i8* %10, i8 0, i64 60, i32 4, i1 false), !dbg !1413

        Unrolling loop in function "checksum" for 12 iterations succeeded.
        Transformed "checksum" from 8 to 31 basic blocks and from 76 to 359 instructions
        Transformed "decode_imupacket" from 5 to 9 basic blocks and from 606 to 613 instructions
                                                           0 sec [DONE]
        Number of expressions:                         88497
        after encoding

      3017 assertions before transformations (2761 no_function_call, 239 no_back_edge, 13 custom, 4 no_unreachable_executed).

      Performing formula transformations ...
        Simplifier
          Number of rewrites                           58018
        Fixed Memory Address Assigner
          Number of moved ops                             14
          Number of rewrites                             365
        Simplifier
          Number of moved ops                              1
          Number of rewrites                            5637
        Memory Model Encoder
          Number of moved ops                              1rewriteAllocaOprewriteStackAddressOp
rewriteAllocaOprewriteStackAddressOp
rewriteAllocaOprewriteStackAddressOp
rewriteAllocaOprewriteStackAddressOp
rewriteAllocaOprewriteStackAddressOp
rewriteAllocaOprewriteStackAddressOp
rewriteAllocaOprewriteStackAddressOp
rewriteAllocaOprewriteStackAddressOp
rewriteAllocaOprewriteStackAddressOp
rewriteAllocaOprewriteStackAddressOp
rewriteAllocaOprewriteStackAddressOp
rewriteAllocaOprewriteStackAddressOp
rewriteAllocaOprewriteStackAddressOp
rewriteAllocaOprewriteStackAddressOp
rewriteAllocaOprewriteStackAddressOp
rewriteAllocaOprewriteStackAddressOp
rewriteAllocaOprewriteStackAddressOp
rewriteAllocaOprewriteStackAddressOp
rewriteAllocaOprewriteStackAddressOp
rewriteAllocaOprewriteStackAddressOp
rewriteAllocaOprewriteStackAddressOp
rewriteAllocaOprewriteStackAddressOp
rewriteAllocaOprewriteStackAddressOp
rewriteAllocaOprewriteStackAddressOp
rewriteAllocaOprewriteStackAddressOp
rewriteAllocaOprewriteStackAddressOp
rewriteAllocaOprewriteStackAddressOp
rewriteAllocaOprewriteStackAddressOp
rewriteAllocaOprewriteStackAddressOp
rewriteAllocaOprewriteStackAddressOp
rewriteAllocaOprewriteStackAddressOp
rewriteAllocaOprewriteStackAddressOp
rewriteAllocaOprewriteStackAddressOp
rewriteAllocaOprewriteStackAddressOp
rewriteAllocaOprewriteStackAddressOp
rewriteAllocaOprewriteStackAddressOp
rewriteAllocaOprewriteStackAddressOp
rewriteAllocaOprewriteStackAddressOp
rewriteAllocaOprewriteStackAddressOp
rewriteAllocaOprewriteStackAddressOp
rewriteAllocaOprewriteStackAddressOp
rewriteAllocaOprewriteStackAddressOp
rewriteAllocaOprewriteStackAddressOp
rewriteAllocaOprewriteStackAddressOp
rewriteAllocaOprewriteStackAddressOp
rewriteAllocaOprewriteStackAddressOp

          Number of rewrites                              46
        Simplifier
          Number of moved ops                              0
          Number of rewrites                           87402
        Simplifier
          Number of moved ops                              0
          Number of rewrites                           24595
        ToASC Analyser
          Memcpy/memset found                             no
        Byte-Based Memory Creator
        Instantiation-Based ToASC Simplifier
        Simplifier
        FP Abstraction
          Number of rewrites                             569

Abstracted floating point operations.  The result might be a false positive.

        Simplifier
          Number of moved ops                              0
          Number of rewrites                               0
                                                           0 sec [DONE]
        
      3017 assertions remain after transformations (2761 no_function_call, 239 no_back_edge, 13 custom, 4 no_unreachable_executed).
after rewriteFormula
after sanityCheckFormula

      Running SMT solver (STP with MiniSat) ...            0 sec [DONE]
        
                                                           0 sec [DONE]
      after performing Check
evaluateCheckerResultsViaRefinementLoop
checker.getResult() is Trace
checkOnlyPrecon: 0, size:1
getFailingCheckFor
setStatusMarkerAccordingToFailingInstruction
getCheckerResultAfterUpdatingMarker
failingInst:   %23 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.5.111, i32 0, i32 0), i8* %arg0), !dbg !1458
Preconditions internal: 

 function does not read memory: 0, checkValidLoad:0, checkMemory: 0
function does not read memory 


    Rerunning SMT solver (STP with MiniSat) ...            0 sec [DONE]
      failingInst:   %23 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.5.111, i32 0, i32 0), i8* %arg0), !dbg !1458
Preconditions internal: 

 function does not read memory: 0, checkValidLoad:0, checkMemory: 0
function does not read memory 


    Rerunning SMT solver (STP with MiniSat) ...            0 sec [DONE]
      failingInst:   %23 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.5.111, i32 0, i32 0), i8* %arg0), !dbg !1458
Preconditions internal: 

 function does not read memory: 0, checkValidLoad:0, checkMemory: 0
function does not read memory 


    Rerunning SMT solver (STP with MiniSat) ...            0 sec [DONE]
      failingInst:   %23 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.5.111, i32 0, i32 0), i8* %arg0), !dbg !1458
Preconditions internal: 

 function does not read memory: 0, checkValidLoad:0, checkMemory: 0
function does not read memory 


    Rerunning SMT solver (STP with MiniSat) ...            0 sec [DONE]
      failingInst:   %23 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.5.111, i32 0, i32 0), i8* %arg0), !dbg !1458
Preconditions internal: 

 function does not read memory: 0, checkValidLoad:0, checkMemory: 0
function does not read memory 


    Rerunning SMT solver (STP with MiniSat) ...            0 sec [DONE]
      name of function arguments: Writing precondition at: jobs/257/precondition_imugps_acq.txt

Generated Preconditions:
[underoverapprox]name of function arguments: 






                                                           0 sec [DONE]
    allsafe
    
                                                           0 sec [DONE]
  