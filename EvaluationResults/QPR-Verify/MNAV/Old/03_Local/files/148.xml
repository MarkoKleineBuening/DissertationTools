<SourceFile>
  <Line number="1">/******************************************************************************</Line>
  <Line number="2">* FILE: serial.c</Line>
  <Line number="3">* DESCRIPTION:</Line>
  <Line number="4">*   </Line>
  <Line number="5">*   </Line>
  <Line number="6">*</Line>
  <Line number="7">* SOURCE: </Line>
  <Line number="8">* LAST REVISED: 5/11/05 Jung Soon Jang</Line>
  <Line number="9">******************************************************************************/</Line>
  <Line number="10">#include &lt;stdio.h&gt;</Line>
  <Line number="11">#include &lt;string.h&gt;</Line>
  <Line number="12">#include &lt;unistd.h&gt;</Line>
  <Line number="13">#include &lt;fcntl.h&gt;</Line>
  <Line number="14">#include &lt;errno.h&gt;</Line>
  <Line number="15">#include &lt;termios.h&gt;</Line>
  <Line number="16">#include &quot;serial.h&quot;</Line>
  <Line number="17"></Line>
  <Line number="18">/***************************************************************************</Line>
  <Line number="19"> * Open and configure serial port</Line>
  <Line number="20"> ***************************************************************************/</Line>
  <Line number="21">int open_serial(char* serial_port,int baudrate)</Line>
  <Line number="22">{</Line>
  <Line number="23">   int fd;</Line>
  <Line number="24">   struct termios tio_serial;</Line>
  <Line number="25"></Line>
  <Line number="26">   /* open serial port */</Line>
  <Line number="27">   fd = open(serial_port, O_RDWR | O_NOCTTY);</Line>
  <Line number="28">   if (fd == <CheckRefs ids="834">-</CheckRefs>1)</Line>
  <Line number="29">   {</Line>
  <Line number="30">	fprintf(stderr,&quot;open serial: unable to open %s - %s\n&quot;,</Line>
  <Line number="31">		serial_port,strerror(errno));</Line>
  <Line number="32">	_exit(<CheckRefs ids="835">-</CheckRefs>1);</Line>
  <Line number="33">   }</Line>
  <Line number="34"></Line>
  <Line number="35">   /* Enable non-blocking IO */</Line>
  <Line number="36">   //fcntl(fd, F_SETFL, O_NONBLOCK);  </Line>
  <Line number="37">      </Line>
  <Line number="38">   /* Serial port setting */</Line>
  <Line number="39">   bzero(&amp;tio_serial, sizeof(tio_serial));</Line>
  <Line number="40">   tio_serial.c_cflag = CS8 | CLOCAL <CheckRefs ids="836">|</CheckRefs> CREAD;</Line>
  <Line number="41">   tio_serial.c_iflag = IGNBRK <CheckRefs ids="837">|</CheckRefs> IGNPAR;</Line>
  <Line number="42">   tio_serial.c_oflag = <CheckRefs ids="838">0</CheckRefs>;</Line>
  <Line number="43">   //tio_serial.c_lflag = 0;</Line>
  <Line number="44">   </Line>
  <Line number="45">   /******************************************************************************</Line>
  <Line number="46">    * smode = 0, read will be satisfied immediately. The number of characters</Line>
  <Line number="47">    * currently available, or the number of characters requested will be returned.</Line>
  <Line number="48">    * smode &gt; 0, smode sets the number of characters to receive before the read</Line>
  <Line number="49">    * is satisfied.</Line>
  <Line number="50">    ******************************************************************************/</Line>
  <Line number="51">   tio_serial.c_cc[VMIN<CheckRefs ids="839">]</CheckRefs> = <CheckRefs ids="840">1</CheckRefs>;</Line>
  <Line number="52"></Line>
  <Line number="53">   cfsetispeed(&amp;tio_serial, <CheckRefs ids="841">baudrate</CheckRefs>);</Line>
  <Line number="54">   cfsetospeed(&amp;tio_serial, <CheckRefs ids="842">baudrate</CheckRefs>);</Line>
  <Line number="55"></Line>
  <Line number="56">   /* Flush buffer; parameters take effect immediately */</Line>
  <Line number="57">   tcflush(fd, TCIFLUSH);</Line>
  <Line number="58">   tcsetattr(fd, TCSANOW, &amp;tio_serial);</Line>
  <Line number="59">   	</Line>
  <Line number="60"></Line>
  <Line number="61"></Line>
  <Line number="62">   return (fd);</Line>
  <Line number="63">}</Line>
  <Line number="64"></Line>
</SourceFile>
