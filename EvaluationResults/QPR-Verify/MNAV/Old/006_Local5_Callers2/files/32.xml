<SourceFile>
  <Line number="1">/* Copyright (C) 1991-2020 Free Software Foundation, Inc.</Line>
  <Line number="2">   This file is part of the GNU C Library.</Line>
  <Line number="3"></Line>
  <Line number="4">   The GNU C Library is free software; you can redistribute it and/or</Line>
  <Line number="5">   modify it under the terms of the GNU Lesser General Public</Line>
  <Line number="6">   License as published by the Free Software Foundation; either</Line>
  <Line number="7">   version 2.1 of the License, or (at your option) any later version.</Line>
  <Line number="8"></Line>
  <Line number="9">   The GNU C Library is distributed in the hope that it will be useful,</Line>
  <Line number="10">   but WITHOUT ANY WARRANTY; without even the implied warranty of</Line>
  <Line number="11">   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</Line>
  <Line number="12">   Lesser General Public License for more details.</Line>
  <Line number="13"></Line>
  <Line number="14">   You should have received a copy of the GNU Lesser General Public</Line>
  <Line number="15">   License along with the GNU C Library; if not, see</Line>
  <Line number="16">   &lt;https://www.gnu.org/licenses/&gt;.  */</Line>
  <Line number="17"></Line>
  <Line number="18">#ifndef	_FEATURES_H</Line>
  <Line number="19">#define	_FEATURES_H	1</Line>
  <Line number="20"></Line>
  <Line number="21">/* These are defined by the user (or the compiler)</Line>
  <Line number="22">   to specify the desired environment:</Line>
  <Line number="23"></Line>
  <Line number="24">   __STRICT_ANSI__	ISO Standard C.</Line>
  <Line number="25">   _ISOC99_SOURCE	Extensions to ISO C89 from ISO C99.</Line>
  <Line number="26">   _ISOC11_SOURCE	Extensions to ISO C99 from ISO C11.</Line>
  <Line number="27">   _ISOC2X_SOURCE	Extensions to ISO C99 from ISO C2X.</Line>
  <Line number="28">   __STDC_WANT_LIB_EXT2__</Line>
  <Line number="29">			Extensions to ISO C99 from TR 27431-2:2010.</Line>
  <Line number="30">   __STDC_WANT_IEC_60559_BFP_EXT__</Line>
  <Line number="31">			Extensions to ISO C11 from TS 18661-1:2014.</Line>
  <Line number="32">   __STDC_WANT_IEC_60559_FUNCS_EXT__</Line>
  <Line number="33">			Extensions to ISO C11 from TS 18661-4:2015.</Line>
  <Line number="34">   __STDC_WANT_IEC_60559_TYPES_EXT__</Line>
  <Line number="35">			Extensions to ISO C11 from TS 18661-3:2015.</Line>
  <Line number="36"></Line>
  <Line number="37">   _POSIX_SOURCE	IEEE Std 1003.1.</Line>
  <Line number="38">   _POSIX_C_SOURCE	If ==1, like _POSIX_SOURCE; if &gt;=2 add IEEE Std 1003.2;</Line>
  <Line number="39">			if &gt;=199309L, add IEEE Std 1003.1b-1993;</Line>
  <Line number="40">			if &gt;=199506L, add IEEE Std 1003.1c-1995;</Line>
  <Line number="41">			if &gt;=200112L, all of IEEE 1003.1-2004</Line>
  <Line number="42">			if &gt;=200809L, all of IEEE 1003.1-2008</Line>
  <Line number="43">   _XOPEN_SOURCE	Includes POSIX and XPG things.  Set to 500 if</Line>
  <Line number="44">			Single Unix conformance is wanted, to 600 for the</Line>
  <Line number="45">			sixth revision, to 700 for the seventh revision.</Line>
  <Line number="46">   _XOPEN_SOURCE_EXTENDED XPG things and X/Open Unix extensions.</Line>
  <Line number="47">   _LARGEFILE_SOURCE	Some more functions for correct standard I/O.</Line>
  <Line number="48">   _LARGEFILE64_SOURCE	Additional functionality from LFS for large files.</Line>
  <Line number="49">   _FILE_OFFSET_BITS=N	Select default filesystem interface.</Line>
  <Line number="50">   _ATFILE_SOURCE	Additional *at interfaces.</Line>
  <Line number="51">   _GNU_SOURCE		All of the above, plus GNU extensions.</Line>
  <Line number="52">   _DEFAULT_SOURCE	The default set of features (taking precedence over</Line>
  <Line number="53">			__STRICT_ANSI__).</Line>
  <Line number="54"></Line>
  <Line number="55">   _FORTIFY_SOURCE	Add security hardening to many library functions.</Line>
  <Line number="56">			Set to 1 or 2; 2 performs stricter checks than 1.</Line>
  <Line number="57"></Line>
  <Line number="58">   _REENTRANT, _THREAD_SAFE</Line>
  <Line number="59">			Obsolete; equivalent to _POSIX_C_SOURCE=199506L.</Line>
  <Line number="60"></Line>
  <Line number="61">   The `-ansi&apos; switch to the GNU C compiler, and standards conformance</Line>
  <Line number="62">   options such as `-std=c99&apos;, define __STRICT_ANSI__.  If none of</Line>
  <Line number="63">   these are defined, or if _DEFAULT_SOURCE is defined, the default is</Line>
  <Line number="64">   to have _POSIX_SOURCE set to one and _POSIX_C_SOURCE set to</Line>
  <Line number="65">   200809L, as well as enabling miscellaneous functions from BSD and</Line>
  <Line number="66">   SVID.  If more than one of these are defined, they accumulate.  For</Line>
  <Line number="67">   example __STRICT_ANSI__, _POSIX_SOURCE and _POSIX_C_SOURCE together</Line>
  <Line number="68">   give you ISO C, 1003.1, and 1003.2, but nothing else.</Line>
  <Line number="69"></Line>
  <Line number="70">   These are defined by this file and are used by the</Line>
  <Line number="71">   header files to decide what to declare or define:</Line>
  <Line number="72"></Line>
  <Line number="73">   __GLIBC_USE (F)	Define things from feature set F.  This is defined</Line>
  <Line number="74">			to 1 or 0; the subsequent macros are either defined</Line>
  <Line number="75">			or undefined, and those tests should be moved to</Line>
  <Line number="76">			__GLIBC_USE.</Line>
  <Line number="77">   __USE_ISOC11		Define ISO C11 things.</Line>
  <Line number="78">   __USE_ISOC99		Define ISO C99 things.</Line>
  <Line number="79">   __USE_ISOC95		Define ISO C90 AMD1 (C95) things.</Line>
  <Line number="80">   __USE_ISOCXX11	Define ISO C++11 things.</Line>
  <Line number="81">   __USE_POSIX		Define IEEE Std 1003.1 things.</Line>
  <Line number="82">   __USE_POSIX2		Define IEEE Std 1003.2 things.</Line>
  <Line number="83">   __USE_POSIX199309	Define IEEE Std 1003.1, and .1b things.</Line>
  <Line number="84">   __USE_POSIX199506	Define IEEE Std 1003.1, .1b, .1c and .1i things.</Line>
  <Line number="85">   __USE_XOPEN		Define XPG things.</Line>
  <Line number="86">   __USE_XOPEN_EXTENDED	Define X/Open Unix things.</Line>
  <Line number="87">   __USE_UNIX98		Define Single Unix V2 things.</Line>
  <Line number="88">   __USE_XOPEN2K        Define XPG6 things.</Line>
  <Line number="89">   __USE_XOPEN2KXSI     Define XPG6 XSI things.</Line>
  <Line number="90">   __USE_XOPEN2K8       Define XPG7 things.</Line>
  <Line number="91">   __USE_XOPEN2K8XSI    Define XPG7 XSI things.</Line>
  <Line number="92">   __USE_LARGEFILE	Define correct standard I/O things.</Line>
  <Line number="93">   __USE_LARGEFILE64	Define LFS things with separate names.</Line>
  <Line number="94">   __USE_FILE_OFFSET64	Define 64bit interface as default.</Line>
  <Line number="95">   __USE_MISC		Define things from 4.3BSD or System V Unix.</Line>
  <Line number="96">   __USE_ATFILE		Define *at interfaces and AT_* constants for them.</Line>
  <Line number="97">   __USE_GNU		Define GNU extensions.</Line>
  <Line number="98">   __USE_FORTIFY_LEVEL	Additional security measures used, according to level.</Line>
  <Line number="99"></Line>
  <Line number="100">   The macros `__GNU_LIBRARY__&apos;, `__GLIBC__&apos;, and `__GLIBC_MINOR__&apos; are</Line>
  <Line number="101">   defined by this file unconditionally.  `__GNU_LIBRARY__&apos; is provided</Line>
  <Line number="102">   only for compatibility.  All new code should use the other symbols</Line>
  <Line number="103">   to test for features.</Line>
  <Line number="104"></Line>
  <Line number="105">   All macros listed above as possibly being defined by this file are</Line>
  <Line number="106">   explicitly undefined if they are not explicitly defined.</Line>
  <Line number="107">   Feature-test macros that are not defined by the user or compiler</Line>
  <Line number="108">   but are implied by the other feature-test macros defined (or by the</Line>
  <Line number="109">   lack of any definitions) are defined by the file.</Line>
  <Line number="110"></Line>
  <Line number="111">   ISO C feature test macros depend on the definition of the macro</Line>
  <Line number="112">   when an affected header is included, not when the first system</Line>
  <Line number="113">   header is included, and so they are handled in</Line>
  <Line number="114">   &lt;bits/libc-header-start.h&gt;, which does not have a multiple include</Line>
  <Line number="115">   guard.  Feature test macros that can be handled from the first</Line>
  <Line number="116">   system header included are handled here.  */</Line>
  <Line number="117"></Line>
  <Line number="118"></Line>
  <Line number="119">/* Undefine everything, so we get a clean slate.  */</Line>
  <Line number="120">#undef	__USE_ISOC11</Line>
  <Line number="121">#undef	__USE_ISOC99</Line>
  <Line number="122">#undef	__USE_ISOC95</Line>
  <Line number="123">#undef	__USE_ISOCXX11</Line>
  <Line number="124">#undef	__USE_POSIX</Line>
  <Line number="125">#undef	__USE_POSIX2</Line>
  <Line number="126">#undef	__USE_POSIX199309</Line>
  <Line number="127">#undef	__USE_POSIX199506</Line>
  <Line number="128">#undef	__USE_XOPEN</Line>
  <Line number="129">#undef	__USE_XOPEN_EXTENDED</Line>
  <Line number="130">#undef	__USE_UNIX98</Line>
  <Line number="131">#undef	__USE_XOPEN2K</Line>
  <Line number="132">#undef	__USE_XOPEN2KXSI</Line>
  <Line number="133">#undef	__USE_XOPEN2K8</Line>
  <Line number="134">#undef	__USE_XOPEN2K8XSI</Line>
  <Line number="135">#undef	__USE_LARGEFILE</Line>
  <Line number="136">#undef	__USE_LARGEFILE64</Line>
  <Line number="137">#undef	__USE_FILE_OFFSET64</Line>
  <Line number="138">#undef	__USE_MISC</Line>
  <Line number="139">#undef	__USE_ATFILE</Line>
  <Line number="140">#undef	__USE_GNU</Line>
  <Line number="141">#undef	__USE_FORTIFY_LEVEL</Line>
  <Line number="142">#undef	__KERNEL_STRICT_NAMES</Line>
  <Line number="143">#undef	__GLIBC_USE_ISOC2X</Line>
  <Line number="144">#undef	__GLIBC_USE_DEPRECATED_GETS</Line>
  <Line number="145">#undef	__GLIBC_USE_DEPRECATED_SCANF</Line>
  <Line number="146"></Line>
  <Line number="147">/* Suppress kernel-name space pollution unless user expressedly asks</Line>
  <Line number="148">   for it.  */</Line>
  <Line number="149">#ifndef _LOOSE_KERNEL_NAMES</Line>
  <Line number="150"># define __KERNEL_STRICT_NAMES</Line>
  <Line number="151">#endif</Line>
  <Line number="152"></Line>
  <Line number="153">/* Convenience macro to test the version of gcc.</Line>
  <Line number="154">   Use like this:</Line>
  <Line number="155">   #if __GNUC_PREREQ (2,8)</Line>
  <Line number="156">   ... code requiring gcc 2.8 or later ...</Line>
  <Line number="157">   #endif</Line>
  <Line number="158">   Note: only works for GCC 2.0 and later, because __GNUC_MINOR__ was</Line>
  <Line number="159">   added in 2.0.  */</Line>
  <Line number="160">#if defined __GNUC__ &amp;&amp; defined __GNUC_MINOR__</Line>
  <Line number="161"># define __GNUC_PREREQ(maj, min) \</Line>
  <Line number="162">	((__GNUC__ &lt;&lt; 16) + __GNUC_MINOR__ &gt;= ((maj) &lt;&lt; 16) + (min))</Line>
  <Line number="163">#else</Line>
  <Line number="164"># define __GNUC_PREREQ(maj, min) 0</Line>
  <Line number="165">#endif</Line>
  <Line number="166"></Line>
  <Line number="167">/* Similarly for clang.  Features added to GCC after version 4.2 may</Line>
  <Line number="168">   or may not also be available in clang, and clang&apos;s definitions of</Line>
  <Line number="169">   __GNUC(_MINOR)__ are fixed at 4 and 2 respectively.  Not all such</Line>
  <Line number="170">   features can be queried via __has_extension/__has_feature.  */</Line>
  <Line number="171">#if defined __clang_major__ &amp;&amp; defined __clang_minor__</Line>
  <Line number="172"># define __glibc_clang_prereq(maj, min) \</Line>
  <Line number="173">  ((__clang_major__ &lt;&lt; 16) + __clang_minor__ &gt;= ((maj) &lt;&lt; 16) + (min))</Line>
  <Line number="174">#else</Line>
  <Line number="175"># define __glibc_clang_prereq(maj, min) 0</Line>
  <Line number="176">#endif</Line>
  <Line number="177"></Line>
  <Line number="178">/* Whether to use feature set F.  */</Line>
  <Line number="179">#define __GLIBC_USE(F)	__GLIBC_USE_ ## F</Line>
  <Line number="180"></Line>
  <Line number="181">/* _BSD_SOURCE and _SVID_SOURCE are deprecated aliases for</Line>
  <Line number="182">   _DEFAULT_SOURCE.  If _DEFAULT_SOURCE is present we do not</Line>
  <Line number="183">   issue a warning; the expectation is that the source is being</Line>
  <Line number="184">   transitioned to use the new macro.  */</Line>
  <Line number="185">#if (defined _BSD_SOURCE || defined _SVID_SOURCE) \</Line>
  <Line number="186">    &amp;&amp; !defined _DEFAULT_SOURCE</Line>
  <Line number="187"># warning &quot;_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE&quot;</Line>
  <Line number="188"># undef  _DEFAULT_SOURCE</Line>
  <Line number="189"># define _DEFAULT_SOURCE	1</Line>
  <Line number="190">#endif</Line>
  <Line number="191"></Line>
  <Line number="192">/* If _GNU_SOURCE was defined by the user, turn on all the other features.  */</Line>
  <Line number="193">#ifdef _GNU_SOURCE</Line>
  <Line number="194"># undef  _ISOC95_SOURCE</Line>
  <Line number="195"># define _ISOC95_SOURCE	1</Line>
  <Line number="196"># undef  _ISOC99_SOURCE</Line>
  <Line number="197"># define _ISOC99_SOURCE	1</Line>
  <Line number="198"># undef  _ISOC11_SOURCE</Line>
  <Line number="199"># define _ISOC11_SOURCE	1</Line>
  <Line number="200"># undef  _ISOC2X_SOURCE</Line>
  <Line number="201"># define _ISOC2X_SOURCE	1</Line>
  <Line number="202"># undef  _POSIX_SOURCE</Line>
  <Line number="203"># define _POSIX_SOURCE	1</Line>
  <Line number="204"># undef  _POSIX_C_SOURCE</Line>
  <Line number="205"># define _POSIX_C_SOURCE	200809L</Line>
  <Line number="206"># undef  _XOPEN_SOURCE</Line>
  <Line number="207"># define _XOPEN_SOURCE	700</Line>
  <Line number="208"># undef  _XOPEN_SOURCE_EXTENDED</Line>
  <Line number="209"># define _XOPEN_SOURCE_EXTENDED	1</Line>
  <Line number="210"># undef	 _LARGEFILE64_SOURCE</Line>
  <Line number="211"># define _LARGEFILE64_SOURCE	1</Line>
  <Line number="212"># undef  _DEFAULT_SOURCE</Line>
  <Line number="213"># define _DEFAULT_SOURCE	1</Line>
  <Line number="214"># undef  _ATFILE_SOURCE</Line>
  <Line number="215"># define _ATFILE_SOURCE	1</Line>
  <Line number="216">#endif</Line>
  <Line number="217"></Line>
  <Line number="218">/* If nothing (other than _GNU_SOURCE and _DEFAULT_SOURCE) is defined,</Line>
  <Line number="219">   define _DEFAULT_SOURCE.  */</Line>
  <Line number="220">#if (defined _DEFAULT_SOURCE					\</Line>
  <Line number="221">     || (!defined __STRICT_ANSI__				\</Line>
  <Line number="222">	 &amp;&amp; !defined _ISOC99_SOURCE &amp;&amp; !defined _ISOC11_SOURCE	\</Line>
  <Line number="223">	 &amp;&amp; !defined _ISOC2X_SOURCE				\</Line>
  <Line number="224">	 &amp;&amp; !defined _POSIX_SOURCE &amp;&amp; !defined _POSIX_C_SOURCE	\</Line>
  <Line number="225">	 &amp;&amp; !defined _XOPEN_SOURCE))</Line>
  <Line number="226"># undef  _DEFAULT_SOURCE</Line>
  <Line number="227"># define _DEFAULT_SOURCE	1</Line>
  <Line number="228">#endif</Line>
  <Line number="229"></Line>
  <Line number="230">/* This is to enable the ISO C2X extension.  */</Line>
  <Line number="231">#if (defined _ISOC2X_SOURCE \</Line>
  <Line number="232">     || (defined __STDC_VERSION__ &amp;&amp; __STDC_VERSION__ &gt; 201710L))</Line>
  <Line number="233"># define __GLIBC_USE_ISOC2X	1</Line>
  <Line number="234">#else</Line>
  <Line number="235"># define __GLIBC_USE_ISOC2X	0</Line>
  <Line number="236">#endif</Line>
  <Line number="237"></Line>
  <Line number="238">/* This is to enable the ISO C11 extension.  */</Line>
  <Line number="239">#if (defined _ISOC11_SOURCE || defined _ISOC2X_SOURCE \</Line>
  <Line number="240">     || (defined __STDC_VERSION__ &amp;&amp; __STDC_VERSION__ &gt;= 201112L))</Line>
  <Line number="241"># define __USE_ISOC11	1</Line>
  <Line number="242">#endif</Line>
  <Line number="243"></Line>
  <Line number="244">/* This is to enable the ISO C99 extension.  */</Line>
  <Line number="245">#if (defined _ISOC99_SOURCE || defined _ISOC11_SOURCE			\</Line>
  <Line number="246">     || defined _ISOC2X_SOURCE						\</Line>
  <Line number="247">     || (defined __STDC_VERSION__ &amp;&amp; __STDC_VERSION__ &gt;= 199901L))</Line>
  <Line number="248"># define __USE_ISOC99	1</Line>
  <Line number="249">#endif</Line>
  <Line number="250"></Line>
  <Line number="251">/* This is to enable the ISO C90 Amendment 1:1995 extension.  */</Line>
  <Line number="252">#if (defined _ISOC99_SOURCE || defined _ISOC11_SOURCE			\</Line>
  <Line number="253">     || defined _ISOC2X_SOURCE						\</Line>
  <Line number="254">     || (defined __STDC_VERSION__ &amp;&amp; __STDC_VERSION__ &gt;= 199409L))</Line>
  <Line number="255"># define __USE_ISOC95	1</Line>
  <Line number="256">#endif</Line>
  <Line number="257"></Line>
  <Line number="258">#ifdef __cplusplus</Line>
  <Line number="259">/* This is to enable compatibility for ISO C++17.  */</Line>
  <Line number="260"># if __cplusplus &gt;= 201703L</Line>
  <Line number="261">#  define __USE_ISOC11	1</Line>
  <Line number="262"># endif</Line>
  <Line number="263">/* This is to enable compatibility for ISO C++11.</Line>
  <Line number="264">   Check the temporary macro for now, too.  */</Line>
  <Line number="265"># if __cplusplus &gt;= 201103L || defined __GXX_EXPERIMENTAL_CXX0X__</Line>
  <Line number="266">#  define __USE_ISOCXX11	1</Line>
  <Line number="267">#  define __USE_ISOC99	1</Line>
  <Line number="268"># endif</Line>
  <Line number="269">#endif</Line>
  <Line number="270"></Line>
  <Line number="271">/* If none of the ANSI/POSIX macros are defined, or if _DEFAULT_SOURCE</Line>
  <Line number="272">   is defined, use POSIX.1-2008 (or another version depending on</Line>
  <Line number="273">   _XOPEN_SOURCE).  */</Line>
  <Line number="274">#ifdef _DEFAULT_SOURCE</Line>
  <Line number="275"># if !defined _POSIX_SOURCE &amp;&amp; !defined _POSIX_C_SOURCE</Line>
  <Line number="276">#  define __USE_POSIX_IMPLICITLY	1</Line>
  <Line number="277"># endif</Line>
  <Line number="278"># undef  _POSIX_SOURCE</Line>
  <Line number="279"># define _POSIX_SOURCE	1</Line>
  <Line number="280"># undef  _POSIX_C_SOURCE</Line>
  <Line number="281"># define _POSIX_C_SOURCE	200809L</Line>
  <Line number="282">#endif</Line>
  <Line number="283"></Line>
  <Line number="284">#if ((!defined __STRICT_ANSI__					\</Line>
  <Line number="285">      || (defined _XOPEN_SOURCE &amp;&amp; (_XOPEN_SOURCE - 0) &gt;= 500))	\</Line>
  <Line number="286">     &amp;&amp; !defined _POSIX_SOURCE &amp;&amp; !defined _POSIX_C_SOURCE)</Line>
  <Line number="287"># define _POSIX_SOURCE	1</Line>
  <Line number="288"># if defined _XOPEN_SOURCE &amp;&amp; (_XOPEN_SOURCE - 0) &lt; 500</Line>
  <Line number="289">#  define _POSIX_C_SOURCE	2</Line>
  <Line number="290"># elif defined _XOPEN_SOURCE &amp;&amp; (_XOPEN_SOURCE - 0) &lt; 600</Line>
  <Line number="291">#  define _POSIX_C_SOURCE	199506L</Line>
  <Line number="292"># elif defined _XOPEN_SOURCE &amp;&amp; (_XOPEN_SOURCE - 0) &lt; 700</Line>
  <Line number="293">#  define _POSIX_C_SOURCE	200112L</Line>
  <Line number="294"># else</Line>
  <Line number="295">#  define _POSIX_C_SOURCE	200809L</Line>
  <Line number="296"># endif</Line>
  <Line number="297"># define __USE_POSIX_IMPLICITLY	1</Line>
  <Line number="298">#endif</Line>
  <Line number="299"></Line>
  <Line number="300">/* Some C libraries once required _REENTRANT and/or _THREAD_SAFE to be</Line>
  <Line number="301">   defined in all multithreaded code.  GNU libc has not required this</Line>
  <Line number="302">   for many years.  We now treat them as compatibility synonyms for</Line>
  <Line number="303">   _POSIX_C_SOURCE=199506L, which is the earliest level of POSIX with</Line>
  <Line number="304">   comprehensive support for multithreaded code.  Using them never</Line>
  <Line number="305">   lowers the selected level of POSIX conformance, only raises it.  */</Line>
  <Line number="306">#if ((!defined _POSIX_C_SOURCE || (_POSIX_C_SOURCE - 0) &lt; 199506L) \</Line>
  <Line number="307">     &amp;&amp; (defined _REENTRANT || defined _THREAD_SAFE))</Line>
  <Line number="308"># define _POSIX_SOURCE   1</Line>
  <Line number="309"># undef  _POSIX_C_SOURCE</Line>
  <Line number="310"># define _POSIX_C_SOURCE 199506L</Line>
  <Line number="311">#endif</Line>
  <Line number="312"></Line>
  <Line number="313">#if (defined _POSIX_SOURCE					\</Line>
  <Line number="314">     || (defined _POSIX_C_SOURCE &amp;&amp; _POSIX_C_SOURCE &gt;= 1)	\</Line>
  <Line number="315">     || defined _XOPEN_SOURCE)</Line>
  <Line number="316"># define __USE_POSIX	1</Line>
  <Line number="317">#endif</Line>
  <Line number="318"></Line>
  <Line number="319">#if defined _POSIX_C_SOURCE &amp;&amp; _POSIX_C_SOURCE &gt;= 2 || defined _XOPEN_SOURCE</Line>
  <Line number="320"># define __USE_POSIX2	1</Line>
  <Line number="321">#endif</Line>
  <Line number="322"></Line>
  <Line number="323">#if defined _POSIX_C_SOURCE &amp;&amp; (_POSIX_C_SOURCE - 0) &gt;= 199309L</Line>
  <Line number="324"># define __USE_POSIX199309	1</Line>
  <Line number="325">#endif</Line>
  <Line number="326"></Line>
  <Line number="327">#if defined _POSIX_C_SOURCE &amp;&amp; (_POSIX_C_SOURCE - 0) &gt;= 199506L</Line>
  <Line number="328"># define __USE_POSIX199506	1</Line>
  <Line number="329">#endif</Line>
  <Line number="330"></Line>
  <Line number="331">#if defined _POSIX_C_SOURCE &amp;&amp; (_POSIX_C_SOURCE - 0) &gt;= 200112L</Line>
  <Line number="332"># define __USE_XOPEN2K		1</Line>
  <Line number="333"># undef __USE_ISOC95</Line>
  <Line number="334"># define __USE_ISOC95		1</Line>
  <Line number="335"># undef __USE_ISOC99</Line>
  <Line number="336"># define __USE_ISOC99		1</Line>
  <Line number="337">#endif</Line>
  <Line number="338"></Line>
  <Line number="339">#if defined _POSIX_C_SOURCE &amp;&amp; (_POSIX_C_SOURCE - 0) &gt;= 200809L</Line>
  <Line number="340"># define __USE_XOPEN2K8		1</Line>
  <Line number="341"># undef  _ATFILE_SOURCE</Line>
  <Line number="342"># define _ATFILE_SOURCE	1</Line>
  <Line number="343">#endif</Line>
  <Line number="344"></Line>
  <Line number="345">#ifdef	_XOPEN_SOURCE</Line>
  <Line number="346"># define __USE_XOPEN	1</Line>
  <Line number="347"># if (_XOPEN_SOURCE - 0) &gt;= 500</Line>
  <Line number="348">#  define __USE_XOPEN_EXTENDED	1</Line>
  <Line number="349">#  define __USE_UNIX98	1</Line>
  <Line number="350">#  undef _LARGEFILE_SOURCE</Line>
  <Line number="351">#  define _LARGEFILE_SOURCE	1</Line>
  <Line number="352">#  if (_XOPEN_SOURCE - 0) &gt;= 600</Line>
  <Line number="353">#   if (_XOPEN_SOURCE - 0) &gt;= 700</Line>
  <Line number="354">#    define __USE_XOPEN2K8	1</Line>
  <Line number="355">#    define __USE_XOPEN2K8XSI	1</Line>
  <Line number="356">#   endif</Line>
  <Line number="357">#   define __USE_XOPEN2K	1</Line>
  <Line number="358">#   define __USE_XOPEN2KXSI	1</Line>
  <Line number="359">#   undef __USE_ISOC95</Line>
  <Line number="360">#   define __USE_ISOC95		1</Line>
  <Line number="361">#   undef __USE_ISOC99</Line>
  <Line number="362">#   define __USE_ISOC99		1</Line>
  <Line number="363">#  endif</Line>
  <Line number="364"># else</Line>
  <Line number="365">#  ifdef _XOPEN_SOURCE_EXTENDED</Line>
  <Line number="366">#   define __USE_XOPEN_EXTENDED	1</Line>
  <Line number="367">#  endif</Line>
  <Line number="368"># endif</Line>
  <Line number="369">#endif</Line>
  <Line number="370"></Line>
  <Line number="371">#ifdef _LARGEFILE_SOURCE</Line>
  <Line number="372"># define __USE_LARGEFILE	1</Line>
  <Line number="373">#endif</Line>
  <Line number="374"></Line>
  <Line number="375">#ifdef _LARGEFILE64_SOURCE</Line>
  <Line number="376"># define __USE_LARGEFILE64	1</Line>
  <Line number="377">#endif</Line>
  <Line number="378"></Line>
  <Line number="379">#if defined _FILE_OFFSET_BITS &amp;&amp; _FILE_OFFSET_BITS == 64</Line>
  <Line number="380"># define __USE_FILE_OFFSET64	1</Line>
  <Line number="381">#endif</Line>
  <Line number="382"></Line>
  <Line number="383">#if defined _DEFAULT_SOURCE</Line>
  <Line number="384"># define __USE_MISC	1</Line>
  <Line number="385">#endif</Line>
  <Line number="386"></Line>
  <Line number="387">#ifdef	_ATFILE_SOURCE</Line>
  <Line number="388"># define __USE_ATFILE	1</Line>
  <Line number="389">#endif</Line>
  <Line number="390"></Line>
  <Line number="391">#ifdef	_GNU_SOURCE</Line>
  <Line number="392"># define __USE_GNU	1</Line>
  <Line number="393">#endif</Line>
  <Line number="394"></Line>
  <Line number="395">#if defined _FORTIFY_SOURCE &amp;&amp; _FORTIFY_SOURCE &gt; 0 \</Line>
  <Line number="396">    &amp;&amp; __GNUC_PREREQ (4, 1) &amp;&amp; defined __OPTIMIZE__ &amp;&amp; __OPTIMIZE__ &gt; 0</Line>
  <Line number="397"># if _FORTIFY_SOURCE &gt; 1</Line>
  <Line number="398">#  define __USE_FORTIFY_LEVEL 2</Line>
  <Line number="399"># else</Line>
  <Line number="400">#  define __USE_FORTIFY_LEVEL 1</Line>
  <Line number="401"># endif</Line>
  <Line number="402">#else</Line>
  <Line number="403"># define __USE_FORTIFY_LEVEL 0</Line>
  <Line number="404">#endif</Line>
  <Line number="405"></Line>
  <Line number="406">/* The function &apos;gets&apos; existed in C89, but is impossible to use</Line>
  <Line number="407">   safely.  It has been removed from ISO C11 and ISO C++14.  Note: for</Line>
  <Line number="408">   compatibility with various implementations of &lt;cstdio&gt;, this test</Line>
  <Line number="409">   must consider only the value of __cplusplus when compiling C++.  */</Line>
  <Line number="410">#if defined __cplusplus ? __cplusplus &gt;= 201402L : defined __USE_ISOC11</Line>
  <Line number="411"># define __GLIBC_USE_DEPRECATED_GETS 0</Line>
  <Line number="412">#else</Line>
  <Line number="413"># define __GLIBC_USE_DEPRECATED_GETS 1</Line>
  <Line number="414">#endif</Line>
  <Line number="415"></Line>
  <Line number="416">/* GNU formerly extended the scanf functions with modified format</Line>
  <Line number="417">   specifiers %as, %aS, and %a[...] that allocate a buffer for the</Line>
  <Line number="418">   input using malloc.  This extension conflicts with ISO C99, which</Line>
  <Line number="419">   defines %a as a standalone format specifier that reads a floating-</Line>
  <Line number="420">   point number; moreover, POSIX.1-2008 provides the same feature</Line>
  <Line number="421">   using the modifier letter &apos;m&apos; instead (%ms, %mS, %m[...]).</Line>
  <Line number="422"></Line>
  <Line number="423">   We now follow C99 unless GNU extensions are active and the compiler</Line>
  <Line number="424">   is specifically in C89 or C++98 mode (strict or not).  For</Line>
  <Line number="425">   instance, with GCC, -std=gnu11 will have C99-compliant scanf with</Line>
  <Line number="426">   or without -D_GNU_SOURCE, but -std=c89 -D_GNU_SOURCE will have the</Line>
  <Line number="427">   old extension.  */</Line>
  <Line number="428">#if (defined __USE_GNU							\</Line>
  <Line number="429">     &amp;&amp; (defined __cplusplus						\</Line>
  <Line number="430">	 ? (__cplusplus &lt; 201103L &amp;&amp; !defined __GXX_EXPERIMENTAL_CXX0X__) \</Line>
  <Line number="431">	 : (!defined __STDC_VERSION__ || __STDC_VERSION__ &lt; 199901L)))</Line>
  <Line number="432"># define __GLIBC_USE_DEPRECATED_SCANF 1</Line>
  <Line number="433">#else</Line>
  <Line number="434"># define __GLIBC_USE_DEPRECATED_SCANF 0</Line>
  <Line number="435">#endif</Line>
  <Line number="436"></Line>
  <Line number="437">/* Get definitions of __STDC_* predefined macros, if the compiler has</Line>
  <Line number="438">   not preincluded this header automatically.  */</Line>
  <Line number="439">#include &lt;stdc-predef.h&gt;</Line>
  <Line number="440"></Line>
  <Line number="441">/* This macro indicates that the installed library is the GNU C Library.</Line>
  <Line number="442">   For historic reasons the value now is 6 and this will stay from now</Line>
  <Line number="443">   on.  The use of this variable is deprecated.  Use __GLIBC__ and</Line>
  <Line number="444">   __GLIBC_MINOR__ now (see below) when you want to test for a specific</Line>
  <Line number="445">   GNU C library version and use the values in &lt;gnu/lib-names.h&gt; to get</Line>
  <Line number="446">   the sonames of the shared libraries.  */</Line>
  <Line number="447">#undef  __GNU_LIBRARY__</Line>
  <Line number="448">#define __GNU_LIBRARY__ 6</Line>
  <Line number="449"></Line>
  <Line number="450">/* Major and minor version number of the GNU C library package.  Use</Line>
  <Line number="451">   these macros to test for features in specific releases.  */</Line>
  <Line number="452">#define	__GLIBC__	2</Line>
  <Line number="453">#define	__GLIBC_MINOR__	31</Line>
  <Line number="454"></Line>
  <Line number="455">#define __GLIBC_PREREQ(maj, min) \</Line>
  <Line number="456">	((__GLIBC__ &lt;&lt; 16) + __GLIBC_MINOR__ &gt;= ((maj) &lt;&lt; 16) + (min))</Line>
  <Line number="457"></Line>
  <Line number="458">/* This is here only because every header file already includes this one.  */</Line>
  <Line number="459">#ifndef __ASSEMBLER__</Line>
  <Line number="460"># ifndef _SYS_CDEFS_H</Line>
  <Line number="461">#  include &lt;sys/cdefs.h&gt;</Line>
  <Line number="462"># endif</Line>
  <Line number="463"></Line>
  <Line number="464">/* If we don&apos;t have __REDIRECT, prototypes will be missing if</Line>
  <Line number="465">   __USE_FILE_OFFSET64 but not __USE_LARGEFILE[64]. */</Line>
  <Line number="466"># if defined __USE_FILE_OFFSET64 &amp;&amp; !defined __REDIRECT</Line>
  <Line number="467">#  define __USE_LARGEFILE	1</Line>
  <Line number="468">#  define __USE_LARGEFILE64	1</Line>
  <Line number="469"># endif</Line>
  <Line number="470"></Line>
  <Line number="471">#endif	/* !ASSEMBLER */</Line>
  <Line number="472"></Line>
  <Line number="473">/* Decide whether we can define &apos;extern inline&apos; functions in headers.  */</Line>
  <Line number="474">#if __GNUC_PREREQ (2, 7) &amp;&amp; defined __OPTIMIZE__ \</Line>
  <Line number="475">    &amp;&amp; !defined __OPTIMIZE_SIZE__ &amp;&amp; !defined __NO_INLINE__ \</Line>
  <Line number="476">    &amp;&amp; defined __extern_inline</Line>
  <Line number="477"># define __USE_EXTERN_INLINES	1</Line>
  <Line number="478">#endif</Line>
  <Line number="479"></Line>
  <Line number="480"></Line>
  <Line number="481">/* This is here only because every header file already includes this one.</Line>
  <Line number="482">   Get the definitions of all the appropriate `__stub_FUNCTION&apos; symbols.</Line>
  <Line number="483">   &lt;gnu/stubs.h&gt; contains `#define __stub_FUNCTION&apos; when FUNCTION is a stub</Line>
  <Line number="484">   that will always return failure (and set errno to ENOSYS).  */</Line>
  <Line number="485">#include &lt;gnu/stubs.h&gt;</Line>
  <Line number="486"></Line>
  <Line number="487"></Line>
  <Line number="488">#endif	/* features.h  */</Line>
</SourceFile>
