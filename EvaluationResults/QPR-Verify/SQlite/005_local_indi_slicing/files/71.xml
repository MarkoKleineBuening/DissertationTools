<SourceFile>
  <Line number="1">/* bits/typesizes.h -- underlying types for *_t.  Linux/x86-64 version.</Line>
  <Line number="2">   Copyright (C) 2012-2020 Free Software Foundation, Inc.</Line>
  <Line number="3">   This file is part of the GNU C Library.</Line>
  <Line number="4"></Line>
  <Line number="5">   The GNU C Library is free software; you can redistribute it and/or</Line>
  <Line number="6">   modify it under the terms of the GNU Lesser General Public</Line>
  <Line number="7">   License as published by the Free Software Foundation; either</Line>
  <Line number="8">   version 2.1 of the License, or (at your option) any later version.</Line>
  <Line number="9"></Line>
  <Line number="10">   The GNU C Library is distributed in the hope that it will be useful,</Line>
  <Line number="11">   but WITHOUT ANY WARRANTY; without even the implied warranty of</Line>
  <Line number="12">   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</Line>
  <Line number="13">   Lesser General Public License for more details.</Line>
  <Line number="14"></Line>
  <Line number="15">   You should have received a copy of the GNU Lesser General Public</Line>
  <Line number="16">   License along with the GNU C Library; if not, see</Line>
  <Line number="17">   &lt;https://www.gnu.org/licenses/&gt;.  */</Line>
  <Line number="18"></Line>
  <Line number="19">#ifndef _BITS_TYPES_H</Line>
  <Line number="20"># error &quot;Never include &lt;bits/typesizes.h&gt; directly; use &lt;sys/types.h&gt; instead.&quot;</Line>
  <Line number="21">#endif</Line>
  <Line number="22"></Line>
  <Line number="23">#ifndef	_BITS_TYPESIZES_H</Line>
  <Line number="24">#define	_BITS_TYPESIZES_H	1</Line>
  <Line number="25"></Line>
  <Line number="26">/* See &lt;bits/types.h&gt; for the meaning of these macros.  This file exists so</Line>
  <Line number="27">   that &lt;bits/types.h&gt; need not vary across different GNU platforms.  */</Line>
  <Line number="28"></Line>
  <Line number="29">/* X32 kernel interface is 64-bit.  */</Line>
  <Line number="30">#if defined __x86_64__ &amp;&amp; defined __ILP32__</Line>
  <Line number="31"># define __SYSCALL_SLONG_TYPE	__SQUAD_TYPE</Line>
  <Line number="32"># define __SYSCALL_ULONG_TYPE	__UQUAD_TYPE</Line>
  <Line number="33">#else</Line>
  <Line number="34"># define __SYSCALL_SLONG_TYPE	__SLONGWORD_TYPE</Line>
  <Line number="35"># define __SYSCALL_ULONG_TYPE	__ULONGWORD_TYPE</Line>
  <Line number="36">#endif</Line>
  <Line number="37"></Line>
  <Line number="38">#define __DEV_T_TYPE		__UQUAD_TYPE</Line>
  <Line number="39">#define __UID_T_TYPE		__U32_TYPE</Line>
  <Line number="40">#define __GID_T_TYPE		__U32_TYPE</Line>
  <Line number="41">#define __INO_T_TYPE		__SYSCALL_ULONG_TYPE</Line>
  <Line number="42">#define __INO64_T_TYPE		__UQUAD_TYPE</Line>
  <Line number="43">#define __MODE_T_TYPE		__U32_TYPE</Line>
  <Line number="44">#ifdef __x86_64__</Line>
  <Line number="45"># define __NLINK_T_TYPE		__SYSCALL_ULONG_TYPE</Line>
  <Line number="46"># define __FSWORD_T_TYPE	__SYSCALL_SLONG_TYPE</Line>
  <Line number="47">#else</Line>
  <Line number="48"># define __NLINK_T_TYPE		__UWORD_TYPE</Line>
  <Line number="49"># define __FSWORD_T_TYPE	__SWORD_TYPE</Line>
  <Line number="50">#endif</Line>
  <Line number="51">#define __OFF_T_TYPE		__SYSCALL_SLONG_TYPE</Line>
  <Line number="52">#define __OFF64_T_TYPE		__SQUAD_TYPE</Line>
  <Line number="53">#define __PID_T_TYPE		__S32_TYPE</Line>
  <Line number="54">#define __RLIM_T_TYPE		__SYSCALL_ULONG_TYPE</Line>
  <Line number="55">#define __RLIM64_T_TYPE		__UQUAD_TYPE</Line>
  <Line number="56">#define __BLKCNT_T_TYPE		__SYSCALL_SLONG_TYPE</Line>
  <Line number="57">#define __BLKCNT64_T_TYPE	__SQUAD_TYPE</Line>
  <Line number="58">#define __FSBLKCNT_T_TYPE	__SYSCALL_ULONG_TYPE</Line>
  <Line number="59">#define __FSBLKCNT64_T_TYPE	__UQUAD_TYPE</Line>
  <Line number="60">#define __FSFILCNT_T_TYPE	__SYSCALL_ULONG_TYPE</Line>
  <Line number="61">#define __FSFILCNT64_T_TYPE	__UQUAD_TYPE</Line>
  <Line number="62">#define __ID_T_TYPE		__U32_TYPE</Line>
  <Line number="63">#define __CLOCK_T_TYPE		__SYSCALL_SLONG_TYPE</Line>
  <Line number="64">#define __TIME_T_TYPE		__SYSCALL_SLONG_TYPE</Line>
  <Line number="65">#define __USECONDS_T_TYPE	__U32_TYPE</Line>
  <Line number="66">#define __SUSECONDS_T_TYPE	__SYSCALL_SLONG_TYPE</Line>
  <Line number="67">#define __DADDR_T_TYPE		__S32_TYPE</Line>
  <Line number="68">#define __KEY_T_TYPE		__S32_TYPE</Line>
  <Line number="69">#define __CLOCKID_T_TYPE	__S32_TYPE</Line>
  <Line number="70">#define __TIMER_T_TYPE		void *</Line>
  <Line number="71">#define __BLKSIZE_T_TYPE	__SYSCALL_SLONG_TYPE</Line>
  <Line number="72">#define __FSID_T_TYPE		struct { int __val[2]; }</Line>
  <Line number="73">#define __SSIZE_T_TYPE		__SWORD_TYPE</Line>
  <Line number="74">#define __CPU_MASK_TYPE 	__SYSCALL_ULONG_TYPE</Line>
  <Line number="75"></Line>
  <Line number="76">#ifdef __x86_64__</Line>
  <Line number="77">/* Tell the libc code that off_t and off64_t are actually the same type</Line>
  <Line number="78">   for all ABI purposes, even if possibly expressed as different base types</Line>
  <Line number="79">   for C type-checking purposes.  */</Line>
  <Line number="80"># define __OFF_T_MATCHES_OFF64_T	1</Line>
  <Line number="81"></Line>
  <Line number="82">/* Same for ino_t and ino64_t.  */</Line>
  <Line number="83"># define __INO_T_MATCHES_INO64_T	1</Line>
  <Line number="84"></Line>
  <Line number="85">/* And for __rlim_t and __rlim64_t.  */</Line>
  <Line number="86"># define __RLIM_T_MATCHES_RLIM64_T	1</Line>
  <Line number="87"></Line>
  <Line number="88">/* And for fsblkcnt_t, fsblkcnt64_t, fsfilcnt_t and fsfilcnt64_t.  */</Line>
  <Line number="89"># define __STATFS_MATCHES_STATFS64  1</Line>
  <Line number="90">#else</Line>
  <Line number="91"># define __RLIM_T_MATCHES_RLIM64_T	0</Line>
  <Line number="92"></Line>
  <Line number="93"># define __STATFS_MATCHES_STATFS64  0</Line>
  <Line number="94">#endif</Line>
  <Line number="95"></Line>
  <Line number="96">/* Number of descriptors that can fit in an `fd_set&apos;.  */</Line>
  <Line number="97">#define __FD_SETSIZE		1024</Line>
  <Line number="98"></Line>
  <Line number="99"></Line>
  <Line number="100">#endif /* bits/typesizes.h */</Line>
</SourceFile>
