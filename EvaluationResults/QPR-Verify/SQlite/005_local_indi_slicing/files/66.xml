<SourceFile>
  <Line number="1">/* Copyright (C) 1991-2020 Free Software Foundation, Inc.</Line>
  <Line number="2">   This file is part of the GNU C Library.</Line>
  <Line number="3"></Line>
  <Line number="4">   The GNU C Library is free software; you can redistribute it and/or</Line>
  <Line number="5">   modify it under the terms of the GNU Lesser General Public</Line>
  <Line number="6">   License as published by the Free Software Foundation; either</Line>
  <Line number="7">   version 2.1 of the License, or (at your option) any later version.</Line>
  <Line number="8"></Line>
  <Line number="9">   The GNU C Library is distributed in the hope that it will be useful,</Line>
  <Line number="10">   but WITHOUT ANY WARRANTY; without even the implied warranty of</Line>
  <Line number="11">   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</Line>
  <Line number="12">   Lesser General Public License for more details.</Line>
  <Line number="13"></Line>
  <Line number="14">   You should have received a copy of the GNU Lesser General Public</Line>
  <Line number="15">   License along with the GNU C Library; if not, see</Line>
  <Line number="16">   &lt;https://www.gnu.org/licenses/&gt;.  */</Line>
  <Line number="17"></Line>
  <Line number="18">/*</Line>
  <Line number="19"> *	POSIX Standard: 2.6 Primitive System Data Types	&lt;sys/types.h&gt;</Line>
  <Line number="20"> */</Line>
  <Line number="21"></Line>
  <Line number="22">#ifndef	_SYS_TYPES_H</Line>
  <Line number="23">#define	_SYS_TYPES_H	1</Line>
  <Line number="24"></Line>
  <Line number="25">#include &lt;features.h&gt;</Line>
  <Line number="26"></Line>
  <Line number="27">__BEGIN_DECLS</Line>
  <Line number="28"></Line>
  <Line number="29">#include &lt;bits/types.h&gt;</Line>
  <Line number="30"></Line>
  <Line number="31">#ifdef	__USE_MISC</Line>
  <Line number="32"># ifndef __u_char_defined</Line>
  <Line number="33">typedef __u_char u_char;</Line>
  <Line number="34">typedef __u_short u_short;</Line>
  <Line number="35">typedef __u_int u_int;</Line>
  <Line number="36">typedef __u_long u_long;</Line>
  <Line number="37">typedef __quad_t quad_t;</Line>
  <Line number="38">typedef __u_quad_t u_quad_t;</Line>
  <Line number="39">typedef __fsid_t fsid_t;</Line>
  <Line number="40">#  define __u_char_defined</Line>
  <Line number="41"># endif</Line>
  <Line number="42">typedef __loff_t loff_t;</Line>
  <Line number="43">#endif</Line>
  <Line number="44"></Line>
  <Line number="45">#ifndef __ino_t_defined</Line>
  <Line number="46"># ifndef __USE_FILE_OFFSET64</Line>
  <Line number="47">typedef __ino_t ino_t;</Line>
  <Line number="48"># else</Line>
  <Line number="49">typedef __ino64_t ino_t;</Line>
  <Line number="50"># endif</Line>
  <Line number="51"># define __ino_t_defined</Line>
  <Line number="52">#endif</Line>
  <Line number="53">#if defined __USE_LARGEFILE64 &amp;&amp; !defined __ino64_t_defined</Line>
  <Line number="54">typedef __ino64_t ino64_t;</Line>
  <Line number="55"># define __ino64_t_defined</Line>
  <Line number="56">#endif</Line>
  <Line number="57"></Line>
  <Line number="58">#ifndef __dev_t_defined</Line>
  <Line number="59">typedef __dev_t dev_t;</Line>
  <Line number="60"># define __dev_t_defined</Line>
  <Line number="61">#endif</Line>
  <Line number="62"></Line>
  <Line number="63">#ifndef __gid_t_defined</Line>
  <Line number="64">typedef __gid_t gid_t;</Line>
  <Line number="65"># define __gid_t_defined</Line>
  <Line number="66">#endif</Line>
  <Line number="67"></Line>
  <Line number="68">#ifndef __mode_t_defined</Line>
  <Line number="69">typedef __mode_t mode_t;</Line>
  <Line number="70"># define __mode_t_defined</Line>
  <Line number="71">#endif</Line>
  <Line number="72"></Line>
  <Line number="73">#ifndef __nlink_t_defined</Line>
  <Line number="74">typedef __nlink_t nlink_t;</Line>
  <Line number="75"># define __nlink_t_defined</Line>
  <Line number="76">#endif</Line>
  <Line number="77"></Line>
  <Line number="78">#ifndef __uid_t_defined</Line>
  <Line number="79">typedef __uid_t uid_t;</Line>
  <Line number="80"># define __uid_t_defined</Line>
  <Line number="81">#endif</Line>
  <Line number="82"></Line>
  <Line number="83">#ifndef __off_t_defined</Line>
  <Line number="84"># ifndef __USE_FILE_OFFSET64</Line>
  <Line number="85">typedef __off_t off_t;</Line>
  <Line number="86"># else</Line>
  <Line number="87">typedef __off64_t off_t;</Line>
  <Line number="88"># endif</Line>
  <Line number="89"># define __off_t_defined</Line>
  <Line number="90">#endif</Line>
  <Line number="91">#if defined __USE_LARGEFILE64 &amp;&amp; !defined __off64_t_defined</Line>
  <Line number="92">typedef __off64_t off64_t;</Line>
  <Line number="93"># define __off64_t_defined</Line>
  <Line number="94">#endif</Line>
  <Line number="95"></Line>
  <Line number="96">#ifndef __pid_t_defined</Line>
  <Line number="97">typedef __pid_t pid_t;</Line>
  <Line number="98"># define __pid_t_defined</Line>
  <Line number="99">#endif</Line>
  <Line number="100"></Line>
  <Line number="101">#if (defined __USE_XOPEN || defined __USE_XOPEN2K8) \</Line>
  <Line number="102">    &amp;&amp; !defined __id_t_defined</Line>
  <Line number="103">typedef __id_t id_t;</Line>
  <Line number="104"># define __id_t_defined</Line>
  <Line number="105">#endif</Line>
  <Line number="106"></Line>
  <Line number="107">#ifndef __ssize_t_defined</Line>
  <Line number="108">typedef __ssize_t ssize_t;</Line>
  <Line number="109"># define __ssize_t_defined</Line>
  <Line number="110">#endif</Line>
  <Line number="111"></Line>
  <Line number="112">#ifdef	__USE_MISC</Line>
  <Line number="113"># ifndef __daddr_t_defined</Line>
  <Line number="114">typedef __daddr_t daddr_t;</Line>
  <Line number="115">typedef __caddr_t caddr_t;</Line>
  <Line number="116">#  define __daddr_t_defined</Line>
  <Line number="117"># endif</Line>
  <Line number="118">#endif</Line>
  <Line number="119"></Line>
  <Line number="120">#if (defined __USE_MISC || defined __USE_XOPEN) &amp;&amp; !defined __key_t_defined</Line>
  <Line number="121">typedef __key_t key_t;</Line>
  <Line number="122"># define __key_t_defined</Line>
  <Line number="123">#endif</Line>
  <Line number="124"></Line>
  <Line number="125">#if defined __USE_XOPEN || defined __USE_XOPEN2K8</Line>
  <Line number="126"># include &lt;bits/types/clock_t.h&gt;</Line>
  <Line number="127">#endif</Line>
  <Line number="128">#include &lt;bits/types/clockid_t.h&gt;</Line>
  <Line number="129">#include &lt;bits/types/time_t.h&gt;</Line>
  <Line number="130">#include &lt;bits/types/timer_t.h&gt;</Line>
  <Line number="131"></Line>
  <Line number="132">#ifdef __USE_XOPEN</Line>
  <Line number="133"># ifndef __useconds_t_defined</Line>
  <Line number="134">typedef __useconds_t useconds_t;</Line>
  <Line number="135">#  define __useconds_t_defined</Line>
  <Line number="136"># endif</Line>
  <Line number="137"># ifndef __suseconds_t_defined</Line>
  <Line number="138">typedef __suseconds_t suseconds_t;</Line>
  <Line number="139">#  define __suseconds_t_defined</Line>
  <Line number="140"># endif</Line>
  <Line number="141">#endif</Line>
  <Line number="142"></Line>
  <Line number="143">#define	__need_size_t</Line>
  <Line number="144">#include &lt;stddef.h&gt;</Line>
  <Line number="145"></Line>
  <Line number="146">#ifdef __USE_MISC</Line>
  <Line number="147">/* Old compatibility names for C types.  */</Line>
  <Line number="148">typedef unsigned long int ulong;</Line>
  <Line number="149">typedef unsigned short int ushort;</Line>
  <Line number="150">typedef unsigned int uint;</Line>
  <Line number="151">#endif</Line>
  <Line number="152"></Line>
  <Line number="153">/* These size-specific names are used by some of the inet code.  */</Line>
  <Line number="154"></Line>
  <Line number="155">#include &lt;bits/stdint-intn.h&gt;</Line>
  <Line number="156"></Line>
  <Line number="157">/* These were defined by ISO C without the first `_&apos;.  */</Line>
  <Line number="158">typedef __uint8_t u_int8_t;</Line>
  <Line number="159">typedef __uint16_t u_int16_t;</Line>
  <Line number="160">typedef __uint32_t u_int32_t;</Line>
  <Line number="161">typedef __uint64_t u_int64_t;</Line>
  <Line number="162"></Line>
  <Line number="163">#if __GNUC_PREREQ (2, 7)</Line>
  <Line number="164">typedef int register_t __attribute__ ((__mode__ (__word__)));</Line>
  <Line number="165">#else</Line>
  <Line number="166">typedef int register_t;</Line>
  <Line number="167">#endif</Line>
  <Line number="168"></Line>
  <Line number="169">/* Some code from BIND tests this macro to see if the types above are</Line>
  <Line number="170">   defined.  */</Line>
  <Line number="171">#define __BIT_TYPES_DEFINED__	1</Line>
  <Line number="172"></Line>
  <Line number="173"></Line>
  <Line number="174">#ifdef	__USE_MISC</Line>
  <Line number="175">/* In BSD &lt;sys/types.h&gt; is expected to define BYTE_ORDER.  */</Line>
  <Line number="176"># include &lt;endian.h&gt;</Line>
  <Line number="177"></Line>
  <Line number="178">/* It also defines `fd_set&apos; and the FD_* macros for `select&apos;.  */</Line>
  <Line number="179"># include &lt;sys/select.h&gt;</Line>
  <Line number="180">#endif /* Use misc.  */</Line>
  <Line number="181"></Line>
  <Line number="182"></Line>
  <Line number="183">#if (defined __USE_UNIX98 || defined __USE_XOPEN2K8) \</Line>
  <Line number="184">    &amp;&amp; !defined __blksize_t_defined</Line>
  <Line number="185">typedef __blksize_t blksize_t;</Line>
  <Line number="186"># define __blksize_t_defined</Line>
  <Line number="187">#endif</Line>
  <Line number="188"></Line>
  <Line number="189">/* Types from the Large File Support interface.  */</Line>
  <Line number="190">#ifndef __USE_FILE_OFFSET64</Line>
  <Line number="191"># ifndef __blkcnt_t_defined</Line>
  <Line number="192">typedef __blkcnt_t blkcnt_t;	 /* Type to count number of disk blocks.  */</Line>
  <Line number="193">#  define __blkcnt_t_defined</Line>
  <Line number="194"># endif</Line>
  <Line number="195"># ifndef __fsblkcnt_t_defined</Line>
  <Line number="196">typedef __fsblkcnt_t fsblkcnt_t; /* Type to count file system blocks.  */</Line>
  <Line number="197">#  define __fsblkcnt_t_defined</Line>
  <Line number="198"># endif</Line>
  <Line number="199"># ifndef __fsfilcnt_t_defined</Line>
  <Line number="200">typedef __fsfilcnt_t fsfilcnt_t; /* Type to count file system inodes.  */</Line>
  <Line number="201">#  define __fsfilcnt_t_defined</Line>
  <Line number="202"># endif</Line>
  <Line number="203">#else</Line>
  <Line number="204"># ifndef __blkcnt_t_defined</Line>
  <Line number="205">typedef __blkcnt64_t blkcnt_t;	   /* Type to count number of disk blocks.  */</Line>
  <Line number="206">#  define __blkcnt_t_defined</Line>
  <Line number="207"># endif</Line>
  <Line number="208"># ifndef __fsblkcnt_t_defined</Line>
  <Line number="209">typedef __fsblkcnt64_t fsblkcnt_t; /* Type to count file system blocks.  */</Line>
  <Line number="210">#  define __fsblkcnt_t_defined</Line>
  <Line number="211"># endif</Line>
  <Line number="212"># ifndef __fsfilcnt_t_defined</Line>
  <Line number="213">typedef __fsfilcnt64_t fsfilcnt_t; /* Type to count file system inodes.  */</Line>
  <Line number="214">#  define __fsfilcnt_t_defined</Line>
  <Line number="215"># endif</Line>
  <Line number="216">#endif</Line>
  <Line number="217"></Line>
  <Line number="218">#ifdef __USE_LARGEFILE64</Line>
  <Line number="219">typedef __blkcnt64_t blkcnt64_t;     /* Type to count number of disk blocks. */</Line>
  <Line number="220">typedef __fsblkcnt64_t fsblkcnt64_t; /* Type to count file system blocks.  */</Line>
  <Line number="221">typedef __fsfilcnt64_t fsfilcnt64_t; /* Type to count file system inodes.  */</Line>
  <Line number="222">#endif</Line>
  <Line number="223"></Line>
  <Line number="224"></Line>
  <Line number="225">/* Now add the thread types.  */</Line>
  <Line number="226">#if defined __USE_POSIX199506 || defined __USE_UNIX98</Line>
  <Line number="227"># include &lt;bits/pthreadtypes.h&gt;</Line>
  <Line number="228">#endif</Line>
  <Line number="229"></Line>
  <Line number="230">__END_DECLS</Line>
  <Line number="231"></Line>
  <Line number="232">#endif /* sys/types.h */</Line>
</SourceFile>
