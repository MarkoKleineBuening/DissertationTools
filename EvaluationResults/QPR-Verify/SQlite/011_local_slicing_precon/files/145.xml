<SourceFile>
  <Line number="1">/* SPDX-License-Identifier: GPL-2.0 WITH Linux-syscall-note */</Line>
  <Line number="2">#ifndef _LINUX_TYPES_H</Line>
  <Line number="3">#define _LINUX_TYPES_H</Line>
  <Line number="4"></Line>
  <Line number="5">#include &lt;asm/types.h&gt;</Line>
  <Line number="6"></Line>
  <Line number="7">#ifndef __ASSEMBLY__</Line>
  <Line number="8"></Line>
  <Line number="9">#include &lt;linux/posix_types.h&gt;</Line>
  <Line number="10"></Line>
  <Line number="11"></Line>
  <Line number="12">/*</Line>
  <Line number="13"> * Below are truly Linux-specific types that should never collide with</Line>
  <Line number="14"> * any application/library that wants linux/types.h.</Line>
  <Line number="15"> */</Line>
  <Line number="16"></Line>
  <Line number="17">#ifdef __CHECKER__</Line>
  <Line number="18">#define __bitwise__ __attribute__((bitwise))</Line>
  <Line number="19">#else</Line>
  <Line number="20">#define __bitwise__</Line>
  <Line number="21">#endif</Line>
  <Line number="22">#define __bitwise __bitwise__</Line>
  <Line number="23"></Line>
  <Line number="24">typedef __u16 __bitwise __le16;</Line>
  <Line number="25">typedef __u16 __bitwise __be16;</Line>
  <Line number="26">typedef __u32 __bitwise __le32;</Line>
  <Line number="27">typedef __u32 __bitwise __be32;</Line>
  <Line number="28">typedef __u64 __bitwise __le64;</Line>
  <Line number="29">typedef __u64 __bitwise __be64;</Line>
  <Line number="30"></Line>
  <Line number="31">typedef __u16 __bitwise __sum16;</Line>
  <Line number="32">typedef __u32 __bitwise __wsum;</Line>
  <Line number="33"></Line>
  <Line number="34">/*</Line>
  <Line number="35"> * aligned_u64 should be used in defining kernel&lt;-&gt;userspace ABIs to avoid</Line>
  <Line number="36"> * common 32/64-bit compat problems.</Line>
  <Line number="37"> * 64-bit values align to 4-byte boundaries on x86_32 (and possibly other</Line>
  <Line number="38"> * architectures) and to 8-byte boundaries on 64-bit architectures.  The new</Line>
  <Line number="39"> * aligned_64 type enforces 8-byte alignment so that structs containing</Line>
  <Line number="40"> * aligned_64 values have the same alignment on 32-bit and 64-bit architectures.</Line>
  <Line number="41"> * No conversions are necessary between 32-bit user-space and a 64-bit kernel.</Line>
  <Line number="42"> */</Line>
  <Line number="43">#define __aligned_u64 __u64 __attribute__((aligned(8)))</Line>
  <Line number="44">#define __aligned_be64 __be64 __attribute__((aligned(8)))</Line>
  <Line number="45">#define __aligned_le64 __le64 __attribute__((aligned(8)))</Line>
  <Line number="46"></Line>
  <Line number="47">typedef unsigned __bitwise __poll_t;</Line>
  <Line number="48"></Line>
  <Line number="49">#endif /*  __ASSEMBLY__ */</Line>
  <Line number="50">#endif /* _LINUX_TYPES_H */</Line>
</SourceFile>
