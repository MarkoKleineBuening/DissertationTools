runJobCommand
precondition analysis with entry:sqlite3Parser
arguents: child
arguents: job
arguents: mode
arguents: precondition
handleJobInSeparateProcess0

Checking job 8085 ...about to run job:
preconNumber: 5, 1

  Running Model Checker with 1 checks ...entry: sqlite3Parser, functionName: yy_find_shift_action
  <badref> = call i16 @qpr.precondition.yy_find_shift_action(i16 %19, i16 %18)
entry: sqlite3Parser, functionName: sqlite3Parser
entry: sqlite3Parser, functionName: yy_find_shift_action
try
try ready

    SMTSolver : stp
    CallStackBound : 0
    StopEncodingAfterCheckLoop : 1
    LoopUnrollBound : 1
    HavocLimit : 0
    PreconditionNumber : 5
    PreconditionLocation : jobs/8085
    TimeOut : 600
    InitializedGlobals : false
    IgnoreMissingFunctions : false
    StopEncodingAfterCheck : true
    OverApproxVaArgs : false
    PreconditionCheckMemory : false
    PreconditionOnlyArguments : trueI [0] lib/ModelChecker/Verifier.cpp:247 | EntryPoint : sqlite3Parser
m_checker->run()

    Performing bounded model checking ...
      Unrolling loop in function "sqlite3Parser" for 1 iterations succeeded.
      Transformed "sqlite3Parser" from 15 to 16 basic blocks and from 109 to 119 instructions
      Performing pre-transformations on LLVM IR ...        0 sec [DONE]
        
      Performing logical encoding ...size Alloca: 1
size Alloca: 1
TODO MKB implement precondition handling: IE
Reading in precondition at: jobs/8085/precondition_yy_find_shift_action.txt
preconFile: jobs/8085/precondition_yy_find_shift_action.txt
ref: [underoverapprox]name of function arguments, argValue:  
ref: [underoverapprox]name of function arguments, argValue:  
name of function arguments line
param: i16 %arg0:2207
---name: i16 %arg0, value: 2207.
integer, char or other simple types
name: i16 %arg0
assuming that there are not more then 10 arguments
nameIndex: 0
nameID: 0
argument name: 
value: 2207
###new bool cond: bool % = compare(%, %i16__2207)
param:  i16 %arg1:0
---name:  i16 %arg1, value: 0.
integer, char or other simple types
name:  i16 %arg1
assuming that there are not more then 10 arguments
nameIndex: 1
nameID: 1
argument name: 
value: 0
###added bool cond: bool % = or(%, %)
pruneOrAssert -- adding line boolCond: bool % = or(%, %)
param: i16 %arg0:2237
---name: i16 %arg0, value: 2237.
integer, char or other simple types
name: i16 %arg0
assuming that there are not more then 10 arguments
nameIndex: 0
nameID: 0
argument name: 
value: 2237
###new bool cond: bool % = compare(%, %i16__2237)
param:  i16 %arg1:0
---name:  i16 %arg1, value: 0.
integer, char or other simple types
name:  i16 %arg1
assuming that there are not more then 10 arguments
nameIndex: 1
nameID: 1
argument name: 
value: 0
###added bool cond: bool % = or(%, %)
pruneOrAssert -- adding line boolCond: bool % = or(%, %)
param: i16 %arg0:2221
---name: i16 %arg0, value: 2221.
integer, char or other simple types
name: i16 %arg0
assuming that there are not more then 10 arguments
nameIndex: 0
nameID: 0
argument name: 
value: 2221
###new bool cond: bool % = compare(%, %i16__2221)
param:  i16 %arg1:0
---name:  i16 %arg1, value: 0.
integer, char or other simple types
name:  i16 %arg1
assuming that there are not more then 10 arguments
nameIndex: 1
nameID: 1
argument name: 
value: 0
###added bool cond: bool % = or(%, %)
pruneOrAssert -- adding line boolCond: bool % = or(%, %)
param: i16 %arg0:2236
---name: i16 %arg0, value: 2236.
integer, char or other simple types
name: i16 %arg0
assuming that there are not more then 10 arguments
nameIndex: 0
nameID: 0
argument name: 
value: 2236
###new bool cond: bool % = compare(%, %i16__2236)
param:  i16 %arg1:0
---name:  i16 %arg1, value: 0.
integer, char or other simple types
name:  i16 %arg1
assuming that there are not more then 10 arguments
nameIndex: 1
nameID: 1
argument name: 
value: 0
###added bool cond: bool % = or(%, %)
pruneOrAssert -- adding line boolCond: bool % = or(%, %)
param: i16 %arg0:2239
---name: i16 %arg0, value: 2239.
integer, char or other simple types
name: i16 %arg0
assuming that there are not more then 10 arguments
nameIndex: 0
nameID: 0
argument name: 
value: 2239
###new bool cond: bool % = compare(%, %i16__2239)
param:  i16 %arg1:0
---name:  i16 %arg1, value: 0.
integer, char or other simple types
name:  i16 %arg1
assuming that there are not more then 10 arguments
nameIndex: 1
nameID: 1
argument name: 
value: 0
###added bool cond: bool % = or(%, %)
pruneOrAssert -- adding line boolCond: bool % = or(%, %)
Writing precondition type at: jobs/8085/precondition_type_sqlite3Parser.txt

Type of Precondition:
[underoverapprox]
precondition found, end encoding
                      0 sec [DONE]
        Number of expressions:                        155057
        after encoding

      5 assertions before transformations (5 custom).

      Performing formula transformations ...
        Simplifier
          Number of rewrites                            3346
        Fixed Memory Address Assigner
          Number of moved ops                              7
          Number of rewrites                            5210
        Simplifier
          Number of moved ops                              2
          Number of rewrites                           72603
        Memory Model Encoder
          Number of moved ops                              0rewriteAllocaOprewriteStackAddressOp
rewriteAllocaOprewriteStackAddressOp

          Number of rewrites                               2
        Simplifier
          Number of moved ops                              0
          Number of rewrites                            1381
        Simplifier
          Number of moved ops                              0
          Number of rewrites                          138394
        ToASC Analyser
          Memcpy/memset found                             no
        Byte-Based Memory Creator
        Instantiation-Based ToASC Simplifier
        Simplifier
        FP Abstraction
          Number of rewrites                              44

Abstracted floating point operations.  The result might be a false positive.

        Simplifier
          Number of moved ops                              0
          Number of rewrites                               0
                                                           0 sec [DONE]
        
      5 assertions remain after transformations (5 custom).
after rewriteFormula
after sanityCheckFormula

      Running SMT solver (STP with MiniSat) ...