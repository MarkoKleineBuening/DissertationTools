<SourceFile>
  <Line number="1">/* O_*, F_*, FD_* bit values for Linux/x86.</Line>
  <Line number="2">   Copyright (C) 2001-2020 Free Software Foundation, Inc.</Line>
  <Line number="3">   This file is part of the GNU C Library.</Line>
  <Line number="4"></Line>
  <Line number="5">   The GNU C Library is free software; you can redistribute it and/or</Line>
  <Line number="6">   modify it under the terms of the GNU Lesser General Public</Line>
  <Line number="7">   License as published by the Free Software Foundation; either</Line>
  <Line number="8">   version 2.1 of the License, or (at your option) any later version.</Line>
  <Line number="9"></Line>
  <Line number="10">   The GNU C Library is distributed in the hope that it will be useful,</Line>
  <Line number="11">   but WITHOUT ANY WARRANTY; without even the implied warranty of</Line>
  <Line number="12">   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</Line>
  <Line number="13">   Lesser General Public License for more details.</Line>
  <Line number="14"></Line>
  <Line number="15">   You should have received a copy of the GNU Lesser General Public</Line>
  <Line number="16">   License along with the GNU C Library; if not, see</Line>
  <Line number="17">   &lt;https://www.gnu.org/licenses/&gt;.  */</Line>
  <Line number="18"></Line>
  <Line number="19">#ifndef _FCNTL_H</Line>
  <Line number="20"># error &quot;Never use &lt;bits/fcntl.h&gt; directly; include &lt;fcntl.h&gt; instead.&quot;</Line>
  <Line number="21">#endif</Line>
  <Line number="22"></Line>
  <Line number="23">#ifdef __x86_64__</Line>
  <Line number="24"># define __O_LARGEFILE	0</Line>
  <Line number="25">#endif</Line>
  <Line number="26"></Line>
  <Line number="27">#ifdef __x86_64__</Line>
  <Line number="28">/* Not necessary, we always have 64-bit offsets.  */</Line>
  <Line number="29"># define F_GETLK64	5	/* Get record locking info.  */</Line>
  <Line number="30"># define F_SETLK64	6	/* Set record locking info (non-blocking).  */</Line>
  <Line number="31"># define F_SETLKW64	7	/* Set record locking info (blocking).	*/</Line>
  <Line number="32">#endif</Line>
  <Line number="33"></Line>
  <Line number="34"></Line>
  <Line number="35">struct flock</Line>
  <Line number="36">  {</Line>
  <Line number="37">    short int l_type;	/* Type of lock: F_RDLCK, F_WRLCK, or F_UNLCK.	*/</Line>
  <Line number="38">    short int l_whence;	/* Where `l_start&apos; is relative to (like `lseek&apos;).  */</Line>
  <Line number="39">#ifndef __USE_FILE_OFFSET64</Line>
  <Line number="40">    __off_t l_start;	/* Offset where the lock begins.  */</Line>
  <Line number="41">    __off_t l_len;	/* Size of the locked area; zero means until EOF.  */</Line>
  <Line number="42">#else</Line>
  <Line number="43">    __off64_t l_start;	/* Offset where the lock begins.  */</Line>
  <Line number="44">    __off64_t l_len;	/* Size of the locked area; zero means until EOF.  */</Line>
  <Line number="45">#endif</Line>
  <Line number="46">    __pid_t l_pid;	/* Process holding the lock.  */</Line>
  <Line number="47">  };</Line>
  <Line number="48"></Line>
  <Line number="49">#ifdef __USE_LARGEFILE64</Line>
  <Line number="50">struct flock64</Line>
  <Line number="51">  {</Line>
  <Line number="52">    short int l_type;	/* Type of lock: F_RDLCK, F_WRLCK, or F_UNLCK.	*/</Line>
  <Line number="53">    short int l_whence;	/* Where `l_start&apos; is relative to (like `lseek&apos;).  */</Line>
  <Line number="54">    __off64_t l_start;	/* Offset where the lock begins.  */</Line>
  <Line number="55">    __off64_t l_len;	/* Size of the locked area; zero means until EOF.  */</Line>
  <Line number="56">    __pid_t l_pid;	/* Process holding the lock.  */</Line>
  <Line number="57">  };</Line>
  <Line number="58">#endif</Line>
  <Line number="59"></Line>
  <Line number="60">/* Include generic Linux declarations.  */</Line>
  <Line number="61">#include &lt;bits/fcntl-linux.h&gt;</Line>
</SourceFile>
