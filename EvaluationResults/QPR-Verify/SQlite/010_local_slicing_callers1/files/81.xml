<SourceFile>
  <Line number="1">/* System-dependent timing definitions.  Linux version.</Line>
  <Line number="2">   Copyright (C) 1996-2020 Free Software Foundation, Inc.</Line>
  <Line number="3">   This file is part of the GNU C Library.</Line>
  <Line number="4"></Line>
  <Line number="5">   The GNU C Library is free software; you can redistribute it and/or</Line>
  <Line number="6">   modify it under the terms of the GNU Lesser General Public</Line>
  <Line number="7">   License as published by the Free Software Foundation; either</Line>
  <Line number="8">   version 2.1 of the License, or (at your option) any later version.</Line>
  <Line number="9"></Line>
  <Line number="10">   The GNU C Library is distributed in the hope that it will be useful,</Line>
  <Line number="11">   but WITHOUT ANY WARRANTY; without even the implied warranty of</Line>
  <Line number="12">   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</Line>
  <Line number="13">   Lesser General Public License for more details.</Line>
  <Line number="14"></Line>
  <Line number="15">   You should have received a copy of the GNU Lesser General Public</Line>
  <Line number="16">   License along with the GNU C Library; if not, see</Line>
  <Line number="17">   &lt;https://www.gnu.org/licenses/&gt;.  */</Line>
  <Line number="18"></Line>
  <Line number="19">/*</Line>
  <Line number="20"> * Never include this file directly; use &lt;time.h&gt; instead.</Line>
  <Line number="21"> */</Line>
  <Line number="22"></Line>
  <Line number="23">#ifndef _BITS_TIME_H</Line>
  <Line number="24">#define _BITS_TIME_H	1</Line>
  <Line number="25"></Line>
  <Line number="26">#include &lt;bits/types.h&gt;</Line>
  <Line number="27"></Line>
  <Line number="28">/* ISO/IEC 9899:1999 7.23.1: Components of time</Line>
  <Line number="29">   The macro `CLOCKS_PER_SEC&apos; is an expression with type `clock_t&apos; that is</Line>
  <Line number="30">   the number per second of the value returned by the `clock&apos; function.  */</Line>
  <Line number="31">/* CAE XSH, Issue 4, Version 2: &lt;time.h&gt;</Line>
  <Line number="32">   The value of CLOCKS_PER_SEC is required to be 1 million on all</Line>
  <Line number="33">   XSI-conformant systems. */</Line>
  <Line number="34">#define CLOCKS_PER_SEC  ((__clock_t) 1000000)</Line>
  <Line number="35"></Line>
  <Line number="36">#if (!defined __STRICT_ANSI__ || defined __USE_POSIX) \</Line>
  <Line number="37">   &amp;&amp; !defined __USE_XOPEN2K</Line>
  <Line number="38">/* Even though CLOCKS_PER_SEC has such a strange value CLK_TCK</Line>
  <Line number="39">   presents the real value for clock ticks per second for the system.  */</Line>
  <Line number="40">extern long int __sysconf (int);</Line>
  <Line number="41"># define CLK_TCK ((__clock_t) __sysconf (2))	/* 2 is _SC_CLK_TCK */</Line>
  <Line number="42">#endif</Line>
  <Line number="43"></Line>
  <Line number="44">#ifdef __USE_POSIX199309</Line>
  <Line number="45">/* Identifier for system-wide realtime clock.  */</Line>
  <Line number="46"># define CLOCK_REALTIME			0</Line>
  <Line number="47">/* Monotonic system-wide clock.  */</Line>
  <Line number="48"># define CLOCK_MONOTONIC		1</Line>
  <Line number="49">/* High-resolution timer from the CPU.  */</Line>
  <Line number="50"># define CLOCK_PROCESS_CPUTIME_ID	2</Line>
  <Line number="51">/* Thread-specific CPU-time clock.  */</Line>
  <Line number="52"># define CLOCK_THREAD_CPUTIME_ID	3</Line>
  <Line number="53">/* Monotonic system-wide clock, not adjusted for frequency scaling.  */</Line>
  <Line number="54"># define CLOCK_MONOTONIC_RAW		4</Line>
  <Line number="55">/* Identifier for system-wide realtime clock, updated only on ticks.  */</Line>
  <Line number="56"># define CLOCK_REALTIME_COARSE		5</Line>
  <Line number="57">/* Monotonic system-wide clock, updated only on ticks.  */</Line>
  <Line number="58"># define CLOCK_MONOTONIC_COARSE		6</Line>
  <Line number="59">/* Monotonic system-wide clock that includes time spent in suspension.  */</Line>
  <Line number="60"># define CLOCK_BOOTTIME			7</Line>
  <Line number="61">/* Like CLOCK_REALTIME but also wakes suspended system.  */</Line>
  <Line number="62"># define CLOCK_REALTIME_ALARM		8</Line>
  <Line number="63">/* Like CLOCK_BOOTTIME but also wakes suspended system.  */</Line>
  <Line number="64"># define CLOCK_BOOTTIME_ALARM		9</Line>
  <Line number="65">/* Like CLOCK_REALTIME but in International Atomic Time.  */</Line>
  <Line number="66"># define CLOCK_TAI			11</Line>
  <Line number="67"></Line>
  <Line number="68">/* Flag to indicate time is absolute.  */</Line>
  <Line number="69"># define TIMER_ABSTIME			1</Line>
  <Line number="70">#endif</Line>
  <Line number="71"></Line>
  <Line number="72">#ifdef __USE_GNU</Line>
  <Line number="73"># include &lt;bits/timex.h&gt;</Line>
  <Line number="74"></Line>
  <Line number="75">__BEGIN_DECLS</Line>
  <Line number="76"></Line>
  <Line number="77">/* Tune a POSIX clock.  */</Line>
  <Line number="78">extern int clock_adjtime (__clockid_t __clock_id, struct timex *__utx) __THROW;</Line>
  <Line number="79"></Line>
  <Line number="80">__END_DECLS</Line>
  <Line number="81">#endif /* use GNU */</Line>
  <Line number="82"></Line>
  <Line number="83">#endif	/* bits/time.h */</Line>
</SourceFile>
