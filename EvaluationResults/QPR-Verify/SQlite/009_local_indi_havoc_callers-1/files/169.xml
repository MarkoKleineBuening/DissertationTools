<SourceFile>
  <Line number="1">/* Definitions for POSIX memory map interface.  Linux generic version.</Line>
  <Line number="2">   Copyright (C) 2001-2020 Free Software Foundation, Inc.</Line>
  <Line number="3">   This file is part of the GNU C Library.</Line>
  <Line number="4"></Line>
  <Line number="5">   The GNU C Library is free software; you can redistribute it and/or</Line>
  <Line number="6">   modify it under the terms of the GNU Lesser General Public</Line>
  <Line number="7">   License as published by the Free Software Foundation; either</Line>
  <Line number="8">   version 2.1 of the License, or (at your option) any later version.</Line>
  <Line number="9"></Line>
  <Line number="10">   The GNU C Library is distributed in the hope that it will be useful,</Line>
  <Line number="11">   but WITHOUT ANY WARRANTY; without even the implied warranty of</Line>
  <Line number="12">   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</Line>
  <Line number="13">   Lesser General Public License for more details.</Line>
  <Line number="14"></Line>
  <Line number="15">   You should have received a copy of the GNU Lesser General Public</Line>
  <Line number="16">   License along with the GNU C Library; if not, see</Line>
  <Line number="17">   &lt;https://www.gnu.org/licenses/&gt;.  */</Line>
  <Line number="18"></Line>
  <Line number="19">#ifndef _SYS_MMAN_H</Line>
  <Line number="20"># error &quot;Never use &lt;bits/mman-linux.h&gt; directly; include &lt;sys/mman.h&gt; instead.&quot;</Line>
  <Line number="21">#endif</Line>
  <Line number="22"></Line>
  <Line number="23">/* The following definitions basically come from the kernel headers.</Line>
  <Line number="24">   But the kernel header is not namespace clean.  */</Line>
  <Line number="25"></Line>
  <Line number="26"></Line>
  <Line number="27">/* Protections are chosen from these bits, OR&apos;d together.  The</Line>
  <Line number="28">   implementation does not necessarily support PROT_EXEC or PROT_WRITE</Line>
  <Line number="29">   without PROT_READ.  The only guarantees are that no writing will be</Line>
  <Line number="30">   allowed without PROT_WRITE and no access will be allowed for PROT_NONE. */</Line>
  <Line number="31"></Line>
  <Line number="32">#define PROT_READ	0x1		/* Page can be read.  */</Line>
  <Line number="33">#define PROT_WRITE	0x2		/* Page can be written.  */</Line>
  <Line number="34">#define PROT_EXEC	0x4		/* Page can be executed.  */</Line>
  <Line number="35">#define PROT_NONE	0x0		/* Page can not be accessed.  */</Line>
  <Line number="36">#define PROT_GROWSDOWN	0x01000000	/* Extend change to start of</Line>
  <Line number="37">					   growsdown vma (mprotect only).  */</Line>
  <Line number="38">#define PROT_GROWSUP	0x02000000	/* Extend change to start of</Line>
  <Line number="39">					   growsup vma (mprotect only).  */</Line>
  <Line number="40"></Line>
  <Line number="41">/* Sharing types (must choose one and only one of these).  */</Line>
  <Line number="42">#define MAP_SHARED	0x01		/* Share changes.  */</Line>
  <Line number="43">#define MAP_PRIVATE	0x02		/* Changes are private.  */</Line>
  <Line number="44">#ifdef __USE_MISC</Line>
  <Line number="45"># define MAP_SHARED_VALIDATE	0x03	/* Share changes and validate</Line>
  <Line number="46">					   extension flags.  */</Line>
  <Line number="47"># define MAP_TYPE	0x0f		/* Mask for type of mapping.  */</Line>
  <Line number="48">#endif</Line>
  <Line number="49"></Line>
  <Line number="50">/* Other flags.  */</Line>
  <Line number="51">#define MAP_FIXED	0x10		/* Interpret addr exactly.  */</Line>
  <Line number="52">#ifdef __USE_MISC</Line>
  <Line number="53"># define MAP_FILE	0</Line>
  <Line number="54"># ifdef __MAP_ANONYMOUS</Line>
  <Line number="55">#  define MAP_ANONYMOUS	__MAP_ANONYMOUS	/* Don&apos;t use a file.  */</Line>
  <Line number="56"># else</Line>
  <Line number="57">#  define MAP_ANONYMOUS	0x20		/* Don&apos;t use a file.  */</Line>
  <Line number="58"># endif</Line>
  <Line number="59"># define MAP_ANON	MAP_ANONYMOUS</Line>
  <Line number="60">/* When MAP_HUGETLB is set bits [26:31] encode the log2 of the huge page size.  */</Line>
  <Line number="61"># define MAP_HUGE_SHIFT	26</Line>
  <Line number="62"># define MAP_HUGE_MASK	0x3f</Line>
  <Line number="63">#endif</Line>
  <Line number="64"></Line>
  <Line number="65">/* Flags to `msync&apos;.  */</Line>
  <Line number="66">#define MS_ASYNC	1		/* Sync memory asynchronously.  */</Line>
  <Line number="67">#define MS_SYNC		4		/* Synchronous memory sync.  */</Line>
  <Line number="68">#define MS_INVALIDATE	2		/* Invalidate the caches.  */</Line>
  <Line number="69"></Line>
  <Line number="70">/* Advice to `madvise&apos;.  */</Line>
  <Line number="71">#ifdef __USE_MISC</Line>
  <Line number="72"># define MADV_NORMAL	  0	/* No further special treatment.  */</Line>
  <Line number="73"># define MADV_RANDOM	  1	/* Expect random page references.  */</Line>
  <Line number="74"># define MADV_SEQUENTIAL  2	/* Expect sequential page references.  */</Line>
  <Line number="75"># define MADV_WILLNEED	  3	/* Will need these pages.  */</Line>
  <Line number="76"># define MADV_DONTNEED	  4	/* Don&apos;t need these pages.  */</Line>
  <Line number="77"># define MADV_FREE	  8	/* Free pages only if memory pressure.  */</Line>
  <Line number="78"># define MADV_REMOVE	  9	/* Remove these pages and resources.  */</Line>
  <Line number="79"># define MADV_DONTFORK	  10	/* Do not inherit across fork.  */</Line>
  <Line number="80"># define MADV_DOFORK	  11	/* Do inherit across fork.  */</Line>
  <Line number="81"># define MADV_MERGEABLE	  12	/* KSM may merge identical pages.  */</Line>
  <Line number="82"># define MADV_UNMERGEABLE 13	/* KSM may not merge identical pages.  */</Line>
  <Line number="83"># define MADV_HUGEPAGE	  14	/* Worth backing with hugepages.  */</Line>
  <Line number="84"># define MADV_NOHUGEPAGE  15	/* Not worth backing with hugepages.  */</Line>
  <Line number="85"># define MADV_DONTDUMP	  16    /* Explicity exclude from the core dump,</Line>
  <Line number="86">                                   overrides the coredump filter bits.  */</Line>
  <Line number="87"># define MADV_DODUMP	  17	/* Clear the MADV_DONTDUMP flag.  */</Line>
  <Line number="88"># define MADV_WIPEONFORK  18	/* Zero memory on fork, child only.  */</Line>
  <Line number="89"># define MADV_KEEPONFORK  19	/* Undo MADV_WIPEONFORK.  */</Line>
  <Line number="90"># define MADV_COLD        20	/* Deactivate these pages.  */</Line>
  <Line number="91"># define MADV_PAGEOUT     21	/* Reclaim these pages.  */</Line>
  <Line number="92"># define MADV_HWPOISON	  100	/* Poison a page for testing.  */</Line>
  <Line number="93">#endif</Line>
  <Line number="94"></Line>
  <Line number="95">/* The POSIX people had to invent similar names for the same things.  */</Line>
  <Line number="96">#ifdef __USE_XOPEN2K</Line>
  <Line number="97"># define POSIX_MADV_NORMAL	0 /* No further special treatment.  */</Line>
  <Line number="98"># define POSIX_MADV_RANDOM	1 /* Expect random page references.  */</Line>
  <Line number="99"># define POSIX_MADV_SEQUENTIAL	2 /* Expect sequential page references.  */</Line>
  <Line number="100"># define POSIX_MADV_WILLNEED	3 /* Will need these pages.  */</Line>
  <Line number="101"># define POSIX_MADV_DONTNEED	4 /* Don&apos;t need these pages.  */</Line>
  <Line number="102">#endif</Line>
  <Line number="103"></Line>
  <Line number="104">/* Flags for `mlockall&apos;.  */</Line>
  <Line number="105">#ifndef MCL_CURRENT</Line>
  <Line number="106"># define MCL_CURRENT	1		/* Lock all currently mapped pages.  */</Line>
  <Line number="107"># define MCL_FUTURE	2		/* Lock all additions to address</Line>
  <Line number="108">					   space.  */</Line>
  <Line number="109"># define MCL_ONFAULT	4		/* Lock all pages that are</Line>
  <Line number="110">					   faulted in.  */</Line>
  <Line number="111">#endif</Line>
  <Line number="112"></Line>
  <Line number="113">#include &lt;bits/mman-shared.h&gt;</Line>
</SourceFile>
