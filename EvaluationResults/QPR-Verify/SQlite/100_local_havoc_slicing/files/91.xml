<SourceFile>
  <Line number="1">/* Copyright (C) 2001-2020 Free Software Foundation, Inc.</Line>
  <Line number="2">   This file is part of the GNU C Library.</Line>
  <Line number="3"></Line>
  <Line number="4">   The GNU C Library is free software; you can redistribute it and/or</Line>
  <Line number="5">   modify it under the terms of the GNU Lesser General Public</Line>
  <Line number="6">   License as published by the Free Software Foundation; either</Line>
  <Line number="7">   version 2.1 of the License, or (at your option) any later version.</Line>
  <Line number="8"></Line>
  <Line number="9">   The GNU C Library is distributed in the hope that it will be useful,</Line>
  <Line number="10">   but WITHOUT ANY WARRANTY; without even the implied warranty of</Line>
  <Line number="11">   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</Line>
  <Line number="12">   Lesser General Public License for more details.</Line>
  <Line number="13"></Line>
  <Line number="14">   You should have received a copy of the GNU Lesser General Public</Line>
  <Line number="15">   License along with the GNU C Library; if not, see</Line>
  <Line number="16">   &lt;https://www.gnu.org/licenses/&gt;.  */</Line>
  <Line number="17"></Line>
  <Line number="18">#ifndef _SYS_UCONTEXT_H</Line>
  <Line number="19">#define _SYS_UCONTEXT_H	1</Line>
  <Line number="20"></Line>
  <Line number="21">#include &lt;features.h&gt;</Line>
  <Line number="22"></Line>
  <Line number="23">#include &lt;bits/types.h&gt;</Line>
  <Line number="24">#include &lt;bits/types/sigset_t.h&gt;</Line>
  <Line number="25">#include &lt;bits/types/stack_t.h&gt;</Line>
  <Line number="26"></Line>
  <Line number="27"></Line>
  <Line number="28">#ifdef __USE_MISC</Line>
  <Line number="29"># define __ctx(fld) fld</Line>
  <Line number="30">#else</Line>
  <Line number="31"># define __ctx(fld) __ ## fld</Line>
  <Line number="32">#endif</Line>
  <Line number="33"></Line>
  <Line number="34">#ifdef __x86_64__</Line>
  <Line number="35"></Line>
  <Line number="36">/* Type for general register.  */</Line>
  <Line number="37">__extension__ typedef long long int greg_t;</Line>
  <Line number="38"></Line>
  <Line number="39">/* Number of general registers.  */</Line>
  <Line number="40">#define __NGREG	23</Line>
  <Line number="41">#ifdef __USE_MISC</Line>
  <Line number="42"># define NGREG	__NGREG</Line>
  <Line number="43">#endif</Line>
  <Line number="44"></Line>
  <Line number="45">/* Container for all general registers.  */</Line>
  <Line number="46">typedef greg_t gregset_t[__NGREG];</Line>
  <Line number="47"></Line>
  <Line number="48">#ifdef __USE_GNU</Line>
  <Line number="49">/* Number of each register in the `gregset_t&apos; array.  */</Line>
  <Line number="50">enum</Line>
  <Line number="51">{</Line>
  <Line number="52">  REG_R8 = 0,</Line>
  <Line number="53"># define REG_R8		REG_R8</Line>
  <Line number="54">  REG_R9,</Line>
  <Line number="55"># define REG_R9		REG_R9</Line>
  <Line number="56">  REG_R10,</Line>
  <Line number="57"># define REG_R10	REG_R10</Line>
  <Line number="58">  REG_R11,</Line>
  <Line number="59"># define REG_R11	REG_R11</Line>
  <Line number="60">  REG_R12,</Line>
  <Line number="61"># define REG_R12	REG_R12</Line>
  <Line number="62">  REG_R13,</Line>
  <Line number="63"># define REG_R13	REG_R13</Line>
  <Line number="64">  REG_R14,</Line>
  <Line number="65"># define REG_R14	REG_R14</Line>
  <Line number="66">  REG_R15,</Line>
  <Line number="67"># define REG_R15	REG_R15</Line>
  <Line number="68">  REG_RDI,</Line>
  <Line number="69"># define REG_RDI	REG_RDI</Line>
  <Line number="70">  REG_RSI,</Line>
  <Line number="71"># define REG_RSI	REG_RSI</Line>
  <Line number="72">  REG_RBP,</Line>
  <Line number="73"># define REG_RBP	REG_RBP</Line>
  <Line number="74">  REG_RBX,</Line>
  <Line number="75"># define REG_RBX	REG_RBX</Line>
  <Line number="76">  REG_RDX,</Line>
  <Line number="77"># define REG_RDX	REG_RDX</Line>
  <Line number="78">  REG_RAX,</Line>
  <Line number="79"># define REG_RAX	REG_RAX</Line>
  <Line number="80">  REG_RCX,</Line>
  <Line number="81"># define REG_RCX	REG_RCX</Line>
  <Line number="82">  REG_RSP,</Line>
  <Line number="83"># define REG_RSP	REG_RSP</Line>
  <Line number="84">  REG_RIP,</Line>
  <Line number="85"># define REG_RIP	REG_RIP</Line>
  <Line number="86">  REG_EFL,</Line>
  <Line number="87"># define REG_EFL	REG_EFL</Line>
  <Line number="88">  REG_CSGSFS,		/* Actually short cs, gs, fs, __pad0.  */</Line>
  <Line number="89"># define REG_CSGSFS	REG_CSGSFS</Line>
  <Line number="90">  REG_ERR,</Line>
  <Line number="91"># define REG_ERR	REG_ERR</Line>
  <Line number="92">  REG_TRAPNO,</Line>
  <Line number="93"># define REG_TRAPNO	REG_TRAPNO</Line>
  <Line number="94">  REG_OLDMASK,</Line>
  <Line number="95"># define REG_OLDMASK	REG_OLDMASK</Line>
  <Line number="96">  REG_CR2</Line>
  <Line number="97"># define REG_CR2	REG_CR2</Line>
  <Line number="98">};</Line>
  <Line number="99">#endif</Line>
  <Line number="100"></Line>
  <Line number="101">struct _libc_fpxreg</Line>
  <Line number="102">{</Line>
  <Line number="103">  unsigned short int __ctx(significand)[4];</Line>
  <Line number="104">  unsigned short int __ctx(exponent);</Line>
  <Line number="105">  unsigned short int __glibc_reserved1[3];</Line>
  <Line number="106">};</Line>
  <Line number="107"></Line>
  <Line number="108">struct _libc_xmmreg</Line>
  <Line number="109">{</Line>
  <Line number="110">  __uint32_t	__ctx(element)[4];</Line>
  <Line number="111">};</Line>
  <Line number="112"></Line>
  <Line number="113">struct _libc_fpstate</Line>
  <Line number="114">{</Line>
  <Line number="115">  /* 64-bit FXSAVE format.  */</Line>
  <Line number="116">  __uint16_t		__ctx(cwd);</Line>
  <Line number="117">  __uint16_t		__ctx(swd);</Line>
  <Line number="118">  __uint16_t		__ctx(ftw);</Line>
  <Line number="119">  __uint16_t		__ctx(fop);</Line>
  <Line number="120">  __uint64_t		__ctx(rip);</Line>
  <Line number="121">  __uint64_t		__ctx(rdp);</Line>
  <Line number="122">  __uint32_t		__ctx(mxcsr);</Line>
  <Line number="123">  __uint32_t		__ctx(mxcr_mask);</Line>
  <Line number="124">  struct _libc_fpxreg	_st[8];</Line>
  <Line number="125">  struct _libc_xmmreg	_xmm[16];</Line>
  <Line number="126">  __uint32_t		__glibc_reserved1[24];</Line>
  <Line number="127">};</Line>
  <Line number="128"></Line>
  <Line number="129">/* Structure to describe FPU registers.  */</Line>
  <Line number="130">typedef struct _libc_fpstate *fpregset_t;</Line>
  <Line number="131"></Line>
  <Line number="132">/* Context to describe whole processor state.  */</Line>
  <Line number="133">typedef struct</Line>
  <Line number="134">  {</Line>
  <Line number="135">    gregset_t __ctx(gregs);</Line>
  <Line number="136">    /* Note that fpregs is a pointer.  */</Line>
  <Line number="137">    fpregset_t __ctx(fpregs);</Line>
  <Line number="138">    __extension__ unsigned long long __reserved1 [8];</Line>
  <Line number="139">} mcontext_t;</Line>
  <Line number="140"></Line>
  <Line number="141">/* Userlevel context.  */</Line>
  <Line number="142">typedef struct ucontext_t</Line>
  <Line number="143">  {</Line>
  <Line number="144">    unsigned long int __ctx(uc_flags);</Line>
  <Line number="145">    struct ucontext_t *uc_link;</Line>
  <Line number="146">    stack_t uc_stack;</Line>
  <Line number="147">    mcontext_t uc_mcontext;</Line>
  <Line number="148">    sigset_t uc_sigmask;</Line>
  <Line number="149">    struct _libc_fpstate __fpregs_mem;</Line>
  <Line number="150">    __extension__ unsigned long long int __ssp[4];</Line>
  <Line number="151">  } ucontext_t;</Line>
  <Line number="152"></Line>
  <Line number="153">#else /* !__x86_64__ */</Line>
  <Line number="154"></Line>
  <Line number="155">/* Type for general register.  */</Line>
  <Line number="156">typedef int greg_t;</Line>
  <Line number="157"></Line>
  <Line number="158">/* Number of general registers.  */</Line>
  <Line number="159">#define __NGREG	19</Line>
  <Line number="160">#ifdef __USE_MISC</Line>
  <Line number="161"># define NGREG	__NGREG</Line>
  <Line number="162">#endif</Line>
  <Line number="163"></Line>
  <Line number="164">/* Container for all general registers.  */</Line>
  <Line number="165">typedef greg_t gregset_t[__NGREG];</Line>
  <Line number="166"></Line>
  <Line number="167">#ifdef __USE_GNU</Line>
  <Line number="168">/* Number of each register is the `gregset_t&apos; array.  */</Line>
  <Line number="169">enum</Line>
  <Line number="170">{</Line>
  <Line number="171">  REG_GS = 0,</Line>
  <Line number="172"># define REG_GS		REG_GS</Line>
  <Line number="173">  REG_FS,</Line>
  <Line number="174"># define REG_FS		REG_FS</Line>
  <Line number="175">  REG_ES,</Line>
  <Line number="176"># define REG_ES		REG_ES</Line>
  <Line number="177">  REG_DS,</Line>
  <Line number="178"># define REG_DS		REG_DS</Line>
  <Line number="179">  REG_EDI,</Line>
  <Line number="180"># define REG_EDI	REG_EDI</Line>
  <Line number="181">  REG_ESI,</Line>
  <Line number="182"># define REG_ESI	REG_ESI</Line>
  <Line number="183">  REG_EBP,</Line>
  <Line number="184"># define REG_EBP	REG_EBP</Line>
  <Line number="185">  REG_ESP,</Line>
  <Line number="186"># define REG_ESP	REG_ESP</Line>
  <Line number="187">  REG_EBX,</Line>
  <Line number="188"># define REG_EBX	REG_EBX</Line>
  <Line number="189">  REG_EDX,</Line>
  <Line number="190"># define REG_EDX	REG_EDX</Line>
  <Line number="191">  REG_ECX,</Line>
  <Line number="192"># define REG_ECX	REG_ECX</Line>
  <Line number="193">  REG_EAX,</Line>
  <Line number="194"># define REG_EAX	REG_EAX</Line>
  <Line number="195">  REG_TRAPNO,</Line>
  <Line number="196"># define REG_TRAPNO	REG_TRAPNO</Line>
  <Line number="197">  REG_ERR,</Line>
  <Line number="198"># define REG_ERR	REG_ERR</Line>
  <Line number="199">  REG_EIP,</Line>
  <Line number="200"># define REG_EIP	REG_EIP</Line>
  <Line number="201">  REG_CS,</Line>
  <Line number="202"># define REG_CS		REG_CS</Line>
  <Line number="203">  REG_EFL,</Line>
  <Line number="204"># define REG_EFL	REG_EFL</Line>
  <Line number="205">  REG_UESP,</Line>
  <Line number="206"># define REG_UESP	REG_UESP</Line>
  <Line number="207">  REG_SS</Line>
  <Line number="208"># define REG_SS	REG_SS</Line>
  <Line number="209">};</Line>
  <Line number="210">#endif</Line>
  <Line number="211"></Line>
  <Line number="212">/* Definitions taken from the kernel headers.  */</Line>
  <Line number="213">struct _libc_fpreg</Line>
  <Line number="214">{</Line>
  <Line number="215">  unsigned short int __ctx(significand)[4];</Line>
  <Line number="216">  unsigned short int __ctx(exponent);</Line>
  <Line number="217">};</Line>
  <Line number="218"></Line>
  <Line number="219">struct _libc_fpstate</Line>
  <Line number="220">{</Line>
  <Line number="221">  unsigned long int __ctx(cw);</Line>
  <Line number="222">  unsigned long int __ctx(sw);</Line>
  <Line number="223">  unsigned long int __ctx(tag);</Line>
  <Line number="224">  unsigned long int __ctx(ipoff);</Line>
  <Line number="225">  unsigned long int __ctx(cssel);</Line>
  <Line number="226">  unsigned long int __ctx(dataoff);</Line>
  <Line number="227">  unsigned long int __ctx(datasel);</Line>
  <Line number="228">  struct _libc_fpreg _st[8];</Line>
  <Line number="229">  unsigned long int __ctx(status);</Line>
  <Line number="230">};</Line>
  <Line number="231"></Line>
  <Line number="232">/* Structure to describe FPU registers.  */</Line>
  <Line number="233">typedef struct _libc_fpstate *fpregset_t;</Line>
  <Line number="234"></Line>
  <Line number="235">/* Context to describe whole processor state.  */</Line>
  <Line number="236">typedef struct</Line>
  <Line number="237">  {</Line>
  <Line number="238">    gregset_t __ctx(gregs);</Line>
  <Line number="239">    /* Due to Linux&apos;s history we have to use a pointer here.  The SysV/i386</Line>
  <Line number="240">       ABI requires a struct with the values.  */</Line>
  <Line number="241">    fpregset_t __ctx(fpregs);</Line>
  <Line number="242">    unsigned long int __ctx(oldmask);</Line>
  <Line number="243">    unsigned long int __ctx(cr2);</Line>
  <Line number="244">  } mcontext_t;</Line>
  <Line number="245"></Line>
  <Line number="246">/* Userlevel context.  */</Line>
  <Line number="247">typedef struct ucontext_t</Line>
  <Line number="248">  {</Line>
  <Line number="249">    unsigned long int __ctx(uc_flags);</Line>
  <Line number="250">    struct ucontext_t *uc_link;</Line>
  <Line number="251">    stack_t uc_stack;</Line>
  <Line number="252">    mcontext_t uc_mcontext;</Line>
  <Line number="253">    sigset_t uc_sigmask;</Line>
  <Line number="254">    struct _libc_fpstate __fpregs_mem;</Line>
  <Line number="255">    unsigned long int __ssp[4];</Line>
  <Line number="256">  } ucontext_t;</Line>
  <Line number="257"></Line>
  <Line number="258">#endif /* !__x86_64__ */</Line>
  <Line number="259"></Line>
  <Line number="260">#undef __ctx</Line>
  <Line number="261"></Line>
  <Line number="262">#endif /* sys/ucontext.h */</Line>
</SourceFile>
