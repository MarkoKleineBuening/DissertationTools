<SourceFile>
  <Line number="1">/* Copyright (C) 1991-2020 Free Software Foundation, Inc.</Line>
  <Line number="2">   This file is part of the GNU C Library.</Line>
  <Line number="3"></Line>
  <Line number="4">   The GNU C Library is free software; you can redistribute it and/or</Line>
  <Line number="5">   modify it under the terms of the GNU Lesser General Public</Line>
  <Line number="6">   License as published by the Free Software Foundation; either</Line>
  <Line number="7">   version 2.1 of the License, or (at your option) any later version.</Line>
  <Line number="8"></Line>
  <Line number="9">   The GNU C Library is distributed in the hope that it will be useful,</Line>
  <Line number="10">   but WITHOUT ANY WARRANTY; without even the implied warranty of</Line>
  <Line number="11">   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</Line>
  <Line number="12">   Lesser General Public License for more details.</Line>
  <Line number="13"></Line>
  <Line number="14">   You should have received a copy of the GNU Lesser General Public</Line>
  <Line number="15">   License along with the GNU C Library; if not, see</Line>
  <Line number="16">   &lt;https://www.gnu.org/licenses/&gt;.  */</Line>
  <Line number="17"></Line>
  <Line number="18">#ifndef __cookie_io_functions_t_defined</Line>
  <Line number="19">#define __cookie_io_functions_t_defined 1</Line>
  <Line number="20"></Line>
  <Line number="21">#include &lt;bits/types.h&gt;</Line>
  <Line number="22"></Line>
  <Line number="23">/* Functions to do I/O and file management for a stream.  */</Line>
  <Line number="24"></Line>
  <Line number="25">/* Read NBYTES bytes from COOKIE into a buffer pointed to by BUF.</Line>
  <Line number="26">   Return number of bytes read.  */</Line>
  <Line number="27">typedef __ssize_t cookie_read_function_t (void *__cookie, char *__buf,</Line>
  <Line number="28">                                          size_t __nbytes);</Line>
  <Line number="29"></Line>
  <Line number="30">/* Write NBYTES bytes pointed to by BUF to COOKIE.  Write all NBYTES bytes</Line>
  <Line number="31">   unless there is an error.  Return number of bytes written.  If</Line>
  <Line number="32">   there is an error, return 0 and do not write anything.  If the file</Line>
  <Line number="33">   has been opened for append (__mode.__append set), then set the file</Line>
  <Line number="34">   pointer to the end of the file and then do the write; if not, just</Line>
  <Line number="35">   write at the current file pointer.  */</Line>
  <Line number="36">typedef __ssize_t cookie_write_function_t (void *__cookie, const char *__buf,</Line>
  <Line number="37">                                           size_t __nbytes);</Line>
  <Line number="38"></Line>
  <Line number="39">/* Move COOKIE&apos;s file position to *POS bytes from the</Line>
  <Line number="40">   beginning of the file (if W is SEEK_SET),</Line>
  <Line number="41">   the current position (if W is SEEK_CUR),</Line>
  <Line number="42">   or the end of the file (if W is SEEK_END).</Line>
  <Line number="43">   Set *POS to the new file position.</Line>
  <Line number="44">   Returns zero if successful, nonzero if not.  */</Line>
  <Line number="45">typedef int cookie_seek_function_t (void *__cookie, __off64_t *__pos, int __w);</Line>
  <Line number="46"></Line>
  <Line number="47">/* Close COOKIE.  */</Line>
  <Line number="48">typedef int cookie_close_function_t (void *__cookie);</Line>
  <Line number="49"></Line>
  <Line number="50">/* The structure with the cookie function pointers.</Line>
  <Line number="51">   The tag name of this struct is _IO_cookie_io_functions_t to</Line>
  <Line number="52">   preserve historic C++ mangled names for functions taking</Line>
  <Line number="53">   cookie_io_functions_t arguments.  That name should not be used in</Line>
  <Line number="54">   new code.  */</Line>
  <Line number="55">typedef struct _IO_cookie_io_functions_t</Line>
  <Line number="56">{</Line>
  <Line number="57">  cookie_read_function_t *read;		/* Read bytes.  */</Line>
  <Line number="58">  cookie_write_function_t *write;	/* Write bytes.  */</Line>
  <Line number="59">  cookie_seek_function_t *seek;		/* Seek/tell file position.  */</Line>
  <Line number="60">  cookie_close_function_t *close;	/* Close file.  */</Line>
  <Line number="61">} cookie_io_functions_t;</Line>
  <Line number="62"></Line>
  <Line number="63">#endif</Line>
</SourceFile>
