<SourceFile>
  <Line number="1">/* System-specific extensions of &lt;unistd.h&gt;, Linux version.</Line>
  <Line number="2">   Copyright (C) 2019-2020 Free Software Foundation, Inc.</Line>
  <Line number="3">   This file is part of the GNU C Library.</Line>
  <Line number="4"></Line>
  <Line number="5">   The GNU C Library is free software; you can redistribute it and/or</Line>
  <Line number="6">   modify it under the terms of the GNU Lesser General Public</Line>
  <Line number="7">   License as published by the Free Software Foundation; either</Line>
  <Line number="8">   version 2.1 of the License, or (at your option) any later version.</Line>
  <Line number="9"></Line>
  <Line number="10">   The GNU C Library is distributed in the hope that it will be useful,</Line>
  <Line number="11">   but WITHOUT ANY WARRANTY; without even the implied warranty of</Line>
  <Line number="12">   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</Line>
  <Line number="13">   Lesser General Public License for more details.</Line>
  <Line number="14"></Line>
  <Line number="15">   You should have received a copy of the GNU Lesser General Public</Line>
  <Line number="16">   License along with the GNU C Library; if not, see</Line>
  <Line number="17">   &lt;https://www.gnu.org/licenses/&gt;.  */</Line>
  <Line number="18"></Line>
  <Line number="19">#ifndef _UNISTD_H</Line>
  <Line number="20"># error &quot;Never include &lt;bits/unistd_ext.h&gt; directly; use &lt;unistd.h&gt; instead.&quot;</Line>
  <Line number="21">#endif</Line>
  <Line number="22"></Line>
  <Line number="23">#ifdef __USE_GNU</Line>
  <Line number="24"></Line>
  <Line number="25">/* Return the kernel thread ID (TID) of the current thread.  The</Line>
  <Line number="26">   returned value is not subject to caching.  Most Linux system calls</Line>
  <Line number="27">   accept a TID in place of a PID.  Using the TID to change properties</Line>
  <Line number="28">   of a thread that has been created using pthread_create can lead to</Line>
  <Line number="29">   undefined behavior (comparable to manipulating file descriptors</Line>
  <Line number="30">   directly that have not been created explicitly).  Note that a TID</Line>
  <Line number="31">   uniquely identifies a thread only while this thread is running; a</Line>
  <Line number="32">   TID can be reused once a thread has exited, even if the thread is</Line>
  <Line number="33">   not detached and has not been joined.  */</Line>
  <Line number="34">extern __pid_t gettid (void) __THROW;</Line>
  <Line number="35"></Line>
  <Line number="36">#endif</Line>
</SourceFile>
