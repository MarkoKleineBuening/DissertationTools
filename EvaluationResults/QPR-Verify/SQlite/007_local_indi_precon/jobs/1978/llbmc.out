runJobCommand
arguents: child
arguents: job
arguents: mode
handleJobInSeparateProcess0

Checking job 1978 ...about to run job:
preconNumber: 5, 1

  Running Model Checker with 1 checks ...try
try ready

    SMTSolver : stp
    CallStackBound : 0
    StopEncodingAfterCheckLoop : 1
    LoopUnrollBound : 1
    HavocLimit : 0
    PreconditionNumber : 5
    PreconditionLocation : jobs/1978
    TimeOut : 600
    InitializedGlobals : false
    IgnoreMissingFunctions : false
    StopEncodingAfterCheck : true
    OverApproxVaArgs : false
    PreconditionCheckMemory : false
    PreconditionOnlyArguments : trueI [0] lib/ModelChecker/Verifier.cpp:247 | EntryPoint : putVarint64
m_checker->run()

    Performing bounded model checking ...
      Unrolling loop in function "putVarint64" for 8 iterations succeeded.
      Unrolling loop in function "putVarint64" for 1 iterations succeeded.
      Unrolling loop in function "putVarint64" for 1 iterations succeeded.
      Transformed "putVarint64" from 15 to 29 basic blocks and from 109 to 269 instructions
      Performing pre-transformations on LLVM IR ...        0 sec [DONE]
        
      Performing logical encoding ...size Alloca: 1
-----found check = true
                      0 sec [DONE]
        Number of expressions:                        155117
        after encoding

      3 assertions before transformations (2 no_back_edge, 1 custom).

      Performing formula transformations ...
        Simplifier
          Number of rewrites                            3427
        Fixed Memory Address Assigner
          Number of moved ops                              1
          Number of rewrites                            5209
        Simplifier
          Number of moved ops                              1
          Number of rewrites                           72600
        Memory Model Encoder
          Number of moved ops                              0rewriteAllocaOprewriteStackAddressOp

          Number of rewrites                               1
        Simplifier
          Number of moved ops                              0
          Number of rewrites                               1
        Simplifier
          Number of moved ops                              0
          Number of rewrites                             142
        ToASC Analyser
          Memcpy/memset found                             no
        Byte-Based Memory Creator
        Instantiation-Based ToASC Simplifier
        Simplifier
        FP Abstraction
          Number of rewrites                              44

Abstracted floating point operations.  The result might be a false positive.

        Simplifier
          Number of moved ops                              0
          Number of rewrites                               0
                                                           0 sec [DONE]
        
      3 assertions remain after transformations (2 no_back_edge, 1 custom).
after rewriteFormula
after sanityCheckFormula

      Running SMT solver (STP with MiniSat) ...            0 sec [DONE]
        
                                                           0 sec [DONE]
      after performing Check
evaluateCheckerResultsViaRefinementLoop
checker.getResult() is Trace
checkOnlyPrecon: 0, size:1
getFailingCheckFor
setStatusMarkerAccordingToFailingInstruction
BranchInst - LoopBound
trying to exclude Assertions for Failing Instruction

    Rerunning SMT solver (STP with MiniSat) ...            0 sec [DONE]
      checker.getResult() is Trace
checkOnlyPrecon: 0, size:1
getFailingCheckFor
setCheckToUnsafe
setCheckToUnsafe
Check for floating point traces / abstractions currently deactivated
getCheckerResultAfterUpdatingMarker
failingInst:   call void @llbmc.assert(i1 %2, i32 %0)
Preconditions internal: 
i64 %arg1:72057594037927936; (i64 %arg1:72057594037927936)
 function does not read memory: 0, checkValidLoad:0, checkMemory: 0
function does not read memory 

assumePair: i64 %arg1 = nondef() : 72057594037927936

    Rerunning SMT solver (STP with MiniSat) ...            0 sec [DONE]
      failingInst:   call void @llbmc.assert(i1 %2, i32 %0)
Preconditions internal: 
i64 %arg1:72057594037927937; (i64 %arg1:72057594037927937)
 function does not read memory: 0, checkValidLoad:0, checkMemory: 0
function does not read memory 

assumePair: i64 %arg1 = nondef() : 72057594037927937

    Rerunning SMT solver (STP with MiniSat) ...            0 sec [DONE]
      failingInst:   call void @llbmc.assert(i1 %2, i32 %0)
Preconditions internal: 
i64 %arg1:72057594037927938; (i64 %arg1:72057594037927938)
 function does not read memory: 0, checkValidLoad:0, checkMemory: 0
function does not read memory 

assumePair: i64 %arg1 = nondef() : 72057594037927938

    Rerunning SMT solver (STP with MiniSat) ...            0 sec [DONE]
      failingInst:   call void @llbmc.assert(i1 %2, i32 %0)
Preconditions internal: 
i64 %arg1:72057594037927939; (i64 %arg1:72057594037927939)
 function does not read memory: 0, checkValidLoad:0, checkMemory: 0
function does not read memory 

assumePair: i64 %arg1 = nondef() : 72057594037927939

    Rerunning SMT solver (STP with MiniSat) ...            0 sec [DONE]
      failingInst:   call void @llbmc.assert(i1 %2, i32 %0)
Preconditions internal: 
i64 %arg1:72057594037927947; (i64 %arg1:72057594037927947)
 function does not read memory: 0, checkValidLoad:0, checkMemory: 0
function does not read memory 

assumePair: i64 %arg1 = nondef() : 72057594037927947

    Rerunning SMT solver (STP with MiniSat) ...            0 sec [DONE]
      name of function arguments: Writing precondition at: jobs/1978/precondition_putVarint64.txt

Generated Preconditions:
[underoverapprox]name of function arguments: 
i64 %arg1:72057594037927936; 
i64 %arg1:72057594037927937; 
i64 %arg1:72057594037927938; 
i64 %arg1:72057594037927939; 
i64 %arg1:72057594037927947; 

                                                           2 sec [DONE]
    allunsafe
    
                                                           2 sec [DONE]
  