<SourceFile>
  <Line number="1">/*===---- stddef.h - Basic type definitions --------------------------------===</Line>
  <Line number="2"> *</Line>
  <Line number="3"> * Copyright (c) 2008 Eli Friedman</Line>
  <Line number="4"> *</Line>
  <Line number="5"> * Permission is hereby granted, free of charge, to any person obtaining a copy</Line>
  <Line number="6"> * of this software and associated documentation files (the &quot;Software&quot;), to deal</Line>
  <Line number="7"> * in the Software without restriction, including without limitation the rights</Line>
  <Line number="8"> * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell</Line>
  <Line number="9"> * copies of the Software, and to permit persons to whom the Software is</Line>
  <Line number="10"> * furnished to do so, subject to the following conditions:</Line>
  <Line number="11"> *</Line>
  <Line number="12"> * The above copyright notice and this permission notice shall be included in</Line>
  <Line number="13"> * all copies or substantial portions of the Software.</Line>
  <Line number="14"> *</Line>
  <Line number="15"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</Line>
  <Line number="16"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</Line>
  <Line number="17"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</Line>
  <Line number="18"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</Line>
  <Line number="19"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</Line>
  <Line number="20"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN</Line>
  <Line number="21"> * THE SOFTWARE.</Line>
  <Line number="22"> *</Line>
  <Line number="23"> *===-----------------------------------------------------------------------===</Line>
  <Line number="24"> */</Line>
  <Line number="25"></Line>
  <Line number="26">#if !defined(__STDDEF_H) || defined(__need_ptrdiff_t) ||                       \</Line>
  <Line number="27">    defined(__need_size_t) || defined(__need_wchar_t) ||                       \</Line>
  <Line number="28">    defined(__need_NULL) || defined(__need_wint_t)</Line>
  <Line number="29"></Line>
  <Line number="30">#if !defined(__need_ptrdiff_t) &amp;&amp; !defined(__need_size_t) &amp;&amp;                   \</Line>
  <Line number="31">    !defined(__need_wchar_t) &amp;&amp; !defined(__need_NULL) &amp;&amp;                       \</Line>
  <Line number="32">    !defined(__need_wint_t)</Line>
  <Line number="33">/* Always define miscellaneous pieces when modules are available. */</Line>
  <Line number="34">#if !__has_feature(modules)</Line>
  <Line number="35">#define __STDDEF_H</Line>
  <Line number="36">#endif</Line>
  <Line number="37">#define __need_ptrdiff_t</Line>
  <Line number="38">#define __need_size_t</Line>
  <Line number="39">#define __need_wchar_t</Line>
  <Line number="40">#define __need_NULL</Line>
  <Line number="41">#define __need_STDDEF_H_misc</Line>
  <Line number="42">/* __need_wint_t is intentionally not defined here. */</Line>
  <Line number="43">#endif</Line>
  <Line number="44"></Line>
  <Line number="45">#if defined(__need_ptrdiff_t)</Line>
  <Line number="46">#if !defined(_PTRDIFF_T) || __has_feature(modules)</Line>
  <Line number="47">/* Always define ptrdiff_t when modules are available. */</Line>
  <Line number="48">#if !__has_feature(modules)</Line>
  <Line number="49">#define _PTRDIFF_T</Line>
  <Line number="50">#endif</Line>
  <Line number="51">typedef __PTRDIFF_TYPE__ ptrdiff_t;</Line>
  <Line number="52">#endif</Line>
  <Line number="53">#undef __need_ptrdiff_t</Line>
  <Line number="54">#endif /* defined(__need_ptrdiff_t) */</Line>
  <Line number="55"></Line>
  <Line number="56">#if defined(__need_size_t)</Line>
  <Line number="57">#if !defined(_SIZE_T) || __has_feature(modules)</Line>
  <Line number="58">/* Always define size_t when modules are available. */</Line>
  <Line number="59">#if !__has_feature(modules)</Line>
  <Line number="60">#define _SIZE_T</Line>
  <Line number="61">#endif</Line>
  <Line number="62">typedef __SIZE_TYPE__ size_t;</Line>
  <Line number="63">#endif</Line>
  <Line number="64">#undef __need_size_t</Line>
  <Line number="65">#endif /*defined(__need_size_t) */</Line>
  <Line number="66"></Line>
  <Line number="67">#if defined(__need_STDDEF_H_misc)</Line>
  <Line number="68">/* ISO9899:2011 7.20 (C11 Annex K): Define rsize_t if __STDC_WANT_LIB_EXT1__ is</Line>
  <Line number="69"> * enabled. */</Line>
  <Line number="70">#if (defined(__STDC_WANT_LIB_EXT1__) &amp;&amp; __STDC_WANT_LIB_EXT1__ &gt;= 1 &amp;&amp; \</Line>
  <Line number="71">     !defined(_RSIZE_T)) || __has_feature(modules)</Line>
  <Line number="72">/* Always define rsize_t when modules are available. */</Line>
  <Line number="73">#if !__has_feature(modules)</Line>
  <Line number="74">#define _RSIZE_T</Line>
  <Line number="75">#endif</Line>
  <Line number="76">typedef __SIZE_TYPE__ rsize_t;</Line>
  <Line number="77">#endif</Line>
  <Line number="78">#endif /* defined(__need_STDDEF_H_misc) */</Line>
  <Line number="79"></Line>
  <Line number="80">#if defined(__need_wchar_t)</Line>
  <Line number="81">#ifndef __cplusplus</Line>
  <Line number="82">/* Always define wchar_t when modules are available. */</Line>
  <Line number="83">#if !defined(_WCHAR_T) || __has_feature(modules)</Line>
  <Line number="84">#if !__has_feature(modules)</Line>
  <Line number="85">#define _WCHAR_T</Line>
  <Line number="86">#if defined(_MSC_EXTENSIONS)</Line>
  <Line number="87">#define _WCHAR_T_DEFINED</Line>
  <Line number="88">#endif</Line>
  <Line number="89">#endif</Line>
  <Line number="90">typedef __WCHAR_TYPE__ wchar_t;</Line>
  <Line number="91">#endif</Line>
  <Line number="92">#endif</Line>
  <Line number="93">#undef __need_wchar_t</Line>
  <Line number="94">#endif /* defined(__need_wchar_t) */</Line>
  <Line number="95"></Line>
  <Line number="96">#if defined(__need_NULL)</Line>
  <Line number="97">#undef NULL</Line>
  <Line number="98">#ifdef __cplusplus</Line>
  <Line number="99">#  if !defined(__MINGW32__) &amp;&amp; !defined(_MSC_VER)</Line>
  <Line number="100">#    define NULL __null</Line>
  <Line number="101">#  else</Line>
  <Line number="102">#    define NULL 0</Line>
  <Line number="103">#  endif</Line>
  <Line number="104">#else</Line>
  <Line number="105">#  define NULL ((void*)0)</Line>
  <Line number="106">#endif</Line>
  <Line number="107">#ifdef __cplusplus</Line>
  <Line number="108">#if defined(_MSC_EXTENSIONS) &amp;&amp; defined(_NATIVE_NULLPTR_SUPPORTED)</Line>
  <Line number="109">namespace std { typedef decltype(nullptr) nullptr_t; }</Line>
  <Line number="110">using ::std::nullptr_t;</Line>
  <Line number="111">#endif</Line>
  <Line number="112">#endif</Line>
  <Line number="113">#undef __need_NULL</Line>
  <Line number="114">#endif /* defined(__need_NULL) */</Line>
  <Line number="115"></Line>
  <Line number="116">#if defined(__need_STDDEF_H_misc)</Line>
  <Line number="117">#if __STDC_VERSION__ &gt;= 201112L || __cplusplus &gt;= 201103L</Line>
  <Line number="118">#include &quot;__stddef_max_align_t.h&quot;</Line>
  <Line number="119">#endif</Line>
  <Line number="120">#define offsetof(t, d) __builtin_offsetof(t, d)</Line>
  <Line number="121">#undef __need_STDDEF_H_misc</Line>
  <Line number="122">#endif  /* defined(__need_STDDEF_H_misc) */</Line>
  <Line number="123"></Line>
  <Line number="124">/* Some C libraries expect to see a wint_t here. Others (notably MinGW) will use</Line>
  <Line number="125">__WINT_TYPE__ directly; accommodate both by requiring __need_wint_t */</Line>
  <Line number="126">#if defined(__need_wint_t)</Line>
  <Line number="127">/* Always define wint_t when modules are available. */</Line>
  <Line number="128">#if !defined(_WINT_T) || __has_feature(modules)</Line>
  <Line number="129">#if !__has_feature(modules)</Line>
  <Line number="130">#define _WINT_T</Line>
  <Line number="131">#endif</Line>
  <Line number="132">typedef __WINT_TYPE__ wint_t;</Line>
  <Line number="133">#endif</Line>
  <Line number="134">#undef __need_wint_t</Line>
  <Line number="135">#endif /* __need_wint_t */</Line>
  <Line number="136"></Line>
  <Line number="137">#endif</Line>
</SourceFile>
